/*
Авторы основы мода:Chrebet + anemona2012 - косолапые медвеподжатники
Авторы мода: Иван Арнаут и Яков Шурыгин
*/
AntiDeAMX2()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}
//============================== Include's =====================================
#pragma tabsize 0
#include <a_mail>// Include Mail для отсправки сообщений
#pragma tabsize 0
#include <a_engine>// Include Двигатель
#pragma tabsize 0
#include <dini>// Include DIni
#pragma tabsize 0
#include <mxINI>// Include MxIni
#pragma tabsize 0
#include <md5>// Include MD5 шифровка
#pragma tabsize 0
#include <morphinc>// Include На дальновидность ника игрока
#pragma tabsize 0
#include <streamer>// Include Streamer обьектов и много другого
#pragma tabsize 0
#include <utils>// Include Проверка на то что есть файл игрока
//============================== Define's ======================================
#pragma dynamic					11294// Dynamic - повышает место под стек, не в коем случае не убирать, до полной оптимизации.
#define ADMIN_SPEC_TYPE_NONE	0 // Откл слежки
#define ADMIN_SPEC_TYPE_PLAYER	1 // Слежка в от 3 лица
#define ADMIN_SPEC_TYPE_VEHICLE	2 // Слежка в авто
#define VEHICLE_PARAMS_OFF  	0 // Выкл параметры авто
#define VEHICLE_PARAMS_ON   	1 // Вкл параметры авто
#define CHECKPOINT_NONE 		0 // Чекпоинт 0
#define CHECKPOINT_HOME 		12// Чекпоинт 12
#define NUMBER_OF_ARMYTRUCKS 	3 // Кол-во Матовозов
#define Ammo_SDPISTOL 			15// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_DEAGLE 		    15// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_SHOTGUN			15// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_MP5				50// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_AK47				50// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_M4A1				50// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_SAWNOFF 		    30// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_PISTOL				50// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_SPAS12				15// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_UZI				50// Сколько надо выстрелить чтобы прокачать 1%
#define Ammo_RIFLE				15// Сколько надо выстрелить чтобы прокачать 1%
#define BODY_PART_TORSO 3//Попадание в торс
#define BODY_PART_GROIN 4//Попадание в пах
#define BODY_PART_LEFT_ARM 5//Попадание в левую руку
#define BODY_PART_RIGHT_ARM 6//Попадание в правую руку
#define BODY_PART_LEFT_LEG 7//Попадание в левую ногу
#define BODY_PART_RIGHT_LEG 8//Попадание в правую ногу
#define BODY_PART_HEAD 9//Попадание в голову
#undef MAX_PLAYERS// Раздефайним макрос MAX_PLAYERS
const MAX_PLAYERS = 100;// Кол-во слотов на серве
#define MAX_SWEARS 100
#define STR 100
#define PNSCS 9
#define CHECKPOINT_FIRE 10
#define FixConsole(%1) for(new rSt; rSt < strlen(%1); rSt++) if(%1[rSt] > 191 && %1[rSt] < 240) %1[rSt] -= 64; else if(%1[rSt] > 239 && %1[rSt] < 256) %1[rSt] -= 16; else if (%1[rSt] == 168 ) %1[rSt] += 72; else if (%1[rSt] == 184) %1[rSt] += 57// Фикс консоли
//================================ Color's =====================================
#define COLOR_BOX 0x00000050
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_USE 0x7FB151FF
#define COLOR_BLUE 0x33AAFFFF
#define COLOR_SALMON 0xFA8072AA
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_BLACK 0x000000AA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_REDD 0x9F0000AA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
//================================ Forward's ===================================
forward ABroadCast(color,const string[],level);
forward AddictionTimer(playerid);
forward AdvertiseTimer();
forward AntiRemovePlayerFromVehicle(playerid);
forward AntiBunny(playerid);
forward AntiBunnyHop(playerid);
forward BatleGZoneEnded();
forward CheckForCheater(playerid);
forward CountEx();
forward LoadZp();
forward SaveZp();
//forward ListenSounds(playerid);//для звуков
forward RCControl(playerid);
forward AntiCheatTimer();
forward AntiBug(playerid);
forward Collection(playerid,objectid);
forward CustomPickups();
forward KickTimer(playerid);
forward Fresh();
forward PreloadAnimLib(playerid, animlib[]);
forward PreloadAllAnimLibs(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward SatietyCheck();
forward LicClose();
forward LspdsClose();
forward GzCheck();
forward MzCheck();
forward OnPlayerConnect(playerid);
forward OnPlayerLogin(playerid,password[]);
forward OnVehicleDamageStatusUpdate(vehicleid, playerid);
forward OtherTimer();
forward PayDay();
forward Rain();
forward Sun();
forward Cloud();
forward Sandstorm();
forward Fog();
forward Inform(playerid);
forward ActivateFire();
forward UpdateSpeedometr();
forward UnSurfCar(carid, playerid);
forward UnFreeze(playerid);
forward SaveAccounts();
forward SendTeamMessage(team, color, string[]);
forward SendGangMessage(family, color, string[]);
forward SetPlayerUnjail();
forward ServerName();
forward WeatherChange();
forward StartBatleGZone();
forward StopMusic();
forward Checkhpcar();
forward split(const strsrc[], strdest[][], delimiter);
forward PaintBall();
forward PaintBallEnded();
forward StartPaintballtwo();
forward StartPaintball();
forward PissTime();
//---------------------  мото гонка -----------------
forward MotoGonkaEnded();
forward MotoStartGonka();
forward MotoStartGonkatwo();
//Таймеры 1,2,3
forward MotoStartGonka1();
forward MotoStartGonka2();
forward MotoStartGonka3();
//--------------------- Vorota ----------------------
forward UpdateJailZone();
//------дерби - madнаркоman
forward DerbyTime();
forward Derby1();
forward Derby2();
forward Derby3();
forward DerbyStart();
forward DerbyTimeToDie();
forward DerbyEnd();
//
forward RaceEnded();
forward StartRace();
forward StartRacetwo();
forward StartRace1();
forward StartRace2();
forward StartRace3();
forward lspdog();
//================================== Variable's ================================
//+++++++++++Проверенные и нужные++++++++
new WatchingTV[MAX_PLAYERS];        // смотрит ли игрок телевизор
new InviteMan[MAX_PLAYERS];         // приглашен ли игрок во фракцию(для скинов)
new PlayerTalkingWith[MAX_PLAYERS]; // пиздит ли игрок по телефону(и с кем)
new PlayerIsPhoned[MAX_PLAYERS];    // звонят ли игроку
new FightSkilling[MAX_PLAYERS];     // качает ли какой-то стиль боя(и какой)
new CarPrice[MAX_PLAYERS];          // цена покупаемого транспорта(автосалон или с рук)
new CarColor[MAX_PLAYERS];          // 1 цвет покупаемого транспорта
// AntiCheat
// Можно имп в нескольких местах
new PlayerInt[MAX_PLAYERS];         // запись интерьера игрока
new PlayerVirtMir[MAX_PLAYERS];    	// запись виртуального мира игрока
//   пикапы
new Carshop[5];
//  текстдровы
new PlayerText:NextCAR;
new PlayerText:NextCarPic;
new PlayerText:PrevCAR;
new PlayerText:PrevCarPic;
new PlayerText:ColorNext;
new PlayerText:ColorPrev;
new PlayerText:Buycar;
new PlayerText:Exitcar;
new PlayerText:NameCar;
// игроки
new PlayerIDs[MAX_PLAYERS];
new MaxPlayers = 0;
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:newscamx[3],Float:newscamy[3],Float:newscamz[3],Float:newscamlax[3],Float:newscamlay[3],Float:newscamlaz[3],newscami[3],newscamw[3],newscamstream[3];//TV News Update
new shield[MAX_PLAYERS];
new playermp[MAX_PLAYERS];
new Swears[MAX_SWEARS][STR];
new salut[27], Float:xsalut, Float:ysalut, Float:zsalut;
new obje[5];
new Float:defx,Float:defy,Float:defz,defi,defv;
new pressure,tc,humidity,wind,synopticend,nextweather;//Погода
new objnum;
new chlocked = 0;
new creaturemode[MAX_PLAYERS];
new chbacklocked = 0;
new Menu:hatmenu;
//new lastsound;//для звуков
new Menu:hatmenu2;
new RCController[MAX_PLAYERS];
new num_words = 0;
new sellpickup;
new choise[MAX_PLAYERS];
new ChosenHat[MAX_PLAYERS];
new Collectionit[MAX_PLAYERS];
new PlayerJob[MAX_PLAYERS];
new autostation[2];
new hatpickup;
new AntiCheatGun[MAX_PLAYERS] = 0;
new MaterialsInTheWagon[MAX_VEHICLES];
new bool:WithBush[MAX_PLAYERS];
new bool:WithPickup[MAX_PLAYERS];
new deathplace, Float:xdeadp, Float:ydeadp, Float:zdeadp;
new collection;
new zerorc[2];
new detectivag[3], detectivcar[4];
new Float: marX,Float: marY,Float: marZ;
new Text3D:JobText2;
new Text3D:cassa[3];
new godmode[MAX_PLAYERS];
new friskid[MAX_PLAYERS];
new hvictim[MAX_PLAYERS] = -1;
new hitmanworked[MAX_PLAYERS];
new hmoneys[MAX_PLAYERS];
new hclient[MAX_PLAYERS] = -1;
new wmoneys, wvictim = -1, wclient = -1;
new Float:X12, Float:Y12, Float:Z12;
new Float:Venue[4][3] = {
    {-305.3935,-1334.0796,8.2550},
    {-311.4154,-1359.4165,9.0605},
    {-256.1160,-1385.5819,10.0414},
    {-191.2922,-1380.0945,5.0030}
};
new FarmWorks[MAX_PLAYERS];
new bool:Download[MAX_PLAYERS];
new CollectionStarted[MAX_PLAYERS];
new Combine[1], FarmCar[1];
new victimd[MAX_PLAYER_NAME];
new murder[MAX_PLAYER_NAME];
new murdgun[32];
new Farm;
new ApsPick[3];
new ApsPickst[2];
new ApsExitPick;
new AdmVillagePick[3];
new gag[MAX_PLAYERS];
new PlayerIsInkasator[MAX_PLAYERS];
new Float:gInkasatorPoints[23][24] = {
    {-1676.34570312,434.01806641,7.08183193,5.0},
	{-818.55200195,1567.63708496,27.01933098,5.0},
	{-2421.45410156,958.35540771,45.18632126,5.0},
	{2174.20336914,1402.93469238,10.96464443,5.0},
	{-2621.31445312,1415.23510742,6.88521862,5.0},
	{1587.30920410,2218.34838867,10.96464443,5.0},
	{-2452.32275391,2252.62988281,4.87058449,5.0},
	{2187.36035156,2478.89160156,11.14433193,5.0},
	{-1282.38098145,2715.18652344,50.16842651,5.0},
	{-2033.32604980,159.50723267,28.94120598,5.0},
	{91.92106628,1180.56555176,18.56620598,5.0},
	{2236.16186523,-1665.79772949,15.27980804,5.0},
	{847.58093262,-1799.19348145,13.71945286,5.0},
	{1367.56359863,-1290.13696289,13.44901943,5.0},
	{-78.74282837,-1171.64892578,1.95329499,5.0},
	{1142.44287109,-1763.92932129,13.59816360,5.0},
	{-1551.53637695,-2737.33691406,48.64560318,5.0},
 	{661.71307373,-576.21777344,16.25428581,5.0},
	{557.32824707,-1294.28137207,17.24994087,5.0},
	{-2035.70605469,-102.35491180,35.07402039,5.0},
	{1919.78381348,-1766.21813965,13.44901943,5.0},
	{1496.03780000,-1750.28000000,15.27560000,5.0},
	{2843.2822,1286.9712,11.3906,5.0}};
new bonus;
new dvr[4];
new church[2];
new IDVEH[MAX_PLAYERS];
new bool:UseEnter[MAX_PLAYERS];
new pLeaders[34][MAX_PLAYER_NAME];
new CloakroomFarm;
enum fermInfo
{
    fOwned,
    fOwner[MAX_PLAYER_NAME],
    fProdukt,
    fMafia,
    fTill,
    fEntranceCost,
    fBuyPrice,
    fCenazerno,
    fzernoseiano,
    fcolichestvozerna,
    fcenaprod,
    fzernozakup,
    f1zams[MAX_PLAYER_NAME],
    f2zams[MAX_PLAYER_NAME],
    f3zams[MAX_PLAYER_NAME],
    f1fermers[MAX_PLAYER_NAME],
    f2fermers[MAX_PLAYER_NAME],
    f3fermers[MAX_PLAYER_NAME],
    f4fermers[MAX_PLAYER_NAME],
    f5fermers[MAX_PLAYER_NAME],
    Float:fmestoX,
    Float:fmestoY,
    Float:fmestoZ,
    fidferm,
    frandoms,
    frandoms2,
    vnutricar,
    flock
};
new FermInfo[1][fermInfo];
new SeitCar[MAX_PLAYERS];
new Seitfers[MAX_PLAYERS];
new oglspd;
new pisstimer;
new logs = 0;
new fob[5]; // объекты огня
new timerfire; // таймер пожара
new bool:FireInProgress = false; // Есть ли сейчас пожар
new bool:bypahan[MAX_PLAYERS] = false; // Принял ли игрок пожар
new Float:cf[3]; // координаты чекпойнтов пожаров
new FireStatus = 0; // Состояние пожара
new Seitferma0[MAX_PLAYERS];
enum
{
    FCHECKPOINT_0,
    FCHECKPOINT_1,
    FCHECKPOINT_2,
    FCHECKPOINT_3,
    FCHECKPOINT_4,
    FCHECKPOINT_5,
    FCHECKPOINT_6,
    FCHECKPOINT_7,
    FCHECKPOINT_8,
    FCHECKPOINT_9,
    FCHECKPOINT_10,
    FCHECKPOINT_11,
    FCHECKPOINT_12,
    FCHECKPOINT_13,
    FCHECKPOINT_14,
    FCHECKPOINT_15
}
new Float:fishechkay[MAX_PLAYERS];
new Float:fishechkax[MAX_PLAYERS];
new NumberFishka[MAX_PLAYERS];
new Fishka[MAX_PLAYERS];
new bool:CrInProgress = false;
new bool:Upravakazino[MAX_PLAYERS];
new RuletkaStol[MAX_PLAYERS];
new bool:RuletStart[MAX_PLAYERS];
new bool:KrupieStart[2];
new KrupieTime[2];
new bool:Vidrulvigr[2];
new RuletTip[MAX_PLAYERS];
new RuletSum[MAX_PLAYERS];
new krupiedi[2];
new metro[27];
new kaligmaf[MAX_PLAYER_NAME];
new Maxis[2];
new kaligmaf1;
new BarabanTimer[2];
new ffpic[2];
new adminreadsms[MAX_PLAYERS];
new adminreadpm[MAX_PLAYERS];
new RuletTimer;
new RuletTimer2;
new Kazkamera[MAX_PLAYERS];
new Float:Barabanchik = 0.00;
new Float:Barabanchik2 = 0.00;
new Braban[2];
new adplakat[37]; // 37 рекламных плакатов
new adtxtid[MAX_PLAYERS] = 0;
new AdvertTime;
new Float:PosPic[3][MAX_PLAYERS];
new Dpic[MAX_PLAYERS];
new objectplayerid;
new TOTALADVERT[3];
new GovTax;
new robber;
new AntiC[MAX_PLAYERS];
new Float:PnSC[ PNSCS ][ 3 ] = {
{720.2800,-457.2757,16.3359},
{-1421.1030,2584.5122,55.8433},
{-99.8468,1118.1559,19.7417},
{2063.5869,-1831.5231,13.5469},
{-2425.7590,1021.3259,50.3977},
{1974.2336,2162.3240,11.0703},
{487.1933,-1738.4077,11.1189},
{1025.2147,-1024.2096,32.1016},
{-1904.1440,283.5843,41.0469}
};
new buygun[3];
new truckerspic[8];
new VehicleHealth[MAX_VEHICLES] = 1000;
new ConnectTimed[MAX_PLAYERS];
new IsConnected[MAX_PLAYERS];
new newobject;
new CountVezit;
new ReportQ[MAX_PLAYERS][144];
enum adInfo
{
	adPhone,
	adText[128],
	adName[MAX_PLAYER_NAME]
};
new AdvertInfo[30][3][adInfo];
new FormaFracPic[16];
new monitor;
new bool:times[MAX_PLAYERS];
new radiols;
new radiosf;
new radiolv;
new	UnJailTimer;
new	AdvertiseTimerEx;
new	FreshTimer;
new	CountExTimer;
new	OtherTimerEx;
new	SaietyTimer;
new	PickupTimer;
new	ServerNameTimer;
new	SpeedoTimer;
new GzCheckTimer;
new MzCheckTimer;
//мотогонки
new motochet[MAX_PLAYERS];
new motorace;
new EndingmotoRound = 1;
new MotoPlayers = 0;
new FirstmotoWinner = 999;
new Playermoto[MAX_PLAYERS];
new SecondmotoWinner = 999;
new ThirdmotoWinner = 999;
/////
new war = 0;
new porterinfo;
new ReklMSG[8][] = {
	{"Это новейшая модель банкомата. Он, как и все остальные, имеет\n"},
	{"спутниковую связь с главным сервером. Данная технология\n"},
	{"позволяет без труда выполнять переводы со счета на счет,\n"},
	{"или оплачивать какие либо услуги.\n\n"},
	{"Кроме этого, мы предоставляем рекламные услуги!\n"},
	{"Для этого есть некоторые условия:\n\n"},
	{"\t1) Проживание в нашем штате не менее 5 лет\n\t2) Иметь на своем счету более 100 000 вирт\n\n"},
	{"Данная услуга стоит денег, 5000 вирт за объявление!\nВаша реклама / объявление будет отправлена во все банкоматы."}
};
new IPMSG[5][] = {
	{"IP проверка обезопасит Ваш аккаунт от взлома!\n"},
	{"Если Ваш IP адрес будет изменён, система потребуют ключ безопасности\n\n"},
	{"Для того чтобы включить/отключить защиту \n"},
	{"Введите /mm - [7] Безопасность\n\n"},
	{"Обязательно установите ключ безопасности!\n"}
};
new AdvertAtm;
new AddictionsTimer[MAX_PLAYERS];
new ChatText[1024] = " ",ChatStat[500];
new startwar = 0;
new HelpCP[MAX_PLAYERS];
new HelpCP2[MAX_PLAYERS];
new CarLeasing[MAX_PLAYERS];
new duty[MAX_PLAYERS];
new LicGate;
new LgateGate;
new LspdsGate;
/// Ворота дома
new Gate688;
////ст ворота дома
new per688 = 0;
////
new bool:Prorab[MAX_PLAYERS];
new caligula[2];
new hamcvhod;
new hamcvqhod;
new omcvhod;
new omcvqhod;
new wmcvhod;
new wmcvqhod;
new hwmcvhod;
new fsmcvhod;
new fsmcvqhod;
new bmcvhod;
new bmcvqhod;
new vmcvhod;
new vmcvqhod;
new pmcvhod;
new pmcvqhod;
new hwmcvqhod;
new mmcvhod;
new mmcvqhod;
new ssmcvhod;
new ssmcvqhod;
new Text3D:GasZavod[2][MAX_PLAYERS];
new Text3D:Doki[2][MAX_PLAYERS];
new Text3D:Sklad[2][MAX_PLAYERS];
new Text3D:Derevobuy[2][MAX_PLAYERS];
new Text:Clock;
new Text:Date;
new PetrolTanker[2];
new Linerunner[2];
new Roadtrain[2];
new bGruz[MAX_PLAYERS];
new levelDexp = 20000;
new Gruz[MAX_PLAYERS];
new Benzbuy[2] = {500,500};
new ugolbuy[2] = {400,400};
new Buyderevo[2] = {600,600};
new Sellugol[2] = {600,600};
new Sellderevo[2] = {800,800};
new Sellbenz[2] = {700,700};
new bool:DriverJob[MAX_PLAYERS];
new bool:jobcar[MAX_PLAYERS];
new Tune[MAX_PLAYERS];
new MehJob[MAX_PLAYERS];
new repairdvig[MAX_PLAYERS];
new mesto[MAX_PLAYERS];
new Order[MAX_PLAYERS];
new Bumper[MAX_PLAYERS];
new Bumper2[MAX_PLAYERS];
new Wheels[MAX_PLAYERS];
new PaintJob[MAX_PLAYERS];
new Color[MAX_PLAYERS];
new Color1[MAX_PLAYERS];
new Hydraw[MAX_PLAYERS];
new Spoiler[MAX_PLAYERS];
new Nitro[MAX_PLAYERS];
new sellzone[MAX_PLAYERS];
new Bags[MAX_PLAYERS];
new WithBag[MAX_PLAYERS];
new play[MAX_PLAYERS];
new PText[MAX_PLAYERS][256];
new zips[MAX_PLAYERS];
new player_NoCheckTimeVeh[MAX_PLAYERS];
new Float:player_VehHealth[MAX_PLAYERS];
new Float:HealthVeh[MAX_PLAYERS];
new timer[MAX_PLAYERS];
new timer2[MAX_PLAYERS];
new Float: PlayerHealth[MAX_PLAYERS];
new showhelp[MAX_PLAYERS];
new zons;
new seans[MAX_PLAYERS];
new taxiexpp[MAX_PLAYERS];
new bool:taxipasashir[MAX_PLAYERS];
new medicss[6];
new ProposeOffer[MAX_PLAYERS];
new Krisha[MAX_PLAYERS];
new KrishaOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new chekmaterialslv[10];
new chekmaterialssf[3];
new addd[3];
new nick[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new Timerkk[MAX_PLAYERS];
new enterbiz[MAX_PLAYERS];
new changenam[256];
new gSpectateID[MAX_PLAYERS];
new gSpectateType[MAX_PLAYERS];
new zvonok[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new send[MAX_PLAYERS];
new workshoppicc[3];
new libertycity;
new bistro;
new ebistro;
new fromlctolv;
new startaddiction[MAX_PLAYERS];
new chet[MAX_PLAYERS];
new arace;
new EndingRaceRound = 1;
new RacingPlayers = 0;
new FirstRaceWinner = 999;
new PlayerRacing[MAX_PLAYERS];
new SecondRaceWinner = 999;
new ThirdRaceWinner = 999;
new PaintballPlayers = 0;
new PaintballRound = 1;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new PlayerPaintballing[MAX_PLAYERS];
new Peredpaint[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PicCP[MAX_PLAYERS];
new Lgate = 0;
new Text:DRAP;
new createdvehicles[MAX_PLAYERS];
new createdvehs;
new caridhouse[MAX_PLAYERS];
new createdcar;
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Blood. Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new JobCarTime[MAX_PLAYERS];
new BusStopTime[MAX_PLAYERS];
new TrainStopTime[MAX_PLAYERS];
new BusStop[MAX_PLAYERS];
new SpyingID[MAX_PLAYERS] = -1;
new SpyingType[MAX_PLAYERS];
new AutoBusJob[MAX_PLAYERS];
new AutoBusCheck[MAX_PLAYERS];
new AutoBusMoney[MAX_PLAYERS];
new MusorJob[MAX_PLAYERS];
new TrainJob[MAX_PLAYERS];
new MusorCheck[MAX_PLAYERS];
new sellgun;
new sellgun1;
new sellgun2;
new sellgun3;
new sellgun4;
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new bool:robhouse[MAX_PLAYERS];
new bool:robh[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new Text:Box;
new Text:SpeedShow[MAX_PLAYERS];
new Text:Fuel;
new Text:FuelShow[MAX_PLAYERS];
new Text:Status;
new Text:StatusShow[MAX_PLAYERS];
new Text:KMShow[MAX_PLAYERS];
new Text:FillShow[MAX_PLAYERS];
new Text:MaxShow[MAX_PLAYERS];
new Text:EngineShow[MAX_PLAYERS];
new Text:LightsShow[MAX_PLAYERS];
new Text:CarnameShow[MAX_PLAYERS];
new Text:CarShow[MAX_PLAYERS];
new str1[64],str2[64],str3[64],str4[64],str5[64],str6[64],str7[64],str8[64],str9[64],str10[64];
new Float:Fuell[MAX_VEHICLES];
new Text:URL[MAX_PLAYERS];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new healpricls = 10;
new healpricsf = 10;
new healpriclv = 10;
new smspricesf = 50;
new smspricels = 50;
new smspricelv = 50;
new smssf = 0;
new smsls = 0;
new smslv = 0;
new gcontract[MAX_PLAYERS];
new cenabenza[MAX_PLAYERS];
new Text3D:foods[6];
new Text3D:DLabels[49];
new Text3D:Parking[4];
new Text3D:taxi3d[MAX_VEHICLES];
new Text3D:Meh3d[MAX_VEHICLES];
new Text3D:fare3dtext[MAX_VEHICLES];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGramm[MAX_PLAYERS];
new HotdogOffer[MAX_PLAYERS];
new ZoneOffer[MAX_PLAYERS];
new ZonePrice[MAX_PLAYERS];
new HotdogPrice[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new provadat[MAX_PLAYERS];
new provas[MAX_PLAYERS];
new Menu:ChoseSkin;
new Menu:bomj[2];
new Menu:skinshopmagaz[2];
new useguns[MAX_PLAYERS];
new usegruz[MAX_PLAYERS];
new clearanim[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new IsLocked[MAX_VEHICLES];
new bool:Arrester[MAX_PLAYERS];
new bool:Works[MAX_PLAYERS];
new JobCP[MAX_PLAYERS];
new GruzCP[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new JobAmmount[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new JobOffer[MAX_PLAYERS];
new Employer[MAX_PLAYERS];
new bool:EngineState[MAX_PLAYERS];
new Float:Armour[MAX_PLAYERS];
enum afker
{
	TickEx,
	ChekEx,
	VarEx,
	bool:pSpawnEx,
	bool:AFKEx
}
new PlayerEx[MAX_PLAYERS][afker];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new unban[MAX_PLAYERS];
new Army[3];
new TieTime[MAX_PLAYERS];
new Rekl[MAX_PLAYERS];
new Dostup[MAX_PLAYERS];
new keyip[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new TazerTime[MAX_PLAYERS];
new strR[255][255];
new CreatedCars[100];
new CreatedCar = 0;
new PlayerStoned[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new Police = 0;
new PoliceCall = 999;
new PoliceCallTime[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerGaged[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new Playert[MAX_PLAYERS];
new PlayertTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new LiveOfferlv[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new TalkingLivelv[MAX_PLAYERS];
new TalkingLivesfa[MAX_PLAYERS];
new TalkingLivelsa[MAX_PLAYERS];
new TalkingLivelva[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new HouseOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new lNews[MAX_PLAYERS];
new LvNews[MAX_PLAYERS];
new gLogin[MAX_PLAYERS];
new NotLogin[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new bool:gPlayerAccount[MAX_PLAYERS];
new gCarLock[MAX_VEHICLES];
new RCControlTimer;
new noooc = 1;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 15;
new realchat = 1;
new timeshift = 0;
new shifthour;
new levelexp = 4;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS];
new VertMatslsa[MAX_PLAYERS];
new vertmatbi = 0;
new vertmatbilsa = 0;
new armmatbi = 100000;
new armmatsf = 50000;
new lspdmatbi = 50000;
new sfpdmats = 50000;
new lvpdmats = 50000;
new fbimats = 50000;
new yakuzamats = 50000;
new rmmats = 50000;
new lcnmats = 50000;
new ssmcmatbi = 50000;
new hamcmatbi = 50000;
new omcmatbi = 50000;
new wmcmatbi = 50000;
new hwmcmatbi = 50000;
new fsmcmatbi = 50000;
new vmcmatbi = 50000;
new pmcmatbi = 50000;
new mmcmatbi = 50000;
new bmcmatbi = 50000;
new rifamatbi = 50000;
new ballasmatbi = 50000;
new groovmatbi = 50000;
new vagosmatbi = 50000;
new aztekmatbi = 50000;
new lsamatbi = 50000;
new hitmanmatbi = 50000;
new lsamaterials;
new lsaammo;
new lsacarvertexit[MAX_PLAYERS];
new pickups;
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
new benzovoz[10], comptruck[9];
new matsfuravagos[1], matsfuragrove[1], matsfuraactek[1], matsfurarifa[1], matsfura[1],matsfuraSsmc[1],matsfuraHamc[1],matsfuraOmc[1],matsfuraWmc[1],matsfuraHwmc[1],matsfuraFsmc[1],matsfuraPmc[1],matsfuraMmc[1],matsfuraVmc[1],matsfuraBmc[1];
new lsnewscar[6], lvnewscar[6], lvpdcar[17];
new liccar[10], hotdogcar[9], taxicar[38], busls[8], bussf[9], buslv[8], train[1], mehanik[23], rentcarsf[9],rentplane[5], rentboat[18], rentcarls[11], rentcarlv[21], medicsls[6], medicslv[8], incos[4], hitmancar[8];
new sapdcar[26], fbicar[9],cnncar[5],sfpdcar[35],medmav,mavlic[2],cnnmav,armycarsf[21], yakcar[12],ruscar[12],govcar[6], lcncar[12],medicssf[8], armcar[44], faggio[38], gunscar[NUMBER_OF_ARMYTRUCKS], grovecar[10], ballascar[11], coronoscar[10], vagoscar[11],rifacar[12],ffcar[8] ;
new arenda[MAX_PLAYERS];
new incosjob[MAX_PLAYERS];
new Lightsp[MAX_PLAYERS];
new lsacar[16], lsacarvert[1];
new ssmccar[10], hamccar[10], omccar[10], mmccar[10], vmccar[10], wmccar[10], bmccar[10], hwmccar[10], fsmccar[10], pmccar[10];
new banksf[2];
new hitman;
new dice;
new paint;
new paintguns[4];
new victim[2];
new fraczp[19];
new Pension;
new housepaid;
new bizpaid;
new sbizpaid;
new workshoppaid;
new inputmoney;
new sportroom[2];
new racepic[2];
new ammonac[6];
new lspic[3];
new lvpic[2];
new rmpic[2];
new carjackpic[5];
new ugoncar[MAX_PLAYERS];
new bool: RobbingCar[MAX_PLAYERS];
new zonapoiska[MAX_PLAYERS];
new addictionenter;
new addictionexit;
new getgun[3];
new lcnpic[2];
new yakuzapic[2];
new sfnewspic[3];
new SDA;
new fracgunpic[5];
new fbi[2];
new lspd[6];
new sfpd[6];
new lvpd[7];
new armijavhod;
new armijavihod;
new avtosh[4];
new hallexit;
new hallbackexit;
new hallenter[2];
new bankpic[2];
new healheart[4];
new ballasenter[2];
new rifaenter[2];
new vagospic[2];
new aztecpic[2];
new grove[2];
new clothes,cashs;
new mushroom[53];
new skinshop[4];
new gunarm[2];
new zip[2];
new zone[2];
new warehousearmy[4];
new Float:PlayerArmor[MAX_PLAYERS];
new afkto[MAX_PLAYERS];
enum SavePlayerPosEnum
{
    Float:LastX,
    Float:LastY,
    Float:LastZ
}
enum nInfo
{
   	nLcn,
	nYakuza,
	nRm
};
enum fInfo
{
   	fLsnews,
	fSfnews,
	fLvnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
 	fKazna,
 	fSsmc,
 	fHamc,
 	fOmc,
	fWmc,
	fHwmc,
	fFsmc,
	fPmc,
	fMmc,
	fVmc,
	fBmc
};
new MafiaBank[1][nInfo];
new FracBank[1][fInfo];
enum bInfo
{
    bOwned,
	bOwner[64],
	bVworld,
	bType,
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitPlaceX,
	Float:bExitPlaceY,
	Float:bExitPlaceZ,
	Float:bOutX,
	Float:bOutY,
	Float:bOutZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	Text3D: bLabel,
	b2Till,
	bPrice,
	Float:bBarX,
	Float:bBarY,
	Float:bBarZ,
	bMafia,
	bCapture
};
new BizzInfo[20][bInfo];
enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbPrice,
	sbTill,
	s2bTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMafia,
	sbPriceProd,
	Text3D: sbLabel
};
enum abInfo
{
	abOwned,
	abOwner[64],
	abMessage[128],
	Float:abEntranceX,
	Float:abEntranceY,
	Float:abEntranceZ,
	Float:aExitX,
	Float:aExitY,
	Float:aExitZ,
	abBuyPrice,
	abWorld,
	abLocked,
	abInterior,
	abPrice,
	abArenda,
	abTill,
	Text3D: abLabel,
	Float:picX,
	Float:picY,
	Float:picZ,
	abZp,
	Rab,
	Poset,
	Mesto
};
new SBizzInfo[11][sbInfo];
new AvtoInfo[3][abInfo];
enum AdInfo
{
    bAdTxt[256],//Переменная текста рекламы
}
new AdTxt[3][AdInfo];
//=========================== Public's =========================================
stock IsVehicleOccupied(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerInVehicle(i,vehicleid)) return true;
    }
    return false;
}

stock LoadBankMafia()
{
	new iniFile = ini_openFile("gamefiles/LoadBankMafia.cfg");
	ini_getInteger(iniFile, "MafiaBank[0][nLcn]",MafiaBank[0][nLcn]);
	ini_getInteger(iniFile, "MafiaBank[0][nYakuza]",MafiaBank[0][nYakuza]);
	ini_getInteger(iniFile, "MafiaBank[0][nRm]",MafiaBank[0][nRm]);
	ini_closeFile(iniFile);
	return true;
}
stock LoadZp()
{
	new iniFile = ini_openFile("gamefiles/Zp.ini");
	ini_getInteger(iniFile, "LSPD",fraczp[0]);
	ini_getInteger(iniFile, "FBI",fraczp[1]);
	ini_getInteger(iniFile, "SFA",fraczp[2]);
	ini_getInteger(iniFile, "MEDSF",fraczp[3]);
	ini_getInteger(iniFile, "LCN",fraczp[4]);
	ini_getInteger(iniFile, "YAKUZA",fraczp[5]);
	ini_getInteger(iniFile, "MAYOR",fraczp[6]);
	ini_getInteger(iniFile, "CASINO",fraczp[7]);
	ini_getInteger(iniFile, "SFNEWS",fraczp[8]);
	ini_getInteger(iniFile, "SFPD",fraczp[9]);
	ini_getInteger(iniFile, "LICS",fraczp[10]);
	ini_getInteger(iniFile, "RM",fraczp[11]);
	ini_getInteger(iniFile, "LSNEWS",fraczp[12]);
	ini_getInteger(iniFile, "LVA",fraczp[13]);
	ini_getInteger(iniFile, "LVNEWS",fraczp[14]);
	ini_getInteger(iniFile, "LVPD",fraczp[15]);
	ini_getInteger(iniFile, "MEDLS",fraczp[16]);
	ini_getInteger(iniFile, "MEDLV",fraczp[17]);
	ini_getInteger(iniFile, "FFIGHT",fraczp[18]);
	ini_getInteger(iniFile, "PENSION",Pension);
	ini_getInteger(iniFile, "HOUSEPAID",housepaid);
	ini_getInteger(iniFile, "BIZPAID",bizpaid);
	ini_getInteger(iniFile, "SBIZPAID",sbizpaid);
	ini_getInteger(iniFile, "WORKSHOPPAID",workshoppaid);
	ini_closeFile(iniFile);
	printf("LoadZp");
	return true;
}
stock SaveZp()
{
	new iniFile = ini_openFile("gamefiles/Zp.ini");
	ini_setInteger(iniFile, "LSPD",fraczp[0]);
	ini_setInteger(iniFile, "FBI",fraczp[1]);
	ini_setInteger(iniFile, "SFA",fraczp[2]);
	ini_setInteger(iniFile, "MEDSF",fraczp[3]);
	ini_setInteger(iniFile, "LCN",fraczp[4]);
	ini_setInteger(iniFile, "YAKUZA",fraczp[5]);
	ini_setInteger(iniFile, "MAYOR",fraczp[6]);
	ini_setInteger(iniFile, "CASINO",fraczp[7]);
	ini_setInteger(iniFile, "SFNEWS",fraczp[8]);
	ini_setInteger(iniFile, "SFPD",fraczp[9]);
	ini_setInteger(iniFile, "LICS",fraczp[10]);
	ini_setInteger(iniFile, "RM",fraczp[11]);
	ini_setInteger(iniFile, "LSNEWS",fraczp[12]);
	ini_setInteger(iniFile, "LVA",fraczp[13]);
	ini_setInteger(iniFile, "LVNEWS",fraczp[14]);
	ini_setInteger(iniFile, "LVPD",fraczp[15]);
	ini_setInteger(iniFile, "MEDLS",fraczp[16]);
	ini_setInteger(iniFile, "MEDLV",fraczp[17]);
	ini_setInteger(iniFile, "FFIGHT",fraczp[18]);
	ini_setInteger(iniFile, "PENSION",Pension);
	ini_setInteger(iniFile, "HOUSEPAID",housepaid);
	ini_setInteger(iniFile, "BIZPAID",bizpaid);
	ini_setInteger(iniFile, "SBIZPAID",sbizpaid);
	ini_setInteger(iniFile, "WORKSHOPPAID",workshoppaid);
	ini_closeFile(iniFile);
    printf("SaveZp");
	return true;
}
stock CreateFire(Float:X1, Float:Y1, Float:Z1, Float:R1, Float:X2, Float:Y2, Float:Z2, Float:R2, Float:X3, Float:Y3, Float:Z3, Float:R3, Float:X4, Float:Y4, Float:Z4, Float:R4, Float:X5, Float:Y5, Float:Z5, Float:R5)
{
    fob[0] = CreateObject(18691, X1, Y1, Z1 - 1, 0, 0, R1, 1000.00);
    fob[1] = CreateObject(18691, X2, Y2, Z2 - 1, 0, 0, R2, 1000.00);
    fob[2] = CreateObject(18691, X3, Y3, Z3 - 1, 0, 0, R3, 1000.00);
    fob[3] = CreateObject(18691, X4, Y4, Z4 - 1, 0, 0, R4, 1000.00);
    fob[4] = CreateObject(18691, X5, Y5, Z5 - 1, 0, 0, R5, 1000.00);
    FireInProgress = true;
    FireStatus = 100;
    return true;
}
stock KickP(playerid) SetTimerEx("KickPublic", 1000, 0, "i", playerid);
public KickPublic(playerid) return Kick(playerid);
forward KickPublic(playerid);
stock KillFire()
{
    DestroyObject(fob[0]), DestroyObject(fob[1]), DestroyObject(fob[2]), DestroyObject(fob[3]), DestroyObject(fob[4]);
    FireInProgress = false;
    FireStatus = 0;
}
stock LoadBankFrac()
{
	new iniFile = ini_openFile("gamefiles/FracBank.cfg");
	ini_getInteger(iniFile, "FracBank[0][fLsnews]",FracBank[0][fLsnews]);
	ini_getInteger(iniFile, "FracBank[0][fSfnews]",FracBank[0][fSfnews]);
	ini_getInteger(iniFile, "FracBank[0][fLvnews]",FracBank[0][fLvnews]);
	ini_getInteger(iniFile, "FracBank[0][fBallas]",FracBank[0][fBallas]);
	ini_getInteger(iniFile, "FracBank[0][fVagos]",FracBank[0][fVagos]);
	ini_getInteger(iniFile, "FracBank[0][fGrove]",FracBank[0][fGrove]);
	ini_getInteger(iniFile, "FracBank[0][fAztek]",FracBank[0][fAztek]);
	ini_getInteger(iniFile, "FracBank[0][fRifa]",FracBank[0][fRifa]);
	ini_getInteger(iniFile, "FracBank[0][fKazna]",FracBank[0][fKazna]);
	ini_getInteger(iniFile, "FracBank[0][fSsmc]",FracBank[0][fSsmc]);
	ini_getInteger(iniFile, "FracBank[0][fHamc]",FracBank[0][fHamc]);
	ini_getInteger(iniFile, "FracBank[0][fOmc]",FracBank[0][fOmc]);
	ini_getInteger(iniFile, "FracBank[0][fWmc]",FracBank[0][fWmc]);
	ini_getInteger(iniFile, "FracBank[0][fHwmc]",FracBank[0][fHwmc]);
	ini_getInteger(iniFile, "FracBank[0][fFsmc]",FracBank[0][fFsmc]);
	ini_getInteger(iniFile, "FracBank[0][fPmc]",FracBank[0][fPmc]);
	ini_getInteger(iniFile, "FracBank[0][fMmc]",FracBank[0][fMmc]);
	ini_getInteger(iniFile, "FracBank[0][fVmc]",FracBank[0][fVmc]);
	ini_getInteger(iniFile, "FracBank[0][fBmc]",FracBank[0][fBmc]);
	ini_closeFile(iniFile);
	return true;
}
stock LoadMaterials()
{
	new time = GetTickCount();
	new iniFile = ini_openFile("gamefiles/materials.ini");
	ini_getInteger(iniFile, "lsamatbi",lsamatbi);
	ini_getInteger(iniFile, "armmatbi",armmatbi);
	ini_getInteger(iniFile, "armmatsf",armmatsf);
	ini_getInteger(iniFile, "ssmcmatbi",ssmcmatbi);
	ini_getInteger(iniFile, "hamcmatbi",hamcmatbi);
	ini_getInteger(iniFile, "omcmatbi",omcmatbi);
	ini_getInteger(iniFile, "wmcmatbi",wmcmatbi);
	ini_getInteger(iniFile, "hwmcmatbi",hwmcmatbi);
	ini_getInteger(iniFile, "fsmcmatbi",fsmcmatbi);
	ini_getInteger(iniFile, "vmcmatbi",vmcmatbi);
	ini_getInteger(iniFile, "pmmcmatbi",pmcmatbi);
	ini_getInteger(iniFile, "mmcmatbi",mmcmatbi);
	ini_getInteger(iniFile, "bmcmatbi",bmcmatbi);
	ini_getInteger(iniFile, "rifamatbi",rifamatbi);
	ini_getInteger(iniFile, "ballasmatbi",ballasmatbi);
	ini_getInteger(iniFile, "aztekmatbi",aztekmatbi);
	ini_getInteger(iniFile, "vagosmatbi",vagosmatbi);
	ini_getInteger(iniFile, "groovmatbi",groovmatbi);
	ini_getInteger(iniFile, "lspdmatbi",lspdmatbi);
	ini_getInteger(iniFile, "fbimats",fbimats);
	ini_getInteger(iniFile, "yakuzamats",yakuzamats);
	ini_getInteger(iniFile, "rmmats",rmmats);
	ini_getInteger(iniFile, "lcnmats",lcnmats);
	ini_getInteger(iniFile, "sfpdmats",sfpdmats);
	ini_getInteger(iniFile, "lvpdmats",lvpdmats);
	ini_getInteger(iniFile, "hitmanmats",hitmanmatbi);
	ini_closeFile(iniFile);
	printf("[Загрузка другое]: Было загружено - потрачено %d (ms)", GetTickCount() - time);
	return true;
}
stock SaveBankFrac()
{
	new iniFile = ini_openFile("gamefiles/FracBank.cfg");
	ini_setInteger(iniFile, "FracBank[0][fLsnews]",FracBank[0][fLsnews]);
 	ini_setInteger(iniFile, "FracBank[0][fSfnews]",FracBank[0][fSfnews]);
	ini_setInteger(iniFile, "FracBank[0][fLvnews]",FracBank[0][fLvnews]);
	ini_setInteger(iniFile, "FracBank[0][fBallas]",FracBank[0][fBallas]);
	ini_setInteger(iniFile, "FracBank[0][fVagos]",FracBank[0][fVagos]);
	ini_setInteger(iniFile, "FracBank[0][fGrove]",FracBank[0][fGrove]);
	ini_setInteger(iniFile, "FracBank[0][fAztek]",FracBank[0][fAztek]);
	ini_setInteger(iniFile, "FracBank[0][fRifa]",FracBank[0][fRifa]);
	ini_setInteger(iniFile, "FracBank[0][fKazna]",FracBank[0][fKazna]);
	ini_setInteger(iniFile, "FracBank[0][fSsmc]",FracBank[0][fSsmc]);
	ini_setInteger(iniFile, "FracBank[0][fHamc]",FracBank[0][fHamc]);
	ini_setInteger(iniFile, "FracBank[0][fOmc]",FracBank[0][fOmc]);
	ini_setInteger(iniFile, "FracBank[0][fWmc]",FracBank[0][fWmc]);
	ini_setInteger(iniFile, "FracBank[0][fHwmc]",FracBank[0][fHwmc]);
	ini_setInteger(iniFile, "FracBank[0][fFsmc]",FracBank[0][fFsmc]);
	ini_setInteger(iniFile, "FracBank[0][fPmc]",FracBank[0][fPmc]);
	ini_setInteger(iniFile, "FracBank[0][fMmc]",FracBank[0][fMmc]);
	ini_setInteger(iniFile, "FracBank[0][fVmc]",FracBank[0][fVmc]);
	ini_setInteger(iniFile, "FracBank[0][fBmc]",FracBank[0][fBmc]);
	ini_closeFile(iniFile);
	return true;
}
public AddictionTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetPlayerWeather(playerid, 10);
		AddictionsTimer[playerid] = 0;
	}
}
stock SaveBankMafia()
{
	new iniFile = ini_openFile("gamefiles/LoadBankMafia.cfg");
	ini_setInteger(iniFile, "MafiaBank[0][nLcn]",MafiaBank[0][nLcn]);
	ini_setInteger(iniFile, "MafiaBank[0][nYakuza]",MafiaBank[0][nYakuza]);
	ini_setInteger(iniFile, "MafiaBank[0][nRm]",MafiaBank[0][nRm]);
	ini_closeFile(iniFile);
	return true;
}
stock SaveMaterials()
{
	new iniFile = ini_openFile("gamefiles/materials.ini");
	ini_setInteger(iniFile, "armmatbi",armmatbi);
	ini_setInteger(iniFile, "lsamatbi",lsamatbi);
	ini_setInteger(iniFile, "armmatsf",armmatsf);
	ini_setInteger(iniFile, "ssmcmatbi",ssmcmatbi);
	ini_setInteger(iniFile, "hamcmatbi",hamcmatbi);
	ini_setInteger(iniFile, "omcmatbi",omcmatbi);
	ini_setInteger(iniFile, "wmcmatbi",wmcmatbi);
	ini_setInteger(iniFile, "hwmcmatbi",hwmcmatbi);
	ini_setInteger(iniFile, "fsmcmatbi",fsmcmatbi);
	ini_setInteger(iniFile, "vmcmatbi",vmcmatbi);
	ini_setInteger(iniFile, "pmmcmatbi",pmcmatbi);
	ini_setInteger(iniFile, "mmcmatbi",mmcmatbi);
	ini_setInteger(iniFile, "bmcmatbi",bmcmatbi);
	ini_setInteger(iniFile, "rifamatbi",rifamatbi);
	ini_setInteger(iniFile, "ballasmatbi",ballasmatbi);
	ini_setInteger(iniFile, "aztekmatbi",aztekmatbi);
	ini_setInteger(iniFile, "vagosmatbi",vagosmatbi);
	ini_setInteger(iniFile, "groovmatbi",groovmatbi);
	ini_setInteger(iniFile, "lspdmatbi",lspdmatbi);
	ini_getInteger(iniFile, "hitmanmats",hitmanmatbi);
	ini_setInteger(iniFile, "fbimats",fbimats);
	ini_setInteger(iniFile, "yakuzamats",yakuzamats);
	ini_setInteger(iniFile, "rmmats",rmmats);
	ini_setInteger(iniFile, "lcnmats",lcnmats);
	ini_setInteger(iniFile, "sfpdmats",sfpdmats);
	ini_setInteger(iniFile, "lvpdmats",lvpdmats);
	ini_setInteger(iniFile, "hitmanmats",hitmanmatbi);
	ini_closeFile(iniFile);
	return true;
}
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum pBoxingStats
{
    TitelName[128],
    TitelWins,
    TitelLoses
};
new Titel[pBoxingStats];
new sporthelp;
new boxfight[1];
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new sportMSG[10][] = {
	{"В данном спортзале вы можете выучить несколько видов боевых искусств\n\n"},
	{"Существует всего 3 вида боевых искусcтв:\n"},
	{"- Box\t\t(Бокс)\n"},
	{"- Kickbox\t(Кикбокс)\n"},
	{"- kongfu\t(Кунг-Фу)\n\n"},
	{"Для изучения искусств вам нужен тренер\n"},
	{"Тренера можно найти: /dir [8]\n"},
	{"\n"},
	{"Работая тренером (с 6 лет в штате), можно брать деньги за уроки\n"},
	{"Изученные навыки повысят кол-во наносяшего вами урона.\n"}
};
new Float:gInviteSpawns[0][4] = {
{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS];
new LessonStat[MAX_PLAYERS];
new pLessonCar[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66,
	CHECKPOINT_67
}
new pMusor[MAX_PLAYERS];
enum
{
    CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9
}
new pAutoBusLS[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66,
	CHECKPOINT_67,
	CHECKPOINT_68,
	CHECKPOINT_69,
	CHECKPOINT_70,
	CHECKPOINT_71,
	CHECKPOINT_72,
	CHECKPOINT_73,
	CHECKPOINT_74,
	CHECKPOINT_75,
	CHECKPOINT_76,
	CHECKPOINT_77,
	CHECKPOINT_78,
	CHECKPOINT_79,
	CHECKPOINT_80,
	CHECKPOINT_81,
	CHECKPOINT_82,
	CHECKPOINT_83,
	CHECKPOINT_84,
	CHECKPOINT_85,
	CHECKPOINT_86,
	CHECKPOINT_87,
	CHECKPOINT_88,
	CHECKPOINT_89,
	CHECKPOINT_90,
	CHECKPOINT_91,
	CHECKPOINT_92,
	CHECKPOINT_93,
	CHECKPOINT_94,
	CHECKPOINT_95,
	CHECKPOINT_96,
	CHECKPOINT_97,
	CHECKPOINT_98,
	CHECKPOINT_99,
	CHECKPOINT_100,
	CHECKPOINT_101,
	CHECKPOINT_103,
	CHECKPOINT_104,
	CHECKPOINT_105,
	CHECKPOINT_106,
	CHECKPOINT_107,
	CHECKPOINT_108,
	CHECKPOINT_109,
	CHECKPOINT_110,
	CHECKPOINT_111,
	CHECKPOINT_112,
	CHECKPOINT_113,
	CHECKPOINT_114,
	CHECKPOINT_115,
	CHECKPOINT_116,
	CHECKPOINT_117,
	CHECKPOINT_118,
	CHECKPOINT_119,
	CHECKPOINT_120,
	CHECKPOINT_121,
	CHECKPOINT_122,
	CHECKPOINT_123,
	CHECKPOINT_124,
	CHECKPOINT_125,
	CHECKPOINT_126,
	CHECKPOINT_127,
	CHECKPOINT_128,
	CHECKPOINT_129,
	CHECKPOINT_130,
	CHECKPOINT_131,
	CHECKPOINT_132,
	CHECKPOINT_133,
	CHECKPOINT_134,
	CHECKPOINT_135,
	CHECKPOINT_136,
    CHECKPOINT_137,
    CHECKPOINT_138,
    CHECKPOINT_139,
    CHECKPOINT_140,
    CHECKPOINT_141,
    CHECKPOINT_142,
    CHECKPOINT_143,
    CHECKPOINT_144,
    CHECKPOINT_145,
    CHECKPOINT_146,
    CHECKPOINT_147,
    CHECKPOINT_148,
    CHECKPOINT_149,
    CHECKPOINT_150,
    CHECKPOINT_151,
    CHECKPOINT_152,
    CHECKPOINT_153,
    CHECKPOINT_154,
    CHECKPOINT_155,
    CHECKPOINT_156,
    CHECKPOINT_157,
    CHECKPOINT_158,
    CHECKPOINT_159,
    CHECKPOINT_160,
    CHECKPOINT_161,
    CHECKPOINT_162,
    CHECKPOINT_163,
    CHECKPOINT_164,
    CHECKPOINT_165,
    CHECKPOINT_166,
    CHECKPOINT_167,
    CHECKPOINT_168,
    CHECKPOINT_169,
    CHECKPOINT_170,
    CHECKPOINT_171,
    CHECKPOINT_172,
    CHECKPOINT_173,
    CHECKPOINT_174,
    CHECKPOINT_175,
    CHECKPOINT_176,
    CHECKPOINT_177,
    CHECKPOINT_178,
    CHECKPOINT_179,
    CHECKPOINT_180,
    CHECKPOINT_181,
    CHECKPOINT_182,
    CHECKPOINT_183,
    CHECKPOINT_184,
    CHECKPOINT_185,
    CHECKPOINT_186,
    CHECKPOINT_187,
    CHECKPOINT_188,
    CHECKPOINT_189,
    CHECKPOINT_190,
    CHECKPOINT_191,
    CHECKPOINT_192,
    CHECKPOINT_193,
    CHECKPOINT_194,
    CHECKPOINT_195,
    CHECKPOINT_196,
    CHECKPOINT_197,
    CHECKPOINT_198,
    CHECKPOINT_199,
    CHECKPOINT_200,
    CHECKPOINT_201,
    CHECKPOINT_202,
    CHECKPOINT_203,
    CHECKPOINT_204,
    CHECKPOINT_205,
    CHECKPOINT_206,
    CHECKPOINT_207,
    CHECKPOINT_208,
    CHECKPOINT_209,
    CHECKPOINT_210,
    CHECKPOINT_211,
    CHECKPOINT_212,
    CHECKPOINT_213,
    CHECKPOINT_214,
    CHECKPOINT_215,
    CHECKPOINT_216,
    CHECKPOINT_217,
    CHECKPOINT_218,
    CHECKPOINT_219,
    CHECKPOINT_220,
    CHECKPOINT_221,
    CHECKPOINT_222,
    CHECKPOINT_223,
    CHECKPOINT_224,
    CHECKPOINT_225
}
new pTrain[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_12
}
new pAutoBusSF[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56
}
new pAutoBusLV[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66,
	CHECKPOINT_67,
	CHECKPOINT_68,
	CHECKPOINT_69,
	CHECKPOINT_70,
	CHECKPOINT_71,
	CHECKPOINT_72,
	CHECKPOINT_73,
	CHECKPOINT_74,
	CHECKPOINT_75,
	CHECKPOINT_76,
	CHECKPOINT_77,
	CHECKPOINT_78,
	CHECKPOINT_79,
	CHECKPOINT_80,
	CHECKPOINT_81,
	CHECKPOINT_82,
	CHECKPOINT_83,
	CHECKPOINT_84,
	CHECKPOINT_85,
	CHECKPOINT_86,
	CHECKPOINT_87,
	CHECKPOINT_88,
	CHECKPOINT_89,
	CHECKPOINT_90,
	CHECKPOINT_91,
	CHECKPOINT_92,
	CHECKPOINT_93,
	CHECKPOINT_94,
	CHECKPOINT_95,
	CHECKPOINT_96,
	CHECKPOINT_97,
	CHECKPOINT_98,
	CHECKPOINT_99
}
//dderby
new DerbyOpen = 0;
new DerbyAttend = 0;
new PlayerOnDerby[MAX_PLAYERS];
new derbyrace[3];
///
new Float:PaintballSpawns[6][3] = {
	{2563.6877,2807.0288,10.8203},
	{2554.0505,2837.7419,10.8203},
	{2585.6748,2848.5283,10.8203},
	{2598.7083,2843.5200,10.8203},
	{2546.7622,2830.9004,14.2559},
	{2575.9900,2839.3103,19.9922}
};
new Float:RaceSpawns[14][3] = {
	{1473.0309,-2505.8330,13.2597},
	{1473.1139,-2501.6311,13.2597},
	{1473.2007,-2497.2439,13.2597},
	{1473.3285,-2490.7598,13.2597},
	{1473.4164,-2486.2935,13.2597},
	{1473.5006,-2482.0027,13.2597},
	{1490.8593,-2482.3445,13.2484},
	{1490.7758,-2486.5725,13.2484},
	{1490.6914,-2490.8496,13.2484},
	{1490.5592,-2497.5369,13.2484},
	{1490.4742,-2501.8625,13.2484},
	{1490.3927,-2505.9998,13.2484},
	{1506.5397,-2495.6602,13.2180},
	{1506.5789,-2492.1836,13.2180}
};
new Float:race[23][3] = {
	{1706.8019,-2493.8806,13.2008},
	{1865.0568,-2493.7917,13.2430},
	{2004.5333,-2493.7129,13.2456},
	{2109.2900,-2541.4619,13.2298},
	{2057.6487,-2593.3159,13.2232},
	{1929.6129,-2593.5879,13.0613},
	{1772.9764,-2593.6741,13.2390},
	{1615.5470,-2593.7671,13.2563},
	{1487.0261,-2593.8442,13.2154},
	{1423.5560,-2548.9268,13.2454},
	{1453.1705,-2493.9058,13.2210},
	{1706.8019,-2493.8806,13.2008},
	{1865.0568,-2493.7917,13.2430},
	{2004.5333,-2493.7129,13.2456},
	{2109.2900,-2541.4619,13.2298},
	{2057.6487,-2593.3159,13.2232},
	{1929.6129,-2593.5879,13.0613},
	{1772.9764,-2593.6741,13.2390},
	{1615.5470,-2593.7671,13.2563},
	{1487.0261,-2593.8442,13.2154},
	{1423.5560,-2548.9268,13.2454},
	{1427.6746,-2461.2737,13.2599},
	{ }
};
new Float:VeloSpawns[18][3] = {
	{-1299.6956,-705.8982,1055.7883},
	{-1297.4490,-704.4529,1055.8176},
	{-1294.5687,-702.5999,1055.8553},
	{-1296.9550,-698.8951,1056.0790},
	{-1299.6482,-700.6277,1056.0438},
	{-1302.0820,-702.1935,1056.0118},
	{-1305.2716,-697.2415,1056.3108},
	{-1302.3239,-695.3451,1056.3491},
	{-1299.8279,-693.7394,1056.3816},
	{-1308.8804,-692.5737,1056.6034},
	{-1306.8887,-690.1649,1056.6841},
	{-1305.2042,-687.4276,1056.7865},
	{-1315.9603,-686.6168,1055.6960},
	{-1313.8645,-684.1074,1055.7102},
	{-1311.6522,-681.4588,1055.7251},
	{-1317.6500,-678.1536,1055.6215},
	{-1321.1531,-679.5546,1055.5442},
	{-1322.2642,-682.6734,1055.5757}
};
new Float:gonka[23][3] = {
	{-300.1178,1480.0925,75.7021},
	{-323.1312,1414.6614,70.3991},
	{-418.0308,1479.2651,47.7715},
	{-404.5196,1713.0527,40.9413},
	{-420.1261,1865.9320,63.6108},
	{-467.7388,1793.5017,75.6447},
	{-461.6825,2041.3792,61.2226},
	{-401.5928,2153.5996,44.0107},
	{-389.8867,2265.8518,41.9154},
	{-415.4320,2456.7036,44.9406},
	{-583.3609,2434.6089,69.3783},
	{-721.8268,2520.6509,75.3777},
	{-779.9264,2537.4221,90.5484},
	{-833.3322,2368.6733,121.7159},
	{-692.0170,2330.4817,130.1477},
	{-676.0890,2306.1895,134.6080},
	{-1066.3700,2295.9648,88.5421},
	{-1113.6050,2371.9421,85.4514},
	{-1164.1934,2254.6975,99.1812},
	{-1309.9760,2237.5005,99.4314},
	{-1306.0889,2413.1877,94.2742},
	{-1296.5294,2496.5566,87.3332},
	{ }
};
new Float:velogonka[11][3] = {
	{-1392.8823,-664.2424,1056.5042},// чек
	{-1490.3668,-624.4260,1054.7405},// чек
	{-1444.7014,-684.1426,1053.1312},// чек
	{-1331.0515,-706.8712,1055.5878},// чек
	{-1395.6963,-632.8066,1051.2495},// чек
	{-1289.1444,-642.6941,1055.6703},// чек
	{-1398.5776,-589.2161,1058.8173},// чек
	{-1491.1425,-593.3538,1055.4565},// чек
	{-1521.1039,-703.9369,1055.1754},// чек
	{-1431.9993,-739.4781,1054.6364},// чек
	{-1308.1356,-737.6250,1049.7961}// че
};
new tachki[] = {502,502,502};
new moto[] = {468,468};
new paintgun[] = {24,31,30};
new rabotaMSG[12][] = {
	{"{FFFFFF}Здесь вы можете подработать грузчиком\n"},
	{"\n"},
	{"В здании на против, вы найдете раздевалку,\n"},
	{"А так же кассу, где Вы будете получать деньги за работу.\n\n"},
	{"\n"},
	{"Чтобы начать работу, необходимо переодеться в рабочую форму.\n"},
	{"Далее, берите в вагоне мешок, и несите его на склад.\n"},
	{"За один мешок, Вам будут платить 25 вирт.\n"},
	{"\n"},
	{"Как только вы захотите завершить рабочий день,\n"},
	{"Пройдите к кассе.\n"},
	{"\n"}
};
new pdddialogMSG[13][] = {
    {"<< 1. Общие правила >>\n\n"},
    {"Обгон транспортного средства разрешен только с левой стороны,\n"},
    {"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
    {"При ДТП водители обязаны позвонить в полицию, и дождаться ДПС\n\n"},
    {"<< 2. Скорость движения >> \n\n"},
    {"В переделах города разрешается движение транспортных средств со скоростью не более 50 км/ч.\n"},
    {"В жилых зонах и на дворовых территориях не более 30 км/ч\n\n"},
    {"<< 3. Остановка и стоянка >>\n\n"},
    {"Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
    {"В специальных отведённых для этого местах\n\n"},
	{"<< 4. ДПС >> \n\n"},
    {"При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
    {"Водитель обязан предъявить паспорт/лицензии, если тот попросил"}
};
new RulesMSG[17][] = {
    {"1. Игровой процесс\n"},
    {"Запрещено:\n"},
    {"Использование любых программ скриптов читов и.т.п. дающие нечестное преймущество в игре.\n"},
    {"Использование багов (Ошибок, Неисправностей мода).\n"},
    {"Использовать ESC в целях ухода от погони/смерти.\n"},
    {"Убивать игроков на спавне (Место возрождения, базы организаций).\n"},
    {"Убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n"},
    {"Убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n"},
    {"Злоупотребление игровыми возможностями для создания неудобств игрокам.\n\n"},
	{"2. Ник в игре\n"},
	{"(сменить ник можно через /mm >> Сменить ник)\n"},
	{"Ник должен состоять из Имени_Фамилии с заглавных букв.\n"},
	{"Запрещено:\n"},
	{"Запрещено использовать чужие (уже кем-то занятые) ники.\n"},
	{"Запрещено использовать ники, содержащие нецензурные или оскорбительные слова.\n"},
	{"Отправлять более одной заявки в час (Исключение: Просьба Администрации).\n"},
	{"Если вам отказали в смене ника, Значит нельзя.\n"}
};
new RulesMSGG[22][] = {
    {"3. Чат\n"},
	{"OOC (Out Of Charter) - это всё, что касается реального мира.\n"},
	{"IC (In Charter) - это всё, что касается виртульного мира, то есть игры.\n"},
	{"Запрещено:\n"},
	{"Ругательство, оскорбления или нецензурная речь.\n"},
	{"Угрозы игрокам (Не относящиеся к игровому процессу).\n"},
	{"Писать сообщения в верхнем регистре (Caps Lock).\n"},
	{"Писать в чат объявлений сообщения не относящихся к Role Play.\n"},
	{"Писать одно и тоже сообщение слишком часто.\n"},
	{"Обсуждать, критиковать действия администрации.\n"},
	{"Реклама сторонних ресурсов.\n\n"},
	{"4. Администрация сервера\n"},
	{"Необходимо сообщать администрации о каких либо нарушениях из данных правил (/mm > Репорт).\n"},
	{"Администрация самостоятельно выбирает штрафные санкции для каждого из случаев.\n"},
	{"Запрещено препятствовать администрации в работе.\n"},
	{"Решение администрации является окончательным и не подлежит обсуждению.\n\n"},
	{"5. Торговля.\n"},
	{"Запрещены любые денежные махинации.\n"},
	{"Запрещена продажа / покупка чего либо, за реальные деньги.\n"},
	{"Запрещен обмен внеигровых предметов в любой форме, на игровые.\n"},
	{"Запрещен обмен чего либо между игровыми серверами.\n"},
	{"Запрещена продажа / передача аккаунтов.\n"}
};
enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam
};
enum pInfo
{
	//нужные..
	pName,
	pKey[128],
	pLevel,
 	pAdmin,
 	pForma,
	//
 	pAp,
 	Float:pIp,
 	Float:pvIp,
 	Float:pIpReg,
 	pHousecash,
 	pCheckip,
 	pText,
	pFirework,
 	pKeyip,
 	pHP,
	pSatiety,
 	pDataReg,
 	pMes,
 	pGod,
 	pCar,
 	Float:pFuelCar,
 	pProcents,
 	pNumbercar[32],
	pDonateRank,
	pDonateMoney,
	pReg,
	pMaterials,
	pSex,
	pArrested,
	pMuted,
	pCrimes,
	pExp,
	pCash,
	pKills,
	pWantedDeaths,
	pPayCheck,
	pZp,
	pJailed,
	pCheat,
	pJailTime,
	pWins,
	pLoses,
	pCDPlayer,
	pRope,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pChar,
	pJob,
	pInt,
	pLocal,
	pModel,
	pPhone,
	pFishrod,
	pNointim,
	pWorms,
	pPrez,
	pBeer,
	pWine,
	pSig,
	pSprite,
	pKeys,
	pPnumber,
	pPhoneBook,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pCarLic,
    pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pBisLic,
	pNkeys,
	pPHousekey,
	pPBiskey,
	pAutoMast,
	pLabiding,
	pAddiction,
	pPayDay,
	pPayDayHad,
 	pTut,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMarriedTo[128],
	pPrefix[32],
	pDrug[128],
	pMushrooms,
	pTicket,
	pTicketNr[3],
	pTicketWin,
	pRadio,
	pFishes,
	pFriendMoney,
	pMuteTime,
	pBank,
	pKazpay,
	pDonateAccount,
	pDonate,
	pMobile,
	pDostup[128],
	pLocked,
	pDebt,
	pMafiaRoof,
	pUseMafiaRoof,
	pMadWant,
	pAntiCheat,
	pSlot[13],
	pSlotammo[13],
	pGunSkill[11],
	pTaxiExp,
	pTaxiLvl,
	pCarRobbingExp,
 	pGunFbiTime,
 	pPissTime,
	pGunLvaTime,
	pGunLsaTime,
	pGunLspdTime,
	pAdvertTime,
	pBisIn,
	pGunaSfaTime,
  	pBoxSkill,
  	pKongfuSkill,
  	pKickboxSkill,
  	pDLevel,
    pDExp,
    pDMgruz,
    pDgruz,
	pFerma,
    pFermazarobotok,
    pFermajob,
  	pWheels,
  	pPaintJob,
  	pSpoiler,
  	pBumper1,
  	pBumper2,
	pColor,
	pColor1,
  	pNitro,
  	pHat,
	Float:pHatX,
	Float:pHatY,
	Float:pHatZ,
	Float:pHatRX,
	Float:pHatRY,
	Float:pHatRZ,
	pWatchs,
	pGlasses,
	Float:pGlassesX,
	Float:pGlassesY,
	Float:pGlassesZ,
	Float:pGlassesRX,
	Float:pGlassesRY,
	Float:pGlassesRZ,
	pMask,
	Float:pMaskX,
	Float:pMaskY,
	Float:pMaskZ,
	Float:pMaskRX,
	Float:pMaskRY,
	Float:pMaskRZ,
	pOther,
	Float:pOtherX,
	Float:pOtherY,
	Float:pOtherZ,
	Float:pOtherRX,
	Float:pOtherRY,
	Float:pOtherRZ,
  	pBalon,
  	pPension,
  	pCredit,
  	pCreditMust,
    pCreditTime,
    pDeposit,
    pDepositTime,
    pDepositMust,
    pRCVeh,
  	pHydrawlic
};
new PlayerInfo[MAX_PLAYERS][pInfo];
enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[MAX_PLAYER_NAME],
	hVworld,
	hOint,
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
 	hDate,
	hKlass,
	hVec,
	hVcol1,
	hVcol2,
	hPickup,
	hMIcon,
	hVehSost
};
new HouseInfo[1000][hInfo];
enum pHaul
{
	pLoad
};
enum sHaul
{
	sLoad
};
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
	gSsmc,
	gHamc,
	gOmc,
	gWmc,
	gHwmc,
	gFsmc,
	gPmc,
	gMmc,
	gVmc,
	gBmc
};
new Furi[1][pMatss];
enum pMat
{
	mCapasity,
	mLoad
};
new MatHaul[NUMBER_OF_ARMYTRUCKS][pMat];
new PlayerHaul[18][pHaul];
new PlayersHaul[10][sHaul];
enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32]
};
new PlayerCrime[MAX_PLAYERS][pCrime];
stock NoTax(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new member = PlayerInfo[playerid][pMember];
	    new job = PlayerInfo[playerid][pJob];
	    new krish = PlayerInfo[playerid][pMafiaRoof];
		switch(member)
		{
		    case 5,6,12..18,23..32: return true;
		}
		if(member == 0 && job == 0)return true;
		if(member == 0 && krish > 0) return true;
	}
	return false;
}
stock IsAMafia(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    switch(PlayerInfo[playerid][pMember])
		{
		    case 5,6,14: return true;
		}
	}
	return false;
}
stock IsATV(playerid)
{
	if(PlayerToPoint(3.0,playerid,-265.2435,1451.1284,1084.3745)||PlayerToPoint(3.0,playerid,-279.2997,1453.5896,1084.3672)||PlayerToPoint(3.0,playerid,236.6045,1084.9694,1084.2415)
	||PlayerToPoint(3.0,playerid,223.6077,1085.1351,1084.1995)||PlayerToPoint(3.0,playerid,152.1971,1367.7595,1083.8594)||PlayerToPoint(3.0,playerid,140.2441,1380.5515,1083.8672)
	||PlayerToPoint(3.0,playerid,25.6308,1416.4667,1084.4370)||PlayerToPoint(3.0,playerid,32.6272,1417.5585,1084.4297)||PlayerToPoint(3.0,playerid,31.4357,1404.2931,1084.4297)
	||PlayerToPoint(3.0,playerid,33.8404,1350.7140,1084.3750)||PlayerToPoint(3.0,playerid,19.2598,1347.2562,1084.3812)||PlayerToPoint(3.0,playerid,23.4032,1350.9771,1088.8750)
	||PlayerToPoint(3.0,playerid,258.3738,1293.4420,1080.2578)||PlayerToPoint(3.0,playerid,266.4617,1285.8590,1080.2578)||PlayerToPoint(3.0,playerid,267.2269,1294.7603,1080.2578)
	||PlayerToPoint(3.0,playerid,476.2642,1405.2889,1080.2578)||PlayerToPoint(3.0,playerid,488.2894,1417.7012,1084.3652)||PlayerToPoint(3.0,playerid,484.1965,1403.3369,1084.4063)
	||PlayerToPoint(3.0,playerid,500.4184,1399.2911,1080.2578)||PlayerToPoint(3.0,playerid,218.7239,1239.1956,1082.1406)||PlayerToPoint(3.0,playerid,222.1884,1253.3074,1082.1406)
	||PlayerToPoint(3.0,playerid,2264.6316,-1137.6118,1050.6328)||PlayerToPoint(3.0,playerid,-63.8379,1360.4396,1080.2185)||PlayerToPoint(3.0,playerid,-57.8263,1360.3419,1080.2109)
	||PlayerToPoint(3.0,playerid,-50.2040,1411.0684,1084.4297)||PlayerToPoint(3.0,playerid,-51.8189,1398.1379,1084.4297)||PlayerToPoint(3.0,playerid,1276.1700,-793.8481,1084.1719)
	||PlayerToPoint(3.0,playerid,500.4184,1399.2911,1080.2578)||PlayerToPoint(3.0,playerid,1238.2505,-820.0826,1083.1563)||PlayerToPoint(3.0,playerid,2455.6089,-1703.5454,1013.5078)
	||PlayerToPoint(3.0,playerid,2811.8125,-1165.9424,1025.5703)||PlayerToPoint(3.0,playerid,2818.9624,-1165.8684,1029.1719)||PlayerToPoint(3.0,playerid,316.4314,1117.4492,1083.8828)
	||PlayerToPoint(3.0,playerid,419.5199,2540.7258,10.0000)||PlayerToPoint(3.0,playerid,233.1902,76.5260,1005.0391)||PlayerToPoint(3.0,playerid,-1348.0812,491.0435,11.1953)
	||PlayerToPoint(3.0,playerid,376.5548,-38.5319,1076.4578)||PlayerToPoint(3.0,playerid,352.5721,-37.0840,1076.4578)||PlayerToPoint(3.0,playerid,354.6983,-37.1012,1076.4578)
	||PlayerToPoint(3.0,playerid,357.1889,-37.1084,1076.4651)||PlayerToPoint(3.0,playerid,359.6113,-37.0879,1076.4651)||PlayerToPoint(3.0,playerid,368.9959,-28.3256,1076.4578)
	||PlayerToPoint(3.0,playerid,370.8421,-28.2909,1076.4578)||PlayerToPoint(3.0,playerid,373.3679,-28.3381,1076.4578)||PlayerToPoint(3.0,playerid,354.1017,-33.2333,1076.4578)
	||PlayerToPoint(3.0,playerid,363.5013,-18.6607,1076.4651)||PlayerToPoint(3.0,playerid,371.7187,-45.5642,1076.4773)||PlayerToPoint(3.0,playerid,-2026.7709,-114.3440,1035.1719)
	||PlayerToPoint(3.0,playerid,304.7791,304.2637,1003.3047)||PlayerToPoint(3.0,playerid,269.3406,111.7393,1008.8203)||PlayerToPoint(3.0,playerid,246.9776,1860.8895,14.0840)
	||PlayerToPoint(3.0,playerid,212.4645,145.2598,1003.0234)||PlayerToPoint(3.0,playerid,1493.0797,1304.8656,1093.2891)||PlayerToPoint(3.0,playerid,226.1067,1293.2084,1082.1406)
	||PlayerToPoint(3.0,playerid,243.5017,1030.9124,1084.0078)||PlayerToPoint(3.0,playerid,243.5017,1030.9124,1084.0078)||PlayerToPoint(3.0,playerid,243.3321,1018.1474,1084.0133)
	||PlayerToPoint(3.0,playerid,228.4404,1046.3571,1084.0177)||PlayerToPoint(3.0,playerid,238.1370,1046.3927,1084.0000)||PlayerToPoint(3.0,playerid,236.2232,1026.9186,1088.3113)
	||PlayerToPoint(3.0,playerid,302.3813,1479.0814,1080.2578)||PlayerToPoint(3.0,playerid,289.4561,1489.1184,1080.2578)||PlayerToPoint(3.0,playerid,320.3839,1478.9070,1084.4397)
	||PlayerToPoint(3.0,playerid,326.1574,1489.4360,1084.4431)||PlayerToPoint(3.0,playerid,328.6027,1489.7211,1084.4375)||PlayerToPoint(3.0,playerid,384.2579,1468.7782,1080.1875)
	||PlayerToPoint(3.0,playerid,378.4258,1458.2975,1080.1875)||PlayerToPoint(3.0,playerid,375.5151,1462.9735,1080.1875)||PlayerToPoint(3.0,playerid,362.5622,1420.5084,1081.3354)
	||PlayerToPoint(3.0,playerid,364.7665,1431.8593,1081.3359)||PlayerToPoint(3.0,playerid,436.4979,1406.9961,1084.3120)||PlayerToPoint(3.0,playerid,458.7262,1411.2023,1084.3080))
	{
		return true;//П О Т Р А Ч Е Н О
	}
	return false;
}
stock IsATV2(playerid)
{
	if(PlayerToPoint(3.0,playerid,234.3062,1119.5326,1080.9922)||PlayerToPoint(3.0,playerid,243.0813,1106.4236,1080.9922)||PlayerToPoint(3.0,playerid,241.2331,1116.8755,1084.9922)
	||PlayerToPoint(3.0,playerid,243.4407,1111.5348,1085.0391)||PlayerToPoint(3.0,playerid,218.5172,1153.2998,1082.6094)||PlayerToPoint(3.0,playerid,224.8580,1159.1216,1082.6168)
	||PlayerToPoint(3.0,playerid,-293.0880,1474.2247,1084.3750)||PlayerToPoint(3.0,playerid,-284.3333,1476.3561,1084.3812)||PlayerToPoint(3.0,playerid,-295.2045,1476.1421,1088.8750)
	||PlayerToPoint(3.0,playerid,88.4949,1329.7175,1083.8594)||PlayerToPoint(3.0,playerid,78.1822,1340.7416,1083.8672)||PlayerToPoint(3.0,playerid,264.3862,1249.0627,1084.2578)
	||PlayerToPoint(3.0,playerid,264.8551,1238.8411,1084.2653)||PlayerToPoint(3.0,playerid,451.6667,514.2100,1001.4195)||PlayerToPoint(3.0,playerid,2535.6492,-1675.6804,1015.4986)
	||PlayerToPoint(3.0,playerid,2349.1816,-1186.3157,1027.9766)||PlayerToPoint(3.0,playerid,2322.3154,-1183.8362,1027.9766)||PlayerToPoint(3.0,playerid,2349.0059,-1187.2892,1031.9766)
	||PlayerToPoint(3.0,playerid,2250.6594,-1138.6586,1050.6328)||PlayerToPoint(3.0,playerid,2255.5193,-1212.3752,1049.0234)||PlayerToPoint(3.0,playerid,2234.7100,-1105.2805,1050.8828)
	||PlayerToPoint(3.0,playerid,2282.3667,-1137.6761,1050.8984)||PlayerToPoint(3.0,playerid,2242.9773,-1067.1130,1049.0234)||PlayerToPoint(3.0,playerid,2306.5459,-1207.5767,1049.0234)
	||PlayerToPoint(3.0,playerid,2209.4106,-1077.3091,1050.4844)||PlayerToPoint(3.0,playerid,2323.3582,-1018.7664,1050.2109))
	{
		return true;
	}
	return false;
}
stock IsALicenser(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 11)
		{
		    return true;
		}
		else if(leader == 11)
		{
		    return true;
		}
	}
	return false;
}
stock IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 7)
		{
		    return true;
		}
		else if(leader == 7)
		{
		    return true;
		}
	}
	return false;
}
stock IsABiker(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMember] >= 23 && PlayerInfo[playerid][pMember] <= 32) return true;
	}
	return false;
}
stock IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    switch(PlayerInfo[playerid][pMember])
	    {
	        case 12,13,15,17,18: return true;
		}
	}
	return false;
}
new Peds[57][1] = {
	{79},{254},{259},{249},{248},{247},{242},{239},{228},
	{185},{184},{160},{155},{135},{126},{122},{121},{101},
	{100},{96},{82},{83},{84},{294},{94},{73},{67},{28},
	{29},{24},{23},{22},{21},{20},{19},{18},{17},{15},
	{7},{2},{299},{297},{296},{293},{46},{198},{197},{196},
	{190},{193},{243},{178},{192},{199},{201},{214},{224}
};
stock PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new elektrich = SBizzInfo[targetid][sbBuyPrice] / 1000;
		new mafiatext[7];
		switch(SBizzInfo[targetid][sbMafia])
		{
		    case 0: mafiatext = "Нет";
		    case 5: mafiatext = "LCN";
		    case 6: mafiatext = "Yakuza";
		    case 14: mafiatext = "RM";
		}
		new text1[7],text2[11];
		if(SBizzInfo[targetid][sbLocked]) text1 = "Закрыт";
		else text1 = "Открыт";
		if(PlayerInfo[playerid][pBisLic]) text2 = "Есть";
		else text2 = "Отсутсвует";
		new bizinfo[512];
		format(bizinfo,sizeof(bizinfo), "======================[ %s ]======================\nПод контролем: %s\nВсего заработано: %d вирт\tВ этом часу заработано: %d вирт\nПродуктов: %d/20000\nЦена за товар: %d вирт\nЦена входа: %d вирт\nСостояние: %s\nБаланс банка для оплаты энергии: %d вирт\nНалог за электроэнергию: %d вирт\nЛицензия: %s",
		SBizzInfo[targetid][sbMessage],mafiatext,SBizzInfo[targetid][sbTill],SBizzInfo[targetid][s2bTill],SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbPrice],SBizzInfo[targetid][sbPriceProd],text1,SBizzInfo[targetid][sbTill],elektrich,text2);
		ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние бизнеса",bizinfo, "$", "$");
	}
}
stock PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		for(new h = 0; h < sizeof(BizzInfo); h++)
        {
	        new mafiatext[7];
	        switch(BizzInfo[targetid][bMafia])
			{
		    	case 0: mafiatext = "Нет";
		    	case 5: mafiatext = "LCN";
		    	case 6: mafiatext = "Yakuza";
		    	case 14: mafiatext = "RM";
			}
			new elektrich = BizzInfo[targetid][bBuyPrice] / 1000;
			new text1[7],text2[11];
	 		if(BizzInfo[targetid][bLocked]) text1 = "Закрыт";
		 	else text1 = "Открыт";
	  		if(PlayerInfo[playerid][pBisLic]) text2 = "Есть";
		  	else text2 = "Отсутсвует";
	  		new bizinfo[512];
	 		format(bizinfo,sizeof(bizinfo), "======================[ %s ]======================\nПод контролем: %s\nВсего заработано: %d вирт\tВ этом часу заработано: %d вирт\nПродуктов: %d/2000\nЦена за товар: %d вирт\nЦена входа: %d вирт\nСостояние: %s\nБаланс банка для оплаты энергии: %d вирт\nНалог за электроэнергию: %d вирт\nЛицензия: %s",
	 		BizzInfo[targetid][bMessage],mafiatext,BizzInfo[targetid][bTill],BizzInfo[targetid][b2Till],BizzInfo[targetid][bProducts],BizzInfo[targetid][bPrice],BizzInfo[targetid][bEntranceCost],text1,BizzInfo[targetid][bTill],elektrich,text2);
			ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние бизнеса",bizinfo, "$", "$");
		}
	}
}
stock PrintAvtoInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		for(new h = 0; h < sizeof(AvtoInfo); h++)
        {
			new text1[20];
	 		if(AvtoInfo[targetid][abLocked]) { text1 = "Закрыта"; } else { text1 = "Открыта"; }
	  		new bizinfo[250];
	 		format(bizinfo,sizeof(bizinfo), "Автомастерская ID: %s\nНа счету: %d вирт\nПлата за аренду помещения [в час]: 500 вирт\nСостояние: %s\nНа счету аренды: %d вирт\n\nЗар. плата рабочим: %d вирт\nРабочих: %d человек(а)\nПосетителей: %d человек(а)",
	 		AvtoInfo[targetid][abMessage],AvtoInfo[targetid][abTill],text1,AvtoInfo[targetid][abArenda],AvtoInfo[targetid][abZp],AvtoInfo[targetid][Rab],AvtoInfo[targetid][Poset]);
			ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние автомастерской",bizinfo, "Готово", "");
		}
	}
}
stock BuyHouse()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
			DestroyPickup(HouseInfo[h][hPickup]);
			AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],HouseInfo[h][hVworld]);
			pickups++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
		}
		else if(HouseInfo[h][hOwned] == 1)
		{
			DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
			DestroyPickup(HouseInfo[h][hPickup]);
  			AddStaticPickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],HouseInfo[h][hVworld]);
			pickups++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
		}
	}
	return true;
}
main() { }
public PissTime()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        SendClientMessage(i,COLOR_WHITE,"{FFFF00}- Введите: /piss - чтобы справить нужду. Чтобы закончить: Enter");
        if(GetPlayerState(i)==PLAYER_STATE_ONFOOT)
        {
            ApplyAnimation(i,"PED","Turn_L",4.1,1,1,1,1,1,1);
        }
    }
}
public StartPaintballtwo()
{
	OOCOff(0xdc143cAA,"Внимание! Начало пейнтболла через 2 минуты. Место проведения:Пляж Санта-Мария.");
	PaintballRound = 0;
	SetTimer("StartPaintball", 120000, 0);
	return true;
}
public StartPaintball()
{
	PaintballRound = 1;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
 	if(PaintballPlayers < 2)
 	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			OOCOff(0xdc143cAA,"Матч по пейнтболлу отменен из - за не достаточного количества участников.");
			PaintballRound = 1;
			PlayerPaintballing[i] = 0;
			PaintballPlayers = 0;
			return true;
		}
	}
	OOCOff(0xdc143cAA,"Внимание! Пейнтболл начался.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
   			if(PlayerPaintballing[i] != 0)
	        {
	       		new rand;
            	new rands = random(sizeof(paintgun));
				DelGun(i);
      			GiveWeapon(i, paintgun[rands], 9999);
		    	rand = random(sizeof(PaintballSpawns));
				SetPlayerPos(i, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 1);
				SetPlayerColor(i, COLOR_REDD);
				SetPlayerArmourAC(i, 100);
	       		PaintballPlayers = 0;
	      		PlayerPaintballing[i] = 1;
	      		Peredpaint[i] = 1;
	      		SendClientMessage(i, COLOR_GREEN, "Матч по пэтнтболу начался. Длительность: 5 мин.");
	        }
	    }
	}
	SetTimer("PaintBallEnded", 300000, 0);
	return true;
}
public PaintBallEnded()
{
	new name[MAX_PLAYER_NAME];
	OOCOff(0xdc143cAA,"Матч по пейнтболлу завершён.");
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                new string[128];
	                format(string, sizeof(string), "%s выиграл матч по пейнтболлу с %d убийствами",name,PaintballWinnerKills);
	                SendClientMessage(i, COLOR_YELLOW2, string);
    	           	PlayerInfo[PaintballWinner][pCash] += 5000;
    	           	PlayerPaintballKills[PaintballWinnerKills] = 0;
	            }
	            PlayerPaintballing[i] = 0;
	            Peredpaint[i] = 0;
	           	SetPlayerPos(i, 515.4033,-1812.3038,6.5781);
	           	SetPlayerFacingAngle(i, 94.3716);
	           	SetPlayerVirtualWorld(i, 0);
	           	SetPlayerInterior(i, 0);
	           	PlayerInfo[i][pCash] += 2000;
	           	PlayerPaintballKills[i] = 0;
	           	SetPlayerHealthAC(i, 100);
			    PlayerInfo[i][pHP] = 100;
                DelGun(i);
	        }
		}
	}
	PaintballWinnerKills = 0;
    PaintballRound = 1;
	return true;
}
public MotoStartGonkatwo()
{
	if(logs == 1)
	{
		printr("MotoStartGonkatwo");
	}
	OOCOff(0xc71585AA,"Внимание! Начало Мото - Гонок через 2 минуты. Трасса: Стадион Лос Сантос. Регистрация на месте.");
	EndingmotoRound = 0;
	SetTimer("MotoStartGonka1", 120000, 0);
	return true;
}
public MotoStartGonka1()
{
	EndingmotoRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Playermoto[i] != 0)
			{
                EndingmotoRound = 1;
                if(MotoPlayers < 2)
                {
			        OOCOff(0xc71585AA,"Мото - Гонка отменена из-за не достаточного колличества участников.");
				}
				else
				{
                    EndingmotoRound = 1;
                    new rands = random(sizeof(moto));
				    GameTextForPlayer(i,"1", 1000, 3);
				    new rand;
				    rand = random(sizeof(VeloSpawns));
				    new carid = CreateVehicle(moto[rands], VeloSpawns[rand][0],VeloSpawns[rand][1],VeloSpawns[rand][2],36.8526, -1, -1, 60000);
				    PutPlayerInVehicle(i, carid, 0);
				    CreatedCars[CreatedCar] = carid;
				    TogglePlayerControllable(i, 0);
				    SetPlayerInterior(i,4);
				    LinkVehicleToInterior(carid, 4);
				    SetVehicleVirtualWorld(carid, 1);
				    SetPlayerVirtualWorld(i, 1);
			    }
			}
		}
	}
	SetTimer("MotoStartGonka2", 1000, 0);
	return true;
}
public MotoStartGonka2()
{
	EndingmotoRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Playermoto[i] != 0)
			{
				GameTextForPlayer(i,"2", 1000, 3);
			}
		}
	}
	SetTimer("MotoStartGonka3", 1000, 0);
	return true;
}
public MotoStartGonka3()
{
	EndingmotoRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Playermoto[i] != 0)
			{
				GameTextForPlayer(i,"3", 1000, 3);
			}
		}
	}
	SetTimer("MotoStartGonka", 1000, 0);
	return true;
}
public MotoStartGonka()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(MotoPlayers < 2)
		{
			EndingmotoRound = 1;
			Playermoto[i] = 0;
			TogglePlayerControllable(i, 1);
			RaceCP[i] = 0;
			MotoPlayers = 0;
			DisablePlayerRaceCheckpoint(i);
			SetPlayerInterior(i, 0);
			SetPlayerPos(i,2690.2271,-1700.9700,10.4215);
			SetPlayerFacingAngle(i, 45.9013);
			DestroyVehicle(GetPlayerVehicleID(i));
			return true;
		}
		FirstmotoWinner = 999;
		SecondmotoWinner = 999;
		ThirdmotoWinner = 999;
		if(IsPlayerConnected(i))
		{
			if(Playermoto[i] != 0)
			{
				RaceCP[i] = 50;
				GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				motochet[i] +=1;
				SetPlayerRaceCheckpoint(i,0,velogonka[0][0],velogonka[0][1],velogonka[0][2], velogonka[1][0],velogonka[1][1],velogonka[1][2],8.0);
				TogglePlayerControllable(i, 1);
				Playermoto[i] = 1;
				SetVehicleParamsEx(GetPlayerVehicleID(i) ,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				Fuell[GetPlayerVehicleID(i)] = 100;
				Arrester[i] = false;
				EngineState[i] = true;
			}
		}
	}
	OOCOff(0xc71585AA,"Внимание! Мото - Гонка началась. Трасса: Стадион Лос Сантос");
	SetTimer("MotoGonkaEnded", 360000, 0);
	EndingmotoRound = 1;
	MotoPlayers = 0;
	return true;
}

public MotoGonkaEnded()
{
    OOCOff(0xc71585AA,"Мото - Гонка завершенa!");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Playermoto[i] != 0)
			{
				DestroyVehicle(GetPlayerVehicleID(i));
		        motochet[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerPos(i,2690.2271,-1700.9700,10.4215);
		        SetPlayerFacingAngle(i, 45.9013);
		        SetPlayerVirtualWorld(i, 0);
		        RaceCP[i] = 0;
				DisablePlayerCheckpoint(i);
			}
			Playermoto[i] = 0;
		}
	}
	EndingmotoRound = 1;
	MotoPlayers = 0;
	return true;
}
public SatietyCheck()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new Float:health;
		GetPlayerHealth(i,health);
	 	if(PlayerInfo[i][pTut] != 0)
	    {
			if(health <= 10.0) { SendClientMessage(i, COLOR_YELLOW, "У Вас сильно ухудшилось здоровье, вылечитесь у медика!"); }
	   	}
		if(PlayerInfo[i][pSatiety] > 0)
	    {
	        PlayerInfo[i][pSatiety] -= 1;
	        if(PlayerInfo[i][pSatiety] < 50)
	        {
				GetPlayerHealth(i, health);
				SetPlayerHealthAC(i, health - 1);
				PlayerInfo[i][pHP] -= 1;
				return true;
			}
			else if(PlayerInfo[i][pSatiety] < 25)
			{
	            GetPlayerHealth(i, health);
	            SetPlayerHealthAC(i, health - 2);
	            PlayerInfo[i][pHP] -= 2;
	            return true;
        	}
	        else if(PlayerInfo[i][pSatiety] < 1)
	        {
	            GetPlayerHealth(i, health);
	            SetPlayerHealthAC(i, health - 3);
	            PlayerInfo[i][pHP] -= 3;
	            return true;
        	}
    	}
    	else
    	{
        	GetPlayerHealth(i, health);
        	SetPlayerHealthAC(i, health - 3);
        	PlayerInfo[i][pHP] -= 3;
    	}
    }
	return true;
}
public DerbyTime()
{
	OOCOff(TEAM_GROVE_COLOR,"Внимание! Начало Demolition Derby через 3 минуты. Регистрация: Стадион San Fierro");
	SetTimer("Derby3", 180000, 0);
}
public Derby3()
{
    if(DerbyAttend <= 1)
    {
   		OOCOff(TEAM_GROVE_COLOR,"Внимание! Demolition Derby прерван из-за недостаточного количества участников!");
    	DerbyAttend = 0;
    	DerbyOpen = 0;
    	for(new i = 0; i < MAX_PLAYERS; i++)
    	{
    		PlayerOnDerby[i] = 0;
		}
     	return true;
	}
	else
	{
	    DerbyOpen = 2;
		OOCOff(TEAM_GROVE_COLOR,"Внимание! Demolition Derby начался!");
		new Player1 = 0;
		new carid;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
        	if(PlayerOnDerby[i] != 0)
			{
				GameTextForPlayer(i,"3", 1000, 3);
				if(Player1 == 19)
				{
					carid = CreateVehicle(504, -1506.7659,965.2000,1036.9224,293.0279, 20, 20, -1);
				}
				else if(Player1 == 18)
				{
					carid = CreateVehicle(504, -1516.5342,989.7833,1037.3513,270.3085, 19, 19, -1);
					Player1 = 19;
				}
				else if(Player1 == 17)
				{
					carid = CreateVehicle(504, -1508.5839,1020.3392,1037.8357,234.8889, 18, 18, -1);
					Player1 = 18;
				}
				else if(Player1 == 16)
				{
					carid = CreateVehicle(504, -1486.4302,1041.4038,1038.1542,208.0230, 17, 17, -1);
					Player1 = 17;
				}
				else if(Player1 == 15)
				{
					carid = CreateVehicle(504, -1457.7089,1053.6016,1038.3070,192.3742, 16, 16, -1);
					Player1 = 16;
				}
				else if(Player1 == 14)
				{
					carid = CreateVehicle(504, -1428.6929,1058.1292,1038.3252,178.7059, 15, 15, -1);
					Player1 = 15;
				}
				else if(Player1 == 13)
				{
					carid = CreateVehicle(504, -1398.3962,1057.6173,1038.2660,171.3333, 14, 14, -1);
					Player1 = 14;
				}
				else if(Player1 == 12)
				{
					carid = CreateVehicle(504, -1377.9399,1058.0959,1038.2426,172.7466, 13, 13, -1);
					Player1 = 13;
				}
				else if(Player1 == 11)
				{
					carid = CreateVehicle(504, -1357.8706,1057.1317,1038.1882,159.1849, 12, 12, -1);
					Player1 = 12;
				}
				else if(Player1 == 10)
				{
					carid = CreateVehicle(504, -1336.4865,1052.3142,1038.0741,148.9551, 11, 11, -1);
					Player1 = 11;
				}
				else if(Player1 == 9)
				{
					carid = CreateVehicle(504, -1307.4032,1039.3407,1037.8066,127.2879, 10, 10, -1);
					Player1 = 10;
				}
				else if(Player1 == 8)
				{
				    carid = CreateVehicle(504, -1289.2437,1024.4241,1037.5256,101.2547, 9, 9, -1);
            	    Player1 = 9;
				}
				else if(Player1 == 7)
				{
				    carid = CreateVehicle(504, -1281.2871,1008.8069,1037.2496,91.4685, 8, 8, -1);
            	    Player1 = 8;
				}
				else if(Player1 == 6)
				{
				    carid = CreateVehicle(504, -1278.4069,991.7879,1036.9587,86.2603, 7, 7, -1);
            	    Player1 = 7;
				}
				else if(Player1 == 5)
				{
				    carid = CreateVehicle(504, -1283.1465,976.3253,1036.7102,58.6772, 6, 6, -1);
            	    Player1 = 6;
				}
				else if(Player1 == 4)
				{
				    carid = CreateVehicle(504, -1293.2971,964.3026,1036.5234,48.0448, 5, 5, -1);
            	    Player1 = 5;
				}
				else if(Player1 == 3)
				{
				    carid = CreateVehicle(504, -1302.5338,955.1391,1036.3922,41.4171, 4, 4, -1);
            	    Player1 = 4;
				}
				else if(Player1 == 2)
				{
				    carid = CreateVehicle(504, -1317.5848,946.4304,1036.2747,31.0840, 3, 3, -1);
            	    Player1 = 3;
				}
				else if(Player1 == 1)
				{
				    carid = CreateVehicle(504, -1337.1343,938.5261,1036.1738,20.2087, 2, 2, -1);
            	    Player1 = 2;
				}
				else if(Player1 == 0)
            	{
            	    carid = CreateVehicle(504, -1355.2977,934.0847,1036.1278,7.2270, 1, 1, -1);
            	    Player1 = 1;
				}
				IsLocked[GetPlayerVehicleID(i)] = 0;
      			Fuell[GetPlayerVehicleID(i)] = 100;
        		PutPlayerInVeh(i, carid, 0);
         		CreatedCars[CreatedCar] = carid;
          		TogglePlayerControllable(i, 0);
           		SetPlayerInterior(i,15);
            	LinkVehicleToInterior(carid, 15);
            	SetVehicleVirtualWorld(carid, 1);
            	SetPlayerVirtualWorld(i, 1);
			}
		}
	}
	SetTimer("Derby2", 1000, 0);
	return true;
}
public Derby2()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerOnDerby[i] != 0)
		{
		    GameTextForPlayer(i,"2", 1000, 3);
		}
	}
	SetTimer("Derby1", 1000, 0);
	return true;
}
public Derby1()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerOnDerby[i] != 0)
		{
		    GameTextForPlayer(i,"1", 1000, 3);
		}
	}
	SetTimer("DerbyStart", 1000, 0);
	return true;
}
public DerbyStart()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerOnDerby[i] != 0)
        {
            SetVehicleParamsEx(GetPlayerVehicleID(i) ,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
            Lightsp[i] = 1;
			EngineState[i] = true;
            GameTextForPlayer(i,"GO GO GO", 1000, 3);
            TogglePlayerControllable(i, 1);
		}
    }
    SetTimer("DerbyEnd", 300000, 0);
    if(DerbyAttend >=4)SetTimer("DerbyTimeToDie", 250000, 0);
	return true;
}
public DerbyTimeToDie()
{
	if(DerbyAttend >= 4)
	{
 		for(new i = 0; i < MaxPlayers; i++)
   		{
   			if(PlayerOnDerby[PlayerIDs[i]] != 0)
    		{
		    	switch(random(2))
       			{
         			case 0:
			 		{
   						DestroyVehicle(GetPlayerVehicleID(PlayerIDs[i]));
    					SetPlayerPos(PlayerIDs[i],-2115.8662,-443.6145,37.1052);
    					SetPlayerFacingAngle(PlayerIDs[i], 76.4112);
    					SetPlayerInterior(PlayerIDs[i], 0);
    					SetPlayerVirtualWorld(PlayerIDs[i], 0);
   						PlayerOnDerby[PlayerIDs[i]] = 0;
         				new string[30];
         				format(string, sizeof(string), "%d.",DerbyAttend);
         				new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    			ini_removeKey(iniFile, string);
						ini_setString(iniFile, string, PlayerInfo[PlayerIDs[i]][pName]);
						ini_closeFile(iniFile);
						format(string, sizeof(string), "Вы заняли %d-е место",DerbyAttend);
						SendClientMessage(PlayerIDs[i],TEAM_AZTECAS_COLOR,string);
						SendClientMessage(PlayerIDs[i],TEAM_AZTECAS_COLOR,"Спасибо за участие!");
						DerbyAttend -= 1;
						if(DerbyAttend <= 3)return true;
					}
					case 1: {}
      			}
      		}
        }
	}
	return true;
}
public DerbyEnd()
{
    DerbyOpen = 0;
    OOCOff(TEAM_GROVE_COLOR,"Внимание! Demolition Derby окончен! Список победителей: /derbylist");
    if(DerbyAttend <= 2 && DerbyAttend != 0)
    {
        new derbywinner1[MAX_PLAYER_NAME];
		new derbywinner2[MAX_PLAYER_NAME];
		new derbywin1 = 0;
		new Float:derbyhp1;
		new Float:derbyhp2;
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if(PlayerOnDerby[i] != 0)
			{
			    new vehid = GetPlayerVehicleID(i);
			    if(derbywin1 != 0)
				{
				    GetVehicleHealth(vehid, derbyhp2);
					GetPlayerName(i, derbywinner2, sizeof(derbywinner2));
				}
				else
				{
				    GetVehicleHealth(vehid, derbyhp1);
					GetPlayerName(i, derbywinner1, sizeof(derbywinner1));
					derbywin1 = 1;
				}
   			}
		}
		if(derbyhp1 >= derbyhp2)
		{
		    new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    ini_removeKey(iniFile, "1.");
			ini_setString(iniFile, "1.", derbywinner1);
			ini_removeKey(iniFile, "2.");
			ini_setString(iniFile, "2.", derbywinner2);
			ini_closeFile(iniFile);
			SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
			SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
			PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 15000;
			SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
			SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
			PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 10000;
		}
		else
		{
		    new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    ini_removeKey(iniFile, "1.");
			ini_setString(iniFile, "1.", derbywinner2);
			ini_removeKey(iniFile, "2.");
			ini_setString(iniFile, "2.", derbywinner1);
			ini_closeFile(iniFile);
			SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
			SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
			PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 15000;
			SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
			SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
			PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 10000;
		}
	}
	else if(DerbyAttend <= 3 && DerbyAttend != 0)
    {
        new derbywinner1[MAX_PLAYER_NAME];
		new derbywinner2[MAX_PLAYER_NAME];
		new derbywinner3[MAX_PLAYER_NAME];
		new derbywin1 = 0;
		new derbywin2 = 0;
		new Float:derbyhp1;
		new Float:derbyhp2;
		new Float:derbyhp3;
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if(PlayerOnDerby[i] != 0)
			{
			    new vehid = GetPlayerVehicleID(i);
			    if(derbywin1 != 0 && derbywin2 == 0)
				{
				    GetVehicleHealth(vehid, derbyhp2);
					GetPlayerName(i, derbywinner2, sizeof(derbywinner2));
					derbywin2 = 1;
				}
				if(derbywin2 != 0)
				{
				    GetVehicleHealth(vehid, derbyhp3);
					GetPlayerName(i, derbywinner3, sizeof(derbywinner3));
				}
				else
				{
				    GetVehicleHealth(vehid, derbyhp1);
					GetPlayerName(i, derbywinner1, sizeof(derbywinner1));
					derbywin1 = 1;
				}
   			}
		}
		if(derbyhp1 >= derbyhp2)
		{
            if(derbyhp1 >= derbyhp3)
            {
                if(derbyhp3 >= derbyhp2)
                {
                    new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    		ini_removeKey(iniFile, "1.");
					ini_setString(iniFile, "1.", derbywinner1);
					ini_removeKey(iniFile, "2.");
					ini_setString(iniFile, "2.", derbywinner3);
					ini_removeKey(iniFile, "3.");
					ini_setString(iniFile, "3.", derbywinner2);
					ini_closeFile(iniFile);
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 15000;
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 10000;
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 5000;
                }
                else
				{
				    new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    		ini_removeKey(iniFile, "1.");
					ini_setString(iniFile, "1.", derbywinner1);
					ini_removeKey(iniFile, "2.");
					ini_setString(iniFile, "2.", derbywinner2);
					ini_removeKey(iniFile, "3.");
					ini_setString(iniFile, "3.", derbywinner3);
					ini_closeFile(iniFile);
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 15000;
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 10000;
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 5000;
				}
			}
			else
			{
			    new iniFile = ini_openFile("gamefiles/derbylist.ini");
	    		ini_removeKey(iniFile, "1.");
				ini_setString(iniFile, "1.", derbywinner3);
				ini_removeKey(iniFile, "2.");
				ini_setString(iniFile, "2.", derbywinner1);
				ini_removeKey(iniFile, "3.");
				ini_setString(iniFile, "3.", derbywinner2);
				ini_closeFile(iniFile);
				SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
				SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 15000;
				SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
				SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 10000;
				SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
				SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 5000;
			}
		}
		else
		{
		    if(derbyhp2 >= derbyhp3)
		    {
		        if(derbyhp3 >= derbyhp1)
		        {
		            new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    		ini_removeKey(iniFile, "1.");
					ini_setString(iniFile, "1.", derbywinner2);
					ini_removeKey(iniFile, "2.");
					ini_setString(iniFile, "2.", derbywinner3);
					ini_removeKey(iniFile, "3.");
					ini_setString(iniFile, "3.", derbywinner1);
					ini_closeFile(iniFile);
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 15000;
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 10000;
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 5000;
		        }
		        else
		        {
		            new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    		ini_removeKey(iniFile, "1.");
					ini_setString(iniFile, "1.", derbywinner2);
					ini_removeKey(iniFile, "2.");
					ini_setString(iniFile, "2.", derbywinner1);
					ini_removeKey(iniFile, "3.");
					ini_setString(iniFile, "3.", derbywinner3);
					ini_closeFile(iniFile);
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
					SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 15000;
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
					SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 10000;
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
					SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
					PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 5000;
		        }
			}
			else
			{
			    new iniFile = ini_openFile("gamefiles/derbylist.ini");
	    		ini_removeKey(iniFile, "1.");
				ini_setString(iniFile, "1.", derbywinner3);
				ini_removeKey(iniFile, "2.");
				ini_setString(iniFile, "2.", derbywinner2);
				ini_removeKey(iniFile, "3.");
				ini_setString(iniFile, "3.", derbywinner1);
				ini_closeFile(iniFile);
				SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
				SendClientMessage(GetPlayerID(derbywinner3), TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner3)][pCash] += 15000;
				SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
				SendClientMessage(GetPlayerID(derbywinner2), TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner2)][pCash] += 10000;
				SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
				SendClientMessage(GetPlayerID(derbywinner1), TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
				PlayerInfo[GetPlayerID(derbywinner1)][pCash] += 5000;
			}
		}
	}
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
     	if(PlayerOnDerby[i] != 0)
		{
  			DestroyVehicle(GetPlayerVehicleID(i));
         	SetPlayerPos(i,-2115.8662,-443.6145,37.1052);
          	SetPlayerFacingAngle(i, 76.4112);
          	SetPlayerVirtualWorld(i, 0);
          	SetPlayerInterior(i, 0);
          	PlayerOnDerby[i] = 0;
		}
    }
    DerbyAttend = 0;
    return true;
}
public AntiCheatTimer()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
	    AntiCheatGun[i] = 0;
	}
	return true;
}
public StartRacetwo()
{
	OOCOff(0xB9B900AA,"Внимание! Начало гонок через 2 минуты. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
	EndingRaceRound = 0;
	SetTimer("StartRace1", 120000, 0);
	return true;
}
public StartRace1()
{
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
                if(RacingPlayers < 2)
		        {
					OOCOff(0xB9B900AA,"Гонка отменена из-за не достаточного количества участников!");
				}
				else
				{
	        		new rands = random(sizeof(tachki));
					GameTextForPlayer(i,"1", 1000, 3);
					new rand;
					rand = random(sizeof(RaceSpawns));
					new carid = CreateVehicle(tachki[rands], RaceSpawns[rand][0],RaceSpawns[rand][1],RaceSpawns[rand][2],270.0000, -1, -1, 60000);
					SendClientMessage(i, 0x2EA07BAA, "Приготовтесь! Не покидайте машину");
					Fuell[GetPlayerVehicleID(i)] = 100;
					PutPlayerInVeh(i, carid, 0);
					CreatedCars[CreatedCar] = carid;
	            	rand = random(sizeof(RaceSpawns));
             		TogglePlayerControllable(i, 0);
             		AddVehicleComponent(GetPlayerVehicleID(i), 1010);
	            	SetPlayerInterior(i,0);
	            	SetVehicleVirtualWorld(GetPlayerVehicleID(i), 1);
					SetPlayerVirtualWorld(i, 1);
	            	PlayerRacing[i] = 1;
				}
	        }
	    }
	}
	SetTimer("StartRace2", 1000, 0);
	return true;
}
public StartRace2()
{
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
 				GameTextForPlayer(i,"2", 1000, 3);
	        }
	    }
	}
	SetTimer("StartRace3", 1000, 0);
	return true;
}
public StartRace3()
{
	EndingRaceRound = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerRacing[i] != 0)
	        {
    			GameTextForPlayer(i, "3", 1000, 3);
	        }
	    }
	}
	SetTimer("StartRace", 1000, 0);
	return true;
}
public StartRace()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RacingPlayers < 2)
		{
			EndingRaceRound = 1;
			PlayerRacing[i] = 0;
			RacingPlayers = 0;
			return true;
		}
		FirstRaceWinner = 999;
		SecondRaceWinner = 999;
		ThirdRaceWinner = 999;
		if(IsPlayerConnected(i))
		{
			if(PlayerRacing[i] != 0)
			{
				RaceCP[i] = 10;
				GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				chet[i] += 1;
				SetPlayerRaceCheckpoint(i,0,race[0][0],race[0][1],race[0][2], race[1][0],race[1][1],race[1][2],8.0);
				TogglePlayerControllable(i, 1);
				PlayerRacing[i] = 1;
				GetVehicleParamsEx(GetPlayerVehicleID(i), engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(i), VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
				EngineState[i] = true;
			}
		}
	}
	OOCOff(0xB9B900AA,"Внимание! Гонки начались. Трасса: Аэропорт Лос Сантос");
	SetTimer("RaceEnded", 360000, 0);
	EndingRaceRound = 1;
	RacingPlayers = 0;
	return true;
}
public RaceEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	     	RaceCP[i] = 0;
		    DisablePlayerRaceCheckpoint(i);
			OOCOff(0xB9B900AA,"Внимание! Гонки окончены. (( Список победителей: /racelist ))");
			if(PlayerRacing[i] != 0)
			{
				DestroyVehicle(GetPlayerVehicleID(i));
				SetPlayerVirtualWorld(i, 0);
			}
			PlayerRacing[i] = 0;
  			EndingRaceRound = 1;
  			RacingPlayers = 0;
  			return true;
		}
	}
	return true;
}
stock Pay(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("gamefiles/log/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock AdmLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("gamefiles/log/admin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DollahScoreUpdate()
{
	new LevScore;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return true;
}
stock bigstr(const string[], &idx)
{
	new length = strlen(string);
	while ((idx < length) && (string[idx] <= ' '))
 	{
		idx++;
	}
	new offset = idx;
	new result[128];
	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	{
		result[idx - offset] = string[idx];
		idx++;
	}
	result[idx - offset] = EOS;
	return result;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    UseEnter[playerid] = true;
    IDVEH[playerid]=vehicleid;
	SetPVarInt(playerid, "NoAB", 1);
    SetVehicleParamsForPlayer(vehicleid, playerid, 0, gCarLock[vehicleid]);
}
stock IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    switch(PlayerInfo[playerid][pMember])
	    {
	        case 4,22,33: return true;
		}
	}
	return false;
}
stock PlaySoundForPlayers(soundid,Float:x,Float:y,Float:z)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i,soundid,x,y,z);
		}
    }
    return true;
}
stock PlaySoundNearPlayer(playerid, soundid)
{
	new Float:plx,Float:ply,Float:plz;
	GetPlayerPos(playerid,plx,ply,plz);
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i,soundid,plx,ply,plz);
		}
    }
    return true;
}
stock IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    switch(PlayerInfo[playerid][pMember])
	    {
		 	case 1,2,10,21: return true;
		}
	}
	return false;
}
stock IsACopCar(carid){switch(GetVehicleModel(carid)){case 427,497,490,487,528,523,596,597,598,599,601,483,567:return true;}return false;}
stock IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    switch(PlayerInfo[playerid][pMember])
		{
		    case 3,19: return true;
		}
	}
	return false;
}
stock IsAAntidm(playerid)
{
	if(PlayerToPoint(50.0,playerid,1154.7134,-1767.9990,16.5938)
	||PlayerToPoint(40.0,playerid,829.0444,5.0235,1004.1870)
	||PlayerToPoint(40.0,playerid,1480.9207,-1747.6909,15.3086)
	||PlayerToPoint(10.0,playerid,263.6395,78.5962,1001.0391)
	||PlayerToPoint(30.0,playerid,366.9007,-60.0603,1076.4773)
	||PlayerToPoint(40.0,playerid,2235.4080,1604.0082,1006.1797)
	||PlayerToPoint(10.0,playerid,-2031.7778,-117.3789,1035.1719))
	{
		return true;
	}
	return false;
}
stock IsATerra(playerid)
{
	if(PlayerToPoint(50.0,playerid,2651.4746,-2004.3387,13.3828) // Ballas
	||PlayerToPoint(50.0,playerid,2774.2703,-1622.6263,10.9219) // Vagos
	||PlayerToPoint(50.0,playerid,2492.7532,-1676.3687,13.3380) // Grove
	||PlayerToPoint(50.0,playerid,1713.9735,-2114.5122,13.3828) // Aztecas
	||PlayerToPoint(50.0,playerid,2184.1218,-1803.6334,13.3693) // Rifa
	||PlayerToPoint(50.0,playerid,1238.4369,212.6947,19.5547)//SOSoueaMC
	||PlayerToPoint(50.0,playerid,699.7421,-464.0981,16.3359)// HAMC
	||PlayerToPoint(50.0,playerid,-301.1406,1311.9545,53.9827)// OMC
	||PlayerToPoint(50.0,playerid,633.4462,1707.7124,6.9922) // WMC
	||PlayerToPoint(50.0,playerid,30.1052,-2643.1443,40.4481) // HiMC
	||PlayerToPoint(50.0,playerid,-236.2768,2604.8569,62.7031) // FSMC
	||PlayerToPoint(50.0,playerid,-2115.3809,-2482.4385,30.6250) // PaMC
	||PlayerToPoint(50.0,playerid,-1271.6769,2711.3853,50.0703)// MongolsMC
	||PlayerToPoint(50.0,playerid,-303.8464,1764.9316,42.6875) // VagosMC
	||PlayerToPoint(50.0,playerid,-1932.7993,2382.7756,49.5000) // BandidosMC
	||PlayerToPoint(50.0,playerid,633.4462,1707.7124,6.9922) // Ballas Base
	||PlayerToPoint(50.0,playerid,303.6300,309.2500,999.1484) // Vagos Base
	||PlayerToPoint(50.0,playerid,2496.0129,-1708.9232,1014.7422) // Grove Base
	||PlayerToPoint(50.0,playerid,-49.7558,1400.3553,1084.4297) // Aztecas Base
	||PlayerToPoint(50.0,playerid,-223.8400,1410.5100,27.7734) // Rifa Base
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//SOSoueaIneAaca
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//24BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//25BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//26BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//27BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//28BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//29BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//30BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578)//31BASE
	||PlayerToPoint(50.0,playerid,498.2117,-76.0401,998.7578))//32BASE
	{
		return true;
	}
	return false;
}
stock IsABankomat(playerid)
{
	if(PlayerToPoint(2.0,playerid,-1676.34570312,434.01806641,7.08183193) ||
	PlayerToPoint(2.0,playerid,-818.55200195,1567.63708496,27.01933098) ||
	PlayerToPoint(2.0,playerid,-2421.45410156,958.35540771,45.18632126) ||
	PlayerToPoint(2.0,playerid,2174.20336914,1402.93469238,10.96464443) ||
	PlayerToPoint(2.0,playerid,-2621.31445312,1415.23510742,6.88521862) ||
	PlayerToPoint(2.0,playerid,1587.30920410,2218.34838867,10.96464443) ||
	PlayerToPoint(2.0,playerid,-2452.32275391,2252.62988281,4.87058449) ||
	PlayerToPoint(2.0,playerid,2187.36035156,2478.89160156,11.14433193) ||
	PlayerToPoint(2.0,playerid,-1282.38098145,2715.18652344,50.16842651) ||
	PlayerToPoint(2.0,playerid,-2033.32604980,159.50723267,28.94120598) ||
	PlayerToPoint(2.0,playerid,91.92106628,1180.56555176,18.56620598) ||
	PlayerToPoint(2.0,playerid,2236.16186523,-1665.79772949,15.27980804) ||
	PlayerToPoint(2.0,playerid,847.58093262,-1799.19348145,13.71945286) ||
	PlayerToPoint(2.0,playerid,1367.56359863,-1290.13696289,13.44901943) ||
	PlayerToPoint(2.0,playerid,-78.74282837,-1171.64892578,1.95329499) ||
	PlayerToPoint(2.0,playerid,1142.44287109,-1763.92932129,13.59816360) ||
	PlayerToPoint(2.0,playerid,-1551.53637695,-2737.33691406,48.64560318) ||
 	PlayerToPoint(2.0,playerid,661.71307373,-576.21777344,16.25428581) ||
	PlayerToPoint(2.0,playerid,557.32824707,-1294.28137207,17.24994087) ||
	PlayerToPoint(2.0,playerid,-2035.70605469,-102.35491180,35.07402039) ||
	PlayerToPoint(2.0,playerid,1919.78381348,-1766.21813965,13.44901943) ||
	PlayerToPoint(2.0,playerid,1496.03780000,-1750.28000000,15.27560000) ||
	PlayerToPoint(2.0,playerid,2843.2822,1286.9712,11.3906))
	{
		return true;
	}
	return false;
}
stock IsAHotDog(playerid)
{
	if(PlayerToPoint(2.0,playerid,1144.0961,-1756.7357,13.6432)
	||PlayerToPoint(2.0,playerid,1413.1958,-1718.1736,13.5469)
	||PlayerToPoint(2.0,playerid,1143.9006,-1754.3907,13.6145)
	||PlayerToPoint(2.0,playerid,1477.0962,-1674.0988,14.0469)
	||PlayerToPoint(2.0,playerid,1471.0443,-1674.0376,14.0469)
	||PlayerToPoint(2.0,playerid,2181.1267,-2268.9629,13.4554))
	{
		return true;
	}
    return false;
}
stock IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}
stock PJ(carid){switch(GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,575,576,483,567:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359)) return true;
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359)) return true;
	}
	return false;
}
new Float:STANDARTGangZone[131][4] = {
	{1642.710571,-2174.567871,1770.710571,-2073.567871},
	{1770.710571,-2174.567871,1898.710571,-2073.567871},
	{1898.710571,-2174.567871,2026.710571,-2073.567871},
	{2026.710571,-2174.567871,2154.710449,-2073.567871},
	{2154.710449,-2174.567871,2282.710449,-2073.567871},
	{2282.710449,-2174.567871,2410.710449,-2073.567871},
	{2410.710449,-2174.567871,2538.710449,-2073.567871},
	{2538.710449,-2174.567871,2666.710449,-2073.567871},
	{2666.710449,-2174.567871,2794.710449,-2073.567871},
	{2794.710449,-2174.567871,2922.710449,-2073.567871},
	{1642.710571,-2073.567871,1770.710571,-1972.567871},
	{1770.710571,-2073.567871,1898.710571,-1972.567871},
	{1898.710571,-2073.567871,2026.710571,-1972.567871},
	{2026.710571,-2073.567871,2154.710449,-1972.567871},
	{2154.710449,-2073.567871,2282.710449,-1972.567871},
	{2282.710449,-2073.567871,2410.710449,-1972.567871},
	{2410.710449,-2073.567871,2538.710449,-1972.567871},
	{2538.710449,-2073.567871,2666.710449,-1972.567871},
	{2666.710449,-2073.567871,2794.710449,-1972.567871},
	{2794.710449,-2073.567871,2922.710449,-1972.567871},
	{1642.710571,-1972.567871,1770.710571,-1871.567871},
	{1770.710571,-1972.567871,1898.710571,-1871.567871},
	{1898.710571,-1972.567871,2026.710571,-1871.567871},
	{2026.710571,-1972.567871,2154.710449,-1871.567871},
	{2154.710449,-1972.567871,2282.710449,-1871.567871},
	{2282.710449,-1972.567871,2410.710449,-1871.567871},
	{2410.710449,-1972.567871,2538.710449,-1871.567871},
	{2538.710449,-1972.567871,2666.710449,-1871.567871},
	{2666.710449,-1972.567871,2794.710449,-1871.567871},
	{2794.710449,-1972.567871,2922.710449,-1871.567871},
	{1642.710571,-1871.567871,1770.710571,-1770.567871},
	{1770.710571,-1871.567871,1898.710571,-1770.567871},
	{1898.710571,-1871.567871,2026.710571,-1770.567871},
	{2026.710571,-1871.567871,2154.710449,-1770.567871},
	{2154.710449,-1871.567871,2282.710449,-1770.567871},
	{2282.710449,-1871.567871,2410.710449,-1770.567871},
	{2410.710449,-1871.567871,2538.710449,-1770.567871},
	{2538.710449,-1871.567871,2666.710449,-1770.567871},
	{2666.710449,-1871.567871,2794.710449,-1770.567871},
	{2794.710449,-1871.567871,2922.710449,-1770.567871},
	{1642.710571,-1770.567871,1770.710571,-1669.567871},
	{1770.710571,-1770.567871,1898.710571,-1669.567871},
	{1898.710571,-1770.567871,2026.710571,-1669.567871},
	{2026.710571,-1770.567871,2154.710449,-1669.567871},
	{2154.710449,-1770.567871,2282.710449,-1669.567871},
	{2282.710449,-1770.567871,2410.710449,-1669.567871},
	{2410.710449,-1770.567871,2538.710449,-1669.567871},
	{2538.710449,-1770.567871,2666.710449,-1669.567871},
	{2666.710449,-1770.567871,2794.710449,-1669.567871},
	{2794.710449,-1770.567871,2922.710449,-1669.567871},
	{1642.710571,-1669.567871,1770.710571,-1568.567871},
	{1770.710571,-1669.567871,1898.710571,-1568.567871},
	{1898.710571,-1669.567871,2026.710571,-1568.567871},
	{2026.710571,-1669.567871,2154.710449,-1568.567871},
	{2154.710449,-1669.567871,2282.710449,-1568.567871},
	{2282.710449,-1669.567871,2410.710449,-1568.567871},
	{2410.710449,-1669.567871,2538.710449,-1568.567871},
	{2538.710449,-1669.567871,2666.710449,-1568.567871},
	{2666.710449,-1669.567871,2794.710449,-1568.567871},
	{2794.710449,-1669.567871,2922.710449,-1568.567871},
	{1642.710571,-1568.567871,1770.710571,-1467.567871},
	{1770.710571,-1568.567871,1898.710571,-1467.567871},
	{1898.710571,-1568.567871,2026.710571,-1467.567871},
	{2026.710571,-1568.567871,2154.710449,-1467.567871},
	{2154.710449,-1568.567871,2282.710449,-1467.567871},
	{2282.710449,-1568.567871,2410.710449,-1467.567871},
	{2410.710449,-1568.567871,2538.710449,-1467.567871},
	{2538.710449,-1568.567871,2666.710449,-1467.567871},
	{2666.710449,-1568.567871,2794.710449,-1467.567871},
	{2794.710449,-1568.567871,2922.710449,-1467.567871},
	{1642.710571,-1467.567871,1770.710571,-1366.567871},
	{1770.710571,-1467.567871,1898.710571,-1366.567871},
	{1898.710571,-1467.567871,2026.710571,-1366.567871},
	{2026.710571,-1467.567871,2154.710449,-1366.567871},
	{2154.710449,-1467.567871,2282.710449,-1366.567871},
	{2282.710449,-1467.567871,2410.710449,-1366.567871},
	{2410.710449,-1467.567871,2538.710449,-1366.567871},
	{2538.710449,-1467.567871,2666.710449,-1366.567871},
	{2666.710449,-1467.567871,2794.710449,-1366.567871},
	{2794.710449,-1467.567871,2922.710449,-1366.567871},
	{1642.710571,-1366.567871,1770.710571,-1265.567871},
	{1770.710571,-1366.567871,1898.710571,-1265.567871},
	{1898.710571,-1366.567871,2026.710571,-1265.567871},
	{2026.710571,-1366.567871,2154.710449,-1265.567871},
	{2154.710449,-1366.567871,2282.710449,-1265.567871},
	{2282.710449,-1366.567871,2410.710449,-1265.567871},
	{2410.710449,-1366.567871,2538.710449,-1265.567871},
	{2538.710449,-1366.567871,2666.710449,-1265.567871},
	{2666.710449,-1366.567871,2794.710449,-1265.567871},
	{2794.710449,-1366.567871,2922.710449,-1265.567871},
	{1642.710571,-1265.567871,1770.710571,-1164.567871},
	{1770.710571,-1265.567871,1898.710571,-1164.567871},
	{1898.710571,-1265.567871,2026.710571,-1164.567871},
	{2026.710571,-1265.567871,2154.710449,-1164.567871},
	{2154.710449,-1265.567871,2282.710449,-1164.567871},
	{2282.710449,-1265.567871,2410.710449,-1164.567871},
	{2410.710449,-1265.567871,2538.710449,-1164.567871},
	{2538.710449,-1265.567871,2666.710449,-1164.567871},
	{2666.710449,-1265.567871,2794.710449,-1164.567871},
	{2794.710449,-1265.567871,2922.710449,-1164.567871},
	{1642.710571,-1164.567871,1770.710571,-1063.567871},
	{1770.710571,-1164.567871,1898.710571,-1063.567871},
	{1898.710571,-1164.567871,2026.710571,-1063.567871},
	{2026.710571,-1164.567871,2154.710449,-1063.567871},
	{2154.710449,-1164.567871,2282.710449,-1063.567871},
	{2282.710449,-1164.567871,2410.710449,-1063.567871},
	{2410.710449,-1164.567871,2538.710449,-1063.567871},
	{2538.710449,-1164.567871,2666.710449,-1063.567871},
	{2666.710449,-1164.567871,2794.710449,-1063.567871},
	{2794.710449,-1164.567871,2922.710449,-1063.567871},
	{1642.710571,-1063.567871,1770.710571,-962.567871},
	{1770.710571,-1063.567871,1898.710571,-962.567871},
	{1898.710571,-1063.567871,2026.710571,-962.567871},
	{2026.710571,-1063.567871,2154.710449,-962.567871},
	{2154.710449,-1063.567871,2282.710449,-962.567871},
	{2282.710449,-1063.567871,2410.710449,-962.567871},
	{2410.710449,-1063.567871,2538.710449,-962.567871},
	{2538.710449,-1063.567871,2666.710449,-962.567871},
	{2666.710449,-1063.567871,2794.710449,-962.567871},
	{2794.710449,-1063.567871,2922.710449,-962.567871},
	{1642.710571,-962.567871,1770.710571,-861.567871},
	{1770.710571,-962.567871,1898.710571,-861.567871},
	{1898.710571,-962.567871,2026.710571,-861.567871},
	{2026.710571,-962.567871,2154.710449,-861.567871},
	{2154.710449,-962.567871,2282.710449,-861.567871},
	{2282.710449,-962.567871,2410.710449,-861.567871},
	{2410.710449,-962.567871,2538.710449,-861.567871},
	{2538.710449,-962.567871,2666.710449,-861.567871},
	{2666.710449,-962.567871,2794.710449,-861.567871},
	{2794.710449,-962.567871,2922.710449,-861.567871},
	{2794.710449,-2073.567871,2922.710449,-2174.567871}
	
};
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float: a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if(vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
new OnmZONE[1][20];
new ZoneOnBattlem[1];
new ZoneTimerm[600];
new allowedmfactions[] = {5,6,14};
new MZSafeTime[1200];
new FrakCDm[20];
enum MzoneInfo
{
	mFrakVlad,
	mNapad
}
new MZInfo[1][MzoneInfo];
new TotalGz[5];
new OnZONE[130][20];
new ZoneOnBattle[130];
new ZoneTimer[130];
new allowedfactions[] = {12,13,15,17,18};
new GZSafeTime[130];
enum GzoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad
}
new GZInfo[130][GzoneInfo];
new FrakCD[20];
stock LoadGZ()
{
	new time = GetTickCount();
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[256];
	new asd[5][10];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		new string[128];
		format(string,sizeof(string), "Zone%d",i);
		new x = ini_getString(File,string,l);
		if(x < 0)
		{
			GZInfo[i][gCoords][0] = STANDARTGangZone[i][0];
			GZInfo[i][gCoords][1] = STANDARTGangZone[i][1];
			GZInfo[i][gCoords][2] = STANDARTGangZone[i][2];
			GZInfo[i][gCoords][3] = STANDARTGangZone[i][3];
		}
		else
		{
			split(l,asd,'|');
			GZInfo[i][gCoords][0] = floatstr(asd[0]);
			GZInfo[i][gCoords][1] = floatstr(asd[1]);
			GZInfo[i][gCoords][2] = floatstr(asd[2]);
			GZInfo[i][gCoords][3] = floatstr(asd[3]);
		}
		GZInfo[i][gFrakVlad] = strval(asd[4]);
		if(GZInfo[i][gFrakVlad] == 0) GZInfo[i][gFrakVlad] = allowedfactions[random(sizeof(allowedfactions))];
		GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
		ZoneOnBattle[i] = 0;
		GZSafeTime[i] = 0;
	}
	ini_closeFile(File);
	printf("[Загрузка ганг зон]: Было загружено - %d потрачено %d (ms)", sizeof(GZInfo),GetTickCount() - time);
}
stock SaveGZ()
{
	new string[1000];
	new File = ini_openFile("gamefiles/gangzone.ini");
	new l[10];
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		format(l,sizeof(l), "Zone%d",i);
		format(string,sizeof(string), "%f|%f|%f|%f|%d",GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3],GZInfo[i][gFrakVlad]);
		ini_setString(File,l,string);
	}
	ini_closeFile(File);
}
stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
        if(PlayerInfo[playerid][pMember] == allowedfactions[i] && PlayerInfo[playerid][pRank] >= 7) return true;
    }
    return false;
}
stock IsInAllowedM(mnumbers)
{
	for(new i = 0; i < sizeof(allowedmfactions); i++)
	{
		if(mnumbers == allowedmfactions[i]) return true;
	}
	return false;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
stock IsANoBroke(carid){switch(GetVehicleModel(carid)){case 449,481,509,510,537,538,594,606,607:return true;}return false;}
stock IsANoSpeed(carid){switch(GetVehicleModel(carid)){case 441,449,450,464,465,481,501,509,510,537,538,564,569,570,590,591,594,606,607,608,610,611:return true;}return false;}
stock IsAGunsCar(carid)
{
 	if(carid == gunscar[0] || carid == gunscar[1] || carid == gunscar[2])
	{
		return true;
	}
	return false;
}
public OnPlayerConnect(playerid)
{
	// оптима, не трогать
    PlayerIDs[MaxPlayers] = playerid;
	MaxPlayers++;
	GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);
	//+++++++
 	new string[128];
	new count;
	//==========================================================================
	for(new i; i < strlen(PlayerInfo[playerid][pName]); i++)
	{
	    new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
	    if(playername[i] >= '0' && playername[i] <= '9')
	    {
	        count++;
	        if(count == 4) NotLogin[playerid] = 1;
	        else NotLogin[playerid] = 0;
	        return true;
	    }
	}
	//==========================================================================KICKDDOS
	//==========================================================================
    if(!IsRpName(PlayerInfo[playerid][pName]))
	{
	    SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты за нон-рп ник.Пожалуйста смените ник по формату Имя_Фамилия.");
        GKick(playerid);
	}
	ResetCarInfo(playerid);
	format(string, sizeof(string), "%s.ini", PlayerInfo[playerid][pName]);
    if(fexist(string)) gPlayerAccount[playerid] = true;
	else gPlayerAccount[playerid] = false;
	//==========================================================================
	CountVezit ++;
	//==========================================================================
    TextDrawHideForPlayer(playerid, Box);
    TextDrawHideForPlayer(playerid, Fuel);
    TextDrawHideForPlayer(playerid, Status);
    TextDrawShowForPlayer(playerid,Clock);
    TextDrawShowForPlayer(playerid,Date);
    //==========================================================================
	ClearConnectAccount(playerid);
	ClearConnectAccountParams(playerid);
	SetPVarInt(playerid, "laser", 0);
    SetPVarInt(playerid, "color", 18643);
	DelGun(playerid);
    DeleteObjects(playerid);
	//==========================================================================
    SpeedShow[playerid] = TextDrawCreate(370.000000, 396.000000, "_");
    TextDrawBackgroundColor(SpeedShow[playerid], 255);
    TextDrawAlignment(SpeedShow[playerid], 2);
    TextDrawLetterSize(SpeedShow[playerid],0.500000, 1.500000);
    TextDrawFont(SpeedShow[playerid],3);
    TextDrawColor(SpeedShow[playerid], 761773823);
    TextDrawSetOutline(SpeedShow[playerid],1);
    TextDrawSetProportional(SpeedShow[playerid],1);
	TextDrawSetShadow(SpeedShow[playerid],1);
    TextDrawHideForPlayer(playerid, SpeedShow[playerid]);
	//==========================================================================
 	StatusShow[playerid] = TextDrawCreate(451.000000, 418.000000, "_");
    TextDrawBackgroundColor(StatusShow[playerid], 255);
    TextDrawLetterSize(StatusShow[playerid],0.3, 1.1);
    TextDrawFont(StatusShow[playerid], 2);
    TextDrawColor(StatusShow[playerid], 0x20B220AA);
    TextDrawSetOutline(StatusShow[playerid], 1);
    TextDrawSetProportional(StatusShow[playerid],1);
	TextDrawSetShadow(StatusShow[playerid],1);
    TextDrawHideForPlayer(playerid, StatusShow[playerid]);
	//==========================================================================
	KMShow[playerid] = TextDrawCreate(389.000000, 399.000000, "_");
    TextDrawBackgroundColor(KMShow[playerid], 255);
    TextDrawLetterSize(KMShow[playerid],0.379999, 0.899999);
    TextDrawFont(KMShow[playerid], 2);
    TextDrawColor(KMShow[playerid], 724790015);
    TextDrawSetOutline(KMShow[playerid], 1);
    TextDrawSetProportional(KMShow[playerid],1);
	TextDrawSetShadow(KMShow[playerid],1);
    TextDrawHideForPlayer(playerid, KMShow[playerid]);
	//==========================================================================
	DRAP = TextDrawCreate(440.0, 190.0, "~n~~n~\t~b~[]select~n~\t\t\t~g~next: ~w~q ~n~\t\t\t~g~last: ~w~e~n~~n~\t~b~[]select color ~n~\t\t\t~g~next: ~w~num4 ~n~\t\t\t~g~last: ~w~num6~n~~n~\t~b~[]other ~n~\t\t\t~g~switch color: ~w~space~n~~n~\t\t\t~g~accept: ~w~return ~n~\t\t\t~r~cancel: ~w~c ~n~");
    TextDrawFont(DRAP, 2);
    TextDrawLetterSize(DRAP, 0.20,0.80);
    TextDrawColor(DRAP, -1);
    TextDrawSetShadow(DRAP, 1);
    TextDrawBackgroundColor(DRAP, 0x00000044);
    TextDrawSetOutline(DRAP, 0);
    TextDrawSetProportional(DRAP, 3);
    TextDrawAlignment(DRAP, 1);
    TextDrawUseBox(DRAP, 1);
    TextDrawBoxColor(DRAP, COLOR_BOX);
	TextDrawHideForPlayer(playerid, DRAP);
	//==========================================================================
 	FuelShow[playerid] = TextDrawCreate(401.000000, 412.000000, "_");
    TextDrawBackgroundColor(FuelShow[playerid], 255);
    TextDrawLetterSize(FuelShow[playerid],0.460000, 1.100000);
    TextDrawFont(FuelShow[playerid], 3);
    TextDrawColor(FuelShow[playerid], -1165802241);
    TextDrawSetOutline(FuelShow[playerid], 1);
    TextDrawSetProportional(FuelShow[playerid],1);
	TextDrawSetShadow(FuelShow[playerid],1);
    TextDrawHideForPlayer(playerid, FuelShow[playerid]);
	//==========================================================================
	FillShow[playerid] = TextDrawCreate(360.000000, 411.000000, "_");
    TextDrawBackgroundColor(FillShow[playerid], 255);
    TextDrawFont(FillShow[playerid], 2);
    TextDrawLetterSize(FillShow[playerid], 0.310000, 1.300000);
    TextDrawColor(FillShow[playerid], -1677721345);
    TextDrawSetOutline(FillShow[playerid], 1);
    TextDrawSetProportional(FillShow[playerid], 1);
    TextDrawHideForPlayer(playerid, FillShow[playerid]);
    //==========================================================================
	MaxShow[playerid] = TextDrawCreate(390.000000,422.000000, "_");
	TextDrawBackgroundColor(MaxShow[playerid], 0);
	TextDrawLetterSize(MaxShow[playerid], 0.210000, 1);
	TextDrawFont(MaxShow[playerid], 1);
	TextDrawColor(MaxShow[playerid], 0x000000AA);
    TextDrawHideForPlayer(playerid, MaxShow[playerid]);
    //==========================================================================
	EngineShow[playerid] = TextDrawCreate(451.000000, 396.000000, "_");
    TextDrawBackgroundColor(EngineShow[playerid], 255);
    TextDrawLetterSize(EngineShow[playerid],0.3, 1.1);
    TextDrawFont(EngineShow[playerid], 2);
    TextDrawColor(EngineShow[playerid], 0x000000AA);
    TextDrawSetOutline(EngineShow[playerid], 1);
    TextDrawSetProportional(EngineShow[playerid],1);
	TextDrawSetShadow(EngineShow[playerid],1);
    TextDrawHideForPlayer(playerid, EngineShow[playerid]);
    //==========================================================================
	LightsShow[playerid] = TextDrawCreate(451.000000, 407.000000, "_");
    TextDrawBackgroundColor(LightsShow[playerid], 255);
    TextDrawLetterSize(LightsShow[playerid],0.3, 1.1);
    TextDrawFont(LightsShow[playerid], 2);
    TextDrawColor(LightsShow[playerid], 0x000000AA);
    TextDrawSetOutline(LightsShow[playerid], 1);
    TextDrawSetProportional(LightsShow[playerid],1);
	TextDrawSetShadow(LightsShow[playerid],1);
    TextDrawHideForPlayer(playerid, LightsShow[playerid]);
    //==========================================================================
	CarnameShow[playerid] = TextDrawCreate(350.000000, 380.000000, "_");
    TextDrawBackgroundColor(CarnameShow[playerid], 255);
    TextDrawLetterSize(CarnameShow[playerid],0.25, 0.88);
    TextDrawFont(CarnameShow[playerid], 2);
    TextDrawColor(CarnameShow[playerid], 0x28c6dbFF);
    TextDrawSetOutline(CarnameShow[playerid], 1);
    TextDrawSetProportional(CarnameShow[playerid],1);
	TextDrawSetShadow(CarnameShow[playerid],1);
    TextDrawHideForPlayer(playerid, CarnameShow[playerid]);
    //==========================================================================
	CarShow[playerid] = TextDrawCreate(478.000000, 380.000000, "_");
    TextDrawBackgroundColor(CarShow[playerid], 255);
    TextDrawLetterSize(CarShow[playerid],0.25, 0.88);
    TextDrawFont(CarShow[playerid], 2);
    TextDrawColor(CarShow[playerid], 0x28c6dbFF);
    TextDrawSetOutline(CarShow[playerid], 1);
    TextDrawSetProportional(CarShow[playerid],1);
	TextDrawSetShadow(CarShow[playerid],1);
    TextDrawHideForPlayer(playerid, CarShow[playerid]);
    //==========================================================================
	URL[playerid] = TextDrawCreate(520.000000, 8.000000, "NextAge-RP");
	TextDrawFont(URL[playerid], 0);
	TextDrawColor(URL[playerid], 0x28c6dbFF);
	TextDrawLetterSize(URL[playerid], 0.3600, 1.400000);
	TextDrawSetOutline(URL[playerid], 1);
 	TextDrawShowForPlayer(playerid, URL[playerid]);
	//==========================================================================
	for(new i = 0; i < sizeof(GZInfo); i++) GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));
	//==========================================================================
    format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
    Doki[1][playerid] = Create3DTextLabel(string, 0xFFFF00FF,-1731.4509,118.9413,3.5547,20.0,0,1);
    format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
    Doki[0][playerid] = Create3DTextLabel(string, 0xFFFF00FF,2601.7222,-2226.5867,13.3732,20.0,0,1);
    format(string, sizeof(string), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
    GasZavod[0][playerid] = Create3DTextLabel(string, 0xFFFF00FF,256.4736,1414.5182,10.7075,20.0,0,1);
    format(string, sizeof(string), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
    GasZavod[1][playerid] = Create3DTextLabel(string, 0xFFFF00FF,-1046.7723,-670.7208,32.3516,20.0,0,1);
    format(string, sizeof(string), "Склад угля №1\nЦена за тонну: %d",ugolbuy[0]);
    Sklad[0][playerid] = Create3DTextLabel(string, 0xFFFF00FF,608.7718,847.8765,-43.1532,20.0,0,1);
    format(string, sizeof(string), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
    Derevobuy[0][playerid] = Create3DTextLabel(string, 0xFFFF00FF,-449.3336,-65.9115,59.4158,20.0,0,1);
    format(string, sizeof(string), "Лесопилка №2\nЦена за тонну: %d",Buyderevo[1]);
    Derevobuy[1][playerid] = Create3DTextLabel(string, 0xFFFF00FF,-1978.6846,-2434.8274,30.6250,20.0,0,1);
    format(string, sizeof(string), "Склад угля №2\nЦена за тонну: %d",ugolbuy[1]);
    Sklad[1][playerid] = Create3DTextLabel(string, 0xFFFF00FF,-1873.0896,-1720.2430,21.7500,20.0,0,1);
    return true;
}
stock ClearConnectAccountParams(playerid)
{
	//нужные
	PlayerTalkingWith[playerid] = -1;
	PlayerIsPhoned[playerid] = -1;
	//
    PaintJob[playerid] = 255;
	HotdogOffer[playerid] = 999;
	HotdogPrice[playerid] = 999;
	Color[playerid] = 255;
	Color1[playerid] = 255;
   	Spoiler[playerid] = 0;
   	Wheels[playerid] = 0;
   	Bumper[playerid] = 0;
   	Bumper2[playerid] = 0;
   	Nitro[playerid] = 0;
   	Hydraw[playerid] = 0;
   	PlayerIsInkasator[playerid] = 0;
   	DrugOffer[playerid] = 999;
 	DrugPrice[playerid] = 999;
	DrugGramm[playerid] = 0;
	ZoneOffer[playerid] = 999;
	ZonePrice[playerid] = 999;
	FreeOffer[playerid] = 999;
 	PlayerEx[playerid][pSpawnEx] = false;
    PlayerEx[playerid][AFKEx] = false;
	Bags[playerid] = 999;
	RobbingCar[playerid] = false;
	WithBag[playerid] = 0;
	TransportDuty[playerid] = 0;
    FarmWorks[playerid] = 0;
    times[playerid] = true;
	Tune[playerid] = 0;
	duty[playerid] = 0;
	ZoneOffer[playerid] = 999;
	ZonePrice[playerid] = 0;
	Armour[playerid] = 0;
	showhelp[playerid] = 0;
	robh[playerid] = false;
	play[playerid] = 0;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
    ProposeOffer[playerid] = 999;
	ProposedTo[playerid] = 999;
	MehJob[playerid] = 999;
	mesto[playerid] = 999;
	lsacarvertexit[playerid] = 0;
	MatsArmyCar[playerid] = 0;
	AutoBusJob[playerid] = 0;
	MusorJob[playerid] = 0;
	TrainJob[playerid] = 0;
	AutoBusCheck[playerid] = 0;
	AutoBusMoney[playerid] = 0;
	MusorCheck[playerid] = 0;
	BusStop[playerid] = 0;
	JobCarTime[playerid] = 0;
	BusStopTime[playerid] = 0;
	TrainStopTime[playerid] = 0;
	SpawnChange[playerid] = 1;
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	chet[playerid] = 0;
	RaceCP[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	gag[playerid] = 0;
	PhoneOnline[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
    Works[playerid] = false;
	JobCP[playerid] = 0;
	GruzCP[playerid] = 0;
	JobAmmount[playerid] = 0;
	TakingLesson[playerid] = 0;
	provas[playerid] = 0;
	provadat[playerid] = 0;
    JobOffer[playerid] = 999;
	Employer[playerid] = 999;
	CP[playerid] = 0;
	RaceCP[playerid] = 0;
	SpawnChange[playerid] = 1;
	TalkingLive[playerid] = 255;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	LiveOffer[playerid] = 999;
	LiveOfferlv[playerid] = 999;
	LiveOfferls[playerid] = 999;
	RepairOffer[playerid] = 999;
	RepairPrice[playerid] = 0;
	HouseOffer[playerid] = 999;
	HousePrice[playerid] = 0;
	CarOffer[playerid] = 999;
	CarPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	RefillOffer[playerid] = 999;
	RefillPrice[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	Playert[playerid] = 0;
	PlayertTime[playerid] = 0;
	PlayerTied[playerid] = 0;
	PlayerGaged[playerid] = 0;
	Rekl[playerid] = 1;
	gOoc[playerid] = 0;
	gNews[playerid] = 0;
	lNews[playerid] = 0;
	LvNews[playerid] = 0;
	BigEar[playerid] = 0;
	gDice[playerid] = 0;
	gFam[playerid] = 0;
	gLogin[playerid] = 0;
	gPlayerLogged[playerid] = 0;
	gPlayerLogTries[playerid] = 0;
	PlayerStoned[playerid] = 0;
	PlayerDrunk[playerid] = 0;
	WatchingTV[playerid] = 0;
	KrishaOffer[playerid] = 999;
    DriverJob[playerid] = false;
 	OldSkin[playerid] = GetPlayerSkin(playerid);
 	ChosenSkin[playerid] = OldSkin[playerid];
 	InviteSkin[playerid] = OldSkin[playerid];
	AddictionsTimer[playerid] = 0;
	afkto[playerid] = 2;
	PlayerArmor[playerid] = 0;
}
stock ClearConnectAccount(playerid)
{
	SetPlayerArmourAC(playerid, 0);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	PlayerInfo[playerid][pFerma] = 255;
    PlayerInfo[playerid][pFermazarobotok] = 0;
    PlayerInfo[playerid][pFermajob] = 255;
	PlayerInfo[playerid][pAntiCheat] = 0;
	PlayerInfo[playerid][pAdvertTime] = 0;
	PlayerInfo[playerid][pAddiction] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pPension] = 0;
	PlayerInfo[playerid][pCredit] = 0;
	PlayerInfo[playerid][pCreditMust] = 0;
	PlayerInfo[playerid][pCreditTime] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pCheckip] = 0;
	PlayerInfo[playerid][pDirectory] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pPhone] = 0;
	PlayerInfo[playerid][pPrez] = 0;
	PlayerInfo[playerid][pFishrod] = 0;
	PlayerInfo[playerid][pNointim] = 0;
	PlayerInfo[playerid][pWorms] = 0;
	PlayerInfo[playerid][pBeer] = 0;
	PlayerInfo[playerid][pWine] = 0;
	PlayerInfo[playerid][pSig] = 0;
	PlayerInfo[playerid][pAp] = 0;
	PlayerInfo[playerid][pSprite] = 0;
	PlayerInfo[playerid][pPrefix] = 0;
	PlayerInfo[playerid][pHat] = 0;
	PlayerInfo[playerid][pHatX] = 0;
	PlayerInfo[playerid][pHatY] = 0;
	PlayerInfo[playerid][pHatZ] = 0;
	PlayerInfo[playerid][pHatRX] = 0;
	PlayerInfo[playerid][pHatRY] = 0;
	PlayerInfo[playerid][pHatRZ] = 0;
	PlayerInfo[playerid][pWatchs] = 0;
	PlayerInfo[playerid][pGlasses] = 0;
	PlayerInfo[playerid][pGlassesX] = 0;
	PlayerInfo[playerid][pGlassesY] = 0;
	PlayerInfo[playerid][pGlassesZ] = 0;
	PlayerInfo[playerid][pGlassesRX] = 0;
	PlayerInfo[playerid][pGlassesRY] = 0;
	PlayerInfo[playerid][pGlassesRZ] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskX] = 0;
	PlayerInfo[playerid][pMaskY] = 0;
	PlayerInfo[playerid][pMaskZ] = 0;
	PlayerInfo[playerid][pMaskRX] = 0;
	PlayerInfo[playerid][pMaskRY] = 0;
	PlayerInfo[playerid][pMaskRZ] = 0;
	PlayerInfo[playerid][pOther] = 0;
	PlayerInfo[playerid][pOtherX] = 0;
	PlayerInfo[playerid][pOtherY] = 0;
	PlayerInfo[playerid][pOtherZ] = 0;
	PlayerInfo[playerid][pOtherRX] = 0;
	PlayerInfo[playerid][pOtherRY] = 0;
	PlayerInfo[playerid][pOtherRZ] = 0;
	PlayerInfo[playerid][pRope] = 0;
	PlayerInfo[playerid][pKeys] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pBisLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pMaterials] = 0;
	PlayerInfo[playerid][pPHousekey] = 255;
	PlayerInfo[playerid][pPBiskey] = 255;
	PlayerInfo[playerid][pAutoMast] = 255;
	PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pKazpay] = 0;
    PlayerInfo[playerid][pDLevel] = 0;
    PlayerInfo[playerid][pDExp] = 0;
    PlayerInfo[playerid][pDgruz] = 0;
	PlayerInfo[playerid][pChar] = 66;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pExp] = 1;
	PlayerInfo[playerid][pGunFbiTime] = 0;
	PlayerInfo[playerid][pPissTime] = 0;
	PlayerInfo[playerid][pGunLvaTime] = 0;
	PlayerInfo[playerid][pGunLsaTime] = 0;
	PlayerInfo[playerid][pGunLspdTime] = 0;
	PlayerInfo[playerid][pGunaSfaTime] = 0;
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlot][11] = 0;
	PlayerInfo[playerid][pSlot][12] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	PlayerInfo[playerid][pSlotammo][11] = 0;
	PlayerInfo[playerid][pSlotammo][12] = 0;
	PlayerInfo[playerid][pGunSkill][0] = 0;
	PlayerInfo[playerid][pGunSkill][1] = 0;
	PlayerInfo[playerid][pGunSkill][2] = 0;
	PlayerInfo[playerid][pGunSkill][3] = 0;
	PlayerInfo[playerid][pGunSkill][4] = 0;
	PlayerInfo[playerid][pGunSkill][5] = 0;
	PlayerInfo[playerid][pGunSkill][6] = 0;
	PlayerInfo[playerid][pGunSkill][7] = 0;
	PlayerInfo[playerid][pGunSkill][8] = 0;
	PlayerInfo[playerid][pGunSkill][9] = 0;
	PlayerInfo[playerid][pGunSkill][10] = 0;
	PlayerInfo[playerid][pTaxiExp] = 0;
	PlayerInfo[playerid][pTaxiLvl] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pZp] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pCheat] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pTicket] = 0;
	PlayerInfo[playerid][pTicketWin] = 0;
	PlayerInfo[playerid][pTicketNr][0] = 0;
	PlayerInfo[playerid][pTicketNr][1] = 0;
	PlayerInfo[playerid][pTicketNr][2] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 255;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 1;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pLocked] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pDonateAccount] = 0;
	PlayerInfo[playerid][pDonate] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pKongfuSkill] = 0;
	PlayerInfo[playerid][pKickboxSkill] = 0;
	PlayerInfo[playerid][pCar] = 0;
	PlayerInfo[playerid][pDostup] = 1111;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pMobile] = 0;
	PlayerInfo[playerid][pMushrooms] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pBalon] = 0;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	while(strfind(inputtext, "%s",true) != -1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	while(strfind(inputtext, "%",true) != -1)
	{
		strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+2);
	}
	new gun,ammo, money;
	new gunchoise[MAX_PLAYERS];
	new frwslot[13],frwslotammo[13];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	switch(dialogid)
	{
		case 211+1:
		{
			if(response)
			{
			    new rand = random(sizeof(HouseInfo));
			    new randcvet = random(1+199);
			    new carrandN[10] = {400, 401, 404, 410, 419, 421, 436, 439, 458, 466};
				new carrandn = random(sizeof(carrandN));
				if(RobbingCar[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Ты уже взял задание");
				zonapoiska[playerid] = GangZoneCreate(HouseInfo[rand][hCarx]-95,HouseInfo[rand][hCary]-80,HouseInfo[rand][hCarx]+70, HouseInfo[rand][hCary]+85);
				GangZoneShowForPlayer(playerid, zonapoiska[playerid], COLOR_BLACK);
			    switch(listitem)
			    {
			        case 0:
					{
                        new string[128];
						ugoncar[playerid] = CreateVehicle(carrandN[carrandn], HouseInfo[rand][hCarx], HouseInfo[rand][hCary], HouseInfo[rand][hCarz], HouseInfo[rand][hCarc], randcvet, randcvet,300);
					    format(string, sizeof(string), "Пригони нам тачку марки %s, и мы тебе хорошо заплатим.", VehicleNames[carrandN[carrandn]-400]);
					    SendClientMessage(playerid, 0x6495EDFF, string);
			            SendClientMessage(playerid, 0x6495EDFF, "(( Чтобы взломать, зажмите и держите клавишу Спринт (по умолчанию пробел). Для отмены задания используй /cancel )).");
			            SendClientMessage(playerid, 0x6495EDFF, "Подобную тачку наши парни недавно видели. Я обозначил район на твоей карте.");
						RobbingCar[playerid] = true;
			            Fuell[ugoncar[playerid]] = 100;
						RepairVehicle(ugoncar[playerid]);
						LockCar(ugoncar[playerid]);
						IsLocked[ugoncar[playerid]] = 1;
						SetPVarInt(playerid, "ugontime", 1200);
			        }
			        case 1:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 100) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 2:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 200) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 3:
					{
						if(PlayerInfo[playerid][pCarRobbingExp] < 300) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
			        case 4:
					{
					    if(PlayerInfo[playerid][pCarRobbingExp] < 400) return SendClientMessage(playerid, 0x6495EDFF, "Мы не доверяем тебе угон такого класса авто, приходи когда наберешся опыта!");
					}
				}
			}
			else
			{
				return true;
			}
		}
	    case 211+2:
	    {
	        if(response)
			{
				PlayerInfo[playerid][pJob] = 15;
				SendClientMessage(playerid, 0x6495EDFF, "Добро пожаловать в команду!");
				SendClientMessage(playerid, 0x6495EDFF, "На автомойке всегда найдется работа. Если тебе не на чем доехать, можешь взять скутер в гараже.");
				SendClientMessage(playerid, 0x6495EDFF, "(Для взлома авто, подойди к нужной машине и если авто закрыто, зажми SPACE (Спринт))");
			}
			else return true;
		}
		case 5112:
	    {
	        if(response) OnPlayerCommandText(playerid,"/exit");
	        return true;
		}
		case 5114:
	    {
	        if(response) OnPlayerCommandText(playerid,"/trash");
			else RemovePlayerFromVehicleAc(playerid);
			return true;
		}
		case 5115:
	    {
	        if(response) OnPlayerCommandText(playerid,"/train");
			else SetPlayerPos(playerid, 1767.9900,-1948.2570,14.1096);
			return true;
		}
		case 5116:
	    {
	        if(response) OnPlayerCommandText(playerid,"/route");
			else RemovePlayerFromVehicleAc(playerid);
			return true;
		}
		case 5117:
	    {
	        if(response) OnPlayerCommandText(playerid,"/startbank");
			else RemovePlayerFromVehicleAc(playerid);
			return true;
		}
        case 5203:
        {
            if(response ==1)
            {
                if(!strlen(inputtext)) return ShowPlayerDialog (playerid,5203,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 1     ","Принять","");
                format(AdTxt[adtxtid[playerid]][bAdTxt],256, "%s\n", inputtext);
                ShowPlayerDialog (playerid,5204,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 2     ","Принять","");
                return true;
            }
            else return ShowPlayerDialog (playerid,5203,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 1    ","Принять","");
        }
        case 5204:
        {
            if(response==1)
            {
                if(!strlen(inputtext)) return ShowPlayerDialog (playerid,5204,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 2     ","Принять","");
                switch (adtxtid[playerid])
                {
                    case 0: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{FFA500}%s{33AAFF}%s", AdTxt[adtxtid[playerid]][bAdTxt], inputtext);
                    case 1: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{04B404}%s{AA3333}%s", AdTxt[adtxtid[playerid]][bAdTxt], inputtext);
                    case 2: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{FF0000}%s{FF9900}%s", AdTxt[adtxtid[playerid]][bAdTxt], inputtext);
                }
                adtext(AdTxt[adtxtid[playerid]][bAdTxt], adtxtid[playerid]);
                ShowPlayerDialog(playerid,5207,DIALOG_STYLE_MSGBOX,"Информация",AdTxt[adtxtid[playerid]][bAdTxt],"Ок","Отмена");
                return true;
            }
            else
            {
                ShowPlayerDialog (playerid,5204,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 2    ","Принять","");
                return true;
            }
        }

        case 5205:
        {
            if(response)
            {
                switch(listitem)
                {
                      case 0:
                      {
                        adtxtid[playerid] = 0;
                        ShowPlayerDialog(playerid,5206,DIALOG_STYLE_LIST,"Объявление 1","Редактировать\nУдалить\nПосмотреть","Дальше","Отмена");
                        return true;
                      }
                      case 1:
                      {
                        adtxtid[playerid] = 1;
                        ShowPlayerDialog(playerid,5206,DIALOG_STYLE_LIST,"Объявление 1","Редактировать\nУдалить\nПосмотреть","Дальше","Отмена");
                        return true;
                      }
                      case 2:
                      {
                        adtxtid[playerid] = 2;
                        ShowPlayerDialog(playerid,5206,DIALOG_STYLE_LIST,"Объявление 1","Редактировать\nУдалить\nПосмотреть","Дальше","Отмена");
                        ShowPlayerDialog (playerid,5203,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 1    ","Принять","");
                        return true;
                       }
                }
            }
            else
            {
                return true;
            }
        }
        case 5206:
        {
            if(response)
            {
                switch(listitem)
                {
                      case 0:
                      {
                        ShowPlayerDialog (playerid,5203,DIALOG_STYLE_INPUT,"Объявление","    Введите ваше объявление строка 1    ","Принять","");
                        return true;
                      }
                      case 1:
                      {
                          switch (adtxtid[playerid])
                          {
                            case 0: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{FFA500}Здесь могла быть ваша\n{33AAFF}Р Е К Л А М А");
                            case 1: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{04B404}Здесь могла быть ваша\n{AA3333}Р Е К Л А М А");
                            case 2: format(AdTxt[adtxtid[playerid]][bAdTxt],256, "{FF0000}Здесь могла быть ваша\n{FF9900}Р Е К Л А М А");
                          }
                          adtext(AdTxt[adtxtid[playerid]][bAdTxt], adtxtid[playerid]);
                          return true;
                      }
                      case 2:
                      {
                           ShowPlayerDialog(playerid,5207,DIALOG_STYLE_MSGBOX,"Информация",AdTxt[adtxtid[playerid]][bAdTxt],"Ок","Отмена");
                           return true;
                      }
                }
            }
            else
            {
                ShowPlayerDialog(playerid,5205,DIALOG_STYLE_LIST,"Добавить объявление в Щит","Объявление 1\nОбъявление 2\nОбъявление 3","Дальше","Отмена");
            }
        }
		case 327:
		{
			if(response == 1)
			{
			    new string[37];
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,327,DIALOG_STYLE_INPUT, "Смена пароля", "	Введите Ваш новый пароль к игровому аккаунту", "Принять", "");
				GetPlayerName(playerid,playername,sizeof(playername));
				nick[playerid] = 0;
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_setString(File, "Key",MD5_Hash(inputtext));
				ini_closeFile(File);
				OnPlayerUpdateAc(playerid);
				OnPropUpdate();
				format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
				return true;
			}
			else
			{
				ShowPlayerDialog(playerid,327,DIALOG_STYLE_INPUT, "Смена пароля", "	Введите Ваш новый пароль к игровому аккаунту", "Принять", "");
				return true;
			}
		}
		case 10:
		{
			if(response)
			{
			    new string[128];
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "Жалоба администрации", "Вы собираетесь отправить администрации сообщение с жалобой\nОтпровляйте по форме [ID/ник нарушитиля] [Текст жалобы]", "Отправить", "Назад");
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, (inputtext));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ваша жалоба была отправлена администрации");
				format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, (inputtext));
				ABroadCast(0xA85400AA, string, 1);
				return true;
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 5576:
		{
			if(response)
			{
				new summa;
				if (RuletStart[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали ставку");
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				if(summa < 10000 && RuletkaStol[playerid] == 1 || summa > 100000 && RuletkaStol[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить меньше 10000 и больше 100000 вирт"); return true; }
				if(summa < 5000 && RuletkaStol[playerid] == 2 || summa > 50000 && RuletkaStol[playerid] == 2) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить меньше 5000 и больше 50000 вирт"); return true; }
				PlayerInfo[playerid][pCash] -= summa;
				RuletSum[playerid] = summa;
				RuletStart[playerid] =true;
				DestroyObject(Fishka[playerid]);
				if(summa <= 30000) Fishka[playerid] = CreateObject(1930,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else if(summa > 30000 && summa <= 60000) Fishka[playerid] = CreateObject(1931,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else if(summa > 60000 && summa < 100000) Fishka[playerid] = CreateObject(1932,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				else Fishka[playerid] = CreateObject(1933,fishechkax[playerid],fishechkay[playerid],1006.0690,0.00,0.00,0.00);
				Upravakazino[playerid] = false;
				SendClientMessage(playerid, COLOR_BLUE, "Вы сделали ставку");
			}
			else
			{
				Kazvihod(playerid);
			}
		}
        case 8001:
        {
            if(response)
            {
                new carid = GetPlayerVehicleID(playerid);
                switch(listitem)
                {
                    case 0://капот отк
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,doors,true,boot,objective);
                    }
                    case 1://кап зак
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,doors,false,boot,objective);
                    }
                    case 2://открыть баг
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,true,objective);
                    }
                    case 3://зак баг
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,false,objective);
                    }
                    case 4://двери откр
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
                        new string[30];
                        format(string, sizeof(string), "~w~CAR ~g~UNLOCKED");
						GameTextForPlayer(playerid, string, 5000, 3);
						UnLockCar(carid);
						IsLocked[carid] = 0;
						SetPlayerChatBubble(playerid, "открыл(а) транспортное средство",COLOR_PURPLE,10.0,10000);
                    }
                    case 5://зак двери
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_ON,bonnet,boot,objective);
                        new string[30];
                        format(string, sizeof(string), "~w~CAR ~r~LOCKED");
						GameTextForPlayer(playerid, string, 5000, 3);
						LockCar(carid);
						IsLocked[carid] = 1;
						SetPlayerChatBubble(playerid, "закрыл(а) транспортное средство",COLOR_PURPLE,10.0,10000);
                    }
                    case 6://вкл фары
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,true,alarm,doors,bonnet,boot,objective);
                        Lightsp[playerid] = 1;
                    }
                    case 7://выкл фары
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,false,alarm,doors,bonnet,boot,objective);
                        Lightsp[playerid] = 0;
                    }
                    case 8://сигнал вкл
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,true,doors,bonnet,boot,objective);
                    }
                    case 9://сигнал выкл
                    {
                        GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                        SetVehicleParamsEx(carid,engine,lights,false,doors,bonnet,boot,objective);
                    }
                }
            }
        }
		case 1:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
				    new string[280];
					format(string,sizeof(string), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {ff0000}зарегистрирован {FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", PlayerInfo[playerid][pName]);
					ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "{FFFFFF}Авторизация",string, "Войти", "Отмена");
					return true;
				}
				new pass[256];
				new string[37];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ': return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				if(!strcmp(MD5_Hash(inputtext),pass,true)) OnPlayerLogin(playerid,MD5_Hash(inputtext));
				else ShowPlayerDialog(playerid,10008,DIALOG_STYLE_MSGBOX, "Ошибка!","{FF0000}Внимание!Вы ввели неверный пароль!\n\tУ вас осталось(2) попытки\nПосле вы будете на время забанены", "Повтор", "Выйти");
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				GKick(playerid);
			}
		}
		case 462:
		{
			if(response)
			{
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
				if(ProxDetectorS(8.0, playerid, idd))
                {
                    new string [128];
					if(idd == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вызвать на бой самого себя");
                    format(string, sizeof(string), "Вы предложили бой %s", PlayerInfo[idd][pName]);
                    SendClientMessage(playerid, 0x6495EDFF, string);
                    format(string, sizeof(string), "%s предлагает вам бой. (/accept fight) чтобы принять.", PlayerInfo[playerid][pName]);
                    SendClientMessage(idd, 0x6495EDFF, string);
                    BoxOffer[idd] = playerid;
                }
                else return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else return true;
		}
		case 3439:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return ShowPlayerDialog(playerid, 3440, DIALOG_STYLE_INPUT, "Начать урок по Box", "Введите ID игрока", "Начать", "Отмена");
					case 1: return ShowPlayerDialog(playerid, 3441, DIALOG_STYLE_INPUT, "Начать урок по Kong-Fu", "Введите ID игрока", "Начать", "Отмена");
					case 2: return ShowPlayerDialog(playerid, 3444, DIALOG_STYLE_INPUT, "Начать урок по Kick-Box", "Введите ID игрока", "Начать", "Отмена");
					case 3: return ShowPlayerDialog(playerid, 3442, DIALOG_STYLE_INPUT, "Завершить урок по Box", "Введите ID игрока", "Завершить", "Отмена");
					case 4: return ShowPlayerDialog(playerid, 3443, DIALOG_STYLE_INPUT, "Завершить урок по Kong-Fu", "Введите ID игрока", "Завершить", "Отмена");
					case 5: return ShowPlayerDialog(playerid, 3445, DIALOG_STYLE_INPUT, "Завершить урок по Kick-Box", "Введите ID игрока", "Завершить", "Отмена");
				}
				SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
			else return true;
		}
		case 3440:
		{
			if(response)
			{
			    new string[90];
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 1;
				if(PlayerInfo[playerid][pSex] == 0)
	            {
	            	SetPlayerSkin(idd,193);
	            }
	            else
	            {
	                SetPlayerSkin(idd,80);
				}
				format(string,sizeof(string), "Вы начали урок с %s по Box", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_GREEN, "Начните изучение Box у груши слева");
				return true;
			}
			else
			{
				return true;
			}
		}
        case 14155:
        {
            if(response)
            {
                new plo = playermp[playerid];
                new Float:plocx,Float:plocy,Float:plocz;
                GetPlayerPos(plo, plocx, plocy, plocz);
                SetPlayerPos(playerid,plocx,plocy+2, plocz);
                SetPlayerInterior(playerid,GetPlayerInterior(plo));
                SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы успешно зарегистрировались на данное мероприятие");
                SendClientMessage(playerid, COLOR_LIGHTGREEN, "Ваше оружие и броня были отобраны. Так как это противоречит правилам мероприятия!");
                SetPlayerColor(playerid,0xE65131AA);
                SetPlayerArmour(playerid,0);
                ResetPlayerWeapons(playerid);
                SetPlayerHealthAC(playerid, 100);
			    PlayerInfo[playerid][pHP] = 100;
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "Вы успешно отказались от мероприятия!");
            }
	    }
		case 3442:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new string[90];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
 				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 0;
				SetPlayerFightingStyle(idd, FIGHT_STYLE_NORMAL);
				format(string,sizeof(string), "Вы завершили урок с %s по Box", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_LIGHTGREEN, "Тренер завершил с вами тренировку по Box");
				if(PlayerInfo[idd][pJob] == 6 && PlayerInfo[idd][pMember] == 0)
		        {
                    SetPlayerSkin(idd, 49);
	 	        }
	 	        else
				{
				    if(PlayerInfo[idd][pMember] >= 1) { SetPlayerSkin(idd,PlayerInfo[idd][pModel]);}
		            if(PlayerInfo[idd][pMember] == 0) { SetPlayerSkin(idd,PlayerInfo[idd][pChar]);}
				}
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3445:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new string[90];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
 				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 0;
				SetPlayerFightingStyle(idd, FIGHT_STYLE_NORMAL);
				format(string,sizeof(string), "Вы завершили урок с %s по Kick-Box", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_LIGHTGREEN, "Тренер завершил с вами тренировку по Kick-Box");
				if(PlayerInfo[idd][pJob] == 6 && PlayerInfo[idd][pMember] == 0)
		        {
                    SetPlayerSkin(idd, 49);
	 	        }
	 	        else
				{
				    if(PlayerInfo[idd][pMember] >= 1) { SetPlayerSkin(idd,PlayerInfo[idd][pModel]);}
		            if(PlayerInfo[idd][pMember] == 0) { SetPlayerSkin(idd,PlayerInfo[idd][pChar]);}
				}
				return true;
			}
			else
			{
				return true;
			}
		}
		case 5540:
		{
			new bouse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
				{
					if(response)
					{
   						switch(listitem)
			    		{
							case 0:
							{
								if(HouseInfo[bouse][hLock] == 1)
								{
									HouseInfo[bouse][hLock] = 0;
									new string[30];
									format(string, sizeof(string), "~w~House ~g~UNLOCKED");
									GameTextForPlayer(playerid, string, 5000, 3);
         							PlaySoundNearPlayer(playerid,1145);
									return true;
								}
								if(HouseInfo[bouse][hLock] == 0)
								{
									HouseInfo[bouse][hLock] = 1;
									new string[30];
									format(string, sizeof(string), "~w~House ~r~LOCKED");
									GameTextForPlayer(playerid, string, 5000, 3);
									PlaySoundNearPlayer(playerid,1145);
									return true;
								}
							}
							case 1:ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX, "Продажа имущества", "Вы действительно хотите продать дом государству?\nВам будет возвращены только 75 процентов!", "Да", "Нет");
							case 2:
							{
								if(HouseInfo[bouse][hHel] == 0)return SendClientMessage(playerid, COLOR_GREY, "В этом месте нет аптечек");
								new string[30];
								SendClientMessage(playerid, COLOR_WHITE, "Вы были вылечены до 100 процентов");
								format(string, sizeof(string), "Осталось %d аптечек", HouseInfo[bouse][hHel]);
								SendClientMessage(playerid, 0x6495EDFF, string);
								HouseInfo[bouse][hHel] -= 1;
								SetPlayerHealthAC(playerid, 100);
								PlayerInfo[playerid][pHP] = 100;
								SetPlayerChatBubble(playerid, "использовал аптечку", COLOR_PURPLE, 30.0, 10000);
								return true;
						    }
						}
					}
					else
					{
                    	new hpanel[256];
                    	format(hpanel,sizeof(hpanel), " [1] Открыть/закрыть дом\n [2] Продать дом\n [3] Использовать аптечку [%d шт.]",HouseInfo[bouse][hHel]);
                    	ShowPlayerDialog(playerid, 5540, DIALOG_STYLE_LIST, "Меню дома", hpanel, "Выбор", "Назад");
						return true;
					}
				}
			}
		}
		case 3389:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice] *5;
				new cena3 = BizzInfo[h][bPrice] *10;
				new cena4 = BizzInfo[h][bPrice] *15;
				new cena5 = BizzInfo[h][bPrice] *20;
				new cena6 = BizzInfo[h][bPrice] *25;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
                                new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) бургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena;
								}
								else
								{
								    FracBank[0][fKazna] += cena;
								}
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return	SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) рыбный суп");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) большой бургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) котлеты");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena4;
								}
								else
								{
								    FracBank[0][fKazna] += cena4;
								}
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) пельмени");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena5;
								}
								else
								{
								    FracBank[0][fKazna] += cena5;
								}
								return true;
							}
						}
						case 5:
						{
							new Float:health;
	 						GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,30, "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) гамбургер");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena6;
								}
								else
								{
								    FracBank[0][fKazna] += cena6;
								}
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 5500:
	    {
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                new bizinfo[400];
                if(PlayerToPoint(3, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
                {
	                if(response)
	                {
				        if(listitem == 0)
	                    {
                            new cena1 = BizzInfo[i][bPrice]*50;
			                new cena2 = BizzInfo[i][bPrice]*15;
			                new cena3 = BizzInfo[i][bPrice]*20;
    			            new cena4 = BizzInfo[i][bPrice]*40;
    			            new cena5 = BizzInfo[i][bPrice]*30;
    			            new cena6 = BizzInfo[i][bPrice]*8;
    	                    format(bizinfo,sizeof(bizinfo), "[1] Телефон\t\t\t[$%d]\n[2] Номер телефона\t\t[$%d]\n[3] Телефонный справочник\t[$%d]\n[4] MP3 плеер\t\t\t[$%d]\n[5] Фотоаппарат(10 снимков)\t[$%d]\n[6] Верёвка для машины\t[$%d]",cena1,cena2,cena3,cena4,cena5,cena6);
    		        	    ShowPlayerDialog(playerid, 5501, DIALOG_STYLE_LIST, "Техника и дополнительное", bizinfo, "Купить", "Назад");
    	                    return true;
    	                }
    				    else if(listitem == 1)
    	                {
                            new cena1 = BizzInfo[i][bPrice]*5;
    			            new cena2 = BizzInfo[i][bPrice]*10;
    			            new cena3 = BizzInfo[i][bPrice]*10;
    			            new cena4 = BizzInfo[i][bPrice]*5;
    	                    format(bizinfo,sizeof(bizinfo), "[1] Пиво\t\t[$%d]\n[2] Вино\t\t[$%d]\n[3] Пачка сигарет\t[$%d]\n[4] Спрайт\t\t[$%d]",cena1,cena2,cena3,cena4);
    		        	    ShowPlayerDialog(playerid, 5502, DIALOG_STYLE_LIST, "Продукты", bizinfo, "Купить", "Назад");
    	                    return true;
    	                }
    				    else if(listitem == 2)
    	                {
                            new cena1 = BizzInfo[i][bPrice]*50;
    			            new cena2 = BizzInfo[i][bPrice]*50;
                            format(bizinfo,sizeof(bizinfo), "[1] Презервативы(5 шт.)\t\t[$%d]\n[2] Перцовый балончик(15 исп.)\t[$%d]",cena1,cena2);
    		        	    ShowPlayerDialog(playerid, 5503, DIALOG_STYLE_LIST, "Интим", bizinfo, "Купить", "Назад");
    	                    return true;
    	                }
       			 	    else if(listitem == 3)
    	                {
                            new cena1 = BizzInfo[i][bPrice]*10;
    			            new cena2 = BizzInfo[i][bPrice]*100;
    			            new cena3 = BizzInfo[i][bPrice]*4;
                            format(bizinfo,sizeof(bizinfo), "[1] Цветы\t\t[$%d]\n[2] Фейерверк\t\t[$%d]\n[3] Билет удачи\t[$%d]",cena1,cena2,cena3);
    		        	    ShowPlayerDialog(playerid, 5504, DIALOG_STYLE_LIST, "Подарки и развлечения", bizinfo, "Купить", "Назад");
    	                    return true;
    	                }
    				    else if(listitem == 4)
    	                {
                            new cena1 = BizzInfo[i][bPrice]*50;
    			            new cena2 = BizzInfo[i][bPrice]*10;
                            format(bizinfo,sizeof(bizinfo), "[1] Удочка\t[$%d]\n[2] Черви\t[$%d]",cena1,cena2);
    		        	    ShowPlayerDialog(playerid, 5505, DIALOG_STYLE_LIST, "Рыбалка", bizinfo, "Купить", "Назад");
    					    return true;
    	                }
    				    else if(listitem == 5)
    	                {
                            new cena1 = BizzInfo[i][bPrice]*50;
                            format(bizinfo,sizeof(bizinfo), "[1]Аптечки(10 шт.)\t[$%d]",cena1);
		            	    ShowPlayerDialog(playerid, 5506, DIALOG_STYLE_LIST, "Для дома", bizinfo, "Купить", "Назад");
	                	    return true;
	                    }
    	            }
    	            else
    	            {
    	                return true;
    	            }
			    }
		    }
	    }
		case 5501:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*50;
				new cena2 = BizzInfo[h][bPrice]*15;
				new cena3 = BizzInfo[h][bPrice]*20;
				new cena4 = BizzInfo[h][bPrice]*40;
				new cena5 = BizzInfo[h][bPrice]*30;
				new cena6 = BizzInfo[h][bPrice]*8;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pPhone] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть телефон");
								BizzInfo[h][bProducts] -= 5;
								PlayerInfo[playerid][pPhone] += 1;
								PlayerInfo[playerid][pCash] -= cena1;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили телефон ");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
								return true;
							}
						}
						case 1:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								new string[60];
								new randphone = 1000 + random(899999);
								PlayerInfo[playerid][pPnumber] = randphone;
								format(string, sizeof(string), "Вы купили новый номер телефона. Ваш новый номер: %d", randphone);
								SendClientMessage(playerid, 0x6495EDFF, string);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
						case 2:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pDirectory] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть телефонный справочник");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								PlayerInfo[playerid][pPhoneBook] = 1;
								PlayerInfo[playerid][pDirectory] = 1;
								SendClientMessage(playerid, 0x6495EDFF, "Вы купили телефонный справочник. Теперь вы можете узнать номер любого игрока");
								SendClientMessage(playerid, 0x6495EDFF, "Введите: /number <id/name>.");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
						case 3:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pCDPlayer] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть MP3 плеер");
								BizzInfo[h][bProducts] -= 5;
								PlayerInfo[playerid][pCash] -= cena4;
								PlayerInfo[playerid][pCDPlayer] = 1;
								SendClientMessage(playerid, 0x6495EDFF, "Вы купили MP3 Плеер");
								SendClientMessage(playerid, 0x6495EDFF, "Введите: /music <значение>.");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena4;
								}
								else
								{
								    FracBank[0][fKazna] += cena4;
								}
								return true;
							}
						}
						case 4:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][bProducts] -= 5;
								PlayerInfo[playerid][pCash] -= cena5;
								GiveWeapon(playerid, 43, 10);
								SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena5;
								}
								else
								{
								    FracBank[0][fKazna] += cena5;
								}
								return true;
							}
						}
						case 5:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pRope] > 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя иметь больше 3 верёвок");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								PlayerInfo[playerid][pRope] += 1;
								SendClientMessage(playerid, COLOR_BLUE, "Вы купили верёвку для машины.Для прицепления - /towncar,для отцепления - /untown");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena6;
								}
								else
								{
								    FracBank[0][fKazna] += cena6;
								}
								return true;
							}
						}
						
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 5502:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*5;
				new cena2 = BizzInfo[h][bPrice]*10;
				new cena3 = BizzInfo[h][bPrice]*10;
				new cena4 = BizzInfo[h][bPrice]*5;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pBeer] > 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя носить больше 3 бутылок пива");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pBeer] += 1;
								PlayerInfo[playerid][pCash] -= cena1;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили бутылку пива.Выпить: /beer ");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
								return true;
							}
						}
						case 1:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pWine] > 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя носить больше 3 бутылок вина");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								PlayerInfo[playerid][pWine] += 1;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили бутылку вина. Выпить: /wine ");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
						case 2:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pSig] > 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не закончили ещё старую пачку");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								PlayerInfo[playerid][pSig] += 20;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили пачку сигарет. Курить: /smoke ");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
						case 3:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pSprite] > 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя носить больше 3 бутылок спрайта");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								PlayerInfo[playerid][pSprite] += 1;
								SendClientMessage(playerid, 0x6495EDFF, "Вы купили бутылку спрайта. Выпить: /sprite");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena4;
								}
								else
								{
								    FracBank[0][fKazna] += cena4;
								}
								return true;
							}
						}
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 5503:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*50;
				new cena2 = BizzInfo[h][bPrice]*50;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pPrez] > 99) return SendClientMessage(playerid, COLOR_GREY, "Нельзя носить больше 100 презервативов");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pPrez] += 5;
								PlayerInfo[playerid][pCash] -= cena1;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили пачку презервативов(5 шт.) ");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
								return true;
							}
						}
						case 1:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pBalon] > 14) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть перцовый балончик");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								PlayerInfo[playerid][pBalon] = 15;
								SendClientMessage(playerid, COLOR_BLUE, "Вы купили перцовый балончик(15 зарядов)");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 5504:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*10;
				new cena2 = BizzInfo[h][bPrice]*100;
				new cena3 = BizzInfo[h][bPrice]*2;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
					        if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
					        {
						        if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY,"Нет продуктов");
		                        if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                        GiveWeapon(playerid,14,1);
						        BizzInfo[h][bProducts]-=2;
						        PlayerInfo[playerid][pCash] -= cena1;
					            SendClientMessage(playerid, COLOR_BLUE, " Вы купили цветы ");
					            SendClientMessage(playerid, COLOR_BLUE, " Для того, чтобы подарить цветы введите: /gift [id] ");
 								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
						        return true;
	                        }
					    }
						case 1:
						{
					        if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
					        {
						        if(BizzInfo[h][bProducts] <= 0)return    SendClientMessage(playerid, COLOR_GREY,"Нет продуктов");
		                        if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		                        if(PlayerInfo[playerid][pFirework] > 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя носить больше 3 фейерверков");
                                BizzInfo[h][bProducts] -= 5;
						        PlayerInfo[playerid][pFirework] += 1;
						        PlayerInfo[playerid][pCash] -= cena2;
					            SendClientMessage(playerid, COLOR_BLUE, " Вы купили фейерверк ");
                                SendClientMessage(playerid, COLOR_BLUE, " Запустить фейерверк - /fire ");
 								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
						        return true;
	                        }
					    }
						case 2:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
						        new randone = 1 + random(11);
						        new randtwo = 1 + random(11);
						        new randtree = 1 + random(11);
						        PlayerInfo[playerid][pTicketNr][0] = randone;
						        PlayerInfo[playerid][pTicketNr][1] = randtwo;
						        PlayerInfo[playerid][pTicketNr][2] = randtree;
								PlayerInfo[playerid][pTicket] = 1;
						        SendClientMessage(playerid, COLOR_BLUE, "Билет удачи приобретен,если вам выпадут 3 одинаковых числа, то вы выиграете 10 000 вирт");
						        SendClientMessage(playerid, COLOR_BLUE, "(( Введите /prizeticket для того чтобы узнать номера, /giveticket чтобы получить выигрыш ))");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 7025:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 100) return SendClientMessage(playerid,COLOR_GREY,"Вам не хватает денег");
		                new Float:health;
		                GetPlayerHealth(playerid,health);
		                health += 5;
		                PlayerInfo[playerid][pCash] -= 100;
		                PlayerInfo[playerid][pSatiety] += 5;
		                SetPlayerHealthAC(playerid, health);
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы выпили минеральную воду((+5hp,+5 к сытости))");
						ApplyAnimation(playerid, "VENDING", "VEND_Drink_P", 4.1, 0, 0, 0, 0, 0);
						SetPlayerAttachedObject(playerid,9,1486,5,0.08,0.04,0,0,180,0,1,1,1);
						PlaySoundNearPlayer(playerid,42600);
						SetPlayerChatBubble(playerid, "пьёт минеральную воду",COLOR_PURPLE,10.0,10000);
						return true;
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid,COLOR_GREY,"Вам не хватает денег");
		                new Float:health;
		                GetPlayerHealth(playerid,health);
		                health += 10;
		                PlayerInfo[playerid][pCash] -= 200;
		                PlayerInfo[playerid][pSatiety] += 10;
		                SetPlayerHealthAC(playerid,health);
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы выпили колы((+10hp,+10 к сытости))");
						PlaySoundNearPlayer(playerid,42600);
                        SetPlayerAttachedObject(playerid,9,1455,5,0.08,0.04,0,0,180,0,1,1,1);
						ApplyAnimation(playerid, "VENDING", "VEND_Drink_P", 4.1, 0, 0, 0, 0, 0);
						SetPlayerChatBubble(playerid, "пьёт колу",COLOR_PURPLE,10.0,10000);
						return true;
		            }
		            case 2:
		            {
		                if(PlayerInfo[playerid][pCash] < 400) return SendClientMessage(playerid,COLOR_GREY,"Вам не хватает денег");
		                new Float:health;
		                GetPlayerHealth(playerid,health);
		                health += 20;
		                PlayerInfo[playerid][pCash] -= 400;
		                PlayerInfo[playerid][pSatiety] += 20;
		                SetPlayerHealthAC(playerid,health);
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы съели закуску((+20hp,+20 к сытости))");
					 	SetPlayerAttachedObject(playerid,9,2769,5,0.05,0.03,0,270.0,180.0,270.0,1.0,1.0,1.0);
						ApplyAnimation(playerid, "VENDING", "vend_eat1_P", 4.1, 0, 0, 0, 0, 0);
						PlaySoundNearPlayer(playerid,42601);
						SetPlayerChatBubble(playerid, "ест закуску",COLOR_PURPLE,10.0,10000);
						return true;
		            }
		        }
		    }
		    else
		    {
		        return true;
		    }
		}
		case 5505:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*50;
				new cena2 = BizzInfo[h][bPrice]*10;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pFishrod] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть удочка");
								BizzInfo[h][bProducts] -= 4;
								PlayerInfo[playerid][pFishrod] = 1;
								PlayerInfo[playerid][pCash] -= cena1;
								SendClientMessage(playerid, COLOR_BLUE, " Вы купили удочку. Теперь вы можете рыбачить в лодке.");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
								return true;
							}
						}
						case 1:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								if(PlayerInfo[playerid][pWorms] > 79) return SendClientMessage(playerid, COLOR_GREY, "Нельзя иметь больше 100 червей");
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								PlayerInfo[playerid][pWorms] += 20;
								SendClientMessage(playerid, COLOR_BLUE, "Вы купили 20 червей для рыбалки");
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 5506:
		{
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena1 = BizzInfo[h][bPrice]*50;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								new house = PlayerInfo[playerid][pPHousekey];
								HouseInfo[house][hHel] += 10;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena1;
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena1;
								}
								else
								{
								    FracBank[0][fKazna] += cena1;
								}
								SendClientMessage(playerid, 0x6495EDFF,"Вы купили в дом 10 аптечек");
								return true;
							}
						}
					}
				}
				else
				{
                    new bizinfo[200];
                    format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7]", bizinfo, "Выбрать", "Отмена");
					return true;
				}
			}
		}
		case 4489:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice];
				new cena2 = BizzInfo[h][bPrice] *2;
				new cena3 = BizzInfo[h][bPrice] *3;
				new cena4 = BizzInfo[h][bPrice] *4;
				new cena5 = BizzInfo[h][bPrice] *5;
				new cena6 = BizzInfo[h][bPrice] *6;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) маленькую пиццу");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena;
								}
								else
								{
								    FracBank[0][fKazna] += cena;
								}
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с грибами");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
	 						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с сыром");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena4)return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) большую пиццу");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								 								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena4;
								}
								else
								{
								    FracBank[0][fKazna] += cena4;
								}
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "съела(а) пиццу с ветчиной");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena5;
								}
								else
								{
								    FracBank[0][fKazna] += cena5;
								}
								return true;
							}
						}
						case 5:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0)return SendClientMessage(playerid, COLOR_GREY, "Нет продуктов");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "съела(а) пиццу с мясом");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena6;
								}
								else
								{
								    FracBank[0][fKazna] += cena6;
								}
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 2289:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				new cena = BizzInfo[h][bPrice]*5;
				new cena2 = BizzInfo[h][bPrice] *10;
				new cena3 = BizzInfo[h][bPrice] *15;
				new cena4 = BizzInfo[h][bPrice] *20;
				new cena5 = BizzInfo[h][bPrice] *25;
				new cena6 = BizzInfo[h][bPrice] *30;
				if(response)
				{
				    switch(listitem)
				    {
						case 0:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 30;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) воды");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena;
								}
								else
								{
								    FracBank[0][fKazna] += cena;
								}
								return true;
							}
						}
						case 1:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena2) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 40;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena2;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) соды");
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena2;
								}
								else
								{
								    FracBank[0][fKazna] += cena2;
								}
								return true;
							}
						}
						case 2:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerInfo[playerid][pSatiety] += 50;
								BizzInfo[h][bProducts]-= 2;
								PlayerInfo[playerid][pCash] -= cena3;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), "выпил(а) кока - колы",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena3;
								}
								else
								{
								    FracBank[0][fKazna] += cena3;
								}
								return true;
							}
						}
						case 3:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena4) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								PlayerInfo[playerid][pSatiety] += 60;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena4;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) бутылку пива",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena4;
								}
								else
								{
								    FracBank[0][fKazna] += cena4;
								}
								return true;
							}
						}
						case 4:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena5) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								PlayerInfo[playerid][pSatiety] += 70;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena5;
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) рюмку вина",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1)
								{
								    BizzInfo[h][b2Till] += cena5;
								}
								else
								{
								    FracBank[0][fKazna] += cena5;
								}
								return true;
							}
						}
						case 5:
						{
							new Float:health;
							GetPlayerHealth(playerid,health);
							if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]))
							{
								if(BizzInfo[h][bProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В баре нет напитков");
								if(PlayerInfo[playerid][pCash] < cena6) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
								PlayerDrunk[playerid] += 2;
								if(GetPlayerHealth(playerid, health) < 100)
								{
									if(GetPlayerDrunkLevel(playerid) < 20000)
									{
										SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
									}
								}
								PlayerInfo[playerid][pSatiety] += 80;
								BizzInfo[h][bProducts] -= 2;
								PlayerInfo[playerid][pCash] -= cena6;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(PlayerInfo[playerid][pSatiety] > 100)
								{
									PlayerInfo[playerid][pSatiety] = 100;
								}
								new string[30];
								format(string,sizeof(string), "Сытость пополнена до %d",PlayerInfo[playerid][pSatiety]);
								SendClientMessage(playerid,COLOR_WHITE,string);
								format(string,sizeof(string), "выпил(а) абсент",sendername);
								SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
								ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
								if(BizzInfo[h][bOwned] == 1) BizzInfo[h][b2Till] += cena6;
								else FracBank[0][fKazna] += cena6;
								return true;
							}
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
		case 2527:
		{
            if(response) ShowPlayerDialog(playerid,2526,DIALOG_STYLE_INPUT,"Выбор номера","Номер автомобиля:","Ок","Отмена");
            else return true;
		}
		case 2526:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2526,DIALOG_STYLE_INPUT,"Выбор номера","Номер автомобиля:","Ок","Отмена");
				new playernam[MAX_PLAYER_NAME];
				new string[100];
			    GetPlayerName(playerid,playernam,sizeof(playernam));
				format(string, sizeof(string), "%s.ini", playernam);
				new File = ini_openFile(string);
				ini_setString(File,"Numbercar",inputtext);
				ini_closeFile(File);
				SetVehicleNumberPlate(caridhouse[playerid], inputtext);
				format(string, sizeof(string), "Инструктор установил вам новый автомобильный номер: %s",(inputtext));
				SendClientMessage(playerid, 0x6495EDFF, string);
				SetPlayerChatBubble(playerid,"получил(а) новый номер",COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s получил(а) новый атомобильный номер", playernam);
			    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				return true;
			}
		}
		case 3443:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
 				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 0;
				SetPlayerFightingStyle(idd, FIGHT_STYLE_NORMAL);
				new string[50];
				format(string,sizeof(string), "Вы завершили урок с %s по Kong-Fu", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_LIGHTGREEN, "Тренер завершил с вами тренировку по Kong-Fu");
				if(PlayerInfo[idd][pJob] == 6 && PlayerInfo[idd][pMember] == 0)
		        {
                    SetPlayerSkin(idd, 49);
	 	        }
	 	        else
				{
				    if(PlayerInfo[idd][pMember] >= 1) { SetPlayerSkin(idd,PlayerInfo[idd][pModel]);}
		            if(PlayerInfo[idd][pMember] == 0) { SetPlayerSkin(idd,PlayerInfo[idd][pChar]);}
				}
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3444:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 3;
				if(PlayerInfo[playerid][pSex] == 0)
	            {
	            	SetPlayerSkin(playerid,193);
	            }
	            else
	            {
	                SetPlayerSkin(idd,81);
				}
				new string[50];
				format(string,sizeof(string), "Вы начали урок с %s по Kick-Box", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_GREEN, "Начните изучение Kick-Box на ринге справа");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 3441:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в спорт зале");
				GetPlayerName(idd, pname, sizeof(pname));
				FightSkilling[idd] = 2;
				if(PlayerInfo[playerid][pSex] == 0)
	            {
	            	SetPlayerSkin(idd,193);
	            }
	            else
	            {
	                SetPlayerSkin(idd,204);
				}
				new string[50];
				format(string,sizeof(string), "Вы начали урок с %s по Kong-Fu", pname);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(idd, COLOR_GREEN, "Начните изучение Kong-Fu у груши справа");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 2626:
		{
 			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2626,DIALOG_STYLE_INPUT, "Электронная почта", "Пожалуйста введите действующий адрес электронной почты,\nесли вы забудите пароль на него будет выслан новый", "Готово", "");
				ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившего вас на сервер", "Далее", "Пропуск");
				return true;
			}
 			else
			{
				return true;
			}
		}
		case 2625:
		{
 			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new string[256];
			if(response)
			{
				format(string, sizeof(string), "%s.ini", sendername);
				new File = ini_openFile(string);
				ini_setString(File, "pDrug",inputtext);
				ini_closeFile(File);
				PlayerInfo[playerid][pDrug] = strval(inputtext);
				strmid (PlayerInfo[playerid][pDrug], inputtext, 0, strlen(inputtext), 255);
				new pass[128];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				if(!strcmp(MD5_Hash(inputtext),pass,true))
				{
					OnPlayerLogin(playerid,MD5_Hash(inputtext));
				}
				return true;
			}
			else
			{
				new File = ini_openFile(string);
				new pass[128];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				if(!strcmp(MD5_Hash(inputtext),pass,true))
				{
					OnPlayerLogin(playerid,MD5_Hash(inputtext));
				}
			}
		}
		case 22572:
		{
		    new string[128];
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < sellgun3)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
					return true;
				}
				new name[MAX_PLAYER_NAME];
				new sail[MAX_PLAYER_NAME];
				GetPlayerName(sellgun4, name, sizeof(name));
				GetPlayerName(playerid, sail, sizeof(sail));
				PlayerInfo[sellgun][pCash] -= sellgun3;
				GiveWeapon(sellgun, sellgun1, sellgun2);
				PlayerInfo[sellgun4][pMaterials] -= (2*sellgun2);
				PlayerInfo[sellgun4][pCash] += sellgun3;
				format(string, sizeof(string), "%s сделал оружие из материалов и передал %s",name,sail);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
		case 9126:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 4999)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 5000;
				FracBank[0][fKazna] += 5000;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				return true;
			}
			else
			{
			    RemovePlayerFromVehicleAc(playerid);
			    TogglePlayerControllable(playerid, 1);
			    return true;
			}
		}
		case 9127:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				FracBank[0][fKazna] += 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Введите: /fare - чтобы начать работу");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9128:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				FracBank[0][fKazna] += 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /repair, /refill");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9130:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				FracBank[0][fKazna] += 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /hotdog");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9131:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				FracBank[0][fKazna] += 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /load, /sellprods, /pmenu");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 9132:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 500)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				PlayerInfo[playerid][pCash] -= 500;
				FracBank[0][fKazna] += 500;
				arenda[playerid] = 1;
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOD LUCK ON ROAD", 5000, 3);
				SendClientMessage(playerid, COLOR_GREEN, "Команды: /loadgas, /sellgas");
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 3001:
		{
	     	new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))return  ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
			  	new string[128];
	  			GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[SFN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(9,COLOR_YELLOW2, string);
				smspricesf = moneys;
			}
			else
			{
			    return true;
			}
	    }
		case 3002:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
			  	new string[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[LSN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				smspricels = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 3003:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 600)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				  	return true;
			  	}
			  	new string[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[LVN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(20,COLOR_YELLOW2, string);
				smspricelv = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 31:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				new string[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(9,COLOR_YELLOW2, string);
				addd[1] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 32:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				new string[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(16,COLOR_YELLOW2, string);
				addd[0] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 33:
	    {
			new sendername[MAX_PLAYER_NAME];
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 5000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
					ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				  	return true;
				}
				new string[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Цена за объявления, в размере %d вирт. установлена Главным редактором %s.", moneys, sendername);
				SendFamilyMessage(20,COLOR_YELLOW2, string);
				addd[2] = moneys;
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 11518:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
		case 11519:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PlayerInfo[playerid][pMember])
			{
				case 16: full = 0;
				case 9: full = 1;
				case 20: full = 2;
			}
			switch(listitem)
			{
	  			case 0:
				{
					if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Отправлять обьявления можно только с конца"); return AdvertList(playerid); }
					if(AdvertTime > gettime()) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Посылать объявление можно раз в 60 секунд!"); return AdvertList(playerid); }
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					new string[128];
					format(string,sizeof(string), "Обьявление: %s. Прислал: %s. Тел: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
					SendClientMessageToAll(TEAM_GROVE_COLOR, string);
					switch(PlayerInfo[playerid][pMember])
					{
						case 9:
						{
							format(string, 128, "        Отредактировал сотрудник SF News: %s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
						case 16:
						{
							format(string, 128, "        Отредактировал сотрудник LS News: %s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
						case 20:
						{
							format(string, 128, "        Отредактировал сотрудник LV News: %s", nameee);
							SendClientMessageToAll(TEAM_GROVE_COLOR, string);
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full] --;
					AdvertTime = gettime()+60;
					DeletePVar(playerid, "AdvertID");
	     			AdvertList(playerid);
				}
				case 1:
				{
					if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Читать обьявления можно только с конца"); return AdvertList(playerid); }
                    new string[128];
					format(string, sizeof(string), "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11520, 0, "Объявления", string, "Назад", "");
				}
	      		case 2:
				{
					if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Редактировать обьявления можно только с конца"); return AdvertList(playerid); }
                    new string[128];
					format(string, sizeof(string), "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
				}
	      		case 3:
	      		{
					if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Удалять обьявления можно только с конца"); return AdvertList(playerid); }
	      		    for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_GREEN, "Объявление удалено");
	      		    DeletePVar(playerid, "AdvertID");
	      		    AdvertList(playerid);
	      		}
	      		case 4:
				{
					if(GetPVarInt(playerid, "AdvertID") != TOTALADVERT[full]) { DeletePVar(playerid, "AdvertID"); SendClientMessage(playerid, COLOR_GREY, "Отправлять администрации обьявления можно только с конца"); return AdvertList(playerid); }
				  	new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
                    new string[128];
			  		format(string, sizeof(string), "[AD] Обьявление: %s. Прислал: %s (Отправил: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], nameee);
					ABroadCast(COLOR_LIGHTRED, string, 1);
	      			for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++) memcpy(AdvertInfo[i][full], AdvertInfo[i+1][full], 0, 512);
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
	      		    DeletePVar(playerid, "AdvertID");
	      		    AdvertList(playerid);
				}
			}
		}
		case 11520: ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		case 11521:
		{
		    if(!response) return ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		    new full = 0;
	    	switch(PlayerInfo[playerid][pMember])
			{
				case 9: full = 1;
				case 16: full = 0;
				case 20: full = 2;
			}
		    if(!strlen(inputtext))
			{
			    new string[128];
 				format(string,sizeof(string), "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
				return ShowPlayerDialog(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
		case 2223:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999))
						{
							if(PEfir[playerid] != 999)
							{
								PEfir[playerid] = 999;
								new string[54];
								format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
								SendFamilyMessage(9,COLOR_GREEN, string);
								return true;
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!");
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							new string[59];
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(9,COLOR_GREEN, string);
							return true;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
					}
					case 2:
					{
					    new string[70];
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, string);
						smssf = true;
						return true;
					}
					case 3:
					{
					    new string[73];
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, string);
						smssf = false;
						return true;
					}
					case 4: if(PlayerInfo[playerid][pLeader] == 9) ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11555", "Введите сумму", "Готово", "Отмена");
					case 5: if(PlayerInfo[playerid][pLeader] == 9) return ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					case 6: { AdvertList(playerid); }
				}
			}
			return true;
		}
		case 2224:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
						if(PEfir[playerid] != 999)
						{
							PEfir[playerid] = 999;
							new string[54];
							format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
							SendFamilyMessage(16,COLOR_BLUE, string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							new string[59];
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(16,COLOR_BLUE, string);
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
						}
					}
					case 2:
					{
					    new string[70];
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(16,COLOR_BLUE, string);
						smsls = 1;
						return true;
					}
					case 3:
					{
					    new string[73];
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(16,COLOR_BLUE, string);
						smsls = 0;
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11888", "Введите сумму", "Готово", "Отмена");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pLeader] == 16) return ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					}
					case 6: { AdvertList(playerid); }
				}
			}
			else
			{
				return true;
			}
		}
		case 2225:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0:
					{
						if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
						if(PEfir[playerid] != 999)
						{
							PEfir[playerid] = 999;
							new string[54];
							format(string, sizeof(string), "%s начал(а) прямой эфир", sendername);
							SendFamilyMessage(20,COLOR_BLUE, string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
					}
					case 1:
					{
						if(PEfir[playerid] != 255)
						{
							PEfir[playerid] = 255;
							new string[59];
							format(string, sizeof(string), "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(20,COLOR_BLUE, string);
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы не в эфире");
						}
					}
					case 2:
					{
					    new string[70];
						format(string, sizeof(string), "%s начал(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(20,COLOR_BLUE, string);
						smslv = 1;
					}
					case 3:
					{
					    new string[73];
						format(string, sizeof(string), "%s завершил(а) приём звонков от слушателей", sendername);
						SendFamilyMessage(20,COLOR_BLUE, string);
						smslv = 0;
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pLeader] == 20) return ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS на номер 11666", "Введите сумму", "Готово", "Отмена");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pLeader] == 20) return ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена Объявления", "Введите сумму", "Готово", "Отмена");
					}
					case 6: AdvertList(playerid);
				}
			}
			else return true;
		}
		case 10092:
	    {
			if(response)
			{
				ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_LIST, "Выберите работу", " Водитель Автобуса (( с 2 лвл ))\n Таксист (( с 2 лвл ))\n Продавец хотдогов (( с 2 лвл ))\n Развозчик продуктов (( с 3 лвл ))\n Механик (( с 3 лвл ))\n Инкассатор (( с 3 лвл ))\n Прораб (( с 5 лвл ))\n Тренер (( с 6 лвл ))\n Дальнобойщик (( с 6 лвл ))\n Детектив(( с 8 лвл ))\n Мусоросборщик(( с 2 лвл ))\n Машинист(( с 8 лвл ))", "Устроиться", "Выход");
				return true;
			}
			else return true;
		}
		case 70:
	    {
			if(response)
			{
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
						if (GetPlayerVirtualWorld(playerid) == i+50)
						{
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
							PlayerInfo[playerid][pInt] = 0;
							PlayerInfo[playerid][pLocal] = 255;
							return true;
						}
					}
				}
			}
			else return true;
		}
		case 10022:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
				ShowPlayerDialog(playerid,10023,DIALOG_STYLE_MSGBOX, "Экзамен по вождению","Ваш урок начат. Пройдите на парковку автошколы и сядьте в свободную машину.\nДалее вам будет показан маршрут, по которому вы должны будете проехать\nЕсли во время экзамена автомобиль попадет в аварию, то экзамен будет завершен", "Готово", "Отмена");
			}
			else return true;
		}
		case 10023:
		{
			if(response)
			{
				GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
				PlayerInfo[playerid][pCash]-= 1000;
				LessonStat[playerid] = 0;
				LessonCar[playerid] = 1;
				TakingLesson[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 1, -2077.9944,-126.3580,35.3203,-2077.2729,-92.4760,35.1641, 6.0);
				SendClientMessage(playerid, COLOR_GREEN, "Пройдите на парковку автошколы и сядьте в свободную машину");
				return true;
			}
			else return true;
		}
		case 554:
		{
		    if(response)
		    {
			    new sendername[MAX_PLAYER_NAME];
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 554, DIALOG_STYLE_INPUT, "Проезд", "Введите цену за проезд:", "Принять", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 1000) return	ShowPlayerDialog(playerid, 554, DIALOG_STYLE_INPUT, "Проезд", "Проезд должен быть не меньше 1 вирта,\nи не больше 1000 вирт \n\nВведите цену за проезд:", "Принять", "Отмена");
				AutoBusMoney[playerid] = moneys;
				AutoBusCheck[playerid] = 0;
				GetPlayerName(playerid,sendername,sizeof(sendername));
	   			if(AutoBusJob[playerid] == 1)
	   			{
                    new string[128];
	   			    format(string, sizeof(string), "%s начал(а) рейс. Маршрут: Межгородской LS -> SF -> LS. Проезд: %d вирт", sendername, AutoBusMoney[playerid]);
	   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "<< Межгородской LS -> SF -> LS >>\nЦена за проезд: %d",AutoBusMoney[playerid]);
					fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
					Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
					pAutoBusLS[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,1637.3256,-1133.6256,23.9063,1638.5587,-1163.1345,23.8965,5.0);
	   			    return true;
		  		}
		  		if(AutoBusJob[playerid] == 2)
	   			{
	   			    new string[128];
	   			    format(string, sizeof(string), "%s начал(а) рейс. Маршрут: Внутригородской SF. Проезд: %d вирт", sendername, AutoBusMoney[playerid]);
	   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "<< Внутригородской SF >>\nЦена за проезд: %d вирт",AutoBusMoney[playerid]);
					fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
					Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25 );
					pAutoBusSF[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,-1989.7347,107.2169,27.5391,-1991.6980,135.4355,27.1006,5.0);
	   			    return true;
		  		}
		  		if(AutoBusJob[playerid] == 3)
	   			{
	   			    new string[128];
	   			    format(string, sizeof(string), "%s начал(а) рейс. Маршрут: Внутригородской LV. Проезд: %d вирт", sendername, AutoBusMoney[playerid]);
	   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "<< Внутригородской LV >>\nЦена за проезд: %d вирт",AutoBusMoney[playerid]);
					fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
					Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25 );
					pAutoBusLV[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,2804.4146,1269.0553,10.3621,2817.6255,1265.3569,10.3652,5.0);
	   			    return true;
		  		}
	            return true;
		    }
		    else
		    {
                RemovePlayerFromVehicleAc(playerid);
		    	return true;
		    }
		}
		case 5549:
		{
		    if(response)
		    {
			    new sendername[MAX_PLAYER_NAME];
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 5549, DIALOG_STYLE_INPUT, "Проезд", "Введите цену за проезд:", "Принять", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1000 || moneys > 10000) return	ShowPlayerDialog(playerid, 5549, DIALOG_STYLE_INPUT, "Проезд", "Проезд должен быть не меньше 1000 вирта,\nи не больше 10000 вирт \n\nВведите цену за проезд:", "Принять", "Отмена");
				AutoBusMoney[playerid] = moneys;
				AutoBusCheck[playerid] = 0;
				GetPlayerName(playerid,sendername,sizeof(sendername));
		  		if(TrainJob[playerid] == 1)
	   			{
	   			    new string[128];
	   			    format(string, sizeof(string), "%s начал(а) рейс. Проезд: %d вирт", sendername, AutoBusMoney[playerid]);
	   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Цена за проезд: %d вирт",AutoBusMoney[playerid]);
					fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
					Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25 );
					pTrain[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,2764.7500,879.0110,12.2506,2864.7500,1321.6504,12.1256,5.0);
					SendClientMessage(playerid, COLOR_BLUE, "Вы начали рейс,отправляйтесь по маршруту,подбирайте людей и не забывайте про остановки");
	   			    return true;
		  		}
	            return true;
		    }
		    else
		    {
                SetPlayerPos(playerid, 1767.9900,-1948.2570,14.1096);
		    	return true;
		    }
		}
		case 11516:
		{
			if(response)
			{
				taxiexpp[GetPVarInt(playerid, "Taxist")] ++;
				DeletePVar(playerid, "Taxist");
			}
			else
			{
			    taxiexpp[GetPVarInt(playerid, "Taxist")] -1;
			    DeletePVar(playerid, "Taxist");
			}
		}
		case 8000:
		{
			if(response)
			{
			    new string[128];
				switch(listitem)
				{
					case 0:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
						SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Шляпа Курицы]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Шляпа Курицы]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 1:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Огонь на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Огонь на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 2:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Мигалка на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Мигалка на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 3:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Черная маска]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Черная маска]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 4:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Бандана №1]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №1]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 5:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Бандана №2]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №2]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 6:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Бандана №3]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №3]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 7:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Бандана №4]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №4]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 8:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Бандана №5]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Бандана №5]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 9:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Маска Дракона]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Маска Дракона]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 10:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Лазер на голову]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Лазер на голову]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 11:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
						{
							RemovePlayerAttachedObject(objectplayerid, 0);
							RemovePlayerAttachedObject(objectplayerid, 1);
							RemovePlayerAttachedObject(objectplayerid, 4);
						}
						SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Комплект всемогущий]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Комплект всемогущий]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 12:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Попугай на плечо]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Попугай на плечо]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 13:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
						SetPlayerAttachedObject(objectplayerid,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Яркий свет]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Яркий свет]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 14:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Большой М4 в руку]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Большой М4 в руку]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 15:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Пенис]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Пенис]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 16:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						format(string,sizeof(string),"Администратор %s выдал(а) вам объект [Костюм попугая]",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы выдали объект игроку %s [Костюм попугая]",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
					case 17:
					{
						new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
						GetPlayerName(objectplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						RemovePlayerAttachedObject(objectplayerid, 0);
						RemovePlayerAttachedObject(objectplayerid, 1);
						RemovePlayerAttachedObject(objectplayerid, 2);
						RemovePlayerAttachedObject(objectplayerid, 3);
						RemovePlayerAttachedObject(objectplayerid, 4);
						RemovePlayerAttachedObject(objectplayerid, 5);
						RemovePlayerAttachedObject(objectplayerid, 6);
						RemovePlayerAttachedObject(objectplayerid, 7);
						RemovePlayerAttachedObject(objectplayerid, 8);
						RemovePlayerAttachedObject(objectplayerid, 9);
						format(string,sizeof(string),"Администратор %s удалил(а) все ваши объекты",sendername);
						SendClientMessage(objectplayerid, COLOR_BLUE,string);
						format(string,sizeof(string),"Вы удалили все объекты игроку %s",giveplayer);
						SendClientMessage(playerid, COLOR_BLUE, string);
						return true;
					}
				}
			}
		}
		case 9025://MSGBOX
		{
		    if(response)return true;
		    else return true;
		}
		case 8004:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
					case 1: AddVehicleComponent(vehicleid,1087), PlaySoundNearPlayer(playerid,1133), ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nНитро", "Выбрать", "Назад");
					case 2:
					{
						new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
						switch(Model)
						{
							case 559,560,561,562,565: ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
							default: SendClientMessage(playerid,COLOR_WHITE, "Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
						}
					}
					case 3: ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжевый\nЧерный\nБелый", "Выбрать", "Назад");
					case 4: ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
					case 5: AddVehicleComponent(vehicleid, 1010);
				}
			}
			else
			return true;
		}
		case 8011:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: AddVehicleComponent(vehicleid,1073);
					case 1: AddVehicleComponent(vehicleid,1074);
					case 2: AddVehicleComponent(vehicleid,1076);
					case 3: AddVehicleComponent(vehicleid,1077);
					case 4: AddVehicleComponent(vehicleid,1075);
					case 5: AddVehicleComponent(vehicleid,1079);
					case 6: AddVehicleComponent(vehicleid,1078);
					case 7: AddVehicleComponent(vehicleid,1080);
					case 8: AddVehicleComponent(vehicleid,1081);
					case 9: AddVehicleComponent(vehicleid,1082);
					case 10: AddVehicleComponent(vehicleid,1083);
					case 11: AddVehicleComponent(vehicleid,1084);
					case 12: AddVehicleComponent(vehicleid,1085);
				}
				PlaySoundNearPlayer(playerid,1133);
				ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nНитро", "Выбрать", "Назад");
		}
		case 8013:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
					case 0: ChangeVehicleColor(vehicleid, 3, 3);
					case 1: ChangeVehicleColor(vehicleid, 79, 79);
					case 2: ChangeVehicleColor(vehicleid, 65, 65);
					case 3: ChangeVehicleColor(vehicleid, 86, 86);
					case 4: ChangeVehicleColor(vehicleid, 9, 9);
					case 5: ChangeVehicleColor(vehicleid, 6, 6);
					case 6: ChangeVehicleColor(vehicleid, 0, 0);
					case 7: ChangeVehicleColor(vehicleid, 1, 1);
				}
    			PlaySoundNearPlayer(playerid,1134);
				ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный \nГолубой \nЖелтый \nЗеленый \nСерый \nОранжевый \nЧерный \nБелый", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nНитро", "Выбрать", "Назад");
		}
		case 8014:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(vehicleid,listitem+1);
				PlaySoundNearPlayer(playerid,1134);
				ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1 \nВинил №2 \nВинил №3 ", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nНитро ", "Выбрать", "Назад");
		}
		case 8012:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				switch(listitem)
				{
					case 0:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1172);
							case 560: AddVehicleComponent(vehicleid,1170);
							case 565: AddVehicleComponent(vehicleid,1152);
							case 559: AddVehicleComponent(vehicleid,1173);
							case 561: AddVehicleComponent(vehicleid,1157);
							case 558: AddVehicleComponent(vehicleid,1165);
						}
      					PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 1:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1171);
							case 560: AddVehicleComponent(vehicleid,1169);
							case 565: AddVehicleComponent(vehicleid,1153);
							case 559: AddVehicleComponent(vehicleid,1160);
							case 561: AddVehicleComponent(vehicleid,1155);
							case 558: AddVehicleComponent(vehicleid,1166);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 2:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1148);
							case 560: AddVehicleComponent(vehicleid,1140);
							case 565: AddVehicleComponent(vehicleid,1151);
							case 559: AddVehicleComponent(vehicleid,1161);
							case 561: AddVehicleComponent(vehicleid,1156);
							case 558: AddVehicleComponent(vehicleid,1167);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 3:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1149);
							case 560: AddVehicleComponent(vehicleid,1141);
							case 565: AddVehicleComponent(vehicleid,1150);
							case 559: AddVehicleComponent(vehicleid,1159);
							case 561: AddVehicleComponent(vehicleid,1154);
							case 558: AddVehicleComponent(vehicleid,1168);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 4:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1146);
							case 560: AddVehicleComponent(vehicleid,1139);
							case 565: AddVehicleComponent(vehicleid,1050);
							case 559: AddVehicleComponent(vehicleid,1158);
							case 561: AddVehicleComponent(vehicleid,1160);
							case 558: AddVehicleComponent(vehicleid,1163);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 5:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1147);
							case 560: AddVehicleComponent(vehicleid,1138);
							case 565: AddVehicleComponent(vehicleid,1049);
							case 559: AddVehicleComponent(vehicleid,1162);
							case 561: AddVehicleComponent(vehicleid,1058);
							case 558: AddVehicleComponent(vehicleid,1164);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 6:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
							case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
							case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
							case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
							case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
							case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 7:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
							case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
							case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
							case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
							case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
							case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 8:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1035);
							case 560: AddVehicleComponent(vehicleid,1033);
							case 565: AddVehicleComponent(vehicleid,1052);
							case 559: AddVehicleComponent(vehicleid,1068);
							case 561: AddVehicleComponent(vehicleid,1061);
							case 558: AddVehicleComponent(vehicleid,1091);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 9:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1038);
							case 560: AddVehicleComponent(vehicleid,1032);
							case 565: AddVehicleComponent(vehicleid,1054);
							case 559: AddVehicleComponent(vehicleid,1067);
							case 561: AddVehicleComponent(vehicleid,1055);
							case 558: AddVehicleComponent(vehicleid,1088);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 10:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1037);
							case 560: AddVehicleComponent(vehicleid,1029);
							case 565: AddVehicleComponent(vehicleid,1045);
							case 559: AddVehicleComponent(vehicleid,1066);
							case 561: AddVehicleComponent(vehicleid,1059);
							case 558: AddVehicleComponent(vehicleid,1089);
						}
      					PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
					case 11:
					{
						switch(cartype)
						{
							case 562: AddVehicleComponent(vehicleid,1034);
							case 560: AddVehicleComponent(vehicleid,1028);
							case 565: AddVehicleComponent(vehicleid,1046);
							case 559: AddVehicleComponent(vehicleid,1065);
							case 561: AddVehicleComponent(vehicleid,1064);
							case 558: AddVehicleComponent(vehicleid,1092);
						}
						PlaySoundNearPlayer(playerid,1133);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы\nНитро", "Выбрать", "Назад");
			return true;
		}
		case 555:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
		            case 0: return ShowPlayerDialog(playerid, 556, DIALOG_STYLE_INPUT, "Выдать водительские права", "Введите ID того, кому вы хотите выдать права", "Выдать", "Отмена");
		            case 1: return ShowPlayerDialog(playerid, 557, DIALOG_STYLE_INPUT, "Выдать права на вождение воздушного транспорта", "Введите ID того, кому вы хотите выдать права", "Выдать", "Отмена");
		            case 2: return ShowPlayerDialog(playerid, 558, DIALOG_STYLE_INPUT, "Выдать лицензию на ловлю рыбы", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		            case 3: return ShowPlayerDialog(playerid, 559, DIALOG_STYLE_INPUT, "Выдать права на вождение водного транспорта", "Введите ID того, кому вы хотите выдать права", "Выдать", "Отмена");
		            case 4: return ShowPlayerDialog(playerid, 560, DIALOG_STYLE_INPUT, "Выдать разрешение на ношение оружия", "Введите ID того, кому вы хотите выдать разрешение", "Выдать", "Отмена");
		            case 5: return ShowPlayerDialog(playerid, 562, DIALOG_STYLE_INPUT, "Выдать лицензию на бизнес", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
		            case 6: return ShowPlayerDialog(playerid, 561, DIALOG_STYLE_INPUT, "Выдать комплект всех лицензий,прав и разрешений", "Введите ID того, кому вы хотите выдать лицензии", "Выдать", "Отмена");
		            case 7: return ShowPlayerDialog(playerid, 563, DIALOG_STYLE_INPUT, "Выдать новые автомобильные номера", "Введите ID того, кому вы хотите выдать номера", "Выдать", "Отмена");
				}
	        }
	    }
		case 556:
	    {
	        if(response)
	        {
	            new str[128];
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(PlayerInfo[idd][pCarLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть права");
				GetPlayerName(idd, pname, sizeof(pname));
	            format(str, sizeof(str), "Вы выдали права %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, str);
	            PlayerInfo[idd][pCarLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(str, sizeof(str), "Администратор %s выдал(а) водительские права %s[%d]",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , str);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали права");
	        }
	    }
		case 557:
	    {
	        if(response)
	        {
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(PlayerInfo[idd][pFlyLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть права на вождение воздушного транспорта");
	            GetPlayerName(idd, pname, sizeof(pname));
	            new string[128];
	            format(string, sizeof(string), "Вы выдали права на воздушный транспорт %s[%d]",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            PlayerInfo[idd][pFlyLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string, sizeof(string), "Администратор %s выдал(а) права на воздушный транспорт %s[%d]",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали права на воздушный транспорт");
	        }
	    }
		case 558:
	    {
	        if(response)
	        {
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pFishLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть разрешение на ловлю рыбы");
	                return true;
	            }
	            new string[128];
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string, sizeof(string), "Вы выдали лицензию на рыболовлю %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            PlayerInfo[idd][pFishLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string, sizeof(string), "Администоратор %s выдал(а) лицензию на ловлю рыбы %s[%d]",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали разрешение на ловлю рыбы");
	        }
	    }
		case 559:
	    {
	        if(response)
	        {
				new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
	            new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pBoatLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть права на водный транспорт");
	                return true;
	            }
	            new string559[128];
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string559, sizeof(string559), "Вы выдали права на водный транспорт игроку %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string559);
	            PlayerInfo[idd][pBoatLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string559, sizeof(string559), "Администратор %s выдал(а) права на водный транспорт игроку %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string559);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на водный транспорт");
	        }
	    }
		case 560:
	    {
	        if(response)
	        {
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pGunLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на ношение оружия");
	                return true;
	            }
	            new string560[128];
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string560, sizeof(string560), "Вы выдали лицензию на ношение оружия %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string560);
	            PlayerInfo[idd][pGunLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string560, sizeof(string560), "Администратор %s выдал(а) лицензию на ношение оружия %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string560);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на ношение оружия");
	        }
	    }
		case 561:
	    {
	        if(response)
	        {
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            new string561[128];
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string561, sizeof(string561), "Вы выдали все лицензии игроку %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
	            PlayerInfo[idd][pCarLic] = 1;
	            PlayerInfo[idd][pFishLic] = 1;
	            PlayerInfo[idd][pBoatLic] = 1;
	            PlayerInfo[idd][pFlyLic] = 1;
	            PlayerInfo[idd][pGunLic] = 1;
	            PlayerInfo[idd][pBisLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string561, sizeof(string561), "Администратор %s выдал(а) комплект лицензий %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали комплект всех лицензий");
	        }
	    }
		case 562:
	    {
	        if(response)
	        {
	            new pname[MAX_PLAYER_NAME];
	            new idd = strval(inputtext);
				new lname[MAX_PLAYER_NAME];
	            if(idd == INVALID_PLAYER_ID)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	                return true;
	            }
	            if(PlayerInfo[idd][pBisLic] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть лицензия на ношение оружия!");
	                return true;
	            }
	            new string561[128];
	            GetPlayerName(idd, pname, sizeof(pname));
	            format(string561, sizeof(string561), "Вы выдали лицензию на бизнес %s[%d].",pname, idd);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string561);
	            PlayerInfo[idd][pBisLic] = 1;
	            GetPlayerName(playerid, lname, sizeof(lname));
	            format(string561, sizeof(string561), "Администратор %s выдал(а) лицензию на бизнес %s[%d].",lname, pname, idd);
	            SendRadioMessage(11,COLOR_LIGHTBLUE , string561);
	            SendClientMessage(idd, COLOR_LIGHTBLUE, "Вам выдали лицензию на бизнес");
	        }
	    }
		case 563:
		{
            if(response)
		    {
		        new sendername[MAX_PLAYER_NAME];
 	            GetPlayerName(playerid, sendername, sizeof(sendername));
		        new invite[128];
		        new idd = strval(inputtext);
		        if(caridhouse[idd] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У человека нет машины!");
		        if(PlayerInfo[idd][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GRAD1, "У человека нет дома!");
		        format(invite,sizeof(invite), "Администратор %s предлагает вам установить новый автомобильный номер\n- Вы согласны?", sendername);
		        ShowPlayerDialog(idd,2527,DIALOG_STYLE_MSGBOX,"Соглашение",invite, "Да", "Нет");
		        SendClientMessage(playerid, 0x6495EDFF, "Человек должен подтвердить установку номера и выбрать номер");
	            return true;
		    }
		}
		case 20000:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 437)
						{
							SendClientMessage(playerid,COLOR_GREY, "Вам нужен внутригородской автобус!");
							RemovePlayerFromVehicleAc(playerid);
							return true;
						}
						AutoBusJob[playerid] = 1;
						ShowPlayerDialog(playerid, 554, DIALOG_STYLE_INPUT, "Цена проезда", "Введите цену за проезд:", "Готово", "Отмена");
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 20001:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 437)
						{
							SendClientMessage(playerid,COLOR_GREY, "Вам нужен внутригородской автобус!");
							RemovePlayerFromVehicleAc(playerid);
							return true;
						}
						AutoBusJob[playerid] = 2;
						ShowPlayerDialog(playerid, 554, DIALOG_STYLE_INPUT, "Цена проезда", "Введите цену за проезд:", "Готово", "Отмена");
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 20002:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 437)
						{
							SendClientMessage(playerid,COLOR_GREY, "Вам нужен внутригородской автобус!");
							RemovePlayerFromVehicleAc(playerid);
							return true;
						}
						AutoBusJob[playerid] = 3;
						ShowPlayerDialog(playerid, 554, DIALOG_STYLE_INPUT, "Цена проезда", "Введите цену за проезд:", "Готово", "Отмена");
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10122:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid, 11231,DIALOG_STYLE_INPUT, "Цена за куст", "Введите сумму", "Готово", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid, 11232,DIALOG_STYLE_INPUT, "Сбор урожая", "Введите что вы хотите выращивать\n [1] Хлеб\n [2] Марихуану\n [3] Картошку", "Готово", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid, 11239,DIALOG_STYLE_INPUT, "Изменить цену покупки зерна", "Введите сумму", "Готово", "Отмена");}
	                case 3:{ShowPlayerDialog(playerid, 11240,DIALOG_STYLE_INPUT, "Изменить цену продажи зерна", "Введите сумму", "Готово", "Отмена");}
	                case 4:{ShowPlayerDialog(playerid, 11238,DIALOG_STYLE_INPUT, "Пополнить банк фермы", "Введите сумму", "Готово", "Отмена");}
	                case 5:{ShowPlayerDialog(playerid, 11241,DIALOG_STYLE_INPUT, "Снять с банка фермы", "Введите сумму", "Готово", "Отмена");}
	                case 6:
					{
                        for(new f = 0; f < sizeof(FermInfo); f++)
                        {
                            if(FermInfo[f][vnutricar] >= 1000)
                            {
                                if(FermInfo[f][fcolichestvozerna] >= 10000) return SendClientMessage(playerid, COLOR_WHITE, "Склад полон!");
                                new string[40];
                                SendClientMessage(playerid, COLOR_WHITE, "Вы разгрузили грузовик!");
                                FermInfo[f][fcolichestvozerna] += FermInfo[f][vnutricar];
                                FermInfo[f][vnutricar] = 0;
                                format(string, sizeof(string), "В грузовике %d / 1000 зёрен",FermInfo[f][vnutricar]);
                                SendClientMessage(playerid, COLOR_GREEN,string);
                                CollectionStarted[playerid] = 1;
                                return true;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_WHITE, "Грузовик ещё не заполнен!");
                                new string[40];
                                format(string, sizeof(string), "В грузовике %d / 1000 зёрен",FermInfo[f][vnutricar]);
                                SendClientMessage(playerid, COLOR_GREEN,string);
                                return true;
                            }
                        }
                        return true;
                    }
	                case 7:{ShowPlayerDialog(playerid, 11233, DIALOG_STYLE_LIST, "Назначить Заместителя", "[1] Заместитель\n[2] Заместитель\n[3] Заместитель", "Выбрать", "Отмена");}
	                case 8:{ShowPlayerDialog(playerid, 11234, DIALOG_STYLE_LIST, "Назначить Фермера", "[1] Фермер\n[2] Фермер\n[3] Фермер\n[4] Фермер\n[5] Фермер", "Выбрать", "Отмена");}
	                case 9:{ShowPlayerDialog(playerid, 11235, DIALOG_STYLE_LIST, "Уволить Заместителя", "[1] Заместитель\n[2] Заместитель\n[3] Заместитель", "Выбрать", "Отмена");}
	                case 10:{ShowPlayerDialog(playerid, 11236, DIALOG_STYLE_LIST, "Уволить Фермера", "[1] Фермер\n[2] Фермер\n[3] Фермер\n[4] Фермер\n[5] Фермер", "Выбрать", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 11232:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11232,DIALOG_STYLE_INPUT, "Сбор урожая", "Введите что вы хотите выращивать\n [1] Хлеб\n [2] Марихуану\n [3] Картошку", "Готово", "Отмена");
                    new urogai;
                    urogai = strval(inputtext);
                    if(urogai < 1 || urogai > 3)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Неправильное значение");
                        ShowPlayerDialog(playerid,11232,DIALOG_STYLE_INPUT, "Сбор урожая", "Введите что вы хотите выращивать\n [1] Хлеб\n [2] Марихуану\n [3] Картошку", "Готово", "Отмена");
                        return true;
                    }
                    FermInfo[f][fProdukt] = urogai;
                    new prod[10];
                    switch(FermInfo[f][fProdukt])
                    {
                    	case 0: { prod = "нет"; }
                    	case 1: { prod = "пшеницу"; }
                    	case 2: { prod = "марихуану"; }
                    	case 3: { prod = "картошку"; }
                    }
                    new string[35];
                    format(string, sizeof(string), "Ваша ферма выращивает %s",prod);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
        
		case 11231:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11231,DIALOG_STYLE_INPUT, "Цена за куст", "Введите сумму", "Готово", "Отмена");
                    new moneys;
                    moneys = strval(inputtext);
                    if(moneys < 1 || moneys > 1000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 1000!");
                        ShowPlayerDialog(playerid,11231,DIALOG_STYLE_INPUT, "Цена за куст", "Введите сумму", "Готово", "Отмена");
                        return true;
                    }
                    FermInfo[f][fEntranceCost] = moneys;
                    new string[41];
                    format(string, sizeof(string), "Цена за куст составляет %d вирт",FermInfo[f][fEntranceCost]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11239:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid, 11239,DIALOG_STYLE_INPUT, "Изменить цену покупки зерна", "Введите сумму", "Готово", "Отмена");
                    new moneys;
                    moneys = strval(inputtext);
                    if(moneys < 1 || moneys > 10)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 10!");
                        ShowPlayerDialog(playerid, 11239,DIALOG_STYLE_INPUT, "Изменить цену покупки зерна", "Введите сумму", "Готово", "Отмена");
                        return true;
                    }
                    FermInfo[f][fCenazerno] = moneys;
                    new string[45];
                    format(string, sizeof(string), "Цена покупки зерна составляет %d вирт",FermInfo[f][fCenazerno]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11240:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid, 11240,DIALOG_STYLE_INPUT, "Изменить цену продажи зерна", "Введите сумму", "Готово", "Отмена");
                    new moneys;
                    moneys = strval(inputtext);
                    if(moneys < 10 || moneys > 15)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 10, максимальная - 15!");
                        ShowPlayerDialog(playerid, 11240,DIALOG_STYLE_INPUT, "Изменить цену продажи зерна", "Введите сумму", "Готово", "Отмена");
                        return true;
                    }
                    new string[47];
                    FermInfo[f][fcenaprod] = moneys;
                    format(string, sizeof(string), "Цена покупки зерна состfвляет %d вирт",FermInfo[f][fcenaprod]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11241:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid, 11241,DIALOG_STYLE_INPUT, "Снять с банка фермы", "Введите сумму", "Готово", "Отмена");        new moneys;
                    moneys = strval(inputtext);
                    if(FermInfo[f][fTill] < moneys) return SendClientMessage(playerid, COLOR_GREY, "На ферме не достаточно денег!");
                    if(moneys < 1 || moneys > 500000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 500000!");
                        ShowPlayerDialog(playerid, 11241,DIALOG_STYLE_INPUT, "Снять с банка фермы", "Введите сумму", "Готово", "Отмена");
                        return true;
                    }
                    FermInfo[f][fTill] -= moneys;
                    new string[45];
                    PlayerInfo[playerid][pBank] += moneys;
                    format(string, sizeof(string), "Банк фермы состовляет %d вирт",FermInfo[f][fTill]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    format(string, sizeof(string), "Счёт в банке составляет %d вирт",PlayerInfo[playerid][pBank]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    OnPlayerUpdateAc(playerid);
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11238:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11238,DIALOG_STYLE_INPUT, "Пополнить банк фермы", "Введите сумму", "Готово", "Отмена");
                    new moneys;
                    moneys = strval(inputtext);
                    if(PlayerInfo[playerid][pBank] < moneys) return SendClientMessage(playerid, COLOR_GREY, "В банке не достаточно денег!");
                    if(moneys < 1 || moneys > 500000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 500000!");
                        ShowPlayerDialog(playerid,11238,DIALOG_STYLE_INPUT, "Пополнить банк фермы", "Введите сумму", "Готово", "Отмена");
                        return true;
                    }
                    new string[45];
                    FermInfo[f][fTill] += moneys;
                    PlayerInfo[playerid][pBank] -= moneys;
                    format(string, sizeof(string), "Банк фермы составляет %d вирт",FermInfo[f][fTill]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    format(string, sizeof(string), "Остаток в банке составляет %d вирт",PlayerInfo[playerid][pBank]);
                    SendClientMessage(playerid, COLOR_WHITE,string);
                    OnPropUpdate();
                    OnPlayerUpdateAc(playerid);
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11233:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid,11221,DIALOG_STYLE_INPUT, "Назначить Заместителя", "Введите ID игрока", "Готово", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid,11222,DIALOG_STYLE_INPUT, "Назначить Заместителя", "Введите ID игрока", "Готово", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid,11223,DIALOG_STYLE_INPUT, "Назначить Заместителя", "Введите ID игрока", "Готово", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 11234:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid,11001,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid,11002,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid,11003,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");}
	                case 3:{ShowPlayerDialog(playerid,11004,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");}
	                case 4:{ShowPlayerDialog(playerid,11005,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 11235:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid,11061,DIALOG_STYLE_MSGBOX, "Уволилть Заместителя", "Вы уверены что хотите его уволить?", "Уволить", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid,11062,DIALOG_STYLE_MSGBOX, "Уволилть Заместителя", "Вы уверены что хотите его уволить?", "Уволить", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid,11063,DIALOG_STYLE_MSGBOX, "Уволилть Заместителя", "Вы уверены что хотите его уволить?", "Уволить", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 11061:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f1zams] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f1zams]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f1zams]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f1zams] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11062:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f2zams] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f2zams]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f2zams]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f2zams] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11063:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f3zams] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f3zams]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f3zams]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f3zams] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11236:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid,11064,DIALOG_STYLE_MSGBOX, "Уволить Фермера", "Вы уверены,что хотите его уволить?", "Уволить", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid,11065,DIALOG_STYLE_MSGBOX, "Уволить Фермера", "Вы уверены,что хотите его уволить?", "Уволить", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid,11066,DIALOG_STYLE_MSGBOX, "Уволить Фермера", "Вы уверены,что хотите его уволить?", "Уволить", "Отмена");}
	                case 3:{ShowPlayerDialog(playerid,11067,DIALOG_STYLE_MSGBOX, "Уволить Фермера", "Вы уверены,что хотите его уволить?", "Уволить", "Отмена");}
	                case 4:{ShowPlayerDialog(playerid,11068,DIALOG_STYLE_MSGBOX, "Уволить Фермера", "Вы уверены,что хотите его уволить?", "Уволить", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 11064:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f1fermers] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f1fermers]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f1fermers]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f1fermers] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11065:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f2fermers] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f2fermers]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f2fermers]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f2fermers] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11066:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f3fermers] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f3fermers]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f3fermers]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f3fermers] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11067:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f4fermers] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f4fermers]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f4fermers]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f4fermers] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11068:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][f5fermers] == 0) return SendClientMessage(playerid,COLOR_GREY, "Место свободно");
                    new string[53];
                    format(string,sizeof(string), "%s.ini",FermInfo[f][f5fermers]);
                    new File = ini_openFile(string);
                    ini_setInteger(File, "FermaJob",24);
                    ini_setInteger(File, "Ferma",24);
                    ini_setInteger(File, "Text",6);
                    ini_closeFile(File);
                    format(string,sizeof(string), "%s был успешно уволен!",FermInfo[f][f5fermers]);
                    SendClientMessage(playerid,COLOR_YELLOW,string);
                    FermInfo[f][f5fermers] = 0;
                    OnPropUpdate();
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 11221:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11221,DIALOG_STYLE_INPUT, "Назначить заместителя", "Введите ID игрока", "Готово", "Отмена");
                    new id = strval(inputtext);
                    if(IsPlayerConnected(id))
                    {
                        if(FermInfo[f][f1zams] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new sendername[MAX_PLAYER_NAME];
                        new string[66];
                        GetPlayerName(id, sendername, sizeof(sendername));
                        strmid(FermInfo[f][f1zams], sendername, 0, strlen(sendername), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост заместителя",sendername);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[id][pFermajob] = 2;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11221,DIALOG_STYLE_INPUT, "Назначить заместиителя", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11222:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11222,DIALOG_STYLE_INPUT, "Назначить заместителя", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f2zams] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[66];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f2zams], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост заместителя",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 2;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11222,DIALOG_STYLE_INPUT, "Назначить заместиителя", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11223:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11223,DIALOG_STYLE_INPUT, "Назначить заместителя", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f3zams] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[66];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f3zams], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост заместителя",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 2;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11223,DIALOG_STYLE_INPUT, "Назначить заместиителя", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11001:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11001,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f1fermers] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[62];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f1fermers], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост Фермера",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 3;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11001,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11002:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11002,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f2fermers] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[62];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f2fermers], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост Фермера",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 3;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11002,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11003:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11003,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f3fermers] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[62];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f3fermers], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост Фермера",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 3;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11003,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11004:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11004,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f4fermers] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[62];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f4fermers], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост Фермера",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 3;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11004,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 11005:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,11005,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                    new idd = strval(inputtext);
                    if(IsPlayerConnected(idd))
                    {
                        if(FermInfo[f][f5fermers] != 0) return SendClientMessage(playerid,COLOR_GREY, "Место занято");
                        new pname[MAX_PLAYER_NAME];
                        new string[62];
                        GetPlayerName(idd, pname, sizeof(pname));
                        strmid(FermInfo[f][f5fermers], pname, 0, strlen(pname), 24);
                        format(string, sizeof(string), "Вы назначили %s на пост Фермера",pname);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        PlayerInfo[idd][pFermajob] = 3;
                        OnPropUpdate();
                        return true;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                        ShowPlayerDialog(playerid,11005,DIALOG_STYLE_INPUT, "Назначить Фермера", "Введите ID игрока", "Готово", "Отмена");
                        return true;
                    }
                }
            }
            else
            {
                return true;
            }
        }
		case 1322:
        {
            if(response)
            {
                switch(listitem)
                {
	                case 0:{ShowPlayerDialog(playerid,1356, DIALOG_STYLE_INPUT, "Загрузка зерна", "Введите количество зерна на загрузку\nЗагрузка ведётся с со склада у грузщиков", "Готово", "Отмена");}
	                case 1:{ShowPlayerDialog(playerid,1357, DIALOG_STYLE_INPUT, "Разгрузка зерна на Ферму", "Введите количество зерна для разгрузки", "Готово", "Отмена");}
	                case 2:{ShowPlayerDialog(playerid,1358, DIALOG_STYLE_INPUT, "Загрузка урожая с Фермы", "Введите количество урожая для загузки", "Готово", "Отмена");}
	                case 3:{ShowPlayerDialog(playerid,1388, DIALOG_STYLE_INPUT, "Разгрузка урожая на Продажу", "Введите количество урожая", "Готово", "Отмена");}
                }
            }
            else
            {
                return true;
            }
        }
		case 1358:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозщик продуктов");
                    if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266)) return SendClientMessage(playerid,COLOR_GREY, "По близости нет ферм!");
                    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Не подходящая машина!");
                    if(MaterialsInTheWagon[tmpcar] >= 1000) return SendClientMessage(playerid,COLOR_GREY, "Грузовик полон!");
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,1358, DIALOG_STYLE_INPUT, "Загрузка урожая с Фермы", "Введите количество урожая для загузки", "Готово", "Отмена");
                    new zakup;
                    zakup = strval(inputtext);
                    if(zakup < 30 || zakup > 1000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальное количество урожая - 30, максимальная - 1000!");
                        ShowPlayerDialog(playerid,1358, DIALOG_STYLE_INPUT, "Загрузка урожая с Фермы", "Введите количество урожая для загузки", "Готово", "Отмена");
                        return true;
                    }
                    if(FermInfo[f][fcolichestvozerna]-zakup <= 0)return SendClientMessage(playerid,COLOR_GREY, "На складе не хватает зерна!");
                    if(PlayerInfo[playerid][pCash] <= FermInfo[f][fcenaprod]*zakup) return SendClientMessage(playerid, COLOR_WHITE, "У вас не хватает денег!");
                    PlayerInfo[playerid][pCash] -= FermInfo[f][fcenaprod]*zakup;
                    FermInfo[f][fcolichestvozerna] -= zakup;
                    MaterialsInTheWagon[tmpcar] += zakup;
                    if(MaterialsInTheWagon[tmpcar] >= 1000) { (MaterialsInTheWagon[tmpcar] = 1000);}
                    new string[128];
                    format(string, sizeof(string), "Вашу машину загрузили %d урожая на сумму %d",zakup,FermInfo[f][fcenaprod]*zakup);
                    SendClientMessage(playerid, COLOR_GREEN,string);
                    SendClientMessage(playerid, COLOR_WHITE, "Езжайте на Рынок чтобы продать урожай ((/gps - склады рынков))");
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 1356:
		{
			if(response)
			{
				for(new f = 0; f < sizeof(FermInfo); f++)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозщик продуктов");
					if(!PlayerToPoint(20, playerid,2192.3550,-2250.1377,15.0302)) return SendClientMessage(playerid,COLOR_GREY,"Вы не возле грузщиков");
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY,"Не подходящая машина");
					if(PlayerHaul[tmpcar-comptruck[0]][pLoad] >= 1000) return SendClientMessage(playerid,COLOR_GREY,"Грузовик полон");
					if(!strlen(inputtext))return ShowPlayerDialog(playerid,1356, DIALOG_STYLE_INPUT, "Покупка зерна на Ферму","Введите количество зерна для покупки", "Купить", "Отмена");
					new zakup;
					zakup = strval(inputtext);
					if(zakup < 30 || zakup > 1000)
					{
						SendClientMessage(playerid, COLOR_GREY, "Минимальное количество зерна - 30, максимальная - 1000!");
						ShowPlayerDialog(playerid,1356, DIALOG_STYLE_INPUT, "Покупка зерна на Ферму","Введите количество зерна для покупки", "Купить", "Отмена");
						return true;
					}
					if(zakup < PlayerHaul[tmpcar-comptruck[0]][pLoad]) return SendClientMessage(playerid,COLOR_GREY,"Неверное значение");
					if(PlayerInfo[playerid][pCash] <= FermInfo[f][frandoms]*zakup) return SendClientMessage(playerid, COLOR_WHITE,"У вас не хватает денег");
					PlayerInfo[playerid][pCash] -= FermInfo[f][frandoms]*zakup;
					PlayerHaul[tmpcar-comptruck[0]][pLoad] += zakup;
					if(PlayerHaul[tmpcar-comptruck[0]][pLoad] >= 1000) { (PlayerHaul[tmpcar-comptruck[0]][pLoad] = 1000);}
					Download[tmpcar] = true;
					new string[128];
					format(string, sizeof(string), "Вашу машину загрузили %d зерна на сумму %d",zakup,FermInfo[f][frandoms]*zakup);
					SendClientMessage(playerid, COLOR_GREEN,string);
					SendClientMessage(playerid, COLOR_WHITE,"Езжайте на Ферму чтобы разгрузить машину");
					return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 1357:
		{
			if(response)
			{
				for(new f = 0; f < sizeof(FermInfo); f++)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					if(!PlayerToPoint(10.0, playerid, -378.2744, -1432.7566, 25.7266)) return SendClientMessage(playerid,COLOR_GREY,"По близости нет ферм");
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY,"Не подходящая машина");
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid,1357, DIALOG_STYLE_INPUT, "Разгрузка зерна на Ферму","Введите количество зерна для разгрузки", "Разгруз", "Отмена");
					if(PlayerHaul[tmpcar-comptruck[0]][pLoad] == 0) return SendClientMessage(playerid,COLOR_GREY,"Грузовик пуст");
					new zakup;
					zakup = strval(inputtext);
					if(zakup < 1 || zakup > 1000)
					{
						SendClientMessage(playerid, COLOR_GREY, "Минимальное количество зерна - 1, максимальная - 1000");
						ShowPlayerDialog(playerid,1357, DIALOG_STYLE_INPUT, "Разгрузка зерна на Ферму","Введите количество зерна для разгрузки", "Разгруз", "Отмена");
						return true;
					}
					if(PlayerHaul[tmpcar-comptruck[0]][pLoad] < zakup) return SendClientMessage(playerid,COLOR_GREY,"Неверное значение");
					if(FermInfo[f][fTill] <= FermInfo[f][fCenazerno]*zakup) return SendClientMessage(playerid, COLOR_WHITE,"У Фермы не хватает денег");
					PlayerInfo[playerid][pCash] += FermInfo[f][fCenazerno]*zakup;
					FermInfo[f][fTill] -= FermInfo[f][fCenazerno]*zakup;
					FermInfo[f][fzernozakup] += zakup;
					PlayerHaul[tmpcar-comptruck[0]][pLoad] -= zakup;
					Download[tmpcar] = false;
					new string[128];
					format(string, sizeof(string), "Вы выгрузили %d зерна на сумму %d. В грузовике %d зерна",zakup,FermInfo[f][fCenazerno]*zakup,PlayerHaul[tmpcar-comptruck[0]][pLoad]);
					SendClientMessage(playerid, COLOR_GREEN,string);
					return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 1388:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(!PlayerToPoint(15, playerid,1640.7261,2318.2012,10.8203)) return SendClientMessage(playerid,COLOR_WHITE, "Вы должны быть возле склада((/gps->Важные места))");
                    new tmpcar = GetPlayerVehicleID(playerid);
                    if(Download[tmpcar] == true) return SendClientMessage(playerid,COLOR_GREY, "Вы не можете продать несозревшие зёрна,разгрузите их на ферму");
                    if(!strlen(inputtext))return ShowPlayerDialog(playerid,1388, DIALOG_STYLE_INPUT, "Разгрузка урожая на Продажу", "Введите количество урожая", "Готово", "Отмена");
                    if(MaterialsInTheWagon[tmpcar] == 0) return SendClientMessage(playerid,COLOR_GREY, "Грузовик пуст!");
                    new zakup;
                    zakup = strval(inputtext);
                    if(zakup < 1 || zakup > 1000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Минимальное количество урожая - 1, максимальная - 1000!");
                        ShowPlayerDialog(playerid,1388, DIALOG_STYLE_INPUT, "Разгрузка урожая на Продажу", "Введите количество урожая", "Готово", "Отмена");
                        return true;
                    }
                    if(MaterialsInTheWagon[tmpcar] < zakup) return SendClientMessage(playerid,COLOR_GREY, "Неверное значение!");
                    PlayerInfo[playerid][pCash] += FermInfo[f][frandoms2]*zakup;
                    MaterialsInTheWagon[tmpcar] -= zakup;
                    new string[128];
                    format(string, sizeof(string), "Вы продали %d урожай на сумму %d. В грузовике %d урожая",zakup,FermInfo[f][frandoms2]*zakup, MaterialsInTheWagon[tmpcar]);
                    SendClientMessage(playerid, COLOR_GREEN,string);
                    return true;
                }
            }
            else
            {
                return true;
            }
        }
		case 135:
        {
            if(response)
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FermInfo[f][flock] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ферма закрыта!");
                    if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы состоите во фракции");
                    if(FarmWorks[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже начали работу");
                    OldSkin[playerid] = GetPlayerSkin(playerid);
					SendClientMessage(playerid,COLOR_GREEN, "Рабочий день начат");
                    FarmWorks[playerid] = 1;
                    CollectionStarted[playerid] = 2;
                    if(PlayerInfo[playerid][pFermajob] == 3 && PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid,158);return true;}
                    if(PlayerInfo[playerid][pFermajob] == 3 && PlayerInfo[playerid][pSex] == 2){SetPlayerSkin(playerid,157);return true;}
                    if(PlayerInfo[playerid][pFermajob] == 2 && PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid,161);return true;}
                    if(PlayerInfo[playerid][pFermajob] == 2 && PlayerInfo[playerid][pSex] == 2){SetPlayerSkin(playerid,198);return true;}
                    if(PlayerInfo[playerid][pFerma] != 255 && PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid,34);return true;}
                    if(PlayerInfo[playerid][pFerma] != 255 && PlayerInfo[playerid][pSex] == 2){SetPlayerSkin(playerid,31);return true;}
                    if(PlayerInfo[playerid][pFermajob] == 255 && PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid,132);return true;}
                    if(PlayerInfo[playerid][pFermajob] == 255 && PlayerInfo[playerid][pSex] == 2){SetPlayerSkin(playerid,131);return true;}
                }
            }
            else
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    if(FarmWorks[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не начинали тут работу");
                    if(PlayerInfo[playerid][pFermazarobotok] != 0)
                    {
                        PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pFermazarobotok];
                    }
                    new string[10];
                    format(string, sizeof(string), "~g~+%d$",PlayerInfo[playerid][pFermazarobotok]);
                    GameTextForPlayer(playerid, string, 2000, 1);
                    FermInfo[f][fTill] -= PlayerInfo[playerid][pFermazarobotok];
                    PlayerInfo[playerid][pFermazarobotok] = 0;
                    SendClientMessage(playerid,COLOR_GREEN, "Зарплата выдана");
					SendClientMessage(playerid,COLOR_GREEN, "Рабочий день окончен");
                    FarmWorks[playerid] = 0;
                    SetPlayerSkin(playerid,OldSkin[playerid]);
                    DisablePlayerCheckpoint(playerid);
                    CollectionStarted[playerid] = 0;
                    WithBush[playerid] = false;
                }
            }
            return true;
        }
		case 9953:
        {
            if(response)
            {
				switch(listitem)
				{
	                case 0:
	                {
	                    new string[256];
	                    format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",
	                    BizzInfo[11][bMessage],BizzInfo[11][bPrice],BizzInfo[12][bMessage],BizzInfo[12][bPrice],BizzInfo[13][bMessage],BizzInfo[13][bPrice],BizzInfo[14][bMessage],BizzInfo[14][bPrice],BizzInfo[16][bMessage],BizzInfo[16][bPrice],BizzInfo[17][bMessage],BizzInfo[17][bPrice]);
	                    ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Магазины 24/7",string, "Назад", "");
	                }
	                case 1:
	                {
	                    new string[256];
						format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",SBizzInfo[0][sbMessage],SBizzInfo[0][sbPrice],SBizzInfo[1][sbMessage],SBizzInfo[1][sbPrice],SBizzInfo[2][sbMessage],SBizzInfo[2][sbPrice],
						SBizzInfo[3][sbMessage],SBizzInfo[3][sbPrice],SBizzInfo[4][sbMessage],SBizzInfo[4][sbPrice],SBizzInfo[5][sbMessage],SBizzInfo[5][sbPrice],SBizzInfo[6][sbMessage],SBizzInfo[6][sbPrice],SBizzInfo[7][sbMessage],SBizzInfo[7][sbPrice],SBizzInfo[8][sbMessage],SBizzInfo[8][sbPrice],SBizzInfo[9][sbMessage],SBizzInfo[9][sbPrice],SBizzInfo[10][sbMessage],SBizzInfo[10][sbPrice]);
						ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Заправки",string, "Назад", "");
	                }
	                case 2:
	                {
	                    new string[256];
	                    format(string, sizeof(string), "{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт\n{ffffff}%s {058AFF}%d вирт",
	                    BizzInfo[0][bMessage],BizzInfo[0][bPrice],BizzInfo[1][bMessage],BizzInfo[1][bPrice],BizzInfo[2][bMessage],BizzInfo[2][bPrice],BizzInfo[3][bMessage],BizzInfo[3][bPrice],BizzInfo[4][bMessage],BizzInfo[4][bPrice],BizzInfo[5][bMessage],BizzInfo[5][bPrice],BizzInfo[6][bMessage],BizzInfo[6][bPrice],BizzInfo[7][bMessage],BizzInfo[7][bPrice],BizzInfo[8][bMessage],BizzInfo[8][bPrice],BizzInfo[9][bMessage],BizzInfo[9][bPrice],BizzInfo[10][bMessage],BizzInfo[10][bPrice],
						BizzInfo[15][bMessage],BizzInfo[15][bPrice],BizzInfo[18][bMessage],BizzInfo[18][bPrice]);
	                    ShowPlayerDialog(playerid,9954,DIALOG_STYLE_MSGBOX, "Мониторинг цен: Клубы / Бары",string, "Назад", "");
	                }
				}
            }
            return true;
        }
        case 9201:
        {
            if(response)
			{
				switch(listitem)
				{
				    case 0: { SendClientMessage(playerid,COLOR_USE,"/put guns,/get guns,/materials get,/materials put"); }
				    case 1: { SendClientMessage(playerid,COLOR_USE,"/get drugs,/usedrugs,/selldrugs"); OnPlayerCommandText(playerid,"/usedrugs 3"); }
				    case 2: { SendClientMessage(playerid,COLOR_USE,"/escape - сбежать из тюрьмы,/givecopkeys"); OnPlayerCommandText(playerid,"/escape"); }
				    case 3: { SendClientMessage(playerid,COLOR_USE,"/givenewskeys"); }
				    case 4: { SendClientMessage(playerid,COLOR_USE,"/fish,продавать на складе продуктов"); }
				    case 5: { SendClientMessage(playerid,COLOR_USE,"Продавать на складе продуктов"); }
				    case 6: { SendClientMessage(playerid,COLOR_USE,"Нужны для рыбалки"); }
				    case 7: { SendClientMessage(playerid,COLOR_USE,"Автоматически защищает вас от маньяков"); }
				    case 8: { SendClientMessage(playerid,COLOR_USE,"/iznas,/minet"); }
				    case 9: { OnPlayerCommandText(playerid,"/wine"); }
				    case 10: { OnPlayerCommandText(playerid,"/beer"); }
				    case 11: { OnPlayerCommandText(playerid,"/smoke"); }
				    case 12: { OnPlayerCommandText(playerid,"/sprite"); }
				    case 13: { OnPlayerCommandText(playerid,"/fire"); }
				    case 14: { SendClientMessage(playerid,COLOR_USE,"/fish - на лодке или на пляже Санта-Мария"); }
				    case 15: { SendClientMessage(playerid,COLOR_USE,"/c,/call,/sms,/togphone,/takephone,/givephone"); }
				    case 16: { SendClientMessage(playerid,COLOR_USE,"/dir(ectory),/number"); }
				    case 17: { OnPlayerCommandText(playerid,"/music"); }
				    case 18: { SendClientMessage(playerid,COLOR_USE,"Если вам выпали 3 одинаковых числа, то пропишите /giveticket"); OnPlayerCommandText(playerid,"/prizeticket"); }
				}
			}
			else
			{
				return true;
			}
		}
		case 9203:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    GetPlayerWeaponData(friskid[playerid], 0, frwslot[0], frwslotammo[0]);
	                    GetPlayerWeaponData(friskid[playerid], 1, frwslot[1], frwslotammo[1]);
	                    GetPlayerWeaponData(friskid[playerid], 2, frwslot[2], frwslotammo[2]);
	                    GetPlayerWeaponData(friskid[playerid], 3, frwslot[3], frwslotammo[3]);
	                    GetPlayerWeaponData(friskid[playerid], 4, frwslot[4], frwslotammo[4]);
	                    GetPlayerWeaponData(friskid[playerid], 5, frwslot[5], frwslotammo[5]);
	                    GetPlayerWeaponData(friskid[playerid], 6, frwslot[6], frwslotammo[6]);
	                    GetPlayerWeaponData(friskid[playerid], 7, frwslot[7], frwslotammo[7]);
	                    GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
	                    GetPlayerWeaponData(friskid[playerid], 9, frwslot[9], frwslotammo[9]);
	                    GetPlayerWeaponData(friskid[playerid], 10, frwslot[10], frwslotammo[10]);
	                    GetPlayerWeaponData(friskid[playerid], 11, frwslot[11], frwslotammo[11]);
                        GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						DelGun(friskid[playerid]);
						new string[56];
						format(string,sizeof(string),"Вы изъяли всё оружие у %s",giveplayer);
						SendClientMessage(playerid,COLOR_BLUE,string);
						format(string,sizeof(string),"%s изъял у вас всё оружие",sendername);
						SendClientMessage(friskid[playerid],COLOR_GREY,string);
						format(string, sizeof(string), "изъял всё оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        ShowPlayerDialog(playerid, 9205, DIALOG_STYLE_MSGBOX,"Оружие","Хотите взять/заменить оружие?", "Да", "Нет");
					}
					case 1:
					{
                    	GetPlayerWeaponData(friskid[playerid], 0, frwslot[0], frwslotammo[0]);
						if(frwslot[0] == 1)
						{
							ShowPlayerDialog(playerid,9300,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Кастет","Изъять","Назад");
						}
						else
						{
							ShowPlayerDialog(playerid,9300,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Ничего","Готово","Назад");
						}
					}
					case 2:
					{
                    	GetPlayerWeaponData(friskid[playerid], 1, frwslot[1], frwslotammo[1]);
                    	if(frwslot[5] == 0)
						{
							ShowPlayerDialog(playerid,9305,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[1] == 2)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Клюшка","Изъять","Назад");
						}
						if(frwslot[1] == 3)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Дубинка","Изъять","Назад");
						}
						if(frwslot[1] == 4)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Нож","Изъять","Назад");
						}
						if(frwslot[1] == 5)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Бита","Изъять","Назад");
						}
						if(frwslot[1] == 6)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Лопата","Изъять","Назад");
						}
						if(frwslot[1] == 7)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Бильярдный кий","Изъять","Назад");
						}
						if(frwslot[1] == 8)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Катана","Изъять","Назад");
						}
						if(frwslot[1] == 9)
						{
							ShowPlayerDialog(playerid,9301,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Бензопила","Изъять","Назад");
						}
					}
					case 3:
					{
                    	GetPlayerWeaponData(friskid[playerid], 2, frwslot[2], frwslotammo[2]);
                    	if(frwslot[5] == 0)
						{
							ShowPlayerDialog(playerid,9302,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[2] == 22)
						{
						    new string[56];
							format(string,sizeof(string),"Colt 9mm(Пистолет)                      [%d пт.]",frwslotammo[2]);
							ShowPlayerDialog(playerid,9302,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[2] == 23)
						{
						    new string[56];
                            format(string,sizeof(string),"Silenced Colt 9mm(Пистолет с глушителем)[%d пт.]",frwslotammo[2]);
							ShowPlayerDialog(playerid,9302,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[2] == 24)
						{
						    new string[56];
                            format(string,sizeof(string),"Desert Eagle(Дигл)                      [%d пт.]",frwslotammo[2]);
							ShowPlayerDialog(playerid,9302,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 4:
					{
                    	GetPlayerWeaponData(friskid[playerid], 3, frwslot[3], frwslotammo[3]);
                    	if(frwslot[3] == 0)
						{
							ShowPlayerDialog(playerid,9303,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[3] == 25)
						{
						    new string[56];
                            format(string,sizeof(string),"Дробовик                   [%d пт.]",frwslotammo[3]);
							ShowPlayerDialog(playerid,9303,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[3] == 26)
						{
						    new string[56];
                            format(string,sizeof(string),"Обрез дробовика            [%d пт.]",frwslotammo[3]);
							ShowPlayerDialog(playerid,9303,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[3] == 27)
						{
						    new string[56];
                            format(string,sizeof(string),"SPAS-12(Боевой дробовик)   [%d пт.]",frwslotammo[3]);
							ShowPlayerDialog(playerid,9303,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 5:
					{
                    	GetPlayerWeaponData(friskid[playerid], 4, frwslot[4], frwslotammo[4]);
                    	if(frwslot[4] == 0)
						{
							ShowPlayerDialog(playerid,9304,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[4] == 28)
						{
						    new string[56];
                            format(string,sizeof(string),"UZI(Узи)[%d пт.]",frwslotammo[4]);
							ShowPlayerDialog(playerid,9304,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[4] == 29)
						{
						    new string[56];
						    format(string,sizeof(string),"MP5(SMG)[%d пт.]",frwslotammo[4]);
							ShowPlayerDialog(playerid,9304,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[4] == 32)
						{
						    new string[56];
						    format(string,sizeof(string),"Tec-9   [%d пт.]",frwslotammo[4]);
							ShowPlayerDialog(playerid,9304,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 6:
					{
                    	GetPlayerWeaponData(friskid[playerid], 5, frwslot[5], frwslotammo[5]);
                    	if(frwslot[5] == 0)
						{
							ShowPlayerDialog(playerid,9305,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[5] == 30)
						{
						    new string[56];
						    format(string,sizeof(string),"AK47   [%d пт.]",frwslotammo[5]);
							ShowPlayerDialog(playerid,9305,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[5] == 31)
						{
						    new string[56];
						    format(string,sizeof(string),"M16    [%d пт.]",frwslotammo[5]);
							ShowPlayerDialog(playerid,9305,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 7:
					{
                    	GetPlayerWeaponData(friskid[playerid], 6, frwslot[6], frwslotammo[6]);
                    	if(frwslot[6] == 0)
						{
							ShowPlayerDialog(playerid,9306,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[6] == 33)
						{
						    new string[56];
						    format(string,sizeof(string),"Winchester (Винтовка)   [%d пт.]",frwslotammo[6]);
							ShowPlayerDialog(playerid,9306,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[6] == 34)
						{
						    new string[56];
						    format(string,sizeof(string),"Снайперская Винтовка    [%d пт.]",frwslotammo[6]);
							ShowPlayerDialog(playerid,9306,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 8:
					{
                    	GetPlayerWeaponData(friskid[playerid], 7, frwslot[7], frwslotammo[7]);
                    	if(frwslot[7] == 0)
						{
							ShowPlayerDialog(playerid,9307,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[7] == 35)
						{
						    new string[56];
                            format(string,sizeof(string),"РПГ-7        [%d пт.]",frwslotammo[7]);
							ShowPlayerDialog(playerid,9307,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[7] == 36)
						{
						    new string[56];
						    format(string,sizeof(string),"РПГ-18       [%d пт.]",frwslotammo[7]);
							ShowPlayerDialog(playerid,9307,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[7] == 37)
						{
						    new string[56];
						    format(string,sizeof(string),"Огнемёт      [%d пт.]",frwslotammo[7]);
							ShowPlayerDialog(playerid,9307,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[7] == 38)
						{
						    new string[56];
						    format(string,sizeof(string),"M134(Пулемёт)[%d пт.]",frwslotammo[7]);
							ShowPlayerDialog(playerid,9307,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 9:
					{
                    	GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
	                   	if(frwslot[8] == 0)
						{
							ShowPlayerDialog(playerid,9308,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[8] == 16)
						{
						    new string[56];
						    format(string,sizeof(string),"Граната Mk2           [%d шт.]",frwslotammo[8]);
							ShowPlayerDialog(playerid,9308,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[8] == 17)
						{
						    new string[56];
						    format(string,sizeof(string),"Дымовая граната       [%d шт.]",frwslotammo[8]);
							ShowPlayerDialog(playerid,9308,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[8] == 18)
						{
						    new string[56];
						    format(string,sizeof(string),"Коктейль Молотова     [%d шт.]",frwslotammo[8]);
							ShowPlayerDialog(playerid,9308,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[8] == 39)
						{
						    new string[56];
							format(string,sizeof(string),"Самодельный взрывпакет[%d шт.]",frwslotammo[8]);
							ShowPlayerDialog(playerid,9308,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 10:
					{
                    	GetPlayerWeaponData(friskid[playerid], 9, frwslot[9], frwslotammo[9]);
                    	if(frwslot[9] == 0)
						{
							ShowPlayerDialog(playerid,9309,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[9] == 41)
	           			{
	           			    new string[56];
							format(string,sizeof(string),"Перцовый балончик[%d млитров]",frwslotammo[9]);
							ShowPlayerDialog(playerid,9309,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[9] == 42)
						{
						    new string[56];
						    format(string,sizeof(string),"Огнетушитель     [%d млитров]",frwslotammo[9]);
							ShowPlayerDialog(playerid,9309,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
						if(frwslot[9] == 43)
						{
						    new string[56];
						    format(string,sizeof(string),"Фотоаппарат      [%d снимков]",frwslotammo[9]);
							ShowPlayerDialog(playerid,9309,DIALOG_STYLE_LIST,"Обыск/Изъятие ",string,"Изъять","Назад");
						}
					}
					case 11:
					{
                    	GetPlayerWeaponData(friskid[playerid], 10, frwslot[10], frwslotammo[10]);
                    	if(frwslot[10] == 0)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[10] == 10)
	           			{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Розовый фалос","Изъять","Назад");
						}
						if(frwslot[10] == 11)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Маленький белый фалос","Изъять","Назад");
						}
						if(frwslot[10] == 12)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Большой белый фалос","Изъять","Назад");
						}
						if(frwslot[10] == 13)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Чёрный фалос","Изъять","Назад");
						}
						if(frwslot[10] == 14)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Букет цветов","Изъять","Назад");
						}
						if(frwslot[10] == 15)
						{
							ShowPlayerDialog(playerid,9310,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Трость","Изъять","Назад");
						}
					}
					case 12:
					{
                    	GetPlayerWeaponData(friskid[playerid], 10, frwslot[10], frwslotammo[10]);
                    	if(frwslot[10] == 0)
						{
							ShowPlayerDialog(playerid,9311,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Пусто","Готово","Назад");
						}
						if(frwslot[10] == 44)
						{
							ShowPlayerDialog(playerid,9311,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Прибор ночного видения(ПНВ)","Изъять","Назад");
						}
						if(frwslot[10] == 45)
						{
							ShowPlayerDialog(playerid,9311,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Прибор теплового видения(ПТВ)","Изъять","Назад");
						}
						if(frwslot[10] == 46)
						{
							ShowPlayerDialog(playerid,9311,DIALOG_STYLE_LIST,"Обыск/Изъятие ","Парашют","Изъять","Назад");
						}
					}
				}
			}
			else
   {
				new str[512];
                format(str, sizeof(str), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
                PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
				PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
                ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", str, "Взять", "Отмена");
				return true;
			}
		}
		case 9204:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(PlayerInfo[friskid[playerid]][pCarLic] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет водительских прав!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли водительские права у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас водительские права!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял водительские права у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pCarLic] = 0;
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
				    }
				    case 1:
				    {
				        if(PlayerInfo[friskid[playerid]][pFlyLic] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет лицензии на полёты!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли лицензию на полёты у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас лицензию на полёты!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял лицензию на полёты у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pFlyLic] = 0;
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
				    }
				    case 2:
				    {
				        if(PlayerInfo[friskid[playerid]][pBoatLic] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет лицензии на лодку!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли лицензию на лодку у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас лицензию на лодку!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял лицензию на лодку у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pBoatLic] = 0;
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
				    }
				    case 3:
				    {
				        if(PlayerInfo[friskid[playerid]][pGunLic] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет лицензии на оружие!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли лицензию на оружие у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас лицензию на оружие!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял лицензию на оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pGunLic] = 0;
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
				    }
				    case 4:
				    {
				        if(PlayerInfo[friskid[playerid]][pFishLic] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет водительских прав!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли лицензию на рыбалку у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас лицензию на рыбалку!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял лицензию на рыбалку у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pFishLic] = 0;
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
				    }
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
                PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
				PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
                ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", str, "Взять", "Отмена");
				return true;
			}
		}
        case 9202:
        {
            if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
					}
					case 1:
					{
                        new text1[12];
				        new text2[12];
				        new text3[12];
				        new text4[12];
				        new text5[12];
				        new string[256];
						if(PlayerInfo[friskid[playerid]][pCarLic]) { text1 = "Есть"; } else { text1 = "Отсутствует"; }
                        if(PlayerInfo[friskid[playerid]][pFlyLic]) { text4 = "Есть"; } else { text4 = "Отсутствует"; }
						if(PlayerInfo[friskid[playerid]][pBoatLic]) { text2 = "Есть"; } else { text2 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pFishLic]) { text3 = "Есть"; } else { text3 = "Отсутствует"; }
				        if(PlayerInfo[friskid[playerid]][pGunLic]) { text5 = "Есть"; } else { text5 = "Отсутствует"; }
						format(string,sizeof(string),"Водительские права:%s\nЛицензия на полёты:%s\nЛицензия на лодку:%s\nЛицензия на оружие:%s\nЛицензия на рыбалку:%s",text1,text4,text2,text5,text3);
                        ShowPlayerDialog(playerid, 9204, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять",string, "Изъять", "Назад");
					}
				    case 2:
					{
						if(PlayerInfo[friskid[playerid]][pMaterials] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет материалов!");
						if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли материалы у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все материалы!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял материалы у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pMaterials] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 3:
   					{
						if(PlayerInfo[friskid[playerid]][pDrugs] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет наркотиков!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли наркотики у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все наркотики!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял наркотики у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
						PlayerInfo[friskid[playerid]][pDrugs] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 4:
   					{
						if(PlayerInfo[friskid[playerid]][pKeys] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет ключей!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли ключи у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все ключи!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял ключи у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pKeys] += PlayerInfo[friskid[playerid]][pKeys];
						PlayerInfo[friskid[playerid]][pKeys] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 5:
   					{
						if(PlayerInfo[friskid[playerid]][pNkeys] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет ключей!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
                        if(PlayerInfo[friskid[playerid]][pMember] == 16 || PlayerInfo[friskid[playerid]][pMember] == 9 || PlayerInfo[friskid[playerid]][pMember] == 20) return SendClientMessage(playerid,COLOR_GREY,"Игрок работает в News!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли ключи(news) у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все ключи(news)!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял ключи(news) у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pNkeys] += PlayerInfo[friskid[playerid]][pNkeys];
						PlayerInfo[friskid[playerid]][pNkeys] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 6:
   					{
						if(PlayerInfo[friskid[playerid]][pFishes] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет рыбы!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли улов у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас весь улов!!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял рыбу у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pFishes] += PlayerInfo[friskid[playerid]][pFishes];
						PlayerInfo[friskid[playerid]][pFishes] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 7:
   					{
						if(PlayerInfo[friskid[playerid]][pMushrooms] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет грибов!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли грибы у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все грибы!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял грибы у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pMushrooms] += PlayerInfo[friskid[playerid]][pMushrooms];
						PlayerInfo[friskid[playerid]][pMushrooms] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 8:
   					{
						if(PlayerInfo[friskid[playerid]][pWorms] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет червей!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли червей у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас всех червей!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял червей у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pWorms] += PlayerInfo[friskid[playerid]][pWorms];
						PlayerInfo[friskid[playerid]][pWorms] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %d\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 9:
   					{
						if(PlayerInfo[friskid[playerid]][pBalon] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет балончика!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли балончик у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас балончик!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял балончик у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pBalon] += PlayerInfo[friskid[playerid]][pBalon];
						PlayerInfo[friskid[playerid]][pBalon] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 10:
   					{
						if(PlayerInfo[friskid[playerid]][pPrez] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет презервативов!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли презервативы у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все презервативы!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял презервативы у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pPrez] += PlayerInfo[friskid[playerid]][pPrez];
						PlayerInfo[friskid[playerid]][pPrez] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 11:
   					{
						if(PlayerInfo[friskid[playerid]][pWine] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет вина!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли вино у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все вино!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял вино у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pWine] += PlayerInfo[friskid[playerid]][pWine];
						PlayerInfo[friskid[playerid]][pWine] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %d\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 12:
   					{
						if(PlayerInfo[friskid[playerid]][pBeer] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет пива!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли пиво у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все пиво!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял пиво у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pBeer] += PlayerInfo[friskid[playerid]][pBeer];
						PlayerInfo[friskid[playerid]][pBeer] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 13:
   					{
						if(PlayerInfo[friskid[playerid]][pSig] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет сигарет!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли сигареты у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все сигареты!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял сигареты у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pSig] += PlayerInfo[friskid[playerid]][pSig];
						PlayerInfo[friskid[playerid]][pSig] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 14:
   					{
						if(PlayerInfo[friskid[playerid]][pSprite] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет спрайта!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли спрайт у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас весь спрайт!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял спрайт у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pSprite] += PlayerInfo[friskid[playerid]][pSprite];
						PlayerInfo[friskid[playerid]][pSprite] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 15:
   					{
						if(PlayerInfo[friskid[playerid]][pFirework] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет фейерверка!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли фейерверк у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас фейерверк!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял фейерверк у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pFirework] += PlayerInfo[friskid[playerid]][pFirework];
						PlayerInfo[friskid[playerid]][pFirework] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %d\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 16:
   					{
						if(PlayerInfo[friskid[playerid]][pFishrod] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет удочки!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли удочку у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас удочку!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял удочку у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pFishrod] += PlayerInfo[friskid[playerid]][pFishrod];
						PlayerInfo[friskid[playerid]][pFishrod] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 17:
   					{
						if(PlayerInfo[friskid[playerid]][pPhone] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет телефона!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли телефон у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас телефон!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял телефон у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pPhone] += PlayerInfo[friskid[playerid]][pPhone];
						PlayerInfo[friskid[playerid]][pPhone] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 18:
   					{
						if(PlayerInfo[friskid[playerid]][pDirectory] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет справочника!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли справочник у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас справочник!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял справочник у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pDirectory] += PlayerInfo[friskid[playerid]][pDirectory];
						PlayerInfo[friskid[playerid]][pDirectory] = 0;
                        PlayerInfo[playerid][pPhoneBook] += PlayerInfo[friskid[playerid]][pPhoneBook];
						PlayerInfo[friskid[playerid]][pPhoneBook] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 19:
   					{
						if(PlayerInfo[friskid[playerid]][pCDPlayer] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет MP3 плеера!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли MP3 плеер у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас MP3 плеер!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял MP3 плеер у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pCDPlayer] += PlayerInfo[friskid[playerid]][pCDPlayer];
						PlayerInfo[friskid[playerid]][pCDPlayer] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				    case 20:
   					{
						if(PlayerInfo[friskid[playerid]][pTicket] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет лотерейного билета!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли лотерейный билет у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас лотерейный билет!", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял лотерейный билет у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pTicket] += PlayerInfo[friskid[playerid]][pTicket];
						PlayerInfo[friskid[playerid]][pTicket] = 0;
						PlayerInfo[playerid][pTicketNr][0] = PlayerInfo[playerid][pTicketNr][0];
                        PlayerInfo[playerid][pTicketNr][1] = PlayerInfo[playerid][pTicketNr][1];
						PlayerInfo[playerid][pTicketNr][2] = PlayerInfo[playerid][pTicketNr][2];
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
	                case 21:
   					{
						if(PlayerInfo[friskid[playerid]][pRope] <= 0) return SendClientMessage(playerid,COLOR_GREY,"У игрока нет верёвки!");
                        if(GetDistanceBetweenPlayers(playerid,friskid[playerid]) > 7.0) return SendClientMessage(playerid,COLOR_GREY,"Игрок убежал!");
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[512];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы изъяли верёвку у %s", giveplayer);
					    SendClientMessage(playerid, COLOR_BLUE, string);
					    format(string, sizeof(string), "%s изъял у вас все тросы", sendername);
                        SendClientMessage(friskid[playerid], COLOR_GREY, string);
                        format(string, sizeof(string), "изъял тросы у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
                        PlayerInfo[playerid][pRope] += PlayerInfo[friskid[playerid]][pRope];
						PlayerInfo[friskid[playerid]][pRope] = 0;
                        format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %dг\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		                PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
	                    PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
						PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
						ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 9300:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
                        GetPlayerWeaponData(friskid[playerid], 0, frwslot[0], frwslotammo[0]);
		                if(frwslot[0] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 0, frwslot[0], frwslotammo[0]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 10; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 10; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 10; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 10; }
						else { armmatbi += 10; }
						new string[42];
		                SetPlayerAmmo(friskid[playerid], 1, 0);
		                format(string,sizeof(string),"%s изъял у вас кастет",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s кастет",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял кастет у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9301:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 1, frwslot[1], frwslotammo[1]);
		                if(frwslot[1] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 1, frwslot[1], frwslotammo[1]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 25; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 25; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 25; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 25; }
						else { armmatbi += 25; }
						new string[63];
		                SetPlayerAmmo(friskid[playerid], frwslot[1], 0);
		                format(string,sizeof(string),"%s изъял у вас рукопашное оружие",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s рукопашное оружие",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял рукопашное оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9302:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 2, frwslot[2], frwslotammo[2]);
		                if(frwslot[2] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 2, frwslot[2], frwslotammo[2]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 80; lspdmatbi += frwslotammo[2]; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 80; fbimats += frwslotammo[2]; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 80; sfpdmats += frwslotammo[2]; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 80; lvpdmats += frwslotammo[2]; }
						else { armmatbi += 80; armmatbi += frwslotammo[2]; }
						new string[54];
						GetPlayerWeaponData(friskid[playerid], 2, frwslot[2], frwslotammo[2]);
		                SetPlayerAmmo(friskid[playerid], frwslot[2], 0);
		                format(string,sizeof(string),"%s изъял у вас пистолет",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s пистолет",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял пистолет у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9303:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 3, frwslot[3], frwslotammo[3]);
		                if(frwslot[3] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 3, frwslot[3], frwslotammo[3]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[54];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 175; lspdmatbi += frwslotammo[3]; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 175; fbimats += frwslotammo[3]; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 175; sfpdmats += frwslotammo[3]; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 175; lvpdmats += frwslotammo[3]; }
						else { armmatbi += 175; armmatbi += frwslotammo[3]; }
						GetPlayerWeaponData(friskid[playerid], 3, frwslot[3], frwslotammo[3]);
		                SetPlayerAmmo(friskid[playerid], frwslot[3], 0);
		                format(string,sizeof(string),"%s изъял у вас дробовик",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s дробовик",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял дробовик у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9304:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 4, frwslot[4], frwslotammo[4]);
		                if(frwslot[4] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 4, frwslot[4], frwslotammo[4]);
						new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[53];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 110; lspdmatbi += frwslotammo[4]; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 110; fbimats += frwslotammo[4]; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 110; sfpdmats += frwslotammo[4]; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 110; lvpdmats += frwslotammo[4]; }
						else { armmatbi += 110; armmatbi += frwslotammo[4]; }
						GetPlayerWeaponData(friskid[playerid], 4, frwslot[4], frwslotammo[4]);
		                SetPlayerAmmo(friskid[playerid], frwslot[4], 0);
		                format(string,sizeof(string),"%s изъял у вас автомат",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s автомат",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял автомат у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9305:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 5, frwslot[5], frwslotammo[5]);
		                if(frwslot[5] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 5, frwslot[5], frwslotammo[5]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[64];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 225; lspdmatbi += frwslotammo[5]; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 225; fbimats += frwslotammo[5]; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 225; sfpdmats += frwslotammo[5]; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 225; lvpdmats += frwslotammo[5]; }
						else { armmatbi += 225; armmatbi += frwslotammo[5]; }
						GetPlayerWeaponData(friskid[playerid], 5, frwslot[5], frwslotammo[5]);
		                SetPlayerAmmo(friskid[playerid], frwslot[5], 0);
		                format(string,sizeof(string),"%s изъял у вас штурмовую винтовку",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s штурмовую винтовку",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял штурмовую винтовку у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9306:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 6, frwslot[6], frwslotammo[6]);
		                if(frwslot[1] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 6, frwslot[6], frwslotammo[6]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[54];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 200; lspdmatbi += frwslotammo[6]; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 200; fbimats += frwslotammo[6]; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 200; sfpdmats += frwslotammo[6]; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 200; lvpdmats += frwslotammo[6]; }
						else { armmatbi += 200; armmatbi += frwslotammo[6]; }
						GetPlayerWeaponData(friskid[playerid], 6, frwslot[6], frwslotammo[6]);
						SetPlayerAmmo(friskid[playerid], frwslot[6], 0);
		                format(string,sizeof(string),"%s изъял у вас винтовку",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s винтовку",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял винтовку у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9307:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 7, frwslot[7], frwslotammo[7]);
		                if(frwslot[1] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 7, frwslot[7], frwslotammo[7]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[61];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 850; lspdmatbi += frwslotammo[7]*5; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 850; fbimats += frwslotammo[7]*5; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 850; sfpdmats += frwslotammo[7]*5; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 850; lvpdmats += frwslotammo[7]*5; }
						else { armmatbi += 850; armmatbi += frwslotammo[7]*5; }
						GetPlayerWeaponData(friskid[playerid], 7, frwslot[7], frwslotammo[7]);
		                SetPlayerAmmo(friskid[playerid], frwslot[7], 0);
		                format(string,sizeof(string),"%s изъял у вас тяжёлое оружие",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s тяжёлое оружие",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял тяжёлое оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9308:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
		                if(frwslot[8] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
                        new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[64];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += frwslotammo[8]*50; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += frwslotammo[8]*50; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += frwslotammo[8]*50; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += frwslotammo[8]*50; }
						else { armmatbi += frwslotammo[8]*50; }
						GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
		                SetPlayerAmmo(friskid[playerid], frwslot[8], 0);
		                GetPlayerWeaponData(friskid[playerid], 8, frwslot[8], frwslotammo[8]);
		                format(string,sizeof(string),"%s изъял у вас метательное оружие",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s метательное оружие",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял метательное оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9309:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 9, frwslot[9], frwslotammo[9]);
		                if(frwslot[9] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 9, frwslot[9], frwslotammo[9]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[64];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 50; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 50; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 50; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 50; }
						else { armmatbi += 50; }
		                SetPlayerAmmo(friskid[playerid], frwslot[9], 0);
		                format(string,sizeof(string),"%s изъял у вас метательное оружие",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s метательное оружие",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял метательное оружие у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9310:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 10, frwslot[10], frwslotammo[10]);
		                if(frwslot[10] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 10, frwslot[10], frwslotammo[10]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[71];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 50; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 50; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 50; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 50; }
						else { armmatbi += 50; }
		                SetPlayerAmmo(friskid[playerid], frwslot[10], 0);
		                format(string,sizeof(string),"%s изъял у вас какой-то странный предмет",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у %s какой-то странный предмет",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял странный предмет у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 9311:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                GetPlayerWeaponData(friskid[playerid], 11, frwslot[11], frwslotammo[11]);
		                if(frwslot[11] == 0) return SendClientMessage(playerid,COLOR_GREY,"Нечего изымать!");
		                GetPlayerWeaponData(friskid[playerid], 11, frwslot[11], frwslotammo[11]);
		                new sendername[MAX_PLAYER_NAME];
	                    new giveplayer[MAX_PLAYER_NAME];
	                    new string[71];
	                    GetPlayerName(friskid[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember] == 1) { lspdmatbi += 50; }
						else if(PlayerInfo[playerid][pMember] == 2) { fbimats += 50; }
						else if(PlayerInfo[playerid][pMember] == 10) { sfpdmats += 50; }
						else if(PlayerInfo[playerid][pMember] == 21) { lvpdmats += 50; }
						else { armmatbi += 50; }
		                SetPlayerAmmo(friskid[playerid], frwslot[11], 0);
		                format(string,sizeof(string),"% изъял у вас какой-то странный предмет",sendername);
		                SendClientMessage(friskid[playerid],COLOR_GREY,string);
		                format(string,sizeof(string),"Вы изъяли у % какой-то странный предмет",giveplayer);
		                SendClientMessage(playerid,COLOR_BLUE,string);
		                format(string, sizeof(string), "изъял странный предмет у %s", giveplayer);
                        SetPlayerChatBubble(playerid, string,COLOR_PURPLE,30.0,10000);
		            }
		        }
		    }
		    else
			{
			    ShowPlayerDialog(playerid, 9203, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять","Изъять всё оружие\nНа руках\nРукопашное оружие\nПистолет\nДробовик\nSMG\nАвтомат\nВинтовка\nТяжёлое оружие\nМетательное оружие\nДоп.Слот\nПодарки\nДоп.Слот 2", "Посмотреть", "Назад");
			    return true;
			}
		}
		case 6047:
        {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						RemovePlayerAttachedObject(playerid, 1);
						SendClientMessage(playerid,COLOR_GREY,"Вы сняли очки с себя!");
         			}
         			case 1:
					{
						RemovePlayerAttachedObject(playerid, 2);
						SendClientMessage(playerid,COLOR_GREY,"Вы сняли маску с головы");
         			}
         			case 2:
					{
						RemovePlayerAttachedObject(playerid, 0);
						SendClientMessage(playerid,COLOR_GREY,"Вы сняли шапку с головы");
         			}
         			case 3:
					{
						RemovePlayerAttachedObject(playerid, 0);
						RemovePlayerAttachedObject(playerid, 1);
						RemovePlayerAttachedObject(playerid, 2);
						SendClientMessage(playerid,COLOR_GREY,"Вы сняли всё с головы");
         			}
         			case 4:
         			{
         			    SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pGlasses],2,PlayerInfo[playerid][pGlassesX],PlayerInfo[playerid][pGlassesY],PlayerInfo[playerid][pGlassesZ],PlayerInfo[playerid][pGlassesRX],PlayerInfo[playerid][pGlassesRY],PlayerInfo[playerid][pGlassesRZ],1.1,1.1,1.1);
         			    EditAttachedObject(playerid, 1);
       					SendClientMessage(playerid,COLOR_GREY,"Не забудьте нажать иконку сохранения чтобы сохранить объекты");
         			}
         			case 5:
         			{
         			    SetPlayerAttachedObject(playerid,2,PlayerInfo[playerid][pMask],18,PlayerInfo[playerid][pMaskX],PlayerInfo[playerid][pMaskY],PlayerInfo[playerid][pMaskZ],PlayerInfo[playerid][pMaskRX],PlayerInfo[playerid][pMaskRY],PlayerInfo[playerid][pMaskRZ],1.1,1.1,1.1);
         			    EditAttachedObject(playerid, 2);
       					SendClientMessage(playerid,COLOR_GREY,"Не забудьте нажать иконку сохранения чтобы сохранить объекты");
         			}
         			case 6:
         			{
         			    SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pHat],2,PlayerInfo[playerid][pHatX],PlayerInfo[playerid][pHatY],PlayerInfo[playerid][pHatZ],PlayerInfo[playerid][pHatRX],PlayerInfo[playerid][pHatRY],PlayerInfo[playerid][pHatRZ],1.1,1.1,1.1);
         			    EditAttachedObject(playerid, 0);
       					SendClientMessage(playerid,COLOR_GREY,"Не забудьте нажать иконку сохранения чтобы сохранить объекты");
         			}
					case 7:
					{
         			    if(PlayerInfo[playerid][pGlasses] != 0)
						{
        					SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pGlasses],2,PlayerInfo[playerid][pGlassesX],PlayerInfo[playerid][pGlassesY],PlayerInfo[playerid][pGlassesZ],PlayerInfo[playerid][pGlassesRX],PlayerInfo[playerid][pGlassesRY],PlayerInfo[playerid][pGlassesRZ],1.1,1.1,1.1);
        					SendClientMessage(playerid,COLOR_GREY,"Вы надели очки на голову");
						}
					}
					case 8:
					{
						if(PlayerInfo[playerid][pMask] != 0)
						{
        					SetPlayerAttachedObject(playerid,2,PlayerInfo[playerid][pMask],18,PlayerInfo[playerid][pMaskX],PlayerInfo[playerid][pMaskY],PlayerInfo[playerid][pMaskZ],PlayerInfo[playerid][pMaskRX],PlayerInfo[playerid][pMaskRY],PlayerInfo[playerid][pMaskRZ],1.1,1.1,1.1);
        					SendClientMessage(playerid,COLOR_GREY,"Вы надели маску на голову");
						}
					}
					case 9:
					{
						if(PlayerInfo[playerid][pHat] != 0)
						{
					        SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pHat],2,PlayerInfo[playerid][pHatX],PlayerInfo[playerid][pHatY],PlayerInfo[playerid][pHatZ],PlayerInfo[playerid][pHatRX],PlayerInfo[playerid][pHatRY],PlayerInfo[playerid][pHatRZ],1.1,1.1,1.1);
					        SendClientMessage(playerid,COLOR_GREY,"Вы надели шляпу на голову");
						}
					}
         			case 10:
					{
					    if(PlayerInfo[playerid][pHat] != 0)
						{
					        SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pHat],2,PlayerInfo[playerid][pHatX],PlayerInfo[playerid][pHatY],PlayerInfo[playerid][pHatZ],PlayerInfo[playerid][pHatRX],PlayerInfo[playerid][pHatRY],PlayerInfo[playerid][pHatRZ],1.1,1.1,1.1);
						}
						if(PlayerInfo[playerid][pGlasses] != 0)
						{
        					SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pGlasses],2,PlayerInfo[playerid][pGlassesX],PlayerInfo[playerid][pGlassesY],PlayerInfo[playerid][pGlassesZ],PlayerInfo[playerid][pGlassesRX],PlayerInfo[playerid][pGlassesRY],PlayerInfo[playerid][pGlassesRZ],1.1,1.1,1.1);
						}
						if(PlayerInfo[playerid][pMask] != 0)
						{
        					SetPlayerAttachedObject(playerid,2,PlayerInfo[playerid][pMask],18,PlayerInfo[playerid][pMaskX],PlayerInfo[playerid][pMaskY],PlayerInfo[playerid][pMaskZ],PlayerInfo[playerid][pMaskRX],PlayerInfo[playerid][pMaskRY],PlayerInfo[playerid][pMaskRZ],1.1,1.1,1.1);
						}
						SendClientMessage(playerid,COLOR_GREY,"Вы надели на голову всю одежду");
         			}
         		}
			}
			else
			{
         		ShowPlayerDialog(playerid,6046,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Голова\nТорс\nДоп.слот\nСнять всё\nОдеть всё","Дальше","Отмена");
				return true;
		    }
		}
		case 6048:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                RemovePlayerAttachedObject(playerid, 3);
		                SendClientMessage(playerid,COLOR_GREY,"Вы сняли с торса одежду");
		            }
		            case 1:
		            {
            			RemovePlayerAttachedObject(playerid, 5);
		                SendClientMessage(playerid,COLOR_GREY,"Вы сняли с левой руки одежду");
		            }
		            case 2:
		            {
		                RemovePlayerAttachedObject(playerid, 5);
						RemovePlayerAttachedObject(playerid, 3);
						RemovePlayerAttachedObject(playerid, 6);
		                SendClientMessage(playerid,COLOR_GREY,"Вы сняли одежду");
		            }
		            case 3:
		            {
						return true;
		            }
		            case 4:
		            {
		                if(PlayerInfo[playerid][pWatchs] != 0)
						{
        					SetPlayerAttachedObject(playerid,5,PlayerInfo[playerid][pWatchs],5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3);
        					SendClientMessage(playerid,COLOR_GREY,"Вы одели часы");
						}
		            }
		            case 5:
		            {
		                if(PlayerInfo[playerid][pWatchs] != 0)
						{
        					SetPlayerAttachedObject(playerid,5,PlayerInfo[playerid][pWatchs],5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3);
        					SendClientMessage(playerid,COLOR_GREY,"Вы одели всё на торс");
						}
		            }
		        }
		    }
		    else
		    {
         		ShowPlayerDialog(playerid,6046,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Голова\nТорс\nДоп.слот\nСнять всё\nОдеть всё","Дальше","Отмена");
				return true;
		    }
		}
		case 6049:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                RemovePlayerAttachedObject(playerid, 4);
		                SendClientMessage(playerid,COLOR_GREY,"Вы сняли всё с доп.слота");
		            }
		            case 1:
		            {
            			RemovePlayerAttachedObject(playerid, 4);
            			EditAttachedObject(playerid, 4);
		                SendClientMessage(playerid,COLOR_GREY,"Не забудьте нажать иконку сохранения чтобы сохранить объекты");
		            }
		            case 2:
		            {
		                if(PlayerInfo[playerid][pOther] != 0)
						{
        					SetPlayerAttachedObject(playerid,4,PlayerInfo[playerid][pOther],2,PlayerInfo[playerid][pOtherX],PlayerInfo[playerid][pOtherY],PlayerInfo[playerid][pOtherZ],PlayerInfo[playerid][pOtherRX],PlayerInfo[playerid][pOtherRY],PlayerInfo[playerid][pOtherRZ],1.1,1.1,1.1);
        					SendClientMessage(playerid,COLOR_GREY,"Вы одели доп.слот");
						}
		            }
		        }
		    }
		    else
		    {
         		ShowPlayerDialog(playerid,6046,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Голова\nТорс\nДоп.слот\nСнять всё\nОдеть всё","Дальше","Отмена");
				return true;
		    }
		}
		case 6046:
        {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						ShowPlayerDialog(playerid,6047,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Снять очки\nСнять маску\nСнять шапку\nСнять всё с головы\nПереместить очки\nПереместить маску\nПереместить шапку\nОдеть очки\nОдеть маску\nОдеть шапку\nОдеть всё","Дальше","Назад");
         				return true;
         			}
         			case 1:
					{
         				ShowPlayerDialog(playerid,6048,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Снять с торса\nСнять с левой руки\nСнять всё с торса\nОдеть на торс\nОдеть на левую руку\nОдеть всё","Дальше","Назад");
         				return true;
         			}
         			case 2:
					{
         				ShowPlayerDialog(playerid,6049,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Снять с доп.слота\nПереместить доп.слот\nОдеть доп.слот","Дальше","Назад");
         				return true;
         			}
         			case 3:
					{
						RemovePlayerAttachedObject(playerid, 0);
						RemovePlayerAttachedObject(playerid, 1);
						RemovePlayerAttachedObject(playerid, 2);
						RemovePlayerAttachedObject(playerid, 3);
						RemovePlayerAttachedObject(playerid, 4);
						RemovePlayerAttachedObject(playerid, 5);
						RemovePlayerAttachedObject(playerid, 6);
						RemovePlayerAttachedObject(playerid, 7);
						RemovePlayerAttachedObject(playerid, 8);
						RemovePlayerAttachedObject(playerid, 9);
						SendClientMessage(playerid,COLOR_GREY,"Вы сняли всё с себя!");
         			}
         			case 4:
					{
    					if(PlayerInfo[playerid][pHat] != 0)
						{
        					SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pHat],2,PlayerInfo[playerid][pHatX],PlayerInfo[playerid][pHatY],PlayerInfo[playerid][pHatZ],PlayerInfo[playerid][pHatRX],PlayerInfo[playerid][pHatRY],PlayerInfo[playerid][pHatRZ],1.1,1.1,1.1);
						}
						if(PlayerInfo[playerid][pGlasses] != 0)
						{
        					SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pGlasses],2,PlayerInfo[playerid][pGlassesX],PlayerInfo[playerid][pGlassesY],PlayerInfo[playerid][pGlassesZ],PlayerInfo[playerid][pGlassesRX],PlayerInfo[playerid][pGlassesRY],PlayerInfo[playerid][pGlassesRZ],1.1,1.1,1.1);
						}
						if(PlayerInfo[playerid][pMask] != 0)
						{
        					SetPlayerAttachedObject(playerid,2,PlayerInfo[playerid][pMask],18,PlayerInfo[playerid][pMaskX],PlayerInfo[playerid][pMaskY],PlayerInfo[playerid][pMaskZ],PlayerInfo[playerid][pMaskRX],PlayerInfo[playerid][pMaskRY],PlayerInfo[playerid][pMaskRZ],1.1,1.1,1.1);
						}
						if(PlayerInfo[playerid][pWatchs] != 0)
						{
        					SetPlayerAttachedObject(playerid,5,PlayerInfo[playerid][pWatchs],5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3);
						}
    					if(PlayerInfo[playerid][pOther] != 0)
						{
        					SetPlayerAttachedObject(playerid,4,PlayerInfo[playerid][pOther],2,PlayerInfo[playerid][pOtherX],PlayerInfo[playerid][pOtherY],PlayerInfo[playerid][pOtherZ],PlayerInfo[playerid][pOtherRX],PlayerInfo[playerid][pOtherRY],PlayerInfo[playerid][pOtherRZ],1.1,1.1,1.1);
						}
						SendClientMessage(playerid,COLOR_GREY,"Вы надели на себя всю одежду");
         			}
         			case 5:
         			{
         			    ShowPlayerDialog(playerid,6050,DIALOG_STYLE_LIST,"Одежда>>Выберите действие","Удалить шапку\nУдалить очки\nУдалить маску\nУдалить торс\nУдалить часы\nУдалить всё","Дальше","Назад");
         				return true;
         			}
         		}
			}
			else
			{
				return true;
		    }
		}
		case 6050:
		{
		    if(response)
			{
			    switch(listitem)
				{
	                case 0:
	                {
	                    PlayerInfo[playerid][pHat] = 0;
	                    PlayerInfo[playerid][pHatX] = 0;
	                    PlayerInfo[playerid][pHatY] = 0;
	                    PlayerInfo[playerid][pHatZ] = 0;
	                    PlayerInfo[playerid][pHatRX] = 0;
	                    PlayerInfo[playerid][pHatRY] = 0;
	                    PlayerInfo[playerid][pHatRZ] = 0;
	                    SendClientMessage(playerid,COLOR_GREY,"Вы удалили шапку из гардероба");
	                }
					case 1:
					{
					    PlayerInfo[playerid][pGlasses] = 0;
	                    PlayerInfo[playerid][pGlassesX] = 0;
	                    PlayerInfo[playerid][pGlassesY] = 0;
	                    PlayerInfo[playerid][pGlassesZ] = 0;
	                    PlayerInfo[playerid][pGlassesRX] = 0;
	                    PlayerInfo[playerid][pGlassesRY] = 0;
	                    PlayerInfo[playerid][pGlassesRZ] = 0;
	                    SendClientMessage(playerid,COLOR_GREY,"Вы удалили очки из гардероба");
					}
					case 2:
					{
					    PlayerInfo[playerid][pMask] = 0;
	                    PlayerInfo[playerid][pMaskX] = 0;
	                    PlayerInfo[playerid][pMaskY] = 0;
	                    PlayerInfo[playerid][pMaskZ] = 0;
	                    PlayerInfo[playerid][pMaskRX] = 0;
	                    PlayerInfo[playerid][pMaskRY] = 0;
	                    PlayerInfo[playerid][pMaskRZ] = 0;
	                    SendClientMessage(playerid,COLOR_GREY,"Вы удалили маску из гардероба");
					}
					case 3:
					{
					    SendClientMessage(playerid,COLOR_GREY,"Вы удалили слот 'торс' из гардероба");
					}
					case 4:
					{
					    PlayerInfo[playerid][pWatchs] = 0;
	                    SendClientMessage(playerid,COLOR_GREY,"Вы удалили часы из гардероба");
					}
					case 5:
					{
					    PlayerInfo[playerid][pHat] = 0;
	                    PlayerInfo[playerid][pHatX] = 0;
	                    PlayerInfo[playerid][pHatY] = 0;
	                    PlayerInfo[playerid][pHatZ] = 0;
	                    PlayerInfo[playerid][pHatRX] = 0;
	                    PlayerInfo[playerid][pHatRY] = 0;
	                    PlayerInfo[playerid][pHatRZ] = 0;
	                    PlayerInfo[playerid][pGlasses] = 0;
	                    PlayerInfo[playerid][pGlassesX] = 0;
	                    PlayerInfo[playerid][pGlassesY] = 0;
	                    PlayerInfo[playerid][pGlassesZ] = 0;
	                    PlayerInfo[playerid][pGlassesRX] = 0;
	                    PlayerInfo[playerid][pGlassesRY] = 0;
	                    PlayerInfo[playerid][pGlassesRZ] = 0;
	                    PlayerInfo[playerid][pMask] = 0;
	                    PlayerInfo[playerid][pMaskX] = 0;
	                    PlayerInfo[playerid][pMaskY] = 0;
	                    PlayerInfo[playerid][pMaskZ] = 0;
	                    PlayerInfo[playerid][pMaskRX] = 0;
	                    PlayerInfo[playerid][pMaskRY] = 0;
	                    PlayerInfo[playerid][pMaskRZ] = 0;
	                    PlayerInfo[playerid][pOther] = 0;
	                    PlayerInfo[playerid][pOtherX] = 0;
	                    PlayerInfo[playerid][pOtherY] = 0;
	                    PlayerInfo[playerid][pOtherZ] = 0;
	                    PlayerInfo[playerid][pOtherRX] = 0;
	                    PlayerInfo[playerid][pOtherRY] = 0;
	                    PlayerInfo[playerid][pOtherRZ] = 0;
	                    PlayerInfo[playerid][pWatchs] = 0;
	                    RemovePlayerAttachedObject(playerid, 0);
						RemovePlayerAttachedObject(playerid, 1);
						RemovePlayerAttachedObject(playerid, 2);
						RemovePlayerAttachedObject(playerid, 3);
						RemovePlayerAttachedObject(playerid, 4);
						RemovePlayerAttachedObject(playerid, 5);
						RemovePlayerAttachedObject(playerid, 6);
						RemovePlayerAttachedObject(playerid, 7);
						RemovePlayerAttachedObject(playerid, 8);
						RemovePlayerAttachedObject(playerid, 9);
	                    SendClientMessage(playerid,COLOR_RED,"Вы удалили всё из гардероба");
					}
				}
			}
			else
			{
				return true;
		    }
		}
		case 8512:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0:
				    {
				        PlayerInfo[playerid][pRCVeh] = 441;
				        PlayerInfo[playerid][pCash] -= 12000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили RC Бэндит за 12000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 1:
				    {
				        PlayerInfo[playerid][pRCVeh] = 464;
				        PlayerInfo[playerid][pCash] -= 23000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили RC Барон за 23000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 2:
				    {
				        PlayerInfo[playerid][pRCVeh] = 465;
				        PlayerInfo[playerid][pCash] -= 16000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили RC Рэйдер за 16000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 3:
				    {
				        PlayerInfo[playerid][pRCVeh] = 501;
				        PlayerInfo[playerid][pCash] -= 16000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили RC Гоблин за 16000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 4:
				    {
				        PlayerInfo[playerid][pRCVeh] = 564;
				        PlayerInfo[playerid][pCash] -= 14000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили RC Тайгер за 14000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 5:
				    {
				        PlayerInfo[playerid][pRCVeh] = 594;
				        PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили спрятанную в горшке камеру за 10000.Чтобы разместить используйте ((/rcvehon)).Развлекайтесь!");
				    }
				    case 6:
				    {
						SendClientMessage(playerid,COLOR_WHITE,"Радиоуправляемый транспорт в основном нужен для развлечения,но может помочь и кого-нибудь убить или проследить");
						SendClientMessage(playerid,COLOR_WHITE,"Незаменим в людных местах или местах с повышенной охраной,но при этом не забудьте хорошенько спрятаться.");
						ShowPlayerDialog(playerid,8512,DIALOG_STYLE_LIST, "Zero RC Магазин>>Покупка","RC машина(Бандит)\t\t\t[12000]\nRC самолёт(Барон)\t\t\t[23000]\nЗелёный RC вертолёт(Райдер)\t[16000]\nКрасный RC вертолёт(Гоблин)\t[16000]\nRC танк(Тайгер)\t\t\t[14000]\nГоршок с камерой\t\t\t[10000]\nИнструкция", "Купить", "Отмена");
	    				return true;
				    }
				}
			}
			else
			{
				return true;
			}
		}
        case 9200:
        {
			if(response)
			{
			    switch(listitem)
				{
	                case 0:
	                {
				    	GiveWeapon(playerid, 3, 1);
						GiveWeapon(playerid, 24, 100);
						SetPlayerArmourAC(playerid, 100);
						SetPlayerHealthAC(playerid, 100);
						PlayerInfo[playerid][pHP] = 100;
						if(PlayerInfo[playerid][pMember] == 1)
						{
							lspdmatbi -= 100;
						}
						if(PlayerInfo[playerid][pMember] == 10)
						{
							sfpdmats -= 100;
						}
						if(PlayerInfo[playerid][pMember] == 21)
						{
							lvpdmats -= 100;
						}
      					PlayerInfo[playerid][pGunLspdTime] = 300;
						SendClientMessage(playerid, COLOR_USE, "Вам выдано: Дубинка, Deagle (100)");
	                }
	                case 1:
	                {
						if(PlayerInfo[playerid][pRank] >= 6)
						{
							GiveWeapon(playerid, 3, 1);
							GiveWeapon(playerid, 24, 100);
							GiveWeapon(playerid, 29, 200);
							SetPlayerArmourAC(playerid, 100);
							SetPlayerHealthAC(playerid, 100);
							PlayerInfo[playerid][pHP] = 100;
							if(PlayerInfo[playerid][pMember] == 1)
							{
								lspdmatbi -= 100;
							}
							if(PlayerInfo[playerid][pMember] == 10)
							{
								sfpdmats -= 100;
							}
							if(PlayerInfo[playerid][pMember] == 21)
							{
								lvpdmats -= 100;
							}
							PlayerInfo[playerid][pGunLspdTime] = 300;
							SendClientMessage(playerid, COLOR_USE, "Вам выдано: Дубинка, Deagle (100), MP5(200)");
						}
                        else
						{
							SendClientMessage(playerid,COLOR_GREY,"Набор доступен только с 6 ранга");
						}
	                }
	                case 2:
	                {
	                    if(PlayerInfo[playerid][pRank] >= 12)
						{
	                    	GiveWeapon(playerid, 3, 1);
							GiveWeapon(playerid, 24, 100);
							GiveWeapon(playerid, 25, 100);
							SetPlayerArmourAC(playerid, 100);
							SetPlayerHealthAC(playerid, 100);
							PlayerInfo[playerid][pHP] = 100;
							if(PlayerInfo[playerid][pMember] == 1)
							{
								lspdmatbi -= 100;
							}
							if(PlayerInfo[playerid][pMember] == 10)
							{
								sfpdmats -= 100;
							}
							if(PlayerInfo[playerid][pMember] == 21)
							{
								lvpdmats -= 100;
							}
							PlayerInfo[playerid][pGunLspdTime] = 300;
							SendClientMessage(playerid, COLOR_USE, "Вам выдано: Дубинка, Deagle (100), Shotgun(100)");
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Набор доступен только с 12 ранга");
						}
	                }
	                case 3:
	                {
	                    if(PlayerInfo[playerid][pRank] >= 4)
						{
	                    	GiveWeapon(playerid, 17, 3);
							GiveWeapon(playerid, 44, 1);
							SendClientMessage(playerid, COLOR_USE, "Вам выдано: Каска, Броня, Противогаз,очки ночного видения,дымовые гранаты(3)");
							OnPlayerCommandText(playerid,"/shield");
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Набор доступен только с 4 ранга");
						}
	                }
				}
			}
			else
			{
			    return true;
			}
		}
        case 9901:
		{
			if(response)
			{
				InviteMan[playerid] = 1;
                PlayerInfo[playerid][pRank] = 1;
                PlayerInfo[playerid][pForma] = PlayerInfo[playerid][pMember];
                PlayerInfo[playerid][pJob] = 0;
			    ShowMenuToPlayer(1, playerid);
                SetPlayerToTeamColor(playerid);
                new sendername[MAX_PLAYER_NAME];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                new string[37];
				format(string, sizeof(string), "%s.ini", sendername);
				new File = ini_openFile(string);
				format(string, sizeof(string), "");
				ini_setString(File,"Prefix",string);
				ini_closeFile(File);
				OnPlayerUpdateAc(playerid);
				SendClientMessage(playerid, COLOR_REDD, "Для просмотра всех команд зайдите в /mm=>Команды сервера=>Мои команды");
		    }
		    else
	       	{
                SendClientMessage(playerid, 0x6495EDFF,"Вы отклонили приглашение о вступлении");
                PlayerInfo[playerid][pMember] = 0;
		   	}
		}
		case 9340:
		{
		    if(response)
			{
			    if(GetPlayerState(playerid) == 2)
			    {
				    new tmpcar = GetPlayerVehicleID(playerid);
				    SetVehiclePos(tmpcar,1519.5261,-1465.0420,9.5923);
                }
			    else
			    {
   				 SetPlayerPos(playerid,1519.5261,-1465.0420,9.5923);
			    }
			}
			else
			{
				return true;
			}
		}
		case 9341:
		{
		    if(response)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
                    if(GetPlayerVirtualWorld(playerid) == 1)
                    {
				        new tmpcar = GetPlayerVehicleID(playerid);
				        SetPlayerInterior(playerid, 0);
				        SetPlayerVirtualWorld(playerid,0);
				        SetVehiclePos(tmpcar,1459.6578,-1501.7847,13.1589);
				        SetVehicleZAngle(tmpcar, 10.2821);
				        LinkVehicleToInterior(tmpcar, 0);
				        SetVehicleVirtualWorld(tmpcar, 0);
				    }
				    if(GetPlayerVirtualWorld(playerid) == 2)
                    {
				        new tmpcar = GetPlayerVehicleID(playerid);
				        SetPlayerInterior(playerid, 0);
				        SetPlayerVirtualWorld(playerid,0);
				        SetVehiclePos(tmpcar,1351.8026,-1570.6809,13.1510);
				        SetVehicleZAngle(tmpcar, 167.6366);
				        LinkVehicleToInterior(tmpcar, 0);
				        SetVehicleVirtualWorld(tmpcar, 0);
				    }
				    if(GetPlayerVirtualWorld(playerid) == 3)
                    {
				        new tmpcar = GetPlayerVehicleID(playerid);
				        SetPlayerInterior(playerid, 0);
				        SetPlayerVirtualWorld(playerid,0);
				        SetVehiclePos(tmpcar,1279.8945,-1350.1272,12.9792);
				        SetVehicleZAngle(tmpcar, 91.3160);
				        LinkVehicleToInterior(tmpcar, 0);
				        SetVehicleVirtualWorld(tmpcar, 0);
				    }
                }
			}
			else
			{
				return true;
			}
		}
		case 9337:
		{
		    if(response)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetPlayerInterior(playerid, 1);
                    SetPlayerVirtualWorld(playerid,1);
                    SetVehiclePos(tmpcar,-1880.6790,-3115.0571,20.8914+1);
                    SetVehicleZAngle(tmpcar, 359.9256);
                    LinkVehicleToInterior(tmpcar, 1);
                    SetVehicleVirtualWorld(tmpcar, 1);
                    PlayerInfo[playerid][pAp] = 1;
                }
			}
			else
			{
				return true;
			}
		}
		case 9338:
		{
		    if(response)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetPlayerInterior(playerid, 1);
                    SetPlayerVirtualWorld(playerid,2);
                    SetVehiclePos(tmpcar,-1880.6790,-3115.0571,20.8914+1);
                    SetVehicleZAngle(tmpcar, 359.9256);
                    LinkVehicleToInterior(tmpcar, 1);
                    SetVehicleVirtualWorld(tmpcar, 2);
                    PlayerInfo[playerid][pAp] = 2;
                }
			}
			else
			{
				return true;
			}
		}
		case 9339:
		{
		    if(response)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetPlayerInterior(playerid, 1);
                    SetPlayerVirtualWorld(playerid,3);
                    SetVehiclePos(tmpcar,-1880.6790,-3115.0571,20.8914+1);
                    SetVehicleZAngle(tmpcar, 359.9256);
                    LinkVehicleToInterior(tmpcar, 1);
                    SetVehicleVirtualWorld(tmpcar, 3);
                    PlayerInfo[playerid][pAp] = 3;
                }
			}
			else
			{
				return true;
			}
		}
		case 9328:
		{
		    if(response)
			{
				SetPlayerPos(playerid,1563.0502,-1346.2605,330.0602);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
                SendClientMessage(playerid, 0x6495EDFF, "Вы получили джетпак");
                PlayerPlaySound(playerid,1052,0,0,0);
			}
			else
			{
				return true;
	        }
		}
		case 9935:
		{
			if(response)
			{
                SendClientMessage(playerid, 0x6495EDFF,"Вы приняли приглашение вступить в Наёмники");
                PlayerInfo[playerid][pMember] = 35;
                PlayerInfo[playerid][pRank] = 1;
                PlayerInfo[playerid][pJob] = 0;
                SetPlayerInterior(playerid, 0);
			    SetPlayerVirtualWorld(playerid, 0);
			    SetPlayerSpawn(playerid);
                OnPlayerUpdateAc(playerid);
		    }
		    else
	       {
                SendClientMessage(playerid, 0x6495EDFF,"Вы отклонили приглашение вступить в Наёмники");
		   }
		}
  		case 5228:
        {
            if(response)
            {
				switch(listitem)
				{
	                case 0:
	                {
                	    if(IsPlayerConnected(playerid))
                	    {
                    	    new playername3[MAX_PLAYER_NAME];
                            new string[128];
			                GetPlayerName(playerid, playername3, sizeof(playername3));
			                format(string, sizeof(string), "%s.ini", playername3);
			                new File = ini_openFile(string);
							format(string,sizeof(string),"Жертва:%s|Убийца:%s|Оружие:%s|Подтверждено уликами",victimd,murder,murdgun);
                            ini_setString(File, "Docs",string);
                            ini_closeFile(File);
                            DestroyPickup(deathplace);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, "Вы собрали улики!Введите /mydocs чтобы посмотреть,/showdocs чтобы показать полиции");
                        }
	                }
	                case 1:
	                {
						DestroyPickup(deathplace);
						SendClientMessage(playerid,COLOR_GREY, "Вы уничтожили улики");
	                }
	                case 2:
	                {
                        return true;
	                }
				}
            }
            return true;
        }
	 	case 10098:
	    {
	        if(response)
	        {
	        	if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в организации");
	        	switch(listitem)
	        	{
		            case 0:
		            {
			            if(PlayerInfo[playerid][pLevel] < 2) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
				        PlayerInfo[playerid][pJob] = 1;
					    SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Водителя автобуса");
				   		SendClientMessage(playerid, 0x6495EDFF, "(( Команды: /route - закончить работу водителя автобуса ))");
			        }
			        case 1:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
				        PlayerInfo[playerid][pJob] = 4;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Водителя такси");
			   			SendClientMessage(playerid, 0x6495EDFF, "(( Команды: /fare - закончить работу водителя такси ))");
			   			return true;
		   			}
		  			case 2:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 2) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
					    PlayerInfo[playerid][pJob] = 3;
					    SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Продавца хотдогов");
				   		SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
				   		return true;
		   			}
		     		case 3:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 3 лвл");
				        PlayerInfo[playerid][pJob] = 5;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Развозчика продуктов");
			   			SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			   			return true;
		   			}
		         	case 4:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 3 лвл");
					    PlayerInfo[playerid][pJob] = 2;
					    SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Механика");
				   		SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
				   		return true;
		   			}
		            case 5:
		  		  	{
			            if(PlayerInfo[playerid][pLevel] < 3) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 3 лвл");
				        PlayerInfo[playerid][pJob] = 8;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Инкассатора");
			   			SendClientMessage(playerid, 0x6495EDFF, "Отправляйтесь в машину инкассатора за банком LS");
			   			return true;
		   			}
		   			case 6:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 5) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 5 лвл");
				        PlayerInfo[playerid][pJob] = 7;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Прораба");
			   			SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			   			return true;
		   			}
		   			case 7:
		     		{
			            if(PlayerInfo[playerid][pLevel] < 6) return	SendClientMessage(playerid, COLOR_GREY, "Вам требуется 6 лвл");
				        PlayerInfo[playerid][pJob] = 6;
				        SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Тренера");
			   			SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			   			return true;
		   			}
					case 8:
		            {
			            if(PlayerInfo[playerid][pLevel] < 6) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 6 лвл");
			            PlayerInfo[playerid][pJob] = 10;
			            PlayerInfo[playerid][pDMgruz] = 2;
			            SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Дальнобойщика");
			            SendClientMessage(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды");
			            return true;
		            }
					case 9:
		            {
			            if(PlayerInfo[playerid][pLevel] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 8 лвл");
			            PlayerInfo[playerid][pJob] = 9;
			            SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Детектива.Для помощи введите /dochelp.");
			            SendClientMessage(playerid, 0x6495EDFF, "Чтобы посмотреть все команды введите /mm-->Команды сервера-->Мои команды");
			            SendClientMessage(playerid, 0x6495EDFF, "Офис вы можете найти в /gps-->Работы-->Агентство детективов");
			            return true;
		            }
		            case 10:
		            {
			            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 2 лвл");
			            PlayerInfo[playerid][pJob] = 11;
			            SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Мусоросборщика.");
			            SendClientMessage(playerid, 0x6495EDFF, "Мусоровозы вы можете найти в /gps-->Работы-->Стоянка для мусоровозов");
			            return true;
		            }
		            case 11:
		            {
			            if(PlayerInfo[playerid][pLevel] < 8) return SendClientMessage(playerid, COLOR_GREY, "Вам требуется 8 лвл");
			            PlayerInfo[playerid][pJob] = 12;
			            SendClientMessage(playerid, 0x6495EDFF, "Вас успешно приняли на работу Машиниста");
			            SendClientMessage(playerid, 0x6495EDFF, "Поезд  вы можете найти в /gps-->Работы-->Поезд");
			            return true;
		            }
				}
			}
	 		else
			{
				return true;
			}
		}
		case 10226:
		{
			if(response)
			{
			    SetPlayerPosFindZ(playerid, marX, marY, marZ);
			    SendClientMessage(playerid,COLOR_WHITE,"Вы были телепортированы");
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			    PlayerInfo[playerid][pInt] = 0;
			    return true;
			}
			else
			{
				return true;
			}
		}
		case 1010:
		{
			if(PlayerInfo[playerid][pMember] == 1)
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 1;
				    Police += 1;
				    return true;
				}
				else
				{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Police -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 2)
			{
		 		if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 2) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 2;
				    Police += 1;
				    return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Police -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 3)
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 3) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 3;
				    return true;
				}
				else
		    	{
			 		if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
			 		PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 4)
			{
		  		if(response)
				{
					if(PlayerInfo[playerid][pForma] == 4) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 4;
					Medics += 1;
					return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Medics -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 7)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 7) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 7;
					return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 8)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 8) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 8;
					return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 9)
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 9) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 9;
				    return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
		 		}
			}
			if(PlayerInfo[playerid][pMember] == 10)
			{
		 		if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 10) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 10;
				    Police += 1;
				    return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
			 		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			 		SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Police -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 11)
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 11) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 11;
				    return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 16)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 16) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 16;
				    return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 19)
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pForma] == 19) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				    SetPlayerToTeamColor(playerid);
				    PlayerInfo[playerid][pForma] = 19;
				    return true;
				}
				else
		    	{
			    	if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
			    	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			    	SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 20)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 20) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
				 	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				 	SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 20;
					return true;
				}
				else
		    	{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
			if(PlayerInfo[playerid][pMember] == 21)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 21) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 21;
					Police += 1;
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Police -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 22)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 22) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 22;
					Medics += 1;
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Medics -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 33)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 33) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 33;
					Medics += 1;
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
					Medics -= 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 34)
			{
				if(response)
				{
					if(PlayerInfo[playerid][pForma] == 34) return SendClientMessage(playerid, COLOR_GREY, "Вы уже надели форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pForma] = 34;
					return true;
				}
				else
				{
					if(PlayerInfo[playerid][pForma] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не надевали форму!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					PlayerInfo[playerid][pForma] = 0;
				}
			}
		}
		case 5522:
	    {
		   	if(response)
		    {
			    new Float:tempheal;
			    new string[30];
			    new sendername[MAX_PLAYER_NAME];
			    new giveplayer[MAX_PLAYER_NAME];
				GetPlayerHealth(playerid,tempheal);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(HealOffer[playerid], giveplayer, sizeof(giveplayer));
				if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) return SendClientMessage(HealOffer[playerid], COLOR_GREY, "У этого игрока нет столько денег на руках");
				PlayerInfo[HealOffer[playerid]][pCash] += HealPrice[playerid];
				PlayerInfo[playerid][pCash] -= HealPrice[playerid];
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~g~+100hp~n~~r~-$%d", HealPrice[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "~g~+100hp~n~~g~+$%d", HealPrice[playerid]);
				GameTextForPlayer(HealOffer[playerid], string, 5000, 1);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				PlayerStoned[playerid] = 0;
				startaddiction[playerid] = 0;
				send[playerid] = 0;
				return true;
			}
			else
			{
				return true;
			}
		}
		case 10032:
		{
	        if(response)
			{
		        ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
		        showhelp[playerid] = 1;
			}
			else
			{
				showhelp[playerid] = 0;
				return true;
			}
		}
		case 12:
		{
	        if(response)
	        {
				PEfir[playerid] = 999;
				Pefir[playerid] = 0;
				new rulesdialogg[1024];
				format(rulesdialogg,sizeof(rulesdialogg), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSGG[0],RulesMSGG[1],RulesMSGG[2],RulesMSGG[3],RulesMSGG[4],RulesMSGG[5],RulesMSGG[6],RulesMSGG[7],RulesMSGG[8],RulesMSGG[9],RulesMSGG[10],RulesMSGG[11],RulesMSGG[12],RulesMSGG[13],RulesMSGG[14],RulesMSGG[15],RulesMSGG[16],RulesMSGG[17],RulesMSGG[18],RulesMSGG[19],RulesMSGG[20],RulesMSGG[21]);
				ShowPlayerDialog(playerid,13,DIALOG_STYLE_MSGBOX, "Правила сервера", rulesdialogg, "Согласен", "Выйти");
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			GKick(playerid);
			}
		}
		case 13:
		{
	        if(response)
	        {
				ShowPlayerDialog(playerid, 1945, DIALOG_STYLE_INPUT, "Электронная почта", "Пожалуйста введите действующий адрес электронной почты,\nесли вы забудите пароль на него будет выслан новый", "Далее", "Пропуск");
				return true;
			}
			else
			{
				return true;
			}
		}
		case 1945:
		{
			if(response)
			{
				if(strlen(inputtext) > 5 && strfind(inputtext, "@", true) != -1 && strfind(inputtext, ".", true) != -1)
				{
					SendMail(inputtext, "@", "no-reply@nextagerp", "Настройка емайл.", "Здравствуйте!\nВаш емайл адрес, был указан в качестве контактного на сайте http://www.nextagerp.5nx.ru\n\n--\nС уважением,\nNext Age Role Play\nhttp://www.nextagerp.5nx.ru\n\nНе отвечайте на это письмо если вы считаете, что данное письмо пришло к вам по ошибке.");
					ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившиго вас на сервер", "Далее", "Пропуск");
				}
				else
				{
					ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившиго вас на сервер", "Далее", "Пропуск");
				}
			}
			else
			{
				ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившиго вас на сервер", "Далее", "Пропуск");
			}
			return true;
		}
		case 190:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 1);
						SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid,0);
						SetPlayerPos(playerid,1658.2383,-1693.4553,15.6094);
						SetPlayerFacingAngle(playerid, 175.8234);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 193:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 1);
						SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 1651.0940,-1640.0087,83.7788);
						SetPlayerFacingAngle(playerid, 317.3378);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
			    return true;
			}
		}
		case 194:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 2);
						SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -2052.4917,458.5779,35.1719);
						SetPlayerFacingAngle(playerid, 312.1454);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
			    return true;
			}
		}
		case 195:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 2);
						SetPlayerPos(playerid, 999.5983,1000.0139,1999.7999);
						SetPlayerFacingAngle(playerid, 268.4196);
					}
					case 1:
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -2047.0208,450.5458,139.7422);
						SetPlayerFacingAngle(playerid, 153.7635);
						SetPlayerVirtualWorld(playerid, 0);
					}
				}
			}
			else
			{
			    return true;
			}
		}
		case 7777:
		{
			if(response)
			{
				new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z,Float:Angle;
				GetPlayerPos(playerid,X,Y,Z);
				GetPlayerFacingAngle(playerid,Angle);
				GetPlayerPos(ChosenPlayer[playerid],PX,PY,PZ);
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pCarLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть вод. права");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
                        new string556[69];
						format(string556, sizeof(string556), "Вы выдали водительские права игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pCarLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам водительские права");
				    	return true;
		  			}
					case 1:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pFlyLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть эта лицензия");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[79];
				    	format(string556, sizeof(string556), "Вы выдали права на воздушный транспорт игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pFlyLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам права на воздушный транспорт");
				    	return true;
					}
					case 2:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pFishLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть эта лицензия");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[73];
				    	format(string556, sizeof(string556), "Вы выдали лицензию на ловлю рыбы игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pFishLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам лицензию на ловлю рыбы");
					}
					case 3:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pBoatLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть эта лицензия");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[76];
				    	format(string556, sizeof(string556), "Вы выдали права на водный транспорт игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pBoatLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам права на водный транспорт");
				    	return true;
					}
					case 4:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pGunLic] == 1) return	SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть эта лицензия");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[79];
				    	format(string556, sizeof(string556), "Вы выдали разрешение на ношение оружия игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pGunLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам разрешение на ношение оружия");
				    	return true;
					}
		            case 5:
		            {
						if(PlayerInfo[ChosenPlayer[playerid]][pBisLic] == 1) return	SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть эта лицензия");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[69];
				    	format(string556, sizeof(string556), "Вы выдали лицензию на бизнес игроку %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	PlayerInfo[ChosenPlayer[playerid]][pBisLic] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор выдал(а) вам лицензию на бизнес");
				    	return true;
					}
					case 6:
		           	{
						if(TakingLesson[ChosenPlayer[playerid]] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже начинали урок с этим игроком");
						if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
						new string556[58];
				    	format(string556, sizeof(string556), "Вы начали урок с игроком %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	TakingLesson[ChosenPlayer[playerid]] = 1;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор начал(а) с Вами урок по вождению");
				    	return true;
					}
		       		case 7:
					{
						if(TakingLesson[ChosenPlayer[playerid]] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали урок с этим игроком");
						new string556[61];
				    	format(string556, sizeof(string556), "Вы завершили урок с игроком %s",PlayerInfo[ChosenPlayer[playerid]][pName]);
				    	SendClientMessage(playerid, 0x6495EDFF, string556);
				    	TakingLesson[ChosenPlayer[playerid]] = 0;
				    	SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор завершил(а) с Вами урок по вождению");
				    	return true;
					}
					case 8:
				    {
					    if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вам нужен 3 ранг");
						new invite[128];
				        if(!ProxDetectorS(10.0, playerid, ChosenPlayer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				        if(caridhouse[ChosenPlayer[playerid]] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У игрока нет транспортного средства");
				        if(PlayerInfo[ChosenPlayer[playerid]][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GRAD1, "У игрока нет дома");
						format(invite,sizeof(invite), "Инструктор %s предлагает вам установить новый автомобильный номер\n- Вы согласны?", PlayerInfo[playerid][pName]);
						ShowPlayerDialog(ChosenPlayer[playerid],2527,DIALOG_STYLE_MSGBOX,"Соглашение",invite, "Да", "Нет");
						SendClientMessage(playerid, 0x6495EDFF, "Игрок должен подтвердить установку номера и выбрать номер");
						return true;
					}
				}
			}
			else return true;
		}
	    case 7779:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "Отобрать водительские права", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 1:	ShowPlayerDialog(playerid, 103, DIALOG_STYLE_INPUT, "Лицензия на возд.транспорт", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 104, DIALOG_STYLE_INPUT, "Лицензия на вылов рыбы", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 3:	ShowPlayerDialog(playerid, 105, DIALOG_STYLE_INPUT, "Лицензия на вод.транспорт", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 4:	ShowPlayerDialog(playerid, 106, DIALOG_STYLE_INPUT, "Лицензия на ношение оружия", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 5:	ShowPlayerDialog(playerid, 108, DIALOG_STYLE_INPUT, "Отобрать наркоту", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 6:	ShowPlayerDialog(playerid, 109, DIALOG_STYLE_INPUT, "Отобрать оружие", "\tВведите [id] игрока", "Отобрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 110, DIALOG_STYLE_INPUT, "Отобрать материалы", "\tВведите [id] игрока", "Отобрать", "Отмена");
				}
			}
			return true;
		}
		case 100:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_RED, "[Ошибка] Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Игрок далеко от вас");
				new string[68];
				format(string, sizeof(string), "%s забрал(а) у вас водительские права", PlayerInfo[playerid][pName]);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pCarLic] = 0;
			    format(string, sizeof(string), "Вы забрали водительские права у %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    RemovePlayerFromVehicleAc(playerid);
			    return true;
			}
	   		return true;
		}
		case 103:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				new string[84];
				format(string, sizeof(string), "%s забрал(а) у вас права на воздушный транспорт", PlayerInfo[playerid][pName]);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pFlyLic] = 0;
			    format(string, sizeof(string), "Вы забрали права на воздушный транспорт у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
			}
			return true;
		}
		case 104:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				new string[76];
				format(string, sizeof(string), "%s забрал(а) у вас лицензию на ловлю рыбы", PlayerInfo[playerid][pName]);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pBoatLic] = 0;
			    format(string, sizeof(string), "Вы забрали лицензию на ловлю рыбы у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
		    }
	    	return true;
		}
		case 105:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		        new string[82];
				format(string, sizeof(string), "%s забрал(а) у вас лицензию на водный транспорт", PlayerInfo[playerid][pName]);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pFishLic] = 0;
			    format(string, sizeof(string), "Вы забрали лицензию на водный транспорт у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
			}
			return true;
		}
		case 106:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
	         	new string[80];
				format(string, sizeof(string), "%s забрал(а) у вас лицензию на ношение оружия", PlayerInfo[playerid][pName]);
				SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pGunLic] = 0;
			    format(string, sizeof(string), "Вы забрали лицензию на ношение оружия у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
		    }
			return true;
		}
		case 108:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				new string[63];
				format(string, sizeof(string), "%s забрал(а) у вас все наркотики", PlayerInfo[playerid][pName]);
			 	SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pDrugs] = 0;
			    format(string, sizeof(string), "Вы забрали наркотики у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
			}
			return true;
		}
		case 109:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				new string[60];
				format(string, sizeof(string), "%s забрал(а) у вас оружие", PlayerInfo[playerid][pName]);
			 	SendClientMessage(idd, 0x6495EDFF, string);
			 	DelGun(idd);
			    format(string, sizeof(string), "Вы забрали оружие у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
		    }
			return true;
		}
		case 110:
		{
			if(response)
		    {
			    new idd = strval(inputtext);
			    if(idd == INVALID_PLAYER_ID) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(idd == playerid) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы ввели свой [id]");
				if(!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				new string[63];
				format(string, sizeof(string), "%s забрал(а) у вас материалы", PlayerInfo[playerid][pName]);
			 	SendClientMessage(idd, 0x6495EDFF, string);
				PlayerInfo[idd][pMaterials] = 0;
			    format(string, sizeof(string), "Вы забрали материалы у игрока %s",PlayerInfo[idd][pName],idd);
			    SendClientMessage(playerid, 0x6495EDFF, string);
			    return true;
	    	}
			return true;
		}
		case 9956:
		{
		    if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(TaxiDrivers < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Нет таксистов поблизости");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            RemovePlayerAttachedObject(playerid,9);
				            return true;
			        	}
				    	SendJobMessage(4, COLOR_REDD,"- Диспетчер: Человек нуждается в такси! {FFFFFF}( Введите: /accept taxi, чтобы принять вызов)");
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	TaxiCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	RemovePlayerAttachedObject(playerid,9);
				    	return true;
					}
					case 1:
					{
						if(Medics < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            RemovePlayerAttachedObject(playerid,9);
				            return true;
				        }
		       			SendRadioMessage(4, COLOR_REDD,"- Диспетчер: Человек нуждается в медицинской помощи! {FFFFFF}( Введите: /accept medic, чтобы принять вызов )");
		       			SendRadioMessage(22, COLOR_REDD,"- Диспетчер: Человек нуждается в медицинской помощи! {FFFFFF}( Введите: /accept medic, чтобы принять вызов )");
		       			SendRadioMessage(33, COLOR_REDD,"- Диспетчер: Человек нуждается в медицинской помощи! {FFFFFF}( Введите: /accept medic, чтобы принять вызов )");
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	MedicCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	RemovePlayerAttachedObject(playerid,9);
				    	return true;
					}
					case 2:
					{
						if(Mechanics < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            RemovePlayerAttachedObject(playerid,9);
				            return true;
				        }
				    	SendJobMessage(2, COLOR_REDD,"- Диспетчер: Человек нуждается в помощи механика. {FFFFFF}( Введите: /accept mechanic, чтобы принять вызов )");
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	MechanicCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	RemovePlayerAttachedObject(playerid,9);
				    	return true;
					}
					case 3:
					{
						if(Police < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "В данный момент нет патрульных на дежурстве!");
				            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				            RemovePlayerAttachedObject(playerid,9);
				            return true;
				        }
				    	SendRadioMessage(1, COLOR_REDD,"- Диспетчер: Человек нуждается в помощи полицейских. {FFFFFF}( Введите: /accept police, чтобы принять вызов )");
				    	SendRadioMessage(10, COLOR_REDD,"- Диспетчер: Человек нуждается в помощи полицейских. {FFFFFF}( Введите: /accept police, чтобы принять вызов )");
				    	SendRadioMessage(21, COLOR_REDD,"- Диспетчер: Человек нуждается в помощи полицейских. {FFFFFF}( Введите: /accept police, чтобы принять вызов )");
				    	SendClientMessage(playerid, COLOR_REDD, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
				    	PoliceCall = playerid;
				    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				    	RemovePlayerAttachedObject(playerid,9);
				    	return true;
					}
					case 4:
					{
						ShowPlayerDialog(playerid, 7901, DIALOG_STYLE_INPUT,"Автоответчик наёмников","Введите ID желаемого человека:","Отправить","Отмена");
				    	return true;
					}
				}
			}
			else
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				RemovePlayerAttachedObject(playerid,9);
			}
			return true;
		}
		case 7901:
		{
		    if(response)
		    {
                wvictim = strval(inputtext);
	            if(!IsPlayerConnected(wvictim)) return ShowPlayerDialog(playerid, 7901, DIALOG_STYLE_INPUT,"Автоответчик наёмников","Неверный ID,введите ещё раз:","Отправить","Отмена");
                ShowPlayerDialog(playerid, 7902, DIALOG_STYLE_INPUT,"Автоответчик наёмников","Введите сумму за убийство этого человека:\nОт 1000 вирт","Отправить","Отмена");
				return true;
		    }
		    else
		    {
		        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	    		RemovePlayerAttachedObject(playerid,9);
		        return true;
			}
		}
		case 7902:
		{
		    if(response)
		    {
                wmoneys = strval(inputtext);
	            if(wmoneys < 1000) return ShowPlayerDialog(playerid, 7902, DIALOG_STYLE_INPUT,"Автоответчик наёмников","Введите сумму за убийство этого человека:\nОт 1000 вирт","Отправить","Отмена");
                if(wmoneys > PlayerInfo[playerid][pCash]) return ShowPlayerDialog(playerid, 7902, DIALOG_STYLE_INPUT,"Автоответчик наёмников","Введите сумму за убийство этого человека:\nОт 1000 вирт\nУ вас нет столько денег!","Отправить","Отмена");
                wclient = GetPlayerID(PlayerInfo[playerid][pName]);
                new string[128];
                format(string,sizeof(string),"%s заказал %s за %d вирт(( /accept order чтобы принять ))",PlayerInfo[wclient][pName],PlayerInfo[wvictim][pName],wmoneys);
				SendFamilyMessage(35,COLOR_YELLOW2, string);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	    		RemovePlayerAttachedObject(playerid,9);
		    }
		    else
		    {
		        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	    		RemovePlayerAttachedObject(playerid,9);
		        return true;
			}
		}
		case 5454:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Адвокаты Online:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 2)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 1:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Таксисты:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 4)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 2:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Крупье:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 8 && PlayerInfo[i][pRank] == 3)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer,  PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 3:
	                {
						if(IsPlayerConnected(playerid))
	                    {
	                        SendClientMessage(playerid, COLOR_NEWS, "Лидеры онлайн:");
	                        for(new i = 0; i < MAX_PLAYERS; i++)
	                        {
	                            if(IsPlayerConnected(i))
	                            {
	                                if(PlayerInfo[i][pLeader]>0)
	                                {
	                                    new ttext[19];
	                                    if(PlayerInfo[i][pLeader] == 1) { ttext = "LSPD"; }
	                                    else if(PlayerInfo[i][pLeader] == 2) { ttext = "ФБР"; }
	                                    else if(PlayerInfo[i][pLeader] == 3) { ttext = "Армия: Авианосец"; }
	                                    else if(PlayerInfo[i][pLeader] == 4) { ttext = "МЧС San Fierro"; }
	                                    else if(PlayerInfo[i][pLeader] == 5) { ttext = "LCN"; }
	                                    else if(PlayerInfo[i][pLeader] == 6) { ttext = "Yakuza"; }
	                                    else if(PlayerInfo[i][pLeader] == 7) { ttext = "Мэрия"; }
	                                    else if(PlayerInfo[i][pLeader] == 8) { ttext = "Casino Caligula"; }
	                                    else if(PlayerInfo[i][pLeader] == 9) { ttext = "SF News"; }
	                                    else if(PlayerInfo[i][pLeader] == 10) { ttext = "SFPD"; }
	                                    else if(PlayerInfo[i][pLeader] == 11) { ttext = "Инструкторы"; }
	                                    else if(PlayerInfo[i][pLeader] == 12) { ttext = "The Ballas "; }
	                                    else if(PlayerInfo[i][pLeader] == 13) { ttext = "The Vagos"; }
	                                    else if(PlayerInfo[i][pLeader] == 14) { ttext = "Русская мафия"; }
	                                    else if(PlayerInfo[i][pLeader] == 15) { ttext = "The Grove"; }
	                                    else if(PlayerInfo[i][pLeader] == 16) { ttext = "LS News"; }
	                                    else if(PlayerInfo[i][pLeader] == 17) { ttext = "The Aztecas"; }
	                                    else if(PlayerInfo[i][pLeader] == 18) { ttext = "The Rifa"; }
	                                    else if(PlayerInfo[i][pLeader] == 19) { ttext = "Армия: Зона 51"; }
	                                    else if(PlayerInfo[i][pLeader] == 20) { ttext = "LV News"; }
	                                    else if(PlayerInfo[i][pLeader] == 21) { ttext = "LVPD"; }
	                                    else if(PlayerInfo[i][pLeader] == 22) { ttext = "МЧС Los Santos"; }
	                                    else if(PlayerInfo[i][pLeader] == 23) { ttext = "Sons of Silence MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 24) { ttext = "Hell's Angels MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 25) { ttext = "Outlaws MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 26) { ttext = "Warlocks MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 27) { ttext = "Highwayman MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 28) { ttext = "Free Souls MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 29) { ttext = "Pagans MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 30) { ttext = "Mongols MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 31) { ttext = "Vagos MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 32) { ttext = "Bandidos MC"; }
	                                    else if(PlayerInfo[i][pLeader] == 33) { ttext = "МЧС Las Venturas"; }
	                                    else if(PlayerInfo[i][pLeader] == 34) { ttext = "Пожарная Часть SA"; }
	                                    new plname[MAX_PLAYER_NAME];
	                                    new string[100];
	                                    GetPlayerName(i, plname, sizeof(plname));
	                                    format(string, sizeof(string), " %s: %s | Тел: %d",ttext,plname,PlayerInfo[i][pPnumber]);
	                                    SendClientMessage(playerid, 0xF5DEB3AA, string);
	                                }
	                            }
	                        }
	                    }
					}
					case 4:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, 0x6495EDFF, "Инструкторы:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 11)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 5:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Механики:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 2)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 6:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Медики:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pMember] == 33)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 7:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Развозчики продуктов:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 5)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
					case 8:
					{
						new giveplayer[MAX_PLAYER_NAME];
						SendClientMessage(playerid, COLOR_YELLOW2, "Тренеры:");
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJob] == 6)
								{
								    GetPlayerName(i, giveplayer, sizeof(giveplayer));
								    new string[60];
									format(string,sizeof(string), " %s Тел: %d", giveplayer, PlayerInfo[i][pPnumber]);
									SendClientMessage(playerid, COLOR_WHITE, string);
								}
							}
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 8240:
	    {
	        if(response)
	        {
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
	        }
	        else
	        {
		    	SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return true;
	        }
	    }
	    case 8241:
	    {
	        if(response)
	        {
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
	        }
	        else
	        {
		    	SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
	        }
	    }
		case 2013:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					yakuzamats -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					yakuzamats -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					yakuzamats -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					yakuzamats -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					yakuzamats -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                yakuzamats -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(yakuzamats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; yakuzamats -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
				new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2014:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					lcnmats -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					lcnmats -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					lcnmats -= 100; 
				}
				else if(listitem == 3)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					lcnmats -= 500; 
				}
				else if(listitem == 4)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					lcnmats -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                lcnmats -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(lcnmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; lcnmats -= 100;
				}
				new string[58];
	 			new sendername[MAX_PLAYER_NAME];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2015:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					rmmats -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					rmmats -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					rmmats -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					rmmats -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					rmmats -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                rmmats -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(rmmats <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; rmmats -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2016:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					ssmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					ssmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					ssmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					ssmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					ssmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                ssmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(ssmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; ssmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2017:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					hamcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					hamcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					hamcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					hamcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					hamcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                hamcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(hamcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; hamcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2018:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					omcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					omcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					omcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					omcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					omcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                omcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(omcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; omcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2019:
        {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					wmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					wmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					wmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					wmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					wmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                wmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(wmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; wmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2020:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					hwmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					hwmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					hwmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					hwmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					hwmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                hwmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(hwmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; hwmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2021:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					fsmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					fsmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					fsmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					fsmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					fsmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                fsmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(fsmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; fsmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2022:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					pmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					pmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					pmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					pmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					pmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                pmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(pmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; pmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2023:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					mmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					mmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					mmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					mmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					mmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                mmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(mmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; mmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2024:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					vmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					vmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					vmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					vmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					vmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                vmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(vmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; vmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
		case 2025:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
					gun = 24; ammo = 50;
					bmcmatbi -= 70;
				}
				else if(listitem == 1)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 25; ammo = 15;
					bmcmatbi -= 50;
				}
				else if(listitem == 2)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 33; ammo = 10;
					bmcmatbi -= 100;
				}
				else if(listitem == 3)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 31; ammo = 100;
					bmcmatbi -= 500;
				}
				else if(listitem == 4)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 30; ammo = 100;
					bmcmatbi -= 500;
				}
				else if(listitem == 5)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 29; ammo = 200;
	                bmcmatbi -= 400;
				}
	   			else if(listitem == 6)
	            {
	            	if(bmcmatbi <= 50) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
	                gun = 23; ammo = 100; bmcmatbi -= 100;
				}
	 			new sendername[MAX_PLAYER_NAME];
	 			new string[58];
				GiveWeapon(playerid, gun, ammo);
				SendClientMessage(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "%s взял(а) оружие со склада", sendername);
	  			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  			SaveMaterials();
	  			return true;
	 		}
	 		else
			{
			    return true;
			}
		}
	    case 10000:
	    {
	        if(response)
	        {
				switch(listitem)
				{
				    case 0: return ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Важные места", "[1] Автошкола\n[2] Банк Лос Сантос\n[3] Мэрия\n[4] Полицейский участок Лос Сантос\n[5] Аэропорт Лос Сантос\n[6] Аэропорт Сан Фиерро\n[7] Аэропорт Лас Вентурас\n[8] Заброшеный аэропорт Лас Вентурас\n[9] Церковь\n[10] Банк Сан Фиерро\n[11] Прием металла\n[12] Продажа зерна", "Выбрать", "Назад");
				    case 1: return ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "Работы", "[1] Автопарк\n[2] Таксопарк\n[3] Стоянка машин ХотДогов\n[4] Склад продуктов\n[5] Нефтезавод\n[6] Работа грузчика\n[7] Транспорт инкассаторов\n[8] Агенство детективов\n[9] Стоянка для мусоровозов\n[10] Поезд", "Выбрать", "Назад");
				    case 2: return ShowPlayerDialog(playerid, 10003, DIALOG_STYLE_LIST, "Развлечения", "[1] Alhambra\n[2] PigPen\n[3] Grove Street Bar\n[4] Misty Club\n[5] Jizzy", "Выбрать", "Назад");
				    case 3: return ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "Автосалоны", "[1] Автосалон A класса\n[2] Автосалон B класса\n[3] Автосалон C класса\n[4] Автосалон NOPE класса\n[5] Мотосалон", "Выбрать", "Назад");
				    case 4: return ShowPlayerDialog(playerid, 10035, DIALOG_STYLE_LIST, "Базы организаций", "[1] ЛСПД\n[2] ФБР\n[3] Армия Сан Фиерро\n[4] Больница Сан Фиерро\n[5] Мафия La Cosa Nostra\n[6] Мафия Yakuza\n[7] Мэрия\n[8] SF NEWS\n[9] СФПД\n[10] Инструкторы\n[11] The Vagos\n[12] The Ballas\n[13] The Grove\n[14] LS NEWS\n[15] The Aztec\n[16] The Rifa\n[17] Армия Лас Вентурас\n[18] LV NEWS\n[19] ЛВПД\n[20] Русская мафия", "Выбрать", "Назад");
				    case 5: return ShowPlayerDialog(playerid, 31996, DIALOG_STYLE_LIST, "Дальнобойщики", "[1]Порт ЛС\n[2]Порт СФ\n[3]Нефтезавод №1\n[4]Нефтезавод №2\n[5]Склад угля №1\n[6]Склад угля №2\n[7]Лесопилка №1\n[8]Лесопилка №2\n[9]Стоянка дальнобойщиков", "Выбрать", "Назад");
				    case 6: return ShowPlayerDialog(playerid, 10036, DIALOG_STYLE_LIST, "Фермы", "[1] Ферма [0]", "Выбрать", "Назад");
				    case 7:
					{
						DisablePlayerRaceCheckpoint(playerid);
						RaceCP[playerid] = 0;
						GameTextForPlayer(playerid, "~r~last point~n~is removed", 5000, 1);
						return true;
					}
				}
	        }
	        else return true;
	    }
	    case 10001:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2041.6616,-66.7263,35.1752, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1416.6509,-1702.3141,13.5395, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 2)
				{
					SetPlayerRaceCheckpoint(playerid, 1, 1481.1857,-1740.9348,13.5495, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1543.2719,-1675.7290,13.5561, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1961.2634,-2180.2473,13.5485, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 5)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -1550.6180,-435.7130,6.0201, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 6)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 1710.4557,1606.2389,9.9910, 0.0, 0.0, 0.0, 3);
	                CP[playerid] = 0;
	                SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
	                return true;
	            }
	            else if(listitem == 7)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 422.8590,2527.7798,16.5847, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 8)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -1982.3140,1123.5830,53.1354, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 9)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2172.0627,252.1688,35.3385, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
				else if(listitem == 10)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2505.7832,-2640.2434,13.8623, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
				else if(listitem == 11)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1640.7261,2318.2012,11.8203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
				ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
				return true;
	        }
	    }
		case 10002:
	    {
	        if(response)
	        {
	        	if(listitem == 0)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1630.7157,-1149.9851,24.0703, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1104.8860,-1748.8555,13.4085, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2427.2231,732.2500,35.0223, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -10.8757,-351.7802,5.4297, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -1030.2722,-592.2138,32.0078, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 5)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2137.8918,-2280.1104,20.6719, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
				else if(listitem == 6)
			    {
					SetPlayerRaceCheckpoint(playerid, 1, 1369.5736,-1649.6173,13.3828, 0.0, 0.0, 0.0, 3);
			 		CP[playerid] = 0;
	 			 	SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
	 			 	return true;
				}
				else if(listitem == 7)
			    {
					SetPlayerRaceCheckpoint(playerid, 1, 635.9968,-571.2704,16.3359, 0.0, 0.0, 0.0, 3);
			 		CP[playerid] = 0;
	 			 	SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
	 			 	return true;
				}
				else if(listitem == 8)
			    {
					SetPlayerRaceCheckpoint(playerid, 1, 1637.4464,-1880.3927,13.5469, 0.0, 0.0, 0.0, 3);
			 		CP[playerid] = 0;
	 			 	SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
	 			 	return true;
				}
				else if(listitem == 9)
			    {
					SetPlayerRaceCheckpoint(playerid, 1, 1768.5240,-1949.0371,14.1096, 0.0, 0.0, 0.0, 3);
			 		CP[playerid] = 0;
	 			 	SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
	 			 	return true;
				}
	        }
	        else
	        {
				ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
				return true;
	        }
	    }
	    case 10003:
	    {
	        if(response)
	        {
	            if(listitem == 0)
				{
					SetPlayerRaceCheckpoint(playerid, 1, 1826.4421,-1682.3143,13.3828, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2420.8242,-1225.3940,25.1059, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2306.4519,-1650.8062,14.4761, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2242.7446,-88.2558,35.3203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2623.9155,1410.4711,7.0938, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
	            ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
				return true;
	        }
	    }
		case 10035:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1545.5001,-1675.1385,13.5605, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 1)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2442.0938,502.4548,30.0957, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
				else if(listitem == 2)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -1335.7651,465.9061,7.1875, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 3)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2660.6841,630.5410,14.4531, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 4)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1448.5858,750.3677,11.0234, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 5)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1463.4585,2772.8022,10.6719, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 6)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1485.6344,-1742.0349,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 7)
				{
					SetPlayerRaceCheckpoint(playerid, 1, -2044.1437,468.5223,35.1719, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 8)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -1587.3979,717.6944,-5.2422, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 9)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, -2027.2679,-97.3975,35.1641, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 10)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2780.9509,-1617.6494,10.9219, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 11)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2647.3711,-2023.2561,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 12)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2494.3618,-1676.1915,13.3381, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 13)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1656.2771,-1698.6410,15.6094, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 14)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 1715.1110,-2119.8770,13.5469, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 15)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2181.9028,-1805.7299,13.3713, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 16)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 90.3836,1921.1908,17.9455, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 17)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 2652.5244,1178.4573,10.8203, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	            else if(listitem == 18)
	            {
	                SetPlayerRaceCheckpoint(playerid, 1, 2275.8589,2451.2095,10.4751, 0.0, 0.0, 0.0, 3);
	                CP[playerid] = 0;
	                SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	          	else if(listitem == 19)
	            {
					SetPlayerRaceCheckpoint(playerid, 1, 956.4202,1737.5884,8.1891, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
	            }
	        }
	        else
	        {
				ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
	            return true;
	        }
		}
		case 10036:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerRaceCheckpoint(playerid, 1, -382.0170,-1439.0886,25.7266, 0.0, 0.0, 0.0, 3);
					CP[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
					return true;
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
				return true;
			}
		}
		case 31996:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: { SetPlayerRaceCheckpoint(playerid, 1, 2601.7222,-2226.5867,13.3732, 0.0, 0.0, 0.0, 3); }
					case 1: { SetPlayerRaceCheckpoint(playerid, 1, -1731.4509,118.9413,3.5547, 0.0, 0.0, 0.0, 3); }
					case 2: { SetPlayerRaceCheckpoint(playerid, 1, 256.4736,1414.5182,10.7075, 0.0, 0.0, 0.0, 3); }
					case 3: { SetPlayerRaceCheckpoint(playerid, 1, -1046.7723,-670.7208,32.3516, 0.0, 0.0, 0.0, 3); }
					case 4: { SetPlayerRaceCheckpoint(playerid, 1, 608.7718,847.8765,-43.1532, 0.0, 0.0, 0.0, 3); }
					case 5: { SetPlayerRaceCheckpoint(playerid, 1, -1873.0896,-1720.2430,21.7500, 0.0, 0.0, 0.0, 3); }
					case 6: { SetPlayerRaceCheckpoint(playerid, 1, -449.3336,-65.9115,59.4158, 0.0, 0.0, 0.0, 3); }
					case 7: { SetPlayerRaceCheckpoint(playerid, 1, -1978.6846,-2434.8274,30.6250, 0.0, 0.0, 0.0, 3); }
					case 8: { SetPlayerRaceCheckpoint(playerid, 1, 2363.2495,2819.7153,11.4025, 0.0, 0.0, 0.0, 3); }
				}
				SendClientMessage(playerid,COLOR_WHITE, "Место помечено на карте красной меткой");
			}
			else return ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
		}
		case 15:
	    {
	        if(response)
	        {
	            switch(listitem)
				{
				    case 0:
	            	{
						SetPlayerRaceCheckpoint(playerid, 1, 2200.8657,1394.8059,11.0625, 0.0, 0.0, 0.0, 3);
						CP[playerid] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
						return true;
	            	}
	            	case 1:
	            	{
						SetPlayerRaceCheckpoint(playerid, 1, -1952.3577,300.3648,35.4688, 0.0, 0.0, 0.0, 3);
						CP[playerid] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
						return true;
	            	}
	            	case 2:
	            	{
						SetPlayerRaceCheckpoint(playerid, 1, 1671.5214,1814.4053,10.8203, 0.0, 0.0, 0.0, 3);
						CP[playerid] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
						return true;
					}
					case 3:
	            	{
						SetPlayerRaceCheckpoint(playerid, 1, 559.5280,-1293.9313,17.2482, 0.0, 0.0, 0.0, 3);
						CP[playerid] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
						return true;
					}
					case 4:
	            	{
						SetPlayerRaceCheckpoint(playerid, 1, -1663.7235,1208.0890,7.2546, 0.0, 0.0, 0.0, 3);
						CP[playerid] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Место помечено на карте красной меткой");
						return true;
					}
	            }
	        }
			else return ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы", "Выбрать", "Отмена");
		}
		case 32000:
		{
			if(response)
			{
				new car = GetPlayerVehicleID(playerid);
				if(car >= PetrolTanker[0] && car <= PetrolTanker[1])
				{
					if(PlayerInfo[playerid][pDLevel] >= 15)
					{
						if(PlayerInfo[playerid][pCash] <= 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Этот грузовик 15 уровня Дальнобойщика!");
						RemovePlayerFromVehicleAc(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= Linerunner[0] && car <= Linerunner[1])
				{
					if(PlayerInfo[playerid][pDLevel] >= 0)
					{
						if(PlayerInfo[playerid][pCash] < 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
				}
				else if(car >= Roadtrain[0] && car <= Roadtrain[1])
				{
					if(PlayerInfo[playerid][pDLevel] > 25)
					{
						if(PlayerInfo[playerid][pCash] < 5000)
						{
							SendClientMessage(playerid, COLOR_WHITE, "Не достаточно денег");
							RemovePlayerFromVehicleAc(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
 						jobcar[car] = true;
						PlayerInfo[playerid][pCash] -= 5000;
						TogglePlayerControllable(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы начали работу! Покупайте и отвозите грузы!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Этот грузовик 25 уровня Дальнобойщика!");
						RemovePlayerFromVehicleAc(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				return true;
			}
			else
			{
				RemovePlayerFromVehicleAc(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
		case 8810:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    new string[90];
						format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT, "Снятие со счёта",string, "Готово", "Назад");
						return true;
					}
					case 1:
					{
					    new string[90];
						format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT, "Положить на счёт",string, "Готово", "Назад");
						return true;
					}
					case 2:
					{
					    new string[90];
						format(string, sizeof(string), " Имя: %s\n Счёт в банке: %d вирт", sendername, PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid, 8817, DIALOG_STYLE_LIST, "Информация", string, "Готово", "Назад");
						return true;
					}
					case 3:
					{
						if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не бизнесмен");
						ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод на счёт бизнеса", "Введите сумму, которую вы хотите перести", "Готово", "Отмена");
						return true;
					}
					case 4:
					{
						if(PlayerInfo[playerid][pHousecash] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Государство ничего у вас не забирало!");
						if(!PlayerToPoint(10.0,playerid,2307.6211,-15.7828,26.7496)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в банке");
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash] * 75 / 100;
                        FracBank[0][fKazna] -= PlayerInfo[playerid][pHousecash]  * 75 / 100;
                        new string[90];
						format(string, sizeof(string), "Вам возвращены %d вирт", PlayerInfo[playerid][pHousecash]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pHousecash] = 0;
						PlayerInfo[playerid][pText] = 0;
						return true;
					}
					case 5:
					{
	                    new listitems[] = " [1] Оформить кредит\n [2] Погасить кредит ";
						ShowPlayerDialog(playerid,8228,DIALOG_STYLE_LIST, "Кредит",listitems, "Дальше>>", "Назад");
						return true;
					}
					case 6:
					{
                        new listitems[] = " [1] Сделать вклад \n [2] Взять вклад ";
						ShowPlayerDialog(playerid,8829,DIALOG_STYLE_LIST, "Вклад",listitems, "Дальше>>", "Назад");
						return true;
					}
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
				return true;
			}
		}
		case 8820:
		{
		    if(response)
			{
				if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Брать кредит можно только после 3 лвла!");
				if(PlayerInfo[playerid][pCredit] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете иметь более 1 кредита в этой банковской системе!");
				inputmoney = strval(inputtext);
				if(PlayerInfo[playerid][pLevel] >= 3 && PlayerInfo[playerid][pLevel] < 5)
				{
					if(inputmoney < 5000 || inputmoney > 100000)
					{
					    new string[256];
						SendClientMessage(playerid, COLOR_GREY, "Для 3 лвла минимальная сумма кредита 1000 вирт, максимальная 100000 вирт");
						format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму для кредита\n3лвл - максимум 100к\n5лвл - максимум 500к\n10лвл - максимум 1кк", PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid,8820,DIALOG_STYLE_INPUT, "Кредит",string, "Дальше>>", "Назад");
						return true;
					}
	                else
	                {
						new listitems[] = " На 2 игровых часа(5%)\nНа 1 игровой день(15%)\nНа 3 игровых дня(30%)\nНа игровую неделю(50%)";
						ShowPlayerDialog(playerid,8821,DIALOG_STYLE_LIST, "Срок кредита",listitems, "Готово", "Отмена");
						return true;
					}
				}
				if(PlayerInfo[playerid][pLevel] >= 5 && PlayerInfo[playerid][pLevel] < 10)
				{
					if(inputmoney < 5000 || inputmoney > 500000)
					{
					    new string[256];
						SendClientMessage(playerid, COLOR_GREY, "Для 5 лвла минимальная сумма кредита 1000 вирт, максимальная 500000 вирт");
						format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму для кредита\n3лвл - максимум 100к\n5лвл - максимум 500к\n10лвл - максимум 1кк", PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid,8820,DIALOG_STYLE_INPUT, "Кредит",string, "Дальше>>", "Назад");
						return true;
					}
	                else
	                {
						new listitems[] = " На 2 игровых часа(5%)\nНа 1 игровой день(15%)\nНа 3 игровых дня(30%)\nНа игровую неделю(50%)";
						ShowPlayerDialog(playerid,8821,DIALOG_STYLE_LIST, "Срок кредита",listitems, "Готово", "Отмена");
						return true;
					}
	            }
 				if(PlayerInfo[playerid][pLevel] >= 10)
				{
					if(inputmoney < 5000 || inputmoney > 1000000)
					{
					    new string[256];
						SendClientMessage(playerid, COLOR_GREY, "Для 10 лвла и больше минимальная сумма кредита 1000 вирт, максимальная 1000000 вирт");
						format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму для кредита\n3лвл - максимум 100к\n5лвл - максимум 500к\n10лвл - максимум 1кк", PlayerInfo[playerid][pBank]);
						ShowPlayerDialog(playerid,8820,DIALOG_STYLE_INPUT, "Кредит",string, "Дальше>>", "Назад");
						return true;
					}
	                else
	                {
						new listitems[] = " На 2 игровых часа(5%)\nНа 1 игровой день(15%)\nНа 3 игровых дня(30%)\nНа игровую неделю(50%)";
						ShowPlayerDialog(playerid,8821,DIALOG_STYLE_LIST, "Срок кредита",listitems, "Готово", "Отмена");
						return true;
					}
	            }
		    }
		    else
		    {
		    return true;
		    }
		}
		case 8821:
		{
		    if(response)
			{
                switch(listitem)
                {
				    case 0:
				    {
                        PlayerInfo[playerid][pCash] += inputmoney;
						FracBank[0][fKazna] -= inputmoney;
						PlayerInfo[playerid][pCredit] = inputmoney += inputmoney * 5 / 100;
						PlayerInfo[playerid][pCreditMust] = 2;
						new string[128];
						format(string, sizeof(string), "Вы должны оплатить кредит размером %d вирт за 2 игровых часа", inputmoney);
						SendClientMessage(playerid, COLOR_BLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Если вы не вернёте кредит вовремя,то у вас заберут имущество на сумму кредита");
			        }
   				    case 1:
				    {
                        PlayerInfo[playerid][pCash] += inputmoney;
						FracBank[0][fKazna] -= inputmoney;
						PlayerInfo[playerid][pCredit] = inputmoney += inputmoney * 15 / 100;
						PlayerInfo[playerid][pCreditMust] = 24;
						new string[128];
                        format(string, sizeof(string), "Вы должны оплатить кредит размером %d вирт за игровой день", inputmoney);
						SendClientMessage(playerid, COLOR_BLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Если вы не вернёте кредит вовремя,то у вас заберут имущество на сумму кредита");
			        }
   				    case 2:
				    {
                        PlayerInfo[playerid][pCash] += inputmoney;
						FracBank[0][fKazna] -= inputmoney;
						PlayerInfo[playerid][pCredit] = inputmoney += inputmoney * 30 / 100;
						PlayerInfo[playerid][pCreditMust] = 72;
						new string[128];
						format(string, sizeof(string), "Вы должны оплатить кредит размером %d вирт за 3 игровых дня", inputmoney);
						SendClientMessage(playerid, COLOR_BLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Если вы не вернёте кредит вовремя,то у вас заберут имущество на сумму кредита");
			        }
   				    case 3:
				    {
                        PlayerInfo[playerid][pCash] += inputmoney;
						FracBank[0][fKazna] -= inputmoney;
						PlayerInfo[playerid][pCredit] = inputmoney += inputmoney * 50 / 100;
						PlayerInfo[playerid][pCreditMust] = 168;
						new string[128];
						format(string, sizeof(string), "Вы должны оплатить кредит размером %d вирт за игровую неделю", inputmoney);
						SendClientMessage(playerid, COLOR_BLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTRED, "Если вы не вернёте кредит вовремя,то у вас заберут имущество на сумму кредита");
			        }
	            }
			}
			else
			{
				return true;
			}
		}
		case 8228:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    new string[256];
			    		format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму для кредита\n3лвл - максимум 100к\n5лвл - максимум 500к\n10лвл - максимум 1кк", PlayerInfo[playerid][pBank]);
			    		ShowPlayerDialog(playerid,8820,DIALOG_STYLE_INPUT, "Кредит",string, "Дальше>>", "Назад");
			    		return true;
			    	}
			    	case 1:
					{
						if(PlayerInfo[playerid][pCash] >= PlayerInfo[playerid][pCredit] && PlayerInfo[playerid][pCreditMust] != 0)
						{
						    PlayerInfo[playerid][pCash] -= PlayerInfo[playerid][pCredit];
						    PlayerInfo[playerid][pCredit] = 0;
						    PlayerInfo[playerid][pCreditTime] = 0;
						    PlayerInfo[playerid][pCreditMust] = 0;
						    SendClientMessage(playerid,COLOR_BLUE,"Кредит успешно погашен!Спасибо за использование услуг банка SA!");
						}
						else
						{
		                    SendClientMessage(playerid,COLOR_GREY,"Вы ошиблись,у вас нет кредитов");
						}
					}
				}
			}
			else
			{
			return true;
			}
		}
		case 2929:
		{
			if(response)
			{
				new bouse = PlayerInfo[playerid][pPBiskey];
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите перести", "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1000 || moneys > 1000000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма 1000 вирт, максимальная 1000000 вирт");
					ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите положить на счёт бизнеса", "Готово", "Отмена");
					return true;
				}
				if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				if(bouse >=100)
				{
					PlayerInfo[playerid][pBank] -= moneys;
					SBizzInfo[bouse-100][sbTill] += moneys;
					new string[52];
					format(string, sizeof(string), "Вы положили на счёт Вашего бизнеса %d вирт", moneys);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerChatBubble(playerid, "кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				}
				if(bouse < 100)
				{
					PlayerInfo[playerid][pBank] -= moneys;
					BizzInfo[bouse][bTill] += moneys;
					new string[52];
					format(string, sizeof(string), "Вы положили на счёт Вашего бизнеса %d вирт", moneys);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerChatBubble(playerid, "кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				}
				return true;
			}
			else
			{
				return true;
			}
		}
        case 8829:
        {
		    if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
                        if(PlayerInfo[playerid][pDeposit] != 0) return SendClientMessage(playerid,COLOR_GREY,"В целях сохранения банка от денежных махинаций,вы не можете дополнять вклад");
  		                ShowPlayerDialog(playerid,8830,DIALOG_STYLE_INPUT, "Вклад","Сколько денег вы хотите вложить?", "Дальше>>", "Назад");
  		                return true;
			    	}
			    	case 1:
				    {
                        if(PlayerInfo[playerid][pDeposit] == 0) return SendClientMessage(playerid,COLOR_GREY,"Вы ошиблись,у вас нет вкладов.");
                        new string[128];
                        format(string,sizeof(string), "Сумма вашего вклада: %d вирт.\nЕсли вы возьмёте вклад,то все проценты сгорят.\nВы уверены,что хотите взять деньги?", PlayerInfo[playerid][pDeposit]);
                        if(PlayerInfo[playerid][pDepositMust] > PlayerInfo[playerid][pDepositTime]) return ShowPlayerDialog(playerid,8933,DIALOG_STYLE_MSGBOX, "Вклад",string, "Взять", "Оставить");
					    if(PlayerInfo[playerid][pDepositMust] == 6)
					    {
						    format(string,sizeof(string), "Вы взяли свой вклад в размере %d вирт.\nСпасибо за использование услуг банка SA!", PlayerInfo[playerid][pDeposit]);
						    PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 5 / 100;
						    FracBank[0][fKazna] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 5 / 100;
						    PlayerInfo[playerid][pDepositMust] = 0;
						    PlayerInfo[playerid][pDeposit] = 0;
						    PlayerInfo[playerid][pDepositTime] = 0;
						    SendClientMessage(playerid,COLOR_BLUE,string);
					    }
					    if(PlayerInfo[playerid][pDepositMust] == 24)
					    {
						    format(string,sizeof(string), "Вы взяли свой вклад в размере %d вирт.\nСпасибо за использование услуг банка SA!", PlayerInfo[playerid][pDeposit]);
						    PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit]  * 15 / 100;
						    FracBank[0][fKazna] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 15 / 100;
						    PlayerInfo[playerid][pDepositMust] = 0;
						    PlayerInfo[playerid][pDeposit] = 0;
						    PlayerInfo[playerid][pDepositTime] = 0;
						    SendClientMessage(playerid,COLOR_BLUE,string);
					    }
					    if(PlayerInfo[playerid][pDepositMust] == 72)
					    {
						    format(string,sizeof(string), "Вы взяли свой вклад в размере %d вирт.\nСпасибо за использование услуг банка SA!", PlayerInfo[playerid][pDeposit]);
						    PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 30 / 100;
						    FracBank[0][fKazna] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 30 / 100;
						    PlayerInfo[playerid][pDepositMust] = 0;
						    PlayerInfo[playerid][pDeposit] = 0;
						    PlayerInfo[playerid][pDepositTime] = 0;
						    SendClientMessage(playerid,COLOR_BLUE,string);
					    }
					    if(PlayerInfo[playerid][pDepositMust] == 168)
					    {
						    format(string,sizeof(string), "Вы взяли свой вклад в размере %d вирт.\nСпасибо за использование услуг банка SA!", PlayerInfo[playerid][pDeposit]);
						    PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit]  * 50 / 100;
						    FracBank[0][fKazna] += PlayerInfo[playerid][pDeposit] += PlayerInfo[playerid][pDeposit] * 50 / 100;
						    PlayerInfo[playerid][pDepositMust] = 0;
						    PlayerInfo[playerid][pDeposit] = 0;
						    PlayerInfo[playerid][pDepositTime] = 0;
						    SendClientMessage(playerid,COLOR_BLUE,string);
					    }
				    }
			    }
			}
			else
            {
				new listitems[] = " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами";
				ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", listitems, "Выбрать", "Закрыть");
				return true;
			}
		}
		case 8830:
		{
			if(response)
			{
			    inputmoney = strval(inputtext);
			    if(PlayerInfo[playerid][pCash] < inputmoney) return	SendClientMessage(playerid, COLOR_GREY, "Извините,у вас нет столько денег");
			    if(inputmoney < 1000 || inputmoney > 500000)
			    {
  					SendClientMessage(playerid, COLOR_GREY, "Минимальный вклад 1000 вирт, максимальный 500000 вирт");
					ShowPlayerDialog(playerid,8830,DIALOG_STYLE_INPUT, "Вклад","Сколько денег вы хотите вложить?", "Дальше>>", "Назад");
					return true;
			    }
                new listitems[] = " На 6 игровых часов(5%)\nНа 1 игровой день(15% в час)\nНа 3 игровых дня(30% в час)\nНа игровую неделю(50% в час)";
			    ShowPlayerDialog(playerid,8832,DIALOG_STYLE_LIST, "Срок вклада",listitems, "Готово", "Отмена");
			    return true;
			}
            else
            {
                new listitems[] = " [1] Сделать вклад \n [2] Взять вклад ";
			    ShowPlayerDialog(playerid,8829,DIALOG_STYLE_LIST, "Вклад",listitems, "Дальше>>", "Назад");
			    return true;
            }
		}
		case 8832:
		{
		    if(response)
			{
                switch(listitem)
                {
				    case 0:
				    {
                        PlayerInfo[playerid][pCash] -= inputmoney;
						FracBank[0][fKazna] += inputmoney;
						PlayerInfo[playerid][pDeposit] = inputmoney;
						PlayerInfo[playerid][pDepositMust] = 6;
						new string[82];
						format(string, sizeof(string), "Вы вложили %d вирт на 6 игровых часов. Спасибо за использование банка SA", PlayerInfo[playerid][pDeposit]);
						SendClientMessage(playerid, COLOR_BLUE, string);
			        }
   				    case 1:
				    {
                        PlayerInfo[playerid][pCash] -= inputmoney;
						FracBank[0][fKazna] += inputmoney;
						PlayerInfo[playerid][pDeposit] = inputmoney;
						PlayerInfo[playerid][pDepositMust] = 24;
						new string[82];
						format(string, sizeof(string), "Вы вложили %d вирт на игровой день. Спасибо за использование банка SA", PlayerInfo[playerid][pDeposit]);
						SendClientMessage(playerid, COLOR_BLUE, string);
			        }
   				    case 2:
				    {
                        PlayerInfo[playerid][pCash] -= inputmoney;
						FracBank[0][fKazna] += inputmoney;
						PlayerInfo[playerid][pDeposit] = inputmoney;
						PlayerInfo[playerid][pDepositMust] = 72;
						new string[82];
						format(string, sizeof(string), "Вы вложили %d вирт на 3 игровых дня. Спасибо за использование банка SA", PlayerInfo[playerid][pDeposit]);
						SendClientMessage(playerid, COLOR_BLUE, string);
			        }
   				    case 3:
				    {
                        PlayerInfo[playerid][pCash] -= inputmoney;
						FracBank[0][fKazna] += inputmoney;
						PlayerInfo[playerid][pDeposit] = inputmoney;
						PlayerInfo[playerid][pDepositMust] = 168;
						new string[81];
						format(string, sizeof(string), "Вы вложили %d вирт на игровую неделю. Спасибо за использование банка SA", PlayerInfo[playerid][pDeposit]);
						SendClientMessage(playerid, COLOR_BLUE, string);
			        }
	            }
			}
			else
			{
                new listitems[] = " [1] Сделать \n [2] Взять вклад ";
			    ShowPlayerDialog(playerid,8829,DIALOG_STYLE_LIST, "Вклад",listitems, "Дальше>>", "Назад");
			    return true;
			}
		}
		case 8833:
		{
			if(response)
			{
			    new string[90];
				format(string,sizeof(string), "Вы взяли свой вклад в размере %d вирт.\nСпасибо за использование услуг банка SA!", PlayerInfo[playerid][pDeposit]);
				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDeposit];
				FracBank[0][fKazna] -= PlayerInfo[playerid][pDeposit];
				PlayerInfo[playerid][pDepositMust] = 0;
				PlayerInfo[playerid][pDeposit] = 0;
				PlayerInfo[playerid][pDepositTime] = 0;
				SendClientMessage(playerid,COLOR_BLUE,string);
			}
			else
			{
                new listitems[] = " [1] Сделать вклад\n [2] Взять вклад ";
			    ShowPlayerDialog(playerid,8228,DIALOG_STYLE_LIST, "Вклад",listitems, "Дальше>>", "Назад");
			    return true;
		    }
		}
		case 8816:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
				    new string[100];
					format(string,sizeof(string), "Баланс вашего счёта: %d вирт.\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
	                ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT, "Положить на счёт",string, "Готово", "Отмена");
				}
				new summa;
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pCash] < summa) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				if(summa < 1 || summa > 1000000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя положить больше 1000000 вирт!"); return true; }
				new string[100];
				SendClientMessage(playerid, COLOR_GRAD1, "-----------====[ ЧЕК ]====-----------");
				format(string, sizeof(string), "Старый баланс: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREY, string);
				PlayerInfo[playerid][pCash] -=summa;
				PlayerInfo[playerid][pBank] += summa;
				format(string, sizeof(string), "Переведено: %d вирт",summa);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				format(string, sizeof(string), "Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
                if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] <= PlayerInfo[playerid][pBank])
                {
					PlayerInfo[playerid][pBank] -= PlayerInfo[playerid][pCredit];
					FracBank[0][fKazna] += PlayerInfo[playerid][pCredit];
					PlayerInfo[playerid][pCreditMust] = 0;
					PlayerInfo[playerid][pCredit] = 0;
					PlayerInfo[playerid][pCreditTime] = 0;
					format(string, sizeof(string), "Погашена задолжность,остаток: %d вирт", PlayerInfo[playerid][pBank]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] > PlayerInfo[playerid][pBank])
				{
				    PlayerInfo[playerid][pCredit] -= PlayerInfo[playerid][pBank];
				    FracBank[0][fKazna] += PlayerInfo[playerid][pBank];
				    PlayerInfo[playerid][pBank] = 0;
				    format(string, sizeof(string), "Осталось погасить: %d вирт", PlayerInfo[playerid][pCredit]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				return true;
			}
			else
            {
				new listitems[] = " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами";
				ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", listitems, "Выбрать", "Закрыть");
				return true;
			}
		}
		case 8817:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new listitems[] = " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами";
					ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", listitems, "Выбрать", "Закрыть");
					return true;
				}
			}
			else
			{
				new listitems[] = " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами";
				ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", listitems, "Выбрать", "Закрыть");
				return true;
			}
		}
		case 8814:
		{
			if(response)
	 		{
				if(!strlen(inputtext))
				{
				    new string[100];
					format(string,sizeof(string), "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
					ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT, "Снятие со счёта",string, "Готово", "Назад");
				}
				new summa;
				summa = strval(inputtext);
				if(PlayerInfo[playerid][pBank] < summa) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
	 			if(summa < 1 || summa > 1000000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя снять более 1000000!"); return true; }
	 			new string[100];
				SendClientMessage(playerid, COLOR_GRAD1, "---------===[ ЧЕК ]===---------");
				format(string, sizeof(string), "Старый баланс: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREY, string);
				PlayerInfo[playerid][pCash] +=summa;
				PlayerInfo[playerid][pBank] -= summa;
				format(string, sizeof(string), "Снято: %d вирт",summa);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				format(string, sizeof(string), "Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
                if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] <= PlayerInfo[playerid][pCash])
                {
					PlayerInfo[playerid][pCash] -= PlayerInfo[playerid][pCredit];
					FracBank[0][fKazna] += PlayerInfo[playerid][pCredit];
					PlayerInfo[playerid][pCreditMust] = 0;
					PlayerInfo[playerid][pCredit] = 0;
					PlayerInfo[playerid][pCreditTime] = 0;
					format(string, sizeof(string), "Погашена задолжность,остаток: %d вирт", PlayerInfo[playerid][pCash]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] > PlayerInfo[playerid][pCash])
				{
				    PlayerInfo[playerid][pCredit] -= PlayerInfo[playerid][pCash];
				    FracBank[0][fKazna] += PlayerInfo[playerid][pCash];
				    PlayerInfo[playerid][pCash] = 0;
				    format(string, sizeof(string), "Осталось погасить: %d вирт", PlayerInfo[playerid][pCredit]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				return true;
			}
			else
			{
				new listitems[] = " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами";
				ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", listitems, "Выбрать", "Закрыть");
				return true;
			}
		}
		case 8900:
	    {
			if(response)
			{
				switch(listitem)
				{
		            case 0:
		            {
		                new string[80];
		                format(string,sizeof(string), "Баланс вашего счёта: %d вирт", PlayerInfo[playerid][pBank]);
		                ShowPlayerDialog(playerid,8904,DIALOG_STYLE_LIST,string, " [1] 500 вирт\n [2] 1000 вирт\n [3] 5000 вирт\n [4] 10000 вирт\n [5] 20000 вирт\n [6] 50000 вирт\n [7] 100000 вирт", "Готово", "Назад");
		                return true;
		            }
		            case 1:
		            {
		             	new sendername[MAX_PLAYER_NAME];
		             	new string[80];
						GetPlayerName(playerid, sendername, sizeof(sendername));
		                format(string,sizeof(string), "{FFFFFF}Чек:\nКлиент: %s\nБаланс: %d вирт", sendername, PlayerInfo[playerid][pBank]);
		                ShowPlayerDialog(playerid,8905,DIALOG_STYLE_MSGBOX, "Банкомат",string, "Назад", "");
		            	return true;
		            }
					case 2:
                    {
						if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете недвижимость");
                        new bouse = PlayerInfo[playerid][pPHousekey];
		                for(new h = 0; h < sizeof(HouseInfo); h++)
                        if(!strlen(inputtext))
           	            {
                            ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму которую хотите положить на домашний счёт","Выполнить","Отмена");
                        }
                        new moneys;
			            moneys = strval(inputtext);
			            if(moneys < 1 || moneys > 100000)
		 	            {
			 	            SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода - 1, Максимальная - 100000!");
                            ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму которую хотите положить на домашний счёт","Выполнить","Отмена");
			  	            return true;
		  	            }
                        if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GRAD1, "У вас нет столько денег на банковском счету!");
				        PlayerInfo[playerid][pBank] -= moneys;
				        HouseInfo[bouse][hTakings] +=moneys;
				        new string[80];
				        format(string, sizeof(string), "Вы положили на домашний счёт %d вирт. Домашний счёт: %d вирт", moneys,HouseInfo[bouse][hTakings]);
				        SendClientMessage(playerid, 0x6495EDFF, string);
				        SetPlayerChatBubble(playerid,"кладёт на домашний счет",COLOR_PURPLE,30.0,10000);
                        return true;
                    }
	            	case 3: ShowPlayerDialog(playerid,20086,0, "Объявления:",ChatText, "Отправить", "Назад");
		            case 4:
			        {
			            new rulesdialog[1024];
			            format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s",ReklMSG[0],ReklMSG[1],ReklMSG[2],ReklMSG[3],ReklMSG[4],ReklMSG[5],ReklMSG[6],ReklMSG[7]);
			        	ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX, "Банкомат: Объявления",rulesdialog, "Готово", "");
		   			}
	            }
			}
			else
			{
				GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
				return true;
			}
	 	}
		case 8454:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] < addd[0]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				new sendername[MAX_PLAYER_NAME];
				new string[15];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pCash] -= addd[0];
				FracBank[0][fLsnews] += addd[0];
				TOTALADVERT[0] ++;
				AdvertInfo[TOTALADVERT[0]][0][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[0]][0][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[0]][0][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[0]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 60;
			}
			else
			{
	    		return true;
	       	}
		}
		case 8455:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] < addd[1]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				new sendername[MAX_PLAYER_NAME];
				new string[15];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pCash] -= addd[1];
				FracBank[0][fSfnews] += addd[1];
				TOTALADVERT[1] ++;
				AdvertInfo[TOTALADVERT[1]][1][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[1]][1][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[1]][1][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[1]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 60;
			}
			else
			{
	    		return true;
	       	}
		}
		case 8456:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] < addd[2]) return SendClientMessage(playerid, COLOR_WHITE,  "У вас нет столько денег");
				new sendername[MAX_PLAYER_NAME];
				new string[15];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[playerid][pCash] -= addd[2];
				FracBank[0][fLvnews] += addd[2];
				TOTALADVERT[2] ++;
				AdvertInfo[TOTALADVERT[2]][2][adPhone] = PlayerInfo[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[2]][2][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[2]][2][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(string,sizeof(string), "~r~-$%d", addd[2]);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ваше обьявление будет подано после проверки");
				PlayerInfo[playerid][pAdvertTime] = 60;
			}
			else
			{
	    		return true;
	       	}
		}
		case 8904:
	    {
	        if(response)
	        {
				if(listitem == 0) { money = 500; }
				else if(listitem == 1) { money = 1000; }
				else if(listitem == 2) { money = 5000; }
				else if(listitem == 3) { money = 10000; }
				else if(listitem == 4) { money = 20000; }
				else if(listitem == 5) { money = 50000; }
				else if(listitem == 6) { money = 100000; }
	   			if(money > PlayerInfo[playerid][pBank])
	   			{
	   				ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_MSGBOX, "Банкомат", "На вашем счету недостаточно денег!", "Назад", "");
	   				return true;
	   			}
                if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] <= PlayerInfo[playerid][pCash])
                {
					PlayerInfo[playerid][pCash] -= PlayerInfo[playerid][pCredit];
					FracBank[0][fKazna] += PlayerInfo[playerid][pCredit];
					PlayerInfo[playerid][pCreditMust] = 0;
					PlayerInfo[playerid][pCredit] = 0;
					PlayerInfo[playerid][pCreditTime] = 0;
					new string[65];
					format(string, sizeof(string), "Погашена задолжность,остаток: %d вирт", PlayerInfo[playerid][pCash]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				if(PlayerInfo[playerid][pCreditMust] == -1 && PlayerInfo[playerid][pCredit] > PlayerInfo[playerid][pCash])
				{
				    PlayerInfo[playerid][pCredit] -= PlayerInfo[playerid][pCash];
				    FracBank[0][fKazna] += PlayerInfo[playerid][pCash];
				    PlayerInfo[playerid][pCash] = 0;
				    new string[65];
				    format(string, sizeof(string), "Осталось погасить: %d вирт", PlayerInfo[playerid][pCredit]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					PlayerInfo[playerid][pCash] += money;
	   				PlayerInfo[playerid][pBank] = PlayerInfo[playerid][pBank]-money;
	   				new string[65];
	   				format(string, sizeof(string), "Вы сняли со счёта: %d вирт. Остаток: %d вирт", money,PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "~b~+%d", money);
					GameTextForPlayer(playerid, string, 3000, 1);
				}
				return true;
			}
			else
			{
	            new listitems[] = " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация";
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", listitems, "Далее", "Выход");
	    		return true;
	       	}
		}
		case 8905:
	    {
	        if(response)
	        {
	            new listitems[] = " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация";
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", listitems, "Далее", "Выход");
	    		return true;
			}
		}
	    case 9592:
	    {
	        if(response)
	        {
				if(listitem == 0)
				{
		 			ShowPlayerDialog(playerid,6000,DIALOG_STYLE_INPUT, "Перевод на счёт аренды","        Введите сумму    ", "Готово", "Отмена");
		            return true;
	            }
				else if(listitem == 1)
				{
		 			ShowPlayerDialog(playerid,6001,DIALOG_STYLE_INPUT, "Пополнить счёт автомастерской","        Введите сумму    ", "Готово", "Отмена");
		            return true;
	            }
				else if(listitem == 2)
				{
		 			ShowPlayerDialog(playerid,6002,DIALOG_STYLE_INPUT, "Снять деньги с автомастерской","        Введите сумму    ", "Готово", "Отмена");
		            return true;
	            }
 				else if(listitem == 3)
				{
		 			ShowPlayerDialog(playerid,6003,DIALOG_STYLE_INPUT, "Зар. плата рабочим","        Введите сумму    ", "Готово", "Отмена");
		            return true;
	            }
			}
			else
			{
			    return true;
			}
	    }
		case 6000:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
	 				ShowPlayerDialog(playerid,6000,DIALOG_STYLE_INPUT, "Перевод на счёт аренды","        Введите сумму    ", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 100000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода - 1, максимальная - 100000");
	 				ShowPlayerDialog(playerid,6000,DIALOG_STYLE_INPUT, "Перевод на счёт аренды","        Введите сумму    ", "Готово", "Отмена");
				  	return true;
			  	}
			  	new bouse = PlayerInfo[playerid][pAutoMast];
				if(AvtoInfo[bouse][abArenda] >= 100000) return SendClientMessage(playerid, COLOR_GREY, "Пополнение счёта аренды больше не возможно");
				if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на вашем банковском счету");
				new string[85];
				PlayerInfo[playerid][pBank] -= moneys;
				AvtoInfo[bouse][abArenda] += moneys;
				format(string, sizeof(string), "Вы положили на счёт аренды %d вирт. На счету аренды: %d вирт", moneys,AvtoInfo[bouse][abArenda]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 6001:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
	 			ShowPlayerDialog(playerid,6001,DIALOG_STYLE_INPUT, "Перевод на счёт мастерской","        Введите сумму    ", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 100000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода - 1, максимальная - 100000");
	 				ShowPlayerDialog(playerid,6001,DIALOG_STYLE_INPUT, "Перевод на счёт мастерской","        Введите сумму    ", "Готово", "Отмена");
				  	return true;
			  	}
			  	new bouse = PlayerInfo[playerid][pAutoMast];
	            if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на вашем банковском счету");
	            new string[85];
				PlayerInfo[playerid][pBank] -= moneys;
				AvtoInfo[bouse][abTill] += moneys;
				format(string, sizeof(string), "Вы положили на счёт автомастерской %d вирт. На счету: %d вирт", moneys,AvtoInfo[bouse][abTill]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			else
			{
			    return true;
			}
	    }
		case 6002:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
	 			ShowPlayerDialog(playerid,6002,DIALOG_STYLE_INPUT, "Снять деньги с мастерской","        Введите сумму    ", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 100000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода - 1, максимальная - 100000");
	 				ShowPlayerDialog(playerid,6002,DIALOG_STYLE_INPUT, "Снять деньги с мастерской","        Введите сумму    ", "Готово", "Отмена");
				  	return true;
			  	}
			  	new bouse = PlayerInfo[playerid][pAutoMast];
	            if(AvtoInfo[bouse][abTill] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег");
	            new string[85];
				PlayerInfo[playerid][pCash] += moneys;
				AvtoInfo[bouse][abTill] -= moneys;
				format(string, sizeof(string), "Вы сняли со счёта автомастерской %d вирт. На счету: %d вирт", moneys,AvtoInfo[bouse][abTill]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 6003:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
	 			ShowPlayerDialog(playerid,6003,DIALOG_STYLE_INPUT, "Зар. плата рабочим","        Введите сумму    ", "Готово", "Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 10000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Не более 10000!");
	 				ShowPlayerDialog(playerid,6003,DIALOG_STYLE_INPUT, "Зар. плата рабочим","        Введите сумму    ", "Готово", "Отмена");
				  	return true;
			  	}
			  	new bouse = PlayerInfo[playerid][pAutoMast];
			  	new string[85];
				AvtoInfo[bouse][abZp] = moneys;
				format(string, sizeof(string), "Зар. плата рабочим %d вирт. На счету: %d вирт", moneys,AvtoInfo[bouse][abTill]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 9522:
        {
            if(response)
            {
		        for(new h = 0; h < sizeof(HouseInfo); h++)
                if(!strlen(inputtext))
           	    {
                    ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму которую хотите положить на домашний счёт","Выполнить","Отмена");
                }
                new moneys;
			    moneys = strval(inputtext);
			    if(moneys < 1 || moneys > 100000)
		 	    {
			 	    SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода - 1, Максимальная - 100000 вирт");
                    ShowPlayerDialog(playerid,9522,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму которую хотите положить на домашний счёт","Выполнить","Отмена");
			  	    return true;
		  	    }
                if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GRAD1, "У вас нет столько денег на банковском счету");
                new bouse = PlayerInfo[playerid][pPHousekey];
				new string[85];
				PlayerInfo[playerid][pBank] -= moneys;
				HouseInfo[bouse][hTakings] +=moneys;
				format(string, sizeof(string), "Вы положили на домашний счёт %d вирт. Домашний счёт: %d вирт", moneys,HouseInfo[bouse][hTakings]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				SetPlayerChatBubble(playerid,"кладёт на домашний счет",COLOR_PURPLE,30.0,10000);
				return true;
		    }
		    else
		    {
		        return true;
		    }
        }
		case 9523:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
	                ShowPlayerDialog(playerid,9523,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму, которую вы хотите положить на счёт дома","Готово","Отмена");
	            }
	            new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 100000)
			 	{
				 	SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма перевода 1 вирт, максимальная 100000 вирт");
	                ShowPlayerDialog(playerid,9523,DIALOG_STYLE_INPUT,"Домашний счёт","Введите сумму, которую вы хотите положить на счёт дома","Готово","Отмена");
				  	return true;
			  	}
	            if(PlayerInfo[playerid][pBank] < moneys) return	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на вашем банковском счету");
	            new bouse = PlayerInfo[playerid][pPHousekey];
				new string[85];
				PlayerInfo[playerid][pBank] -= moneys;
				HouseInfo[bouse][hTakings] += moneys;
				format(string, sizeof(string), "Вы положили на счёт вашего дома %d вирт. Домашний счёт: %d вирт", moneys,HouseInfo[bouse][hTakings]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				SetPlayerChatBubble(playerid,"кладёт на счёт квартиры",COLOR_PURPLE,30.0,10000);
				return true;
			}
			else
			{
			    return true;
			}
	    }
	    case 5032:
	    {
	        if(response)
	        {
	        	for(new h = 0; h < sizeof(HouseInfo); h++)
				{
				    new sendername[MAX_PLAYER_NAME];
	        		new house = PlayerInfo[playerid][pPHousekey];
					new string[35];
					HouseInfo[house][hLock] = 1;
					HouseInfo[house][hOwned] = 0;
					HouseInfo[house][hVec] = 0;
					HouseInfo[h][hVcol1] = 0;
					HouseInfo[h][hVcol2] = 0;
					DestroyVehicle(caridhouse[playerid]);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
					PlayerInfo[playerid][pCash] += HouseInfo[house][hValue] * 75 / 100;
					FracBank[0][fKazna] -= HouseInfo[house][hValue];
					format(string, sizeof(string), "Дом продан за %d вирт", HouseInfo[house][hValue] * 75 / 100);
	 				SendClientMessage(playerid, COLOR_WHITE, string);
	 				format(string, sizeof(string), "Наличные: %d", PlayerInfo[playerid][pCash]);
	 				SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pPHousekey] = 255;
					SetPlayerInterior(playerid,HouseInfo[house][hOint]);
					SetPlayerVirtualWorld(playerid,HouseInfo[house][hVworld]);
					SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					OnPropUpdate();
					BuyHouse();
	 				return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 9989:
	    {
	        if(response)
	        {
	 			new loginmsg[280+1];
	    		new loginname[64];
	    		GetPlayerName(playerid,loginname,sizeof(loginname));
			    format(loginmsg,280, "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {00FF00}не зарегистрирован{FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", loginname);
	    		ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFFFF}Регистрация",loginmsg, "Готово", "Отмена");
	    	 	PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
				return true;
			}
	        else
	        {
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			GKick(playerid);
	        }
	 	}
		case 405:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите во фракции");
	        	if(Works[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже устроились");
			    Works[playerid] = true;
				JobAmmount[playerid] = 0; JobCP[playerid] = 1; PicCP[playerid] = 0;
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
	   			new skin = random(2);
	   			if(skin == 1) SetPlayerSkin(playerid,260);
				else SetPlayerSkin(playerid,16);
				SendClientMessage(playerid,COLOR_GREEN, "Отправляйтесь носить мешки!");
			}
	        else
	        {
				if(Works[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы не устроены на работу");
			    if(JobAmmount[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны получить зарплату в офисе");
			    SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
			    PicCP[playerid] = 1; Bags[playerid] = 999; WithBag[playerid] = 0;
				Works[playerid] = false; JobAmmount[playerid] = 0; JobCP[playerid] = 0; Employer[playerid] = 999;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				DisablePlayerCheckpoint(playerid);
		    	return true;
	        }
		}
		case 406:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pJob] != 7) return SendClientMessage(playerid, COLOR_GREY,"Ты не прораб");
				if(Prorab[playerid] == true) return SendClientMessage(playerid, COLOR_GREY,"Ты уже работаешь");
				SetPlayerSkin(playerid, 27);
				Prorab[playerid] = true;
				SendClientMessage(playerid, COLOR_GREEN, "Отправляйтесь заключать контракты с грузчиками");
				return true;
			}
			else
			{
				if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY,"Ты не в рабочей форме");
				SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён!");
				Prorab[playerid] = false; JobAmmount[playerid] = 0; Employer[playerid] = 999;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				return true;
			}
		}
	    case 9298:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pCash] <= 99999)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					return true;
				}
	        	switch(PlayerInfo[playerid][pMember])
	        	{
					case 5:
					{
						lcnmats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
					case 6:
					{
						yakuzamats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
					case 14:
					{
						rmmats = 50000;
					    SendClientMessage(playerid,COLOR_YELLOW, "Вы купили 50000 материалов за 100000 вирт");
					    PlayerInfo[playerid][pCash] -= 100000;
					}
				}
			}
			else
			{
				return true;
			}
			return true;
		}
		case 1541:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0: ShowStats(playerid,ChosenPlayer[playerid]);
				    case 1:
					{
					    new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(ChosenPlayer[playerid], X, Y, Z);
						if(IsPlayerInAnyVehicle(playerid))
						{
							SetVehiclePos(GetPlayerVehicleID(playerid), X, Y+4, Z);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
					    	SetPlayerPos(playerid, X, Y+2, Z);
					    	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(ChosenPlayer[playerid]));
					    	SetPlayerInterior(playerid, GetPlayerInterior(ChosenPlayer[playerid]));
	                	}
	                	return true;
					}
					case 2:
					{
					    new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(playerid, X, Y, Z);
						if(IsPlayerInAnyVehicle(ChosenPlayer[playerid]))
						{
							SetVehiclePos(GetPlayerVehicleID(ChosenPlayer[playerid]), X, Y+4, Z);
							TelePos[ChosenPlayer[playerid]][0] = 0.0;TelePos[ChosenPlayer[playerid]][1] = 0.0;
						}
						else
						{
					    	SetPlayerPos(ChosenPlayer[playerid], X, Y+2, Z);
					    	SetPlayerVirtualWorld(ChosenPlayer[playerid], GetPlayerVirtualWorld(playerid));
					    	SetPlayerInterior(ChosenPlayer[playerid], GetPlayerInterior(playerid));
					    	SendClientMessage(ChosenPlayer[playerid], COLOR_WHITE, "Вас телепортировал к себе администратор NextAgeRP");
	                	}
						return true;
					}
					case 3:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pMuted] == 0)
						{
					    	new string[128];
							format(string, sizeof(string), "%s получил(а) бан чата от администратора %s",PlayerInfo[ChosenPlayer[playerid]][pName], PlayerInfo[playerid][pName]);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							PlayerInfo[ChosenPlayer[playerid]][pMuteTime] = 300;
							PlayerInfo[ChosenPlayer[playerid]][pMuted] = 1;
							return true;
						}
						else
						{
					    	new string[128];
							format(string, sizeof(string), "Администратор: %s снял(а) бан чата у %s", PlayerInfo[playerid][pName], PlayerInfo[ChosenPlayer[playerid]][pName]);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							PlayerInfo[ChosenPlayer[playerid]][pMuteTime] = 0;
							PlayerInfo[ChosenPlayer[playerid]][pMuted] = 0;
							return true;
						}
					}
					case 4:
					{
				    	new string[66];
						format(string, sizeof(string), "Вы посадили %s в тюрьму на 1 минуту", PlayerInfo[ChosenPlayer[playerid]][pName]);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						DelGun(ChosenPlayer[playerid]);
	                	PlayerInfo[ChosenPlayer[playerid]][pMadWant] = 0;
						SetPlayerWantedLevel(ChosenPlayer[playerid], 0);
						SetPlayerInterior(ChosenPlayer[playerid], 6);
						SetPlayerPos(ChosenPlayer[playerid],264.1425,77.4712,1001.0391);
						SetPlayerFacingAngle(ChosenPlayer[playerid], 263.0160);
						PlayerInfo[ChosenPlayer[playerid]][pJailed] = 4;
						PlayerInfo[ChosenPlayer[playerid]][pJailTime] = 60;
						return true;
					}
					case 5:
					{
						StartSpectate(playerid, ChosenPlayer[playerid]);
						WatchingTV[playerid] = 1;
						return true;
					}
					case 6:
					{
						if(PlayerInfo[ChosenPlayer[playerid]][pMember] > 0)
						{
					    	new string[62];
							format(string, sizeof(string), "%s выгнал(а) вас из организации", PlayerInfo[playerid][pName]);
							SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, string);
							format(string, sizeof(string), "Вы выгнали %s из организации", PlayerInfo[ChosenPlayer[playerid]][pName]);
							SendClientMessage(playerid, 0x6495EDFF, string);
							SendClientMessage(ChosenPlayer[playerid], 0x6495EDFF, "Теперь вы снова гражданский");
							PlayerInfo[ChosenPlayer[playerid]][pMember] = 0;
							PlayerInfo[ChosenPlayer[playerid]][pLeader] = 0;
							PlayerInfo[ChosenPlayer[playerid]][pRank] = 0;
							SetPlayerArmourAC(ChosenPlayer[playerid],0);
							DelGun(ChosenPlayer[playerid]);
							PlayerInfo[ChosenPlayer[playerid]][pForma] = 0;
							SetPlayerColor(ChosenPlayer[playerid], TEAM_HIT_COLOR);
							SetPlayerSkin(ChosenPlayer[playerid], PlayerInfo[ChosenPlayer[playerid]][pChar]);
							return true;
						}
					}
				}
				return true;
			}
			else
			{
			    return true;
			}
		}
		case 7724:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
						SetPlayerFacingAngle(playerid, 181.6046);
	                	SetPlayerCameraPos(playerid,338.6618,1573.9758,29.3534);
						SetPlayerCameraLookAt(playerid,338.6618,1573.9758,29.3534);
						TogglePlayerControllable(playerid, 0);
						return true;
	            	}
	            	case 1:
	            	{
						SetPlayerFacingAngle(playerid, 170.0947);
	                	SetPlayerCameraPos(playerid,-61.5420,1612.7935,24.2544);
						SetPlayerCameraLookAt(playerid,-61.5420,1612.7935,24.2544);
						TogglePlayerControllable(playerid, 0);
						return true;
	            	}
	            	case 2:
	            	{
	                	SetPlayerFacingAngle(playerid, 115.7203);
	                	SetPlayerCameraPos(playerid,121.2786,1942.5219,29.0367);
						SetPlayerCameraLookAt(playerid,121.2786,1942.5219,29.0367);
						TogglePlayerControllable(playerid, 0);
						return true;
	            	}
	            	case 3:
	            	{
	               		SetPlayerFacingAngle(playerid, 319.3263);
	                	SetPlayerCameraPos(playerid,277.4582,2024.3215,26.3999);
						SetPlayerCameraLookAt(playerid,277.4582,2024.3215,26.3999);
						TogglePlayerControllable(playerid, 0);
						return true;
	            	}
				}
	            SendClientMessage(playerid, COLOR_LIGHTRED, "/cameraoff - отключить камеру.");
				SetPlayerVirtualWorld(playerid, 0);
	        }
	        else return true;
	    }
		case 3725:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
							if(HouseInfo[h][hOwned] == 1)
							{
								HouseInfo[h][hOwned] = 0;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
								SendClientMessage(playerid, COLOR_GREEN, "Дом продан");
								strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
								BuyHouse();
							}
						}
						return true;
					}
					case 1:
					{
						for(new i = 0; i < sizeof(BizzInfo); i++)
						{
							if(BizzInfo[i][bOwned] == 1)
							{
								BizzInfo[i][bOwned] = 0;
								SendClientMessage(playerid, COLOR_GREEN, "Бизнес продан");
								strmid(BizzInfo[i][bOwner], "The State", 0, strlen("The State"), 255);
								BizzInfo[i][bTill] = 0;
								BizzInfo[i][b2Till] = 0;
								for(new r = 0; r < sizeof(playerid); r++)
								{
								    PlayerInfo[r][pPBiskey] = 255;
								}
								new string[100];
								format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
								Update3DTextLabelText(BizzInfo[i][bLabel], 0xEAC700AA, string);
							}
						}
						for(new i = 0; i < sizeof(SBizzInfo); i++)
						{
							if(SBizzInfo[i][sbOwned] == 1)
							{
								SBizzInfo[i][sbOwned] = 0;
								SendClientMessage(playerid, COLOR_GREEN, "Бизнес продан");
								strmid(SBizzInfo[i][sbOwner], "The State", 0, strlen("The State"), 255);
								SBizzInfo[i][sbTill] = 0;
								SBizzInfo[i][s2bTill] = 0;
								for(new r = 0; r < sizeof(playerid); r++)
								{
								    PlayerInfo[r][pPBiskey] = 255;
								}
								new string[100];
								format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[i][sbMessage],SBizzInfo[i][sbBuyPrice]);
								Update3DTextLabelText(SBizzInfo[i][sbLabel], 0xEAC700AA, string);
							}
						}
					}
					case 2:
					{
      					ShowPlayerDialog(playerid, 15624, DIALOG_STYLE_LIST, "Выберите интерьер","Интерьер C Класса[обычный стиль]\nИнтерьер A Класса[Дворец]\nИнтерьер S Класса[Мрамор]\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер N Класса\nИнтерьер S Класса\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер A Класса\nИнтерьер N Класса\nДеревянный\nОбычное дерево\nОбычный стиль 2\nКрасное дерево\nОбычный стиль\nДешёвый стиль\nСледующая страница", "Выбрать", "Закрыть");
						return true;
					}
					case 3:
					{
						for(new h = 0; h < sizeof(HouseInfo); h++)
						{
						    if(HouseInfo[h][hKlass] == 0)
						    {
						        HouseInfo[h][hValue] = 50000;
						        HouseInfo[h][hKlass] = 0;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
							else if(HouseInfo[h][hKlass] == 1)
							{
							    HouseInfo[h][hValue] = 150000;
							    HouseInfo[h][hKlass] = 1;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
							else if(HouseInfo[h][hKlass] == 2)
							{
							    HouseInfo[h][hValue] = 1000000;
							    HouseInfo[h][hKlass] = 2;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
							else if(HouseInfo[h][hKlass] == 3)
							{
							    HouseInfo[h][hValue] = 4000000;
							    HouseInfo[h][hKlass] = 3;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
							else if(HouseInfo[h][hKlass] == 4)
							{
							    HouseInfo[h][hValue] = 8000000;
							    HouseInfo[h][hKlass] = 4;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
							else if(HouseInfo[h][hKlass] == 5)
							{
							    HouseInfo[h][hValue] = 10000000;
							    HouseInfo[h][hKlass] = 5;
								HouseInfo[h][hHel] = 0;
								HouseInfo[h][hLock] = 1;
								HouseInfo[h][hTakings] = 100;
							}
						}
					}
				}
			}
			return true;
		}
		case 15624:
		{
			if(response)
			{
		    	switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 2735, DIALOG_STYLE_INPUT, "Интерьер C Класса", "Введите номер дома", "Готово", "Отмена");
					case 1: ShowPlayerDialog(playerid, 2736, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
					case 2: ShowPlayerDialog(playerid, 2737, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
					case 3: ShowPlayerDialog(playerid, 2738, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 4: ShowPlayerDialog(playerid, 2739, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 5: ShowPlayerDialog(playerid, 2740, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
					case 6: ShowPlayerDialog(playerid, 2741, DIALOG_STYLE_INPUT, "Интерьер S Класса", "Введите номер дома", "Готово", "Отмена");
					case 7: ShowPlayerDialog(playerid, 2742, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 8: ShowPlayerDialog(playerid, 2743, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 9: ShowPlayerDialog(playerid, 2744, DIALOG_STYLE_INPUT, "Интерьер D Класса", "Введите номер дома", "Готово", "Отмена");
					case 10: ShowPlayerDialog(playerid, 2745, DIALOG_STYLE_INPUT, "Интерьер A Класса", "Введите номер дома", "Готово", "Отмена");
					case 11: ShowPlayerDialog(playerid, 2746, DIALOG_STYLE_INPUT, "Интерьер N Класса", "Введите номер дома", "Готово", "Отмена");
					case 12: ShowPlayerDialog(playerid, 2726, DIALOG_STYLE_INPUT, "Деревянный стиль", "Введите номер дома", "Готово", "Отмена");
					case 13: ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_INPUT, "Обычное дерево", "Введите номер дома", "Готово", "Отмена");
					case 14: ShowPlayerDialog(playerid, 2731, DIALOG_STYLE_INPUT, "Обычный стиль [2]", "Введите номер дома", "Готово", "Отмена");
					case 15: ShowPlayerDialog(playerid, 2732, DIALOG_STYLE_INPUT, "Красное дерево", "Введите номер дома", "Готово", "Отмена");
					case 16: ShowPlayerDialog(playerid, 2733, DIALOG_STYLE_INPUT, "Обычный стиль [3]", "Введите номер дома", "Готово", "Отмена");
					case 17: ShowPlayerDialog(playerid, 2734, DIALOG_STYLE_INPUT, "Дешевый стиль", "Введите номер дома", "Готово", "Отмена");
					case 18: ShowPlayerDialog(playerid, 2760, DIALOG_STYLE_LIST, "Новые интерьеры", "[1]Nope\n[2]A\n[3]D\n[4]D\n[5]C\n[6]C\n[7]C\n[8]A\n[9]D\n[10]B\n[11]B\n[12]D\n[13]N(Лаг)\n[14]N\n[15]N\n[16]N\n[17]D(Лаг)\n[18]C(Лаг)\n[19]N(Лаг)\n[20]С\n[21]D\n[22]N\n[23]D\n[24]N\n[25]C\n[26]D\n[27]N\n[28]B", "Установить", "Назад");
				}
			}
			else
			{
				return true;
			}
		}
		case 2760:
		{
			if(response)
			{
		    	switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 2761, DIALOG_STYLE_INPUT, "1", "Введите номер дома", "Готово", "Отмена");
					case 1: ShowPlayerDialog(playerid, 2762, DIALOG_STYLE_INPUT, "2", "Введите номер дома", "Готово", "Отмена");
					case 2: ShowPlayerDialog(playerid, 2763, DIALOG_STYLE_INPUT, "3", "Введите номер дома", "Готово", "Отмена");
					case 3: ShowPlayerDialog(playerid, 2764, DIALOG_STYLE_INPUT, "4", "Введите номер дома", "Готово", "Отмена");
					case 4: ShowPlayerDialog(playerid, 2765, DIALOG_STYLE_INPUT, "5", "Введите номер дома", "Готово", "Отмена");
					case 5: ShowPlayerDialog(playerid, 2766, DIALOG_STYLE_INPUT, "6", "Введите номер дома", "Готово", "Отмена");
					case 6: ShowPlayerDialog(playerid, 2767, DIALOG_STYLE_INPUT, "7", "Введите номер дома", "Готово", "Отмена");
					case 7: ShowPlayerDialog(playerid, 2768, DIALOG_STYLE_INPUT, "8", "Введите номер дома", "Готово", "Отмена");
					case 8: ShowPlayerDialog(playerid, 2769, DIALOG_STYLE_INPUT, "9", "Введите номер дома", "Готово", "Отмена");
					case 9: ShowPlayerDialog(playerid, 2770, DIALOG_STYLE_INPUT, "10", "Введите номер дома", "Готово", "Отмена");
					case 10: ShowPlayerDialog(playerid, 2771, DIALOG_STYLE_INPUT, "11", "Введите номер дома", "Готово", "Отмена");
					case 11: ShowPlayerDialog(playerid, 2772, DIALOG_STYLE_INPUT, "12", "Введите номер дома", "Готово", "Отмена");
					case 12: ShowPlayerDialog(playerid, 2773, DIALOG_STYLE_INPUT, "13", "Введите номер дома", "Готово", "Отмена");
					case 13: ShowPlayerDialog(playerid, 2774, DIALOG_STYLE_INPUT, "14", "Введите номер дома", "Готово", "Отмена");
					case 14: ShowPlayerDialog(playerid, 2775, DIALOG_STYLE_INPUT, "15", "Введите номер дома", "Готово", "Отмена");
					case 15: ShowPlayerDialog(playerid, 2776, DIALOG_STYLE_INPUT, "16", "Введите номер дома", "Готово", "Отмена");
					case 16: ShowPlayerDialog(playerid, 2777, DIALOG_STYLE_INPUT, "17", "Введите номер дома", "Готово", "Отмена");
					case 17: ShowPlayerDialog(playerid, 2778, DIALOG_STYLE_INPUT, "18", "Введите номер дома", "Готово", "Отмена");
					case 18: ShowPlayerDialog(playerid, 2779, DIALOG_STYLE_INPUT, "19", "Введите номер дома", "Готово", "Отмена");
					case 19: ShowPlayerDialog(playerid, 2780, DIALOG_STYLE_INPUT, "20", "Введите номер дома", "Готово", "Отмена");
					case 20: ShowPlayerDialog(playerid, 2781, DIALOG_STYLE_INPUT, "21", "Введите номер дома", "Готово", "Отмена");
					case 21: ShowPlayerDialog(playerid, 2782, DIALOG_STYLE_INPUT, "22", "Введите номер дома", "Готово", "Отмена");
					case 22: ShowPlayerDialog(playerid, 2783, DIALOG_STYLE_INPUT, "23", "Введите номер дома", "Готово", "Отмена");
					case 23: ShowPlayerDialog(playerid, 2784, DIALOG_STYLE_INPUT, "24", "Введите номер дома", "Готово", "Отмена");
					case 24: ShowPlayerDialog(playerid, 2785, DIALOG_STYLE_INPUT, "25", "Введите номер дома", "Готово", "Отмена");
					case 25: ShowPlayerDialog(playerid, 2786, DIALOG_STYLE_INPUT, "26", "Введите номер дома", "Готово", "Отмена");
					case 26: ShowPlayerDialog(playerid, 2787, DIALOG_STYLE_INPUT, "27", "Введите номер дома", "Готово", "Отмена");
					case 27: ShowPlayerDialog(playerid, 2788, DIALOG_STYLE_INPUT, "28", "Введите номер дома", "Готово", "Отмена");
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 15624, DIALOG_STYLE_LIST, "Выберите интерьер","Интерьер C Класса[обычный стиль]\nИнтерьер A Класса[Дворец]\nИнтерьер S Класса[Мрамор]\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер N Класса\nИнтерьер S Класса\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер D Класса\nИнтерьер A Класса\nИнтерьер N Класса\nДеревянный\nОбычное дерево\nОбычный стиль 2\nКрасное дерево\nОбычный стиль\nДешёвый стиль\nСледующая страница", "Выбрать", "Закрыть");
				return true;
			}
		}
		case 2761:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 1;
				HouseInfo[house][hExitx] = 223.1601;
				HouseInfo[house][hExity] = 1288.2301;
				HouseInfo[house][hExitz] = 1082.1406;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2762:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 7;
				HouseInfo[house][hExitx] = 225.7516;
				HouseInfo[house][hExity] = 1022.9897;
				HouseInfo[house][hExitz] = 1084.0132;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2763:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 295.2853;
				HouseInfo[house][hExity] = 1473.2103;
				HouseInfo[house][hExitz] = 1080.2578;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2764:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 328.1108;
				HouseInfo[house][hExity] = 1478.5229;
				HouseInfo[house][hExitz] = 1084.4375;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2765:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 386.4882;
				HouseInfo[house][hExity] = 1471.8068;
				HouseInfo[house][hExitz] = 1080.1875;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2766:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = 375.9026;
				HouseInfo[house][hExity] = 1417.2793;
				HouseInfo[house][hExitz] = 1081.3281;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2767:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 447.1080;
				HouseInfo[house][hExity] = 1397.9519;
				HouseInfo[house][hExitz] = 1084.3047;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2768:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 227.1929;
				HouseInfo[house][hExity] = 1114.2271;
				HouseInfo[house][hExitz] = 1080.9976;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2769:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 221.7851;
				HouseInfo[house][hExity] = 1140.9659;
				HouseInfo[house][hExitz] = 1082.6094;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2770:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 15;
				HouseInfo[house][hExitx] = -284.3710;
				HouseInfo[house][hExity] = 1471.1194;
				HouseInfo[house][hExitz] = 1084.3750;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2771:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 83.0508;
				HouseInfo[house][hExity] = 1323.1954;
				HouseInfo[house][hExitz] = 1083.8594;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2772:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 260.8678;
				HouseInfo[house][hExity] = 1238.3767;
				HouseInfo[house][hExitz] = 1084.2578;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2773:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 12;
				HouseInfo[house][hExitx] = 446.7377;
				HouseInfo[house][hExity] = 507.0086;
				HouseInfo[house][hExitz] = 1001.4195;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2774:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 1;
				HouseInfo[house][hExitx] = 244.4305;
				HouseInfo[house][hExity] = 304.9214;
				HouseInfo[house][hExitz] = 999.1484;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2775:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 267.1370;
				HouseInfo[house][hExity] = 304.9034;
				HouseInfo[house][hExitz] = 999.1484;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2776:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 3;
				HouseInfo[house][hExitx] = 292.1430;
				HouseInfo[house][hExity] = 309.9391;
				HouseInfo[house][hExitz] = 999.1484;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2777:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 1;
				HouseInfo[house][hExitx] = 2524.9451;
				HouseInfo[house][hExity] = -1679.3320;
				HouseInfo[house][hExitz] = 1015.4986;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2778:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 2350.1633;
				HouseInfo[house][hExity] = -1180.8019;
				HouseInfo[house][hExitz] = 1027.9766;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2779:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 2253.9597;
				HouseInfo[house][hExity] = -1140.0364;
				HouseInfo[house][hExitz] = 1050.6328;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2780:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 2269.5828;
				HouseInfo[house][hExity] = -1210.3940;
				HouseInfo[house][hExitz] = 1047.5625;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2781:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = 2365.3137;
				HouseInfo[house][hExity] = -1134.9198;
				HouseInfo[house][hExitz] = 1050.8750;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2782:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExitx] = 2233.8430;
				HouseInfo[house][hExity] = -1115.2126;
				HouseInfo[house][hExitz] = 1050.8828;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2783:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 8;
				HouseInfo[house][hExitx] = 2366.0;
				HouseInfo[house][hExity] = -1134.0;
				HouseInfo[house][hExitz] = 1051.0;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2784:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 11;
				HouseInfo[house][hExitx] = 2283.0;
				HouseInfo[house][hExity] = -1139.0;
				HouseInfo[house][hExitz] = 1051.0;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2785:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 2237.5146;
				HouseInfo[house][hExity] = -1081.1023;
				HouseInfo[house][hExitz] = 1049.0234;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2786:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExitx] = 2309.0;
				HouseInfo[house][hExity] = -1212.0;
				HouseInfo[house][hExitz] = 1050.0;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2787:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 1;
				HouseInfo[house][hExitx] = 2218.0;
				HouseInfo[house][hExity] = -1076.0;
				HouseInfo[house][hExitz] = 1051.0;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2788:
		{
		    if(response)
		    {
		        new house = strval(inputtext);
				HouseInfo[house][hInt] = 9;
				HouseInfo[house][hExitx] = 2318.0;
				HouseInfo[house][hExity] = -1026.0;
				HouseInfo[house][hExitz] = 1051.0;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
		    }
		    else return true;
		}
		case 2726:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = -261.9759;
				HouseInfo[house][hExity] = 1456.8844;
				HouseInfo[house][hExitz] = 1084.3672;
		     	SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2730:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 23.8334;
				HouseInfo[house][hExity] = 1340.4812;
				HouseInfo[house][hExitz] = 1084.3750;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2731:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExitx] = 261.0654;
				HouseInfo[house][hExity] = 1284.2991;
				HouseInfo[house][hExitz] = 1080.2578;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2732:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 491.0190;
				HouseInfo[house][hExity] = 1399.0691;
				HouseInfo[house][hExitz] = 1080.2578;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2733:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExitx] = 225.9761;
				HouseInfo[house][hExity] = 1239.9126;
				HouseInfo[house][hExitz] = 1082.1406;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
			return true;
		}
		case 2734:
		{
			if(response)
		    {
			    new house = strval(inputtext);
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExitx] = 2261.3103;
				HouseInfo[house][hExity] = -1136.4467;
				HouseInfo[house][hExitz] = 1050.6328;
				SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2735:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 22.7405;
	            HouseInfo[house][hExity] = 1404.3799;
	            HouseInfo[house][hExitz] = 1084.4297;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2736:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 140.2206;
	            HouseInfo[house][hExity] = 1367.2734;
	            HouseInfo[house][hExitz] = 1083.8612;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2737:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = 234.1562;
	            HouseInfo[house][hExity] = 1064.9047;
	            HouseInfo[house][hExitz] = 1084.2106;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2738:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = -68.8618;
	            HouseInfo[house][hExity] = 1352.2183;
	            HouseInfo[house][hExitz] = 1080.2109;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2739:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 8;
	            HouseInfo[house][hExitx] = -42.6081;
	            HouseInfo[house][hExity] = 1406.5001;
	            HouseInfo[house][hExitz] = 1084.4297;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2740:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 6;
	            HouseInfo[house][hExitx] = 344.7035;
	            HouseInfo[house][hExity] = 304.9266;
	            HouseInfo[house][hExitz] = 999.1484;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2741:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 1298.9363;
	            HouseInfo[house][hExity] = -795.4872;
	            HouseInfo[house][hExitz] = 1084.0078;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2742:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 2;
	            HouseInfo[house][hExitx] = 2467.7708;
	            HouseInfo[house][hExity] = -1698.2811;
	            HouseInfo[house][hExitz] = 1013.5078;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
		    return true;
		}
		case 2743:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 8;
	            HouseInfo[house][hExitx] = 2807.6252;
	            HouseInfo[house][hExity] = -1173.2600;
	            HouseInfo[house][hExitz] = 1025.5703;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2744:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 5;
	            HouseInfo[house][hExitx] = 318.6064;
	            HouseInfo[house][hExity] = 1115.7708;
	            HouseInfo[house][hExitz] = 1083.8828;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2745:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 12;
	            HouseInfo[house][hExitx] = 2324.3367;
	            HouseInfo[house][hExity] = -1148.6296;
	            HouseInfo[house][hExitz] = 1050.7101;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 2746:
	    {
	        if(response)
	        {
	            new house = strval(inputtext);
	            HouseInfo[house][hInt] = 10;
	            HouseInfo[house][hExitx] = 421.7613;
	            HouseInfo[house][hExity] = 2536.4836;
	            HouseInfo[house][hExitz] = 10.0000;
	            SendClientMessage(playerid, COLOR_GREEN, "Интеръер дома изменен");
	    	}
	    	return true;
		}
		case 1980:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
				    	ShowPlayerDialog(playerid,1981,DIALOG_STYLE_LIST, "Список танцев", "[1] Танец\n[2] Танец\n[3] Танец\n[4] Танец\n[5] Танец\n[6] Танец\n[7] Танец\n[8] Танец\n[9] Танец\n[10] Лунная походка", "Выбрать", "Назад");
				    	return true;
				    }
				    case 1:
				    {
				    	ShowPlayerDialog(playerid,1982,DIALOG_STYLE_LIST, "Список анимаций диллера", "[1] Диллер\n[2] Диллер\n[3] Диллер\n[4] Диллер", "Выбрать", "Назад");
				    	return true;
				    }
				    case 2:
				    {
				    	ShowPlayerDialog(playerid,1983,DIALOG_STYLE_LIST, "Список анимаций сидения", "[1] Сесть\n[2] Сесть\n[3] Сесть\n[4] Сесть\n[5] Сесть", "Выбрать", "Назад");
				    	return true;
				    }
				    case 3:
				    {
				    	ShowPlayerDialog(playerid,1984,DIALOG_STYLE_LIST, "Список анимаций лежания", "[1] Лечь\n[2] Лечь\n[3] Лечь\n[4] Лечь\n[5] Лечь\n[6] Лечь\n[7] Упасть на спину\n[8] Упасть на пузо", "Выбрать", "Назад");
				    	return true;
					}
					case 4:
					{
				    	ShowPlayerDialog(playerid,1985,DIALOG_STYLE_LIST, "Список анимаций курения", "[1] Курить у стены", "Выбрать", "Назад");
				    	return true;
					}
					case 5:
					{
				    	ShowPlayerDialog(playerid,1986,DIALOG_STYLE_LIST, "Список насмешек", "[1] Кунг-Фу\n[2] Бой\n[3] Я крут\n[4] Блевать\n[5] Это я\n[6] Статуя свободы\n[7] Почеши яйца\n[8] Sieg Heil\n[9] Хрен тебе\n[10] *блан", "Выбрать", "Назад");
				    	return true;
					}
					case 6:
					{
						ShowPlayerDialog(playerid,1987,DIALOG_STYLE_LIST, "Эмоции(не всегда работают)", "[1] Злость\n[2] Жвачка\n[3] Сильное удивление\n[4] Удивление\n[5] Бормотание\n[6] Серьёзно?!", "Выбрать", "Назад");
				    	return true;
				    }
				    case 7:
				    {
						ShowPlayerDialog(playerid,1988,DIALOG_STYLE_LIST, "Список жестов", "[1] Всматриваться\n[2] Возмущение\n[3] Зевать\n[4] Сердиться\n[5] Протестовать\n[6] Позвать к себе\n[7] Руки в боки\n[8] Подумать\n[9] Отказаться\n[10] Скрестить руки\n[11] Помахать рукой[1]\n[12] Помахать рукой[2]\n[13] Стоять!\n[14]Скорбеть", "Выбрать", "Назад");
				    	return true;
				    }
				    case 8:
				    {
						ShowPlayerDialog(playerid,1989,DIALOG_STYLE_LIST, "Паркур", "[1] Прыжок веры\n[2] Стойка на руках/Свободное падение\n[3] Прыжок в бок", "Выбрать", "Назад");
				    	return true;
				    }
				    case 9:
				    {
						ShowPlayerDialog(playerid,1990,DIALOG_STYLE_LIST, "Сдаться", "[1] На корты\n[2] Руки вверх", "Выбрать", "Назад");
				    	return true;
				    }
				    case 10:
				    {
						ApplyAnimation(playerid, "PAULNMAC", "PnM_Loop_B",4.1, 1, 1, 1, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 11:
					{
						ApplyAnimation(playerid, "PED", "Walk_Drunk",4.1, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 1987:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                ApplyAnimation(playerid, "PED", "facanger",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "злится",COLOR_PURPLE,30.0,10000);
						return true;
		            }
		            case 1:
		            {
		                ApplyAnimation(playerid, "PED", "facgum",4.1, 1, 1, 1, 1, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "жуёт жвачку",COLOR_PURPLE,30.0,10000);
						return true;
		            }
		            case 2:
		            {
		                ApplyAnimation(playerid, "PED", "facsurp",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "сильно удивлён",COLOR_PURPLE,30.0,10000);
						return true;
		            }
		            case 3:
		            {
		                ApplyAnimation(playerid, "PED", "facsurpm",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "удивлён",COLOR_PURPLE,30.0,10000);
						return true;
		            }
		            case 4:
		            {
		                ApplyAnimation(playerid, "PED", "factalk",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "что-то бормочет",COLOR_PURPLE,30.0,10000);
						return true;
		            }
     				case 5:
					{
						ApplyAnimation(playerid, "PED", "facurios",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "удивлён",COLOR_PURPLE,30.0,10000);
						return true;
					}
		        }
		    }
		    else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1989:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                ApplyAnimation(playerid,"DAM_JUMP", "DAM_Launch",4.1,0,1,1,0,0,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
		            }
		            case 1:
		            {
		                ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop",4.1,0,0,0,1,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
		            }
		            case 2:
		            {
		                ApplyAnimation(playerid, "DODGE", "Cover_Dive_01",4.1,0,1,1,0,0,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
		            }
		        }
		    }
		    else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1990:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
                    {
						ApplyAnimation(playerid, "PED", "cower",4.1, 1, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 1:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_HANDSUP);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1988:
		{
			if(response)
			{
			    switch(listitem)
			    {
                    case 0:
                    {
						ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop",4.1, 1, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 1:
					{
						ApplyAnimation(playerid, "PED", "fucku",4.0,0,0,0,0,0,1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 2:
					{
						ApplyAnimation(playerid, "GANGS", "smkcig_prtl",4.1,0,1,1,1,1,1);
			 			SetPlayerChatBubble(playerid, "зевает",COLOR_PURPLE,30.0,10000);
						return true;
					}
					case 3:
					{
						ApplyAnimation(playerid, "BSKTBALL", "BBALL_react_miss",4.9, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 4:
					{
						ApplyAnimation(playerid, "BSKTBALL", "BBALL_react_score",4.5, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 5:
					{
						ApplyAnimation(playerid, "CAMERA", "camstnd_cmon",4.1, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 6:
					{
						ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_in",4.1, 0, 0, 0, 1, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 7:
					{
						ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_think",4.1, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "думает",COLOR_PURPLE,30.0,10000);
						return true;
					}
					case 8:
					{
						ApplyAnimation(playerid, "FOOD", "EAT_Vomit_SK",4.1, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						SetPlayerChatBubble(playerid, "отказывается",COLOR_PURPLE,30.0,10000);
						return true;
					}
					case 9:
					{
						ApplyAnimation(playerid, "GRAVEYARD", "prst_loopa",4.1, 1, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 10:
					{
						ApplyAnimation(playerid, "KISSING", "gfwave2",4.1, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 11:
					{
						ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop",4.1, 1, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
			        case 12:
					{
						ApplyAnimation(playerid, "POLICE", "CopTraf_Stop",4.1, 0, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
                    case 13:
					{
						ApplyAnimation(playerid, "GRAVEYARD", "mrnM_loop",4.1, 1, 0, 0, 0, 0);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
			    }
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1981:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				    	SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 1:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 2:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 3:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			 			return true;
      				}
			 		case 4:
			 		{
						ApplyAnimation( playerid, "DANCING", "dnce_M_a", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
     				}
					case 5:
					{
						ApplyAnimation( playerid, "DANCING", "dnce_M_b", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
     				}
					case 6:
					{
						ApplyAnimation( playerid, "DANCING", "DAN_Down_A", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
					}
					case 7:
					{
						ApplyAnimation( playerid, "DANCING", "DAN_Left_A", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
					}
					case 8:
					{
						ApplyAnimation( playerid, "DANCING", "DAN_Loop_A", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
 					}
					case 9:
					{
						ApplyAnimation( playerid, "BMX", "BMX_pushes", 4.1, 1, 1, 1, 1, 0 ,1);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1982:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						ApplyAnimation( playerid, "DEALER", "DEALER_DEAL", 4.1, 1, 1, 1, 0, 0 );
						return true;
					}
					case 1:
					{
						ApplyAnimation( playerid, "DEALER", "DEALER_IDLE_01", 4.1, 1, 1, 1, 0, 0);
						return true;
					}
					case 2:
					{
						ApplyAnimation( playerid, "DEALER", "DEALER_IDLE_03", 4.1, 1, 1, 1, 0, 0);
						return true;
					}
					case 3:
					{
						ApplyAnimation( playerid, "DEALER", "DRUGS_BUY", 4.1, 1, 1, 1, 0, 0);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1983:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						ApplyAnimation( playerid, "Attractors", "Stepsit_in", 4.1, 0, 0, 0, 1, 1);
						return true;
					}
					case 1:
					{
						ApplyAnimation( playerid, "FOOD", "FF_Sit_In", 4.1, 0, 1, 1, 1, 1);
						return true;
					}
					case 2:
					{
						ApplyAnimation( playerid, "Int_HOUSE", "LOU_In", 4.1, 0, 0, 0, 1, 1);
						return true;
					}
					case 3:
					{
						ApplyAnimation( playerid, "INT_OFFICE", "OFF_Sit_Crash", 4.1, 0, 0, 0, 1, 1);
						return true;
					}
					case 4:
					{
						ApplyAnimation( playerid, "PED", "Seat_Down", 4.1, 0, 0, 0, 1, 1);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1984:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
						ApplyAnimation( playerid, "BEACH", "Lay_Bac_Loop", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
					case 1:
					{
						ApplyAnimation( playerid, "BEACH", "ParkSit_W_loop", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
					case 2:
					{
						ApplyAnimation( playerid, "BEACH", "bather", 4.1, 1, 0, 0, 1, 1);
						return true;
					}
					case 3:
					{
						ApplyAnimation( playerid, "BEACH", "SitnWait_loop_W", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
					case 4:
					{
						ApplyAnimation( playerid, "CRACK", "crckidle2", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
					case 5:
					{
						ApplyAnimation( playerid, "CRACK", "crckidle4", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
					case 6:
					{
						ApplyAnimation(playerid, "PED", "Floor_hit",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
					case 7:
					{
						ApplyAnimation(playerid, "PED", "Floor_hit_F",4.1, 0, 0, 0, 1, 1);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1985:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						ApplyAnimation( playerid, "SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 0, 0 );
						return true;
					}
					case 1:
					{
						ApplyAnimation( playerid, "SMOKING", "M_smkstnd_loop", 4.1, 1, 0, 0, 0, 0 );
						return true;
					}
					case 2:
					{
						ApplyAnimation( playerid, "SMOKING", "F_smklean_loop", 4.1, 1, 0, 0, 1, 1 );
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 1986:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						ApplyAnimation( playerid, "PARK", "Tai_Chi_Loop", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 1:
					{
						ApplyAnimation( playerid, "KNIFE", "Weapon_Knifeidle", 4.1, 1, 0, 1, 0, 0 );
						return true;
					}
					case 2:
					{
						ApplyAnimation( playerid, "benchpress", "gym_bp_celebrate", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 3:
					{
						ApplyAnimation( playerid, "FOOD", "EAT_Vomit_P", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 4:
					{
						ApplyAnimation( playerid, "LOWRIDER", "prtial_gngtlkC", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 5:
					{
						ApplyAnimation( playerid, "MISC", "Hiker_Pose", 4.1, 1, 0, 1, 0, 0 );
						return true;
					}
					case 6:
					{
						ApplyAnimation( playerid, "MISC", "Scratchballs_01", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 7:
					{
						ApplyAnimation( playerid, "ON_LOOKERS", "Pointup_in", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 8:
					{
						ApplyAnimation( playerid, "RIOT", "RIOT_FUKU", 4.1, 0, 0, 1, 0, 0 );
						return true;
					}
					case 9:
					{
						ApplyAnimation( playerid, "GHANDS", "LHGsign2", 4.1, 1, 0, 1, 0, 0);
						return true;
					}
				}
			}
			else
			{
				new str[512];
				format(str, sizeof(str), "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка");
				ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", str, "Выбрать", "Отмена");
				return true;
			}
		}
		case 2:
		{
			new name[MAX_PLAYER_NAME];
	  		GetPlayerName(playerid, name, sizeof(name));
	    	GetPlayerName(playerid, playername, sizeof(playername));
			if(response)
			{
				if(!strlen(inputtext))
				{
				    new string[280];
					format(string,280, "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {00FF00}не зарегистрирован{FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", name);
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFFFF}Регистрация",string, "Готово", "Отмена");
					return true;
				}
				new bac[37];
				format(bac, sizeof(bac), "%s.ini", playername);
				dini_Create(bac);
				OnPlayerRegister(playerid,inputtext);
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 16)
				{
					return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{FF6347}Длина пароля должна быть от 6 до 16 символов", "Повтор", "");
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
				new rulesdialog[1300];
				format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
				ShowPlayerDialog(playerid,12,DIALOG_STYLE_MSGBOX, "Правила сервера", rulesdialog, "Согласен", "Выйти");
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			GKick(playerid);
			}
		}
		case 9898:
	    {
	        if(response)
	        {
		       	for(new i = 0; i < sizeof(BizzInfo); i++)
				{
					if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
					{
				        if(PlayerInfo[playerid][pCash] < BizzInfo[i][bEntranceCost])
						{
					        SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
							return true;
						}
						PlayerInfo[playerid][pCash] -=BizzInfo[i][bEntranceCost];
						BizzInfo[i][b2Till] += BizzInfo[i][bEntranceCost];
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						SetPlayerVirtualWorld(playerid,BizzInfo[i][bVworld]);
						PlayerInfo[playerid][pBisIn] = i;
						OnPlayerUpdateAc(playerid);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						enterbiz[playerid] = 1;
						return true;
			  		}
				}
			}
			else
			{
			    return true;
			}
		}
		case 10075:
	    {
	        if(response)
	        {
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
						{
							SetPlayerInterior(playerid,HouseInfo[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
							PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
							PlayerInfo[playerid][pLocal] = i;
							return true;
						}
						else
						{
	     					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
	        }
	        else
	        {
				return true;
	        }
		}
	    case 9830:
	    {
	        if(response)
	        {
		       	new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strcmp(playername, AvtoInfo[PlayerInfo[playerid][pAutoMast]][abOwner], true) == 0)
				{
					new bouse = PlayerInfo[playerid][pAutoMast];
					if (!PlayerToPoint(3, playerid,AvtoInfo[bouse][abEntranceX], AvtoInfo[bouse][abEntranceY], AvtoInfo[bouse][abEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы не у своей автомастерской");
					new string[128];
					AvtoInfo[bouse][abLocked] = 1;
					AvtoInfo[bouse][abOwned] = 0;
					AvtoInfo[bouse][abTill] = 0;
					AvtoInfo[bouse][abZp] = 100;
					AvtoInfo[bouse][Rab] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(AvtoInfo[bouse][abOwner], "The State", 0, strlen("The State"), 255);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	  		 		SendClientMessage(playerid, COLOR_GREEN, "Автомастерская успешно продана");
					PlayerInfo[playerid][pAutoMast] = 255;
					PlayerInfo[playerid][pCash] += AvtoInfo[bouse][abArenda];
					format(string, sizeof(string), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Цена: {FFFFFF}%d\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[bouse][abMessage],AvtoInfo[bouse][abBuyPrice]);
					Update3DTextLabelText(AvtoInfo[bouse][abLabel], 0xDDB201AA, string);
					AvtoInfo[bouse][abArenda] = 0;
					OnPropUpdate();
					OnPlayerUpdateAc(playerid);
					return true;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не владелец автомастерской");
				}
	  		}
	        else
	        {
	        	return true;
	        }
		}
		case 9829:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть бизнес");
	        	if(PlayerInfo[playerid][pFerma] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть ферма");
				if(PlayerInfo[playerid][pAutoMast] != 255)return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть автомастерская");
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				for(new b = 0; b < sizeof(AvtoInfo); b++)
				{
					if(PlayerToPoint(2.0, playerid, AvtoInfo[b][abEntranceX], AvtoInfo[b][abEntranceY], AvtoInfo[b][abEntranceZ]) && AvtoInfo[b][abOwned] == 0)
					{
						if(PlayerInfo[playerid][pBank] > AvtoInfo[b][abBuyPrice])
						{
							new bouse = PlayerInfo[playerid][pAutoMast];
							new string[128];
							new sendername[MAX_PLAYER_NAME];
							GetPlayerName(playerid, playername, sizeof(playername));
							PlayerInfo[playerid][pAutoMast] = b;
							AvtoInfo[b][abOwned] = 1;
							AvtoInfo[b][abLocked] = 0;
							PlayerInfo[playerid][pJob] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(AvtoInfo[b][abOwner], sendername, 0, strlen(sendername), 255);
							PlayerInfo[playerid][pBank] -=AvtoInfo[b][abBuyPrice];
							FracBank[0][fKazna] += AvtoInfo[b][abBuyPrice];
							SendClientMessage(playerid, COLOR_GREEN, "Автомастерская приобретёна");
							SendClientMessage(playerid, COLOR_WHITE, "Помощь: /mm - Команды сервера - Автомастерские");
							new helpstring[512]="/selltune\t\tПродать автомастерскую\n/tinfo\t\t\tИнформация о мастерской\n/tpanel\t\t\tПанель управления мастерской";
		                	ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машины",helpstring,"Ок","");
							format(string, sizeof(string), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Владелец: {FFFFFF}%s\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[bouse][abMessage],AvtoInfo[bouse][abOwner]);
							Update3DTextLabelText(AvtoInfo[b][abLabel], TEAM_GROVE_COLOR, string);
							OnPropUpdate();
	    					OnPlayerUpdateAc(playerid);
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету в банке нет столько денег!");
							return true;
						}
					}
				}
	  		}
	        else
	        {
	        return true;
	        }
		}
		case 9828:
	    {
	        if(response)
	        {
				if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть бизнес");
	        	if(PlayerInfo[playerid][pFerma] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть ферма");
				if(PlayerInfo[playerid][pAutoMast] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть автомастерская");
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				for(new b = 0; b < sizeof(BizzInfo); b++)
				{
					if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
					{
						if(PlayerInfo[playerid][pBank] > BizzInfo[b][bBuyPrice])
						{
						    new sendername[MAX_PLAYER_NAME];
							new string[128];
							GetPlayerName(playerid, playername, sizeof(playername));
							PlayerInfo[playerid][pPBiskey] = b;
							BizzInfo[b][bOwned] = 1;
							BizzInfo[b][bLocked] = 0;
							BizzInfo[b][bPrice] = 100;
							BizzInfo[b][bTill] = 0;
							BizzInfo[b][b2Till] = 0;
							PlayerInfo[playerid][pJob] = 0;
							BizzInfo[b][bProducts] = 0;
							BizzInfo[b][bEntranceCost] = 100;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
							PlayerInfo[playerid][pBank] -=BizzInfo[b][bBuyPrice];
                            FracBank[0][fKazna] +=BizzInfo[b][bBuyPrice];
							SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
							PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
							SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
							SetPlayerVirtualWorld(playerid, BizzInfo[b][bVworld]);
							PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
							PlayerInfo[playerid][pLocal] = b+99;
							new helpstring[512]="/buybiz\t\t\tКупить бизнес\n/sellbiz\t\t\tПродать бизнес\n/bizlock\t\t\tЗакрыть бизнес\n/bizfee\t\t\tУстановить цену бензина\n/bizstats\t\tСтатистика бизнеса\n/getbizstats\t\tУзнать статистику чужого бизнеса\n/bizwithdraw\t\tВзять деньги с бизнеса\n/cena\t\t\tУстановить цену продуктов\n/bizmafia\t\tУстановить крышу";
		                	ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Бизнесы",helpstring,"Ок","");
							SendClientMessage(playerid, COLOR_GREEN, "Бизнес приобретён");
       						SendClientMessage(playerid, COLOR_WHITE, "Помощь по бизнесу: /mm - Команды сервера - Бизнес");
							format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[b][bMessage], BizzInfo[b][bOwner]);
							Update3DTextLabelText(BizzInfo[b][bLabel], 0x00D900AA, string);
							OnPropUpdate();
							return true;
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "На Вашем счету в банке нет столько денег!");
							return true;
						}
					}
				}
	  		}
	        else
	        {
	        	return true;
	        }
		}
		case 10026:
		{
	        if(response)
	        {
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if(IsPlayerConnected(playerid))
	                {
                        new Float:oldposx, Float:oldposy, Float:oldposz;
		            	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		            	new sendername[MAX_PLAYER_NAME];
				            	    GetPlayerName(playerid, sendername, sizeof(sendername));
		            	for(new h = 0; h < sizeof(HouseInfo); h++)
		            	{
			            	if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
			            	{
				            	if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(sendername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
				            	{
					            	SendClientMessage(playerid, COLOR_LIGHTGREEN, "У вас уже есть дом");
					            	return true;
				            	}
				            	if(PlayerInfo[playerid][pCash] > HouseInfo[h][hValue])
				            	{
					            	PlayerInfo[playerid][pPHousekey] = h;
					            	HouseInfo[h][hOwned] = 1;
					            	HouseInfo[h][hHel] = 0;
					            	HouseInfo[h][hTakings] = 100;
					            	GetPlayerName(playerid, sendername, sizeof(sendername));
                                    strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
					            	PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
					            	FracBank[0][fKazna] += HouseInfo[h][hValue];
					            	SetPlayerInterior(playerid,HouseInfo[h][hInt]);
					            	SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					            	PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
                                    SetPlayerVirtualWorld(playerid, h+50);
					            	PlayerInfo[playerid][pLocal] = h;
					            	SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с покупкой!");
					            	SendClientMessage(playerid, 0xFFD800AA, "Внимание! Теперь каждый час со счёта вашего дома будут снимать комунальные платежи.Если на счету недостаточно денег - вас выселят");
					            	SendClientMessage(playerid, 0xFFD800AA, "Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> команды)");
					            	new helpstring[512]="/hm\t\t\tМеню дома\n/tv\t\t\tПосмотреть телевизор(Стоя у него)\n/buyhouse\t\tКупить дом\n/sellhouse\t\tПродать дом\n/home\t\t\tПоставить метку у дома(GPS)\n/changehouse\t\tПродать дом игроку\n/healme\t\t\tИспользовать аптечку\nAlt|/exit\t\t\tВыйти из дома";
		                			ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Дома",helpstring,"Ок","");
					            	GameTextForPlayer(playerid,"~w~welcome home~n~press:~g~alt", 5000, 3);
					            	if(PlayerInfo[playerid][pCar] == 0)
					            	{
					            		PlayerInfo[playerid][pCar] = 462;
					            		PlayerInfo[playerid][pColor] = 0;
					            		PlayerInfo[playerid][pColor1] = 0;
						            	PlayerInfo[playerid][pProcents] = 100;
					            		HouseInfo[h][hVcol1] = 0;
					            		HouseInfo[h][hVcol2] = 0;
					            		Fuell[caridhouse[playerid]] = 100;
						            	CompVehDel(playerid);
					            	}
					            	OnPropUpdate();
					            	new house = PlayerInfo[playerid][pPHousekey];
					            	caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc], PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
					            	createdcar = caridhouse[playerid];
					            	LockCar(caridhouse[playerid]);
					            	IsLocked[caridhouse[playerid]] = 1;
					            	createdcar ++;
					            	HouseInfo[h][hVcol1] = PlayerInfo[playerid][pColor];
					            	HouseInfo[h][hVcol2] = PlayerInfo[playerid][pColor1];
					            	Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
					            	AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
					            	AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
					            	AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
					            	if(PJ(caridhouse[playerid]))
					            	{
						            	ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
						            	AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
						            	AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
					            		AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
					            	}
					            	BuyHouse();
					            	return true;
				            	}
				            	else
				            	{
					            	SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				            		return true;
				            	}
			            	}
		            	}
	            	}
	            	return true;
	            }
			}
	        else
	        {
				return true;
	        }
		}
	    case 4:
	    {
	        if(response)
	        {
	 			new rand = random(sizeof(gInviteSpawns));
				SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
				SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			    PlayerInfo[playerid][pSex] = 1;
			    PlayerInfo[playerid][pTut] = 0;
	 			PlayerInfo[playerid][pChar] = 230;
				PlayerInfo[playerid][pModel] = 255;
			 	PlayerInfo[playerid][pMember] = 0;
			 	PlayerInfo[playerid][pLeader] = 0;
			 	PlayerInfo[playerid][pRank] = 1;
	   			SetPlayerInterior(playerid,5);
				ShowMenuForPlayer(bomj[0],playerid);
				ChosenSkin[playerid] = 230;
				gOoc[playerid] = 0; gFam[playerid] = 0; gLogin[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				SelectChar[playerid] = 255;
				SelectCharPlace[playerid] = 1;
				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				new skin =2 + random(100);
				SetPlayerVirtualWorld(playerid,skin);
				return true;
	        }
	        else
	        {
	  			new rand = random(sizeof(gInviteSpawns));
				SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
				SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
				SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			    PlayerInfo[playerid][pSex] = 2;
			    PlayerInfo[playerid][pTut] = 0;
	 			PlayerInfo[playerid][pChar] = 90;
				PlayerInfo[playerid][pModel] = 255;
			 	PlayerInfo[playerid][pMember] = 0;
			 	PlayerInfo[playerid][pLeader] = 0;
			 	PlayerInfo[playerid][pRank] = 1;
			 	ChosenSkin[playerid] = 90;
	   			SetPlayerInterior(playerid,5);
				ShowMenuForPlayer(bomj[1],playerid);
				gOoc[playerid] = 0; gFam[playerid] = 0; gLogin[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
				SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				SelectChar[playerid] = 255;
				SelectCharPlace[playerid] = 1;
				PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				new skin =2 + random(100);
				SetPlayerVirtualWorld(playerid,skin);
				return true;
	        }
		}
		case 1993:
		{
	        if(response)
	        {
				new donate;
				new iniFile = ini_openFile("gamefiles/donate.ini");
				if(ini_getInteger(iniFile, inputtext, donate) == 0)
				{
				    new string[55];
					SendClientMessage(playerid, COLOR_NEWS, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					format(string, sizeof(string), "На ваш банковский счет зачислено: %d вирт", donate);
					SendClientMessage(playerid, COLOR_NEWS, string);
					format(string, sizeof(string), "Старый баланс: %d вирт", PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					PlayerInfo[playerid][pBank] += donate;
					format(string, sizeof(string), "Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_NEWS, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					PlayerInfo[playerid][pDonateAccount] += donate;
					PlayerInfo[playerid][pDonate] += donate;
					ini_removeKey(iniFile, inputtext);
					if(PlayerInfo[playerid][pDonateAccount] >= 1000000 && PlayerInfo[playerid][pDonateRank] == 0)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы достигли 1 уровня VIP (BRONZE VIP");
						SendClientMessage(playerid, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playerid][pDonateRank] = 1;
					}
					else if(PlayerInfo[playerid][pDonateAccount] >= 5000000 && PlayerInfo[playerid][pDonateRank] == 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы достигли 2 уровня VIP (SILVER VIP)");
						SendClientMessage(playerid, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playerid][pDonateRank] = 2;
					}
					else if(PlayerInfo[playerid][pDonateAccount] >= 10000000 && PlayerInfo[playerid][pDonateRank] == 2)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы достигли 3 уровня VIP (GOLD VIP)");
						SendClientMessage(playerid, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playerid][pDonateRank] = 3;
					}
					else if(PlayerInfo[playerid][pDonateAccount] >= 15000000 && PlayerInfo[playerid][pDonateRank] == 3)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы достигли 4 уровня VIP(PLATINUM VIP)");
						SendClientMessage(playerid, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playerid][pDonateRank] = 4;
					}
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Ошибка", "Вы ошиблись при вводе кодов", "Готово", "");
				}
				ini_closeFile(iniFile);
			}
			else
			{
				return true;
			}
		}
	    case 20011:
	    {
	        if(response)
	        {
	        	switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pAdmin] >= 1)
						{
		                	SendClientMessage(playerid,0x6495EDFF, "<1> /a /mute /mutelist /kick /aad /pm /cnn /re /gethere /mark /gotomark");
		                	SendClientMessage(playerid,0x6495EDFF, "<1> /alogin - войти в админ панель /hp /geton - последний вход");
		                }
		            }
		           	case 1:
		            {
						if(PlayerInfo[playerid][pAdmin] >= 2)
						{
			                SendClientMessage(playerid,0x6495EDFF, "<2> /getstats /gm /goto /skin - сменить скин /alock /clearad");
			                SendClientMessage(playerid,0x6495EDFF, "<2> /demorgan /prison /unprison /adminkey - пароль к админ панели /warn /alock");
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][pAdmin] >= 3)
						{
							SendClientMessage(playerid,0x6495EDFF, "<3> /skick /banip /tp /ban /offban");
							SendClientMessage(playerid,0x6495EDFF, "<3> /cnnn /forceskin /sban");
			                SendClientMessage(playerid,0x6495EDFF, "<3> /uval /ram  /warehouse - проверить склады");
						}
					}
					case 3:
					{
						if(PlayerInfo[playerid][pAdmin] >= 4)
						{
			                SendClientMessage(playerid,0x6495EDFF, "<4> /unbanip /spcar - отправить машину на респ /agetip /agetregip /makeleader");
			                SendClientMessage(playerid,0x6495EDFF, "<4> /spawn /getleader - посмотреть лидера фракции оффлайн /pgetip [ip] /spveh");
						}
					}
					case 4:
					{
			            if(PlayerInfo[playerid][pAdmin] >= 5)
			            {
			            	SendClientMessage(playerid,0x6495EDFF, "<5> /givegun /unbanip /spcar - отправить машину на респ");
			                SendClientMessage(playerid,0x6495EDFF, "<5> /sethp - устоновить уровень хп, /spawn - респавн");
			                SendClientMessage(playerid,0x6495EDFF, "<5> /unban /arace /paint /mrace /offleader");
			            }
					}
					case 5:
					{
			            if(PlayerInfo[playerid][pAdmin] >= 6)
			            {
			                SendClientMessage(playerid,0x6495EDFF, "<6> /del - удалить аккаунт /gzcolor");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /sban /setskin /setstat /clearchat /abalance - банки фракций");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /reloadbans - перезагруз. бан лист /vipmans /warnmans");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /saveall - сохранить всё /givemoney /money /offmoney /offadmin /offip /offallip");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /setcena - цена дома /setklass - класс /setschet - счет дома /setpos /setposcar");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /edit - меню упр.домов /getschet - узнать счет дома /house - телепортироваться к дому");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /setmats - устоновить материалы складу");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /setbizcena - уст.цену бизнеса /setbizbar - уст.место бара бизнеса /setbizprod - уст.прод.бизнеса");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /mast - телепортироваться к маст. /biz - телепортироваться к бизнесу");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /sbiz - телепортироваться к сбизнесу");
			                SendClientMessage(playerid,0x6495EDFF, "<6> /asellbiz - прод.биз/aselltune - прод.маст /asellferm - прод.ферму");
					   }
	   				}
               		case 6:
					{
			            if(PlayerInfo[playerid][pAdmin] >= 7)
			            {
   						    SendClientMessage(playerid,0x6495EDFF, "<7> /makeadmin /offadmin /offleader");
                            SendClientMessage(playerid,0x6495EDFF, "<7> /puk - выпустить газ рестарт сервера /gmx - выполнить рестарт сервера.");
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10025:
	    {
	        if(response)
	        {
	      		switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid,1012,DIALOG_STYLE_INPUT, "Поиск команд", "Введите интересующую Вас команду, и получите её описание", "Готово", "Отмена");
		   			case 1:
		            {
		                new helpstring[512]="/time\t\tВремя\n/id\n/gps\t\tВажные места\n/propose\tПожениться\n/divorce\tРазвестись(в церкви)\n/music\t\tМузыка(MP3)\n/clist\t\tЦвет значка\n/myskills\tУмения стрелка\n/pdd\t\tПравила Дорожного Движения\n/busdrivers\tВодители автобуса\n/eat|/drink|/buy\tПоесть|Выпить|Купить\n/ratingnews\tРейтинг Радио\n/showpass\tПаспорт\n/(show)licenses\t(Показать)Лицензии\n/accept|/get\tПринять|Взять\n/anim\t\tАнимации\n/quitjob\t\tУйти с работы";
		                new helpstring2[1024];
		                format(helpstring2,sizeof(helpstring2),"%s\n/eject\t\tВыкинуть из машины\n/piss\t\tПописать\n/pay/t/tПередать наличные\n/dice\t\tБросить кости\n/usedrugs\tНаркотики\n/radio\t\tСменить радиостанцию\n/ormoney\tБросить монетку\n/beer|/wine\tПиво|Вино\n/sprite|/smoke\tСпрайт|Сигареты\n/items\t\tИнвентарь",helpstring);
      					ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Обычные команды",helpstring2,"Ок","");
		                return true;
		            }
					case 2:
		            {
		                new helpstring[512]="/o\t\tГлобальный чат\n/ad\t\tОбъявление(Радио)\n/gov\t\tГос.новости\n/f\t\tЧат негос.организации\n/s\t\tКрик\n/m\t\tМегафон\n/r\t\tРация\n/d\t\tНаписать в депортамент\n/me\t\tДействие(Имя_Фамилия пожал руку)\n/do\t\tОбстановка([id]Повеяло свежестью)\n/try\t\tПопытка(Имя_Фамилия пытается закрыть дверь|Удачно)";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Чат",helpstring,"Ок","");
		                return true;
		            }
		            case 3:
		            {
		                new helpstring[512]="/c\t\tУслуги по телефону\n/call\t\tПозвонить по номеру\n/number\tУзнать номер телефона\n/sms[id]\t\tСМС игроку\n/p\t\tОтветить на звонок\n/h\t\tЗавершить разговор\n/directory\tСправочник(адвокаты,лидеры и т.д.)\n[VIP]/togphone\tВыключить телефон";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Телефон",helpstring,"Ок","");
						return true;
					}
		            case 4:
		            {
						switch(PlayerInfo[playerid][pJob])
						{
							case 1: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Водитель автобуса","/route\t\tНачать маршрут","Ок","");
							case 2: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Механик","/refill\t\tЗаправить машину\n/repair\t\tПочинить машину\n/mcontract\tКонтракт с заправкой\n/repairdvig\tПочинить двигатель\n/tupdate\tУстановить тюнинг\n/next\t\tВыпустить игрока из мастерской\n/towncar\tПодцепить тросом машину\n/untown\t\tОтцепить машину","Ок","");
							case 3: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Продавец хот догов","/selleat\t\tПродавать хот доги у киоска\n/hotdog\t\tПродать хот дог игроку","Ок","");
							case 4: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Таксист","/fare\t\tУстановить тариф на такси","Ок","");
							case 5: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Развозчик продуктов","/load\t\tЗагрузиться продуктами на складе\n/sellprods\tПродать продукты бизнесу\n/loadgas\tЗагрузиться топливом\n/sellgas\t\tПродать газ заправке\n/pmenu\t\tРабота с зерном и урожаем","Ок","");
							case 6: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Тренер","/fgstyle\t\tОбучение стилям боя","Ок","");
							case 7: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Прораб","/gcontract\tЗаключить контракт с грузчиком\n/gpayday\tВыдать зарплату грузчикам","Ок","");
							case 8: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Инкассатор","/startbank\t\tНачать работу","Ок","");
							case 9:	ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Детектив","/mydocs\tУлики\n/showdocs\tПоказать улики полиции","Ок","");
							case 10: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Дальнобойщик","/tskill\t\tНавык дальнобойщика\n/tmonitor\tЦены\n/tload|/tunload\tЗагрузиться|Разгрузиться","Ок","");
							case 11: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Мусоросборщик","/trash\t\tНавык дальнобойщика","Ок","");
							case 12: ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машинист","/train\t\tНачать рейс","Ок","");
						}
						switch(PlayerInfo[playerid][pMember])
						{
							case 1,10,21:
							{
						    	new helpstring2[512]="/r\t\t\tРация PD\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/m\t\t\tГоворить в мегафон(только в служебном транспорте)\n/su\t\t\tСообщить о преступлении и выдать розыск\n/tazer\t\t\tОглушить\n/cuff\t\t\tНадеть наручники(после /tazer)\n/cput|/ceject\t\tПосадить|вытащить из машины\n/arrest\t\t\tПосадить игрока\n/shieldput\t\tСнять комлект\n/frisk\t\t\tОбыскать\n/take\t\t\tОтобрать\n/ram\t\t\tВыломать дверь у дома или мэрии";
						    	new helpstring[1024];
						    	format(helpstring,sizeof(helpstring),"%s\n/warehouse\t\tМатериалы на складе\n/ticket\t\t\tВыписать штраф\n/givecopkeys\t\tВыдать ключи от ПД\n/mdc\t\t\tИнформация\n/lspdg\t\t\tОткрыть решётку в ПД\n/lgate\t\t\tОткрыть ворота гаража ПД\n/showudost\t\tПоказать удостоверение\n/members\t\tЧлены фракции онлайн",helpstring2);
        						ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды PD",helpstring,"Ок","");
        						return true;
        					}
							case 2:
							{
							    new helpstring2[512]="/r\t\t\tРация\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/m\t\t\tГоворить в мегафон(только в служебном транспорте)\n/su\t\t\tСообщить о преступлении и выдать розыск\n/tazer\t\t\tОглушить\n/cuff\t\t\tНадеть наручники(после /tazer)\n/cput|/ceject\t\tПосадить|вытащить из машины\n/arrest\t\t\tПосадить игрока\n/shieldput\t\tСнять комлект\n/frisk\t\t\tОбыскать\n/take\t\t\tОтобрать\n/ram\t\t\tВыломать дверь у дома или мэрии";
						    	new helpstring[1024];
						    	format(helpstring,sizeof(helpstring),"%s\n/warehouse\t\tМатериалы на складе\n/ticket\t\t\tВыписать штраф\n/givecopkeys\t\tВыдать ключи от ПД\n/mdc\t\t\tИнформация\n/lspdg\t\t\tОткрыть решётку в ПД\n/lgate\t\t\tОткрыть ворота гаража ПД\n/showudost\t\tПоказать удостоверение\n/members\t\tЧлены фракции онлайн\n/ftazer\t\t\tСиловой Шокер\n/tazerall\t\tОглушить всех рядом\n/bizlock\t\t\tЗакрыть ближайший бизнес\n+Команды лидера",helpstring2);
        						ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды FBI",helpstring,"Ок","");
        						return true;
							}
							case 5:
							{
                                new helpstring[512]="/f\t\t\tЧат фракции\n/warehouse\t\tМатериалы на складе\n/members\t\tЧлены фракции онлайн\n/bizlist\t\t\tСписок бизнесов\n/debtors\t\tДолжники\n/tie|/untie\t\tСвязать|Развязать игрока\n/mafiabalance\t\tБанк мафии\n/mafiabank\t\tПоложить в банк мафии\n/mafiawithdraw\t\tВзять из банка мафии\n/materials buy\t\tКупить материалы у банд\n/hb\t\t\tВзломать базу полиции и снять розыск\n/ita\t\t\tГоворить по-итальянски\n/gag|/ungag\t\tВставить|Вытащить кляп";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды LCN",helpstring,"Ок","");
        					    return true;
							}
							case 6:
							{
                                new helpstring[512]="/f\t\t\tЧат фракции\n/warehouse\t\tМатериалы на складе\n/members\t\tЧлены фракции онлайн\n/bizlist\t\t\tСписок бизнесов\n/debtors\t\tДолжники\n/tie|/untie\t\tСвязать|Развязать игрока\n/mafiabalance\t\tБанк мафии\n/mafiabank\t\tПоложить в банк мафии\n/mafiawithdraw\t\tВзять из банка мафии\n/materials buy\t\tКупить материалы у банд\n/hb\t\t\tВзломать базу полиции и снять розыск\n/ita\t\t\tГоворить по-японски\n/gag|/ungag\t\tВставить|Вытащить кляп";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды Якудзы",helpstring,"Ок","");
        					    return true;
							}
							case 7:
							{
							    new helpstring2[512]="/r\t\t\tРация\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/kazna\t\t\tКазна\n/mdc\t\t\tИнформация\nОхрана:\n/ticket\t\t\tВыписать штраф\n/tazer\t\t\tОглушить\n/cuff\t\t\tНадеть наручники(после /tazer)\n/frisk\t\t\tОбыскать\n/take\t\t\tОтобрать\n/cityhall\t\t\tОткрыть|Закрыть мэрию\n/free\t\t\tОсвободить игрока(Адвокат)\n/giverank\t\tПонизить гос.(прокурор)\nМинфинансов:\n/setpay\t\t\tУстановить наименьшее общее кратное ЗП Фракции";
						    	new helpstring[1024];
						    	format(helpstring,sizeof(helpstring),"%s\n/settax\t\t\tУстановить гос.налог\n/sethouseprice\t\tЦена ближайшего дома\n/setbizprice\t\tЦена ближайшего бизнеса\n/setpension\t\tУстановить пенсию\n/sethousepaid\t\tНалог на дома\n/setbizpaid\t\tНалог на бизнесы\n/setsbizpaid\t\tНалог на заправки\n/setworkshoppaid\tНалог на мастерские\n/getkaznamoney\tВзять деньги из казны\n/bizlock\t\tЗакрыть ближайший бизнес\nЗам.Губернатора+:\nВсе команды",helpstring2);
        						ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды мэрии",helpstring,"Ок","");
        						return true;
							}
							case 8:
        					{
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды казино","/f\t\t\tЧат фракции\n/members\t\tЧлены фракции онлайн\n/deal\t\t\tЗапустить рулетку","Ок","");
        					    return true;
        					}
        					case 9,16,20:
        					{
        					    new helpstring2[512]="/f\t\t\tЧат фракции\n/members\t\tЧлены фракции онлайн\n/news\t\t\tСказать в эфир\n/live\t\t\tВзять интервью\n/newsbank\t\tБанк News\n/newsbank\t\tБанк News\n/newswithdraw\t\tВзять деньги из банка News\n/yes\t\t\tОтветить на звонок в студию\n/off\t\t\tЗакончить звонок в студию\nТелевидение:\n/setcamera\t\tУстановить положение камеры\n/setcamerala\t\tУстановить на что смотрит камера\n/testcamera\t\tПосмотреть изображение с камеры";
								new helpstring[1024];
								format(helpstring,sizeof(helpstring),"%s\n/stream\t\t\tВключить|Выключить трансляцию\n/get weather\t\tЗапустить метеозонд для определения погоды",helpstring2);
								ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды News",helpstring,"Ок","");
        					    return true;
        					}
							case 11:
							{
							    new helpstring[512]="/f\t\t\tЧат фракции\n/members\t\tЧлены фракции онлайн\n/duty\t\t\tНачать работу\n/take\t\t\tИзъять\n/frisk\t\t\tОбыскать\n/itazer\t\t\tШокер\nTAB меню=>Имя\tМеню лицензий\n";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды автошколы",helpstring,"Ок","");
        					    return true;
							}
							case 12,13,15,17,18:
							{
                                new helpstring2[512]="/f\t\t\tЧат фракции\n/warehouse\t\tМатериалы на складе\n/members\t\tЧлены фракции онлайн\n/materials get|put\tУкрасть материалы|Положить в машину\n/selldrugs\t\tПродать наркотики\n/gunlist\t\t\tСписок оружия для сборки\n/capture\t\tНачать захват зоны\n/unloading\t\tРазгрузить грузовик\n/get guns\t\tВзять материалы со склада\n/escape\t\t\tСбежать(ключ)\n/switchskin\t\tОдеть форму военного\n/gbank\t\t\tОбщак банды\n/gbankput\t\tПоложить в общак";
                                new helpstring[1024];
                                format(helpstring,sizeof(helpstring),"%s\n/gbankwithdraw\t\tВзять деньги из общака\n/sellgun\t\tПродать оружие(себе или другим)\n/robhouse\t\tОграбить дом в гетто\n/sellzone\t\tПродать зону",helpstring2);
								ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды банд",helpstring,"Ок","");
        					    return true;
							}
        					case 14:
							{
                                new helpstring[512]="/f\t\t\tЧат фракции\n/warehouse\t\tМатериалы на складе\n/members\t\tЧлены фракции онлайн\n/bizlist\t\t\tСписок бизнесов\n/debtors\t\tДолжники\n/tie|/untie\t\tСвязать|Развязать игрока\n/mafiabalance\t\tБанк мафии\n/mafiabank\t\tПоложить в банк мафии\n/mafiawithdraw\t\tВзять из банка мафии\n/materials buy\t\tКупить материалы у банд\n/hb\t\t\tВзломать базу полиции и снять розыск\n/jap\t\t\tГоворить по-русски\n/gag|/ungag\t\tВставить|Вытащить кляп";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды РМ",helpstring,"Ок","");
        					    return true;
							}
							case 4,22,33:
        					{
        					    new helpstring[512]="/r\t\t\tРация\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/members\t\tЧлены фракции онлайн\n/heal\t\t\tВылечить игрока\n/healaddict\t\tВылечить зависимость\n/sethealcost\t\tУстановить цену лечения\n/def\t\t\tОживить ближайшего мёртвого игрока";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды медиков",helpstring,"Ок","");
        					    return true;
        					}
        					case 3,19:
        					{
        					    new helpstring[512]="/r\t\t\tРация\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/m\t\t\tГоворить в мегафон(только в служебном транспорте)\n/warehouse\t\tМатериалы на складе\n/camera\t\t\tСледить за камерами\n/showudost\t\tПоказать удостоверение\n/ram\t\t\tВыломать дверь у дома или мэрии\n/members\t\tЧлены фракции онлайн\n/carmat\t\t\tНачать развозку материалов\n/carm\t\t\tМеню разгрузки матов";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды армии",helpstring,"Ок","");
        					    return true;
        					}
        					case 23..32:
        					{
        					    new helpstring[512]="/f\t\t\tЧат фракции\n/warehouse\t\tМатериалы на складе\n/members\t\tЧлены фракции онлайн\n/bsellgun\t\tПродать оружие\n/bbalance\t\tБаланс общака\n/bbank\t\t\tВзять деньги с общака\n/bwithdraw\t\tВзять деньги из общака";
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды байкеров",helpstring,"Ок","");
        					    return true;
        					}
							case 34:
							{
        					    ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды пожарников","/r\t\t\tРация\n/d\t\t\tРация гос. фракций\n/gov\t\t\tГос.новости\n/nofire\t\t\tОтправиться на вызов","Ок","");
        					    return true;
							}
						}
					}
		            case 5:
		            {
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Команды лидеров и замов","/invite\t\t\tПригласить во фракцию\n/uninvite\t\tУволить из фракции\n/giverank\t\tПовысить/Понизить игрока\n/iinvite\t\t\tПеревод из фракции","Ок","");
	    				return true;
					}
				  	case 6:
		            {
		                new helpstring[512]="/hm\t\t\tМеню дома\n/tv\t\t\tПосмотреть телевизор(Стоя у него)\n/buyhouse\t\tКупить дом\n/sellhouse\t\tПродать дом\n/home\t\t\tПоставить метку у дома(GPS)\n/changehouse\t\tПродать дом игроку\n/healme\t\t\tИспользовать аптечку\nAlt|/exit\t\t\tВыйти из дома";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Дома",helpstring,"Ок","");
						return true;
					}
					case 7:
		            {
                        new helpstring[512]="/buybiz\t\t\tКупить бизнес\n/sellbiz\t\t\tПродать бизнес\n/bizlock\t\t\tЗакрыть бизнес\n/bizfee\t\t\tУстановить цену бензина\n/bizstats\t\tСтатистика бизнеса\n/getbizstats\t\tУзнать статистику чужого бизнеса\n/bizwithdraw\t\tВзять деньги с бизнеса\n/cena\t\t\tУстановить цену продуктов\n/bizmafia\t\tУстановить крышу";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Бизнесы",helpstring,"Ок","");
						return true;
					}
					case 8: return ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машины","/carpass|/showcarpass\tПосмотреть|Показать документы на машину\n/cm\t\t\tУправление машиной\n/sellcar\t\t\tПродать машину государству\n/fixcar\t\t\tВернуть машину\n/fill\t\t\tЗаправить машину\n/fillcar\t\t\tЗаправить машину с канистры\n/changecar\t\tПродать машину игроку\n/get fuel\t\tКупить топливо на заправке","Ок","");
					case 9:
		            {
		                new helpstring[512]="/selltune\t\tПродать автомастерскую\n/tinfo\t\t\tИнформация о мастерской\n/tpanel\t\t\tПанель управления мастерской";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машины",helpstring,"Ок","");
						return true;
					}
					case 10:
		            {
						return true;
					}
					case 11:
					{
					    new helpstring[512]="/finfo\t\t\tCтатистика фермы\n/flock\t\t\tЗакрыть/Открыть ферму\n/fpanel\t\t\tПанель управления фермой\n/buyferm\t\tКупить ферму\n/sellferm\t\tПродать ферму";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машины",helpstring,"Ок","");
						return true;
					}
				}
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
		 		ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 2001:
		{
		    if(response == 1)
		    {
		   		switch(listitem)
				{
					case 0: SetPlayerColor(playerid, TEAM_HIT_COLOR);
			        case 1: SetPlayerColor(playerid,0x089401FF);
			        case 2: SetPlayerColor(playerid,0x56FB4EFF);
			        case 3: SetPlayerColor(playerid,0x49E789FF);
			        case 4: SetPlayerColor(playerid,0x2A9170FF);
			        case 5: SetPlayerColor(playerid,0x9ED201FF);
			        case 6: SetPlayerColor(playerid,0x279B1EFF);
			        case 7: SetPlayerColor(playerid,0x51964DFF);
			        case 8: SetPlayerColor(playerid,0xFF0606FF);
			        case 9: SetPlayerColor(playerid,0xF68F67FF);
			        case 10: SetPlayerColor(playerid,0xF45000FF);
			        case 11: SetPlayerColor(playerid,0xBE8A01FF);
			      	case 12: SetPlayerColor(playerid,0xB30000FF);
			        case 13: SetPlayerColor(playerid,0x954F4FFF);
				    case 14: SetPlayerColor(playerid,0xE7961DFF);
			        case 15: SetPlayerColor(playerid,0xE6284EFF);
			        case 16: SetPlayerColor(playerid,0xFF9DB6FF);
			        case 17: SetPlayerColor(playerid,0x110CE7FF);
			        case 18: SetPlayerColor(playerid,0x0CD7E7FF);
			        case 19: SetPlayerColor(playerid,0x139BECFF);
			        case 20: SetPlayerColor(playerid,0x2C9197FF);
			        case 21: SetPlayerColor(playerid,0x114D71FF);
			        case 22: SetPlayerColor(playerid,0x8813E7FF);
			        case 23: SetPlayerColor(playerid,0xB313E7FF);
			        case 24: SetPlayerColor(playerid,0x758C9DFF);
			        case 25: SetPlayerColor(playerid,0xFFDE24FF);
			        case 26: SetPlayerColor(playerid,0xFFEE8AFF);
			        case 27: SetPlayerColor(playerid,0xDDB201FF);
			        case 28: SetPlayerColor(playerid,0xDDA701FF);
			        case 29: SetPlayerColor(playerid,0xB0B000FF);
			        case 30: SetPlayerColor(playerid,0x868484FF);
			       	case 31: SetPlayerColor(playerid,0xB8B6B6FF);
			        case 32: SetPlayerColor(playerid,0x333333FF);
			        case 33: SetPlayerColor(playerid,0xFAFAFAFF);
			        case 34: SetPlayerColor(playerid,0xE35656FF);
	        	}
	        }
		    else
		    {
		    	return true;
		    }
	    }
	    case 2033:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,1);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до автовокзала");
                        }
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,2);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до площади Родео");
						}
					    else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,3);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до площади Першинг");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,4);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до Гэнтона");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,5);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до восточного пляжа");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,6);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до Джефферсона");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 6:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,7);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до Аэропорта Лос Сантос");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 7:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,8);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до пляжа Вероны");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 8:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,9);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до автосалона Лос Сантос");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 9:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,10);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до доков");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 10:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,11);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до пригорода");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
					case 11:
					{
					    if(PlayerInfo[playerid][pCash] >= 200)
					    {
							SetPlayerPos(playerid,355.0459,154.2284,1040.3441);
							SetPlayerFacingAngle(playerid, 270.0);
							SetPlayerVirtualWorld(playerid,12);
							PlayerInfo[playerid][pCash] -= 200;
							PlayerPlaySound(playerid,1052,355.0459,154.2284,1040.3441);
							SendClientMessage(playerid,COLOR_BLUE,"Вы добрались до МЧС ЛС");
                        }
 						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Извините,у вас не хватает денег на проезд");
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
	    }
		case 1012:
		{
			if(response)
			{
		        if(!strcmp(inputtext, "/time",true))
		        {
		        	SendClientMessage(playerid, 0x83BFBFAA, "<> /time  - узнать время");
				}
				else if(!strcmp(inputtext, "/gps",true))
		        {
		        	SendClientMessage(playerid, 0x83BFBFAA, "<> /gps  - навигатор");
				}
				else if(!strcmp(inputtext, "/viphelp",true))
		        {
		        	SendClientMessage(playerid, 0x83BFBFAA, "<> /viphelp  - помощь по VIP функциям");
				}
				else if(!strcmp(inputtext, "/drink",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /drink  - выпить");
				}
				else if(!strcmp(inputtext, "/directory",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /directory  - справочник");
				}
				else if(!strcmp(inputtext, "/eject",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /eject  - выбросить из машины");
				}
				else if(!strcmp(inputtext, "/dice",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /dice  - бросить кости");
				}
				else if(!strcmp(inputtext, "/clist",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /clist - цвета");
				}
				else if(!strcmp(inputtext, "/usedrugs",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /usedrugs - употребить наркотики");
				}
				else if(!strcmp(inputtext, "/showpass",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /showpass - показать паспорт");
				}
				else if(!strcmp(inputtext, "/myskill",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /myskill - навыки оружия");
				}
				else if(!strcmp(inputtext, "/hi",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /hi - пожать руку");
				}
				else if(!strcmp(inputtext, "/id",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> /id - узнать id игрока");
				}
				else if(!strcmp(inputtext, "/o",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> (/o)oc - Глобальный чат");
				}
				else if(!strcmp(inputtext, "/ad",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> (/ad)vertise - Объявление");
		        }
		        else if(!strcmp(inputtext, "/gov",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> (/gov)erment - Государственные новости");
		        }
		        else if(!strcmp(inputtext, "/f",true))
		        {
					SendClientMessage(playerid, 0x83BFBFAA, "<> (/f)amily - Чат организации");
		        }
		        else if(!strcmp(inputtext, "/s",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/s)hout - Крик");
		        }
		        else if(!strcmp(inputtext, "/m",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/m)egaphone - Мегафон на служебном транспорте");
		        }
		        else if(!strcmp(inputtext, "/r",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/r)adio - Чат государственных организаций (Полиция/ФБР и т.д)");
		        }
		        else if(!strcmp(inputtext, "/d",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/d)epartaments - Общий чат государственных организаций");
		        }
		        else if(!strcmp(inputtext, "/me",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/me) - Действие (Пример: Имя_Фамилия пожал руку)");
		        }
		        else if(!strcmp(inputtext, "/call",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /call - Позвонить (Номер телефона можно узнать через /number)");
		        }
		        else if(!strcmp(inputtext, "/sms",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /sms - Отправить СМС сообщение");
		        }
		        else if(!strcmp(inputtext, "/number",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /number - узнать номер игрока");
		        }
		        else if(!strcmp(inputtext, "/h",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/h)angup - Завершить телефонный разговор");
		        }
		        else if(!strcmp(inputtext, "/p",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> (/p)ickup - Ответить на звонок");
		        }
				else if(!strcmp(inputtext, "/togphone",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> togphone - выкл. телефон");
		        }
		        else if(!strcmp(inputtext, "/hpanel",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /hpanel - Главное меню(Настройки дома)");
		        }
				else if(!strcmp(inputtext, "/home",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /home - Поставить метку у дома (GPS)");
		        }
				else if(!strcmp(inputtext, "/spawnchange",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /spawnchange - Сменить респавн(Возрождение) ДОМ <==> База организации");
		        }
				else if(!strcmp(inputtext, "/healme",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /healme - Использовать аптечку");
		        }
		        else if(!strcmp(inputtext, "/buybiz",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /buybiz - Купить бизнес");
		        }
		        else if(!strcmp(inputtext, "/bizstats",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /bizstats - Статистика бизнеса");
		        }
		        else if(!strcmp(inputtext, "/bizwithdraw ",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /bizwithdraw - Снять деньги с бизнеса");
		        }
		        else if(!strcmp(inputtext, "/bizfee",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /bizfee - Установить цену за товар");
		        }
		        else if(!strcmp(inputtext, "/sellbiz",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /sellbiz - Продать бизнес");
				}
		        else if(!strcmp(inputtext, "/changehouse",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /changehouse - Продать дом другому игроку или же совершить обмен.");
		        }
				else if(!strcmp(inputtext, "/invite",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /invite - Пригласить игрока во фракцию");
		        }
				else if(!strcmp(inputtext, "/uninvite",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /uninvite - Выгнать игрока из фракции");
		        }
				else if(!strcmp(inputtext, "/giverank",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /giverank - Повысить/Понизить игрока в ранге");
		        }
		        else if(!strcmp(inputtext, "/tie",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /tie - Связать заложника. Доступно только мафиям");
		        }
		        else if(!strcmp(inputtext, "/untie",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /untie - Развязать заложника. Доступно только мафиям");
		        }
		        else if(!strcmp(inputtext, "/heal",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /heal - Вылечить игрока в карете скорой помощи. Доступно только медикам");
		        }
		        else if(!strcmp(inputtext, "/getgun",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /getgun - Взять оружие со склада мафии");
		        }
		        else if(!strcmp(inputtext, "/mafiabalance",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /mafiabalance - Проверить счёт мафии в банке");
		        }
		        else if(!strcmp(inputtext, "/mafiawithdraw",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /mafiawithdraw - Снять деньги со счёта мафии");
		        }
		        else if(!strcmp(inputtext, "/mafiabank",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /mafiabank - Положить деньги на счёт мафии");
		        }
		        else if(!strcmp(inputtext, "/ram",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /ram - Выбить дверь. Только законники");
		        }
		        else if(!strcmp(inputtext, "/cuff",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /cuff - Надеть наручники. Только законники");
		        }
		        else if(!strcmp(inputtext, "/uncuff",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /uncuff - Снять наручники. Только законники");
		        }
		        else if(!strcmp(inputtext, "/givecopkeys",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /givecopkeys - Выдать ключи от полицейского участка");
		        }
		        else if(!strcmp(inputtext, "/arrest",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /arrest - Посадить преступника в камеру. Необходимо находиться в здании тюрьмы");
		        }
		        else if(!strcmp(inputtext, "/warehouse",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /warehouse - Проверить склад организации");
		        }
		        else if(!strcmp(inputtext, "/take",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /take - Отобрать у игрока запрещённые предметы. Только законники");
		        }
		        else if(!strcmp(inputtext, "/frisk",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /frisk - Обыскать игрок на запрещённые предметы. Только законники");
		        }
		        else if(!strcmp(inputtext, "/su",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /(su)spect - Добавить игрока в список разыскиваемых. Только законники");
		        }
		        else if(!strcmp(inputtext, "/suspect",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /(su)spect - Добавить игрока в список разыскиваемых. Только законники");
		        }
		        else if(!strcmp(inputtext, "/tazer",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /tazer - Оглушить игрока. Только законники");
		        }
		        else if(!strcmp(inputtext, "/itazer",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /itazer - Оглушить игрока. Только инструкторы");
		        }
		        else if(!strcmp(inputtext, "/tazerall",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /tazerall - Оглушить игрока. Только ФБР");
		        }
		        else if(!strcmp(inputtext, "/ftazer",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /ftazer - Оглушить игрока. Только ФБР");
		        }
		        else if(!strcmp(inputtext, "/wanted",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /wanted - Посмотреть список разыскиваемых. Только законники");
		        }
		        else if(!strcmp(inputtext, "/gbank",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /gbank - Проверить счёт мафии в банке");
		        }
		        else if(!strcmp(inputtext, "/gbankput",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /gbankput - Положить деньги на счёт банды");
		        }
		        else if(!strcmp(inputtext, "/gbankwhisdraw",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /gbankwhisdraw - Снять деньги со счёта банды");
		        }
		        else if(!strcmp(inputtext, "/getbizstats",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /getbizstats - Проверить бизнес");
		        }
		        else if(!strcmp(inputtext, "/mafiawar",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /mafiawar - Назначить стрелу");
		        }
		        else if(!strcmp(inputtext, "/fare",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /fare - Начать работу таксистом");
		        }
		        else if(!strcmp(inputtext, "/mcontract",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /mcontract - Заключить контракт с заправкой. Механики");
		        }
		        else if(!strcmp(inputtext, "/sellgrib",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /sellgrib - Продать грибы");
		        }
		        else if(!strcmp(inputtext, "/clear",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /clear - Снять розыск. Только для законников");
		        }
				else if(!strcmp(inputtext, "/refill",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /refill - Заправить автомобиль топливом. Для механников");
		        }
		        else if(!strcmp(inputtext, "/load",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /load - Загрузить продукты. Для развозчиков");
		        }
				else if(!strcmp(inputtext, "/repair",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /repair - Подчинить повреждённый автомобиль. Для механников");
		        }
		        else if(!strcmp(inputtext, "/route",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /route - Начать работу водителя автобуса");
		        }
		        else if(!strcmp(inputtext, "/fixcar",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /fixcar - Отбуксировать домашний автомобиль к дому");
		        }
		        else if(!strcmp(inputtext, "/sellprods",true))
		        {
					SendClientMessage(playerid,0x83BFBFAA, "<> /sellprods -  Выгрузить продукты. Для развозчиков");
		        }
		        else if(!strcmp(inputtext, "/newsbank",true))
		        {
		      		SendClientMessage(playerid,0x83BFBFAA, "<> /newsbank -  Баланс денежных средств в News");
		        }
				return true;
		    }
		    else
		    {
		        return true;
		    }
		}
		case 14:
		{
	   	 	if(response)
			{
		   		if(!strlen(inputtext)) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Ключ безопасности", "Введите Ваш новый ключ безопасности", "Готово", "Назад");
		    	GetPlayerName(playerid,playername,sizeof(playername));
				new string[50];
				format(string,sizeof(string), "%s.ini",playername);
				new File=ini_openFile(string);
				ini_setString(File, "Keyip",inputtext);
				ini_closeFile(File);
				PlayerInfo[playerid][pCheckip] = 1;
				format(string, sizeof(string), "Ваш новый ключ безопасности: %s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Мы рекомендуем вам сделать скриншот. Клавиша F8");
				return true;
	    	}
		    else
		    {
		    	new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
		    	ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
		        return true;
		    }
		}
		case 11:
		{
	   	 	if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
				new string[40];
	      		GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File=ini_openFile(string);
				ini_setString(File, "Key",MD5_Hash(inputtext));
				ini_closeFile(File);
				format(string, sizeof(string), "Ваш новый пароль: %s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GREEN, "Мы рекомендуем вам сделать скриншот. Клавиша F8");
				return true;
			}
		    else
			{
	    		new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
	    		ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 9653:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		  			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе");
					switch(listitem)
					{
						case 0:
						{
							SendClientMessage(playerid,COLOR_GREEN, "Встаньте на красный маркер, чтобы заполнить грузовик материалами!");
							SetPlayerCheckpoint(playerid,335.9255,1994.7932,17.6406,8.0);
							MatsArmyCar[playerid]=20;
							return true;
						}
						case 1:
						{
							if(!PlayerToPoint(10.0,playerid,334.9307,1962.9658,17.6406)) return	SendClientMessage(playerid,COLOR_GREY, "Вы не у разгрузочной зоны");
						    new tmpcar = GetPlayerVehicleID(playerid);
							new string[40];
						    if(MatHaul[tmpcar-gunscar[0]][mLoad] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В матовозе нет оружия");
						   	armmatbi += MatHaul[tmpcar-gunscar[0]][mLoad];
					   		MatHaul[tmpcar-gunscar[0]][mLoad] =0;
							format(string, sizeof(string), "Оружие выгружено! В грузовике: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							SaveMaterials();
							return true;
						}
						case 2:
						{
							SetPlayerCheckpoint(playerid,2745.2368,-2463.9832,13.6484,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
							MatsArmyCar[playerid]=151;
							return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=21;
				            return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=31;
				            return true;
						}
						case 5:
						{
				     		SetPlayerCheckpoint(playerid,-2429.1721,490.0948,29.9279,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=24;
				            return true;
						}
						case 6:
						{
				     		SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=35;
				            return true;
						}
						case 7:
						{
				     		SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=150;
				            return true;
						}
						case 8:
						{
							new listitems[] = " [1] Разгрузка The Ballas\n [2] Разгрузка The Vagos\n [3] Разгрузка The Grove\n [4] Разгрузка The Aztek\n [5] Разгрузка The Rifa";
							ShowPlayerDialog(playerid, 3232, DIALOG_STYLE_LIST, "Развозка материалов бандам", listitems, "Выбрать", "Отмена");
				 			return true;
						}
						case 9:
				    	{
							new listitems[] = " [1] Разгрузка Sons of Silence MC\n [2] Разгрузка Hell's Angels MC\n [3] Разгрузка Outlaws MC\n [4] Разгрузка Warlocks MC\n [5] Разгрузка Highwayman MC\n [6] Разгрузка Free Souls MC\n [7] Разгрузка Pagans MC\n [8] Разгрузка Mongols MC\n [9] Разгрузка Vagos MC\n [10] Разгрузка Bandidos MC";
				 			ShowPlayerDialog(playerid, 3233, DIALOG_STYLE_LIST, "Развозка материалов байкерам", listitems, "Выбрать", "Отмена");
				 			return true;
						}
					}
				}
			}
			return true;
		}
		case 3233:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		 			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
						case 0:
						{
				     		SetPlayerCheckpoint(playerid,1244.5627,205.2205,19.6454,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=60;
				            return true;
						}
			 			case 1:
						{
				     		SetPlayerCheckpoint(playerid,681.5627,-473.9190,16.5363,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=61;
							return true;
						}
						case 2:
						{
				     		SetPlayerCheckpoint(playerid,-311.1547,1303.4301,53.6643,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=62;
				            return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,662.8604,1716.4194,7.1875,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=63;
				            return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,24.4948,-2646.5129,40.4637,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=64;
				            return true;
						}
						case 5:
						{
				     		SetPlayerCheckpoint(playerid,-255.0120,2603.3000,62.8582,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=65;
				            return true;
						}
			 			case 6:
						{
				     		SetPlayerCheckpoint(playerid,-2105.8921,-2480.8372,30.6250,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=66;
							return true;
						}
						case 7:
						{
				     		SetPlayerCheckpoint(playerid,-1266.7014,2715.9397,50.2663,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=67;
				            return true;
						}
						case 8:
						{
					     	SetPlayerCheckpoint(playerid,-313.9936,1774.6589,43.6406,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
							MatsArmyCar[playerid]=68;
							return true;
						}
						case 9:
						{
				     		SetPlayerCheckpoint(playerid,-1942.1289,2379.4338,49.7031,10.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=69;
				            return true;
						}
					}
				}
			}
			return true;
		}
		case 3232:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
				{
		 			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
						case 0:
						{
				     		SetPlayerCheckpoint(playerid,2645.9717,-2005.8618,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=100;
							return true;
						}
			 			case 1:
						{
				     		SetPlayerCheckpoint(playerid,2795.7639,-1619.4196,10.9219,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=101;
							return true;
						}
						case 2:
						{
				     		SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=102;
							return true;
						}
						case 3:
						{
				     		SetPlayerCheckpoint(playerid,1806.0304,-2111.7974,13.3828,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=103;
							return true;
						}
						case 4:
						{
				     		SetPlayerCheckpoint(playerid,2176.5503,-1803.5483,13.3692,6.0);
							SendClientMessage(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
				            MatsArmyCar[playerid]=104;
							return true;
						}
					}
				}
			}
			return true;
		}
		case 2323:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(PlayerInfo[playerid][pCheckip] == 1)
					{
						PlayerInfo[playerid][pCheckip] = 0;
			  			SendClientMessage(playerid, COLOR_WHITE, "Проверка по IP адресу отключина");
					   	return true;
					}
					PlayerInfo[playerid][pCheckip] = 1;
				  	SendClientMessage(playerid, COLOR_WHITE, "Проверка по IP адресу включена!");
				   	return true;
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Сменить ключ", "Введите ваш новый ключ безопасности", "Готово", "Назад");
					return true;
				}
				if(listitem == 2)
				{
				    new string[37];
					new vdata = PlayerInfo[playerid][pVhoddata];
					new vmes = PlayerInfo[playerid][pVhodMes];
					new vchas = PlayerInfo[playerid][pVhodchas];
					new vminute = PlayerInfo[playerid][pVhodminute];
					new mtext[10];
					switch(vmes)
					{
						case 1: mtext = "Январь";
						case 2: mtext = "Февраль";
						case 3: mtext = "Март";
						case 4: mtext = "Апрель";
						case 5: mtext = "Май";
						case 6: mtext = "Июнь";
						case 7: mtext = "Июль";
						case 8: mtext = "Август";
						case 9: mtext = "Сентябрь";
						case 10: mtext = "Октябрь";
						case 11: mtext = "Ноябрь";
						case 12: mtext = "Декабрь";
					}
					new playersip[20];
					GetPlayerIp(playerid,playersip,sizeof(playersip));
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s.ini",sendername);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pvIp",string);
						ini_closeFile(file);
						new coordsstring[1024];
						new msg[] = "Данная система, позволяет Вам увидеть\nВремя последнего вашего Входа на сервер.\n\nИнформация обновляется при выходе\n\n{FEBC41}---------------------------------------------------\nДата: %d %s\nВремя:  %d:%d\nВаш IP адрес: %s\nПоследний IP адрес: %s\n---------------------------------------------------";
						format(coordsstring, 1024, msg, vdata,mtext,vchas,vminute,playersip,string);
						ShowPlayerDialog(playerid,3025,DIALOG_STYLE_MSGBOX, "Информация о последнем заходе в игру",coordsstring, "Готово", "");
						return true;
					}
				}
				if(listitem == 3)
				{
					new rulesdialog[1024];
					format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s",IPMSG[0],IPMSG[1],IPMSG[2],IPMSG[3],IPMSG[4]);
					ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX, "INFO",rulesdialog, "Готово", "");
				}
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 9894:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
			            if(PlayerInfo[playerid][pWarns] == 0) return  SendClientMessage(playerid, COLOR_WHITE, "(( На вашем аккаунте нет Варнов ))");
						if(PlayerInfo[playerid][punWarns] == 1) return SendClientMessage(playerid, COLOR_WHITE, "(( Вы уже подавали заявку ))");
						new plname[MAX_PLAYER_NAME];
						new string[128];
			            PlayerInfo[playerid][punWarns] = 1;
			            PlayerInfo[playerid][punWarnstime] = 0;
						SendClientMessage(playerid, COLOR_GREEN, "(( Варн автоматически снимется через 10 часов игры на сервере ))");
						GetPlayerName(playerid, plname, sizeof(plname));
						format(string, sizeof(string), "[UNWARN] %s подал заявку | ID: %d | Уровень: %d | Варнов: %d", plname,playerid,PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pWarns]);
						ABroadCast(COLOR_LIGHTRED, string, 1);
						return true;
					}
					case 1:
					{
						if( unban[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "(( Вы уже подавали заявку ))");
						ShowPlayerDialog(playerid,9493,DIALOG_STYLE_INPUT, "Подача заявки на снятие бана", "Введите имя_фамилия аккаунта ( латиницей), с которого Вы хотите снять бан", "Готово", "Отмена");
						unban[playerid] = 1;
						return true;
					}
				}
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 9493:
		{
		    if(response)
		    {
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,9493,DIALOG_STYLE_INPUT, "Подача заявки на снятие бана", "Введите имя_фамилия аккаунта ( латиницей), с которого Вы хотите снять бан", "Готово", "Отмена");
				new string[128];
				format(string, sizeof(string), "%s.ini", (inputtext));
				if(fexist(string))
		  		{
				 	new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "[UNBAN] %s просит снять бан с: {FFFFFF}%s", sendername,(inputtext));
		       		ABroadCast(COLOR_LIGHTRED, string, 1);
		        	format(string, sizeof(string), "Ваша заявка на снятие бана: {FFFFFF} %s{FFFFFF} ",(inputtext));
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Заяка на снятие бана была отправлена администрации сервера");
					return true;
				}
				else
				{
					ShowPlayerDialog(playerid,9493,DIALOG_STYLE_INPUT, "Подача заявки на снятие бана", "Введите имя_фамилия аккаунта ( латиницей), с которого Вы хотите снять бан", "Готово", "Отмена");
					return true;
				}
			}
			return true;
		}
		case 9943:
		{
			if(response)
			{
		 		if(!strlen(inputtext)) return ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
				new string[128];
				format(string,sizeof(string), "%s.ini",inputtext);
				if(fexist(string))
				{
					SendClientMessage(playerid,COLOR_GREY, "Ник занят");
					ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
					return true;
				}
		   		new sendername[MAX_PLAYER_NAME];
		   		format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",inputtext);
				GetPlayerName(playerid, sendername, sizeof(sendername));
		       	format(string, sizeof(string), "%s[%d] просит сменить ник на: %s((/changename %d для смены))", sendername,playerid,(inputtext),playerid);
		       	ABroadCast(COLOR_USE, string, 1);
			   	format(string, sizeof(string), "%s[%d] просит сменить ник на: %s", sendername,playerid,(inputtext));
		       	SendClientMessage(playerid, COLOR_LIGHTRED, string);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ваша заявка отправлена. Ждите одобрения администрацией");
		       	return true;
			}
		 	else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 200:
		{
			if(response)
			{
				new listitems[] = "{D1DBD0}[1] Общение\n{D1DBD0}[2] Список игроков\n{D1DBD0}[3] Транспорт\n{D1DBD0}[4] Общее\n{D1DBD0}[5] Транспорт часть 2\n{D1DBD0}[6] Работа\n{D1DBD0}[7] Оружие и Убийство\n[8]{D1DBD0} Role Play";
				ShowPlayerDialog(playerid, 61, DIALOG_STYLE_LIST, "Помощь по игре", listitems, "Далее", "Отмена");
				showhelp[playerid] = 1;
			}
		}
		case 61:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Общение >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Вы можете обращаться с другими игроками через чат в левом верхнем углу.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Чтобы напечатать сообщение нажмите клавишу \"F6\" или \"T\"(на латинице).\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Так же с помощью чата используются все команды сервера, к примеру \"/mm\".\n\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Используйте \"/mm\" для просмотра команд...\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Более подробное описание вы найдете на нашем сайте http://www.nextagerp.5nx.ru/");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,150,DIALOG_STYLE_MSGBOX, "Общение",sctring, "Далее", "Меню");
				}
				if(listitem == 1)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Список игроков >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Список игроков можно посмотреть нажав клавишу \"TAB\".\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Там вы увидете:\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "\"ID\" игрока (используется в командах)\n");
					strcat(sctring,str);
					format(str,sizeof(str), "\"Ник (РП имя игрока)\"\n");
					strcat(sctring,str);
					format(str,sizeof(str), "\"Уровень(lvl)\" в графе score (Повышается автоматически каждый отыгранный час)\n");
					strcat(sctring,str);
					format(str,sizeof(str), "\"Пинг\" это не очень важно, поэтому я не буду нагружать вас лишней информацией.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Для просмотра списка полностью, используйте прокрутку справо.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,151,DIALOG_STYLE_MSGBOX, "Список игроков",sctring, "Далее", "Меню");
				}
				if(listitem == 2)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Транспорт >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Я надеюсь вы умеете ездить, но даже если нет, наши Авто Инструкторы вас научат.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "В Автошколу вам придется идти в любом случае, поскольку езда разрешена только\n");
					strcat(sctring,str);
					format(str,sizeof(str), "с правами. Ну а пока вы можете воспользоваться мотороллером,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Или же общественным транспортом\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Для того чтобы сесть на пассажирское место используйте клавишу \"G\"");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,152,DIALOG_STYLE_MSGBOX, "Транспорт",sctring, "Далее", "Меню");
				}
				if(listitem == 3)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Общее >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Играя на сервере ваш лвл повышается автоматически.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "После получения определенного лвл открываются новые возможности\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Но уровень персонажа не главное! На нашем сервере можно зарабатывать\n");
					strcat(sctring,str);
					format(str,sizeof(str), "деньги, после покупать дома, машины и т.д Можно вступить в банду и воевать за\n");
					strcat(sctring,str);
					format(str,sizeof(str), "территории, тем самым зарабатывая. Или стать членом мафии.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Можно работать полицейским, защищая гражданских. И это только малая часть доступного!");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,111,DIALOG_STYLE_MSGBOX, "Общее",sctring, "Далее", "Меню");
				}
				if(listitem == 4)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Транспорт >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Для управления машиной необходимы водительские права, а для возможности летать на воздушном транспорте\n");
					strcat(sctring,str);
					format(str,sizeof(str), "вам понадобится лицензия пилота. Транспорту нужен бензин, которым можно заправиться на любой заправке.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "При нарушении Правил дорожного движения, вас могут оштрафовать.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "<< Работа >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Многие профессии доступны каждому гражданскому. Устроиться на работу можно в Мэрии.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "К примеру Водитель автобуса, Таксист, Механик.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,112,DIALOG_STYLE_MSGBOX, "Транспорт часть 2",sctring, "Далее", "Меню");
				}
				if(listitem == 5)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Оружие и Убийство >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Для ношения оружия необходима лицензия на ношение оружия, без нее вас не впустят в магазин.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Но оружие можно достать и другими способами.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "За убисйтво человека вы будете объявлены в розыск, как опасный преступник,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "а при аресте вы сядете в тюрьму!\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Изначально ваши навыки владения оружием будут малы, но со временем вы сможете\n");
					strcat(sctring,str);
					format(str,sizeof(str), "стать элитным стрелком, и относиться к вам будут с уважением!");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,113,DIALOG_STYLE_MSGBOX, "Оружие и Убийство",sctring, "Далее", "Меню");
				}
				if(listitem == 6)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "Role Play - Ролевая игра, игра по ролям.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Я объясню более понятно. Вам предоставлены уже готовые роли, к примеру:\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Бандит, Полицейский...\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Состоя в банде вы продаете наркотики, оружие. Грабите военные склады и т.д.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Состоя в Полиции вы следите за порядком, и пытаетесь посадить тех же бандитов.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Если вам не нравиться выше написанное, то можете стать к примеру репортером, и\n");
					strcat(sctring,str);
					format(str,sizeof(str), "вести собственную передачу по радио.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,114,DIALOG_STYLE_MSGBOX, "Role Play",sctring, "Далее", "Меню");
				}
				if(listitem == 7)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Первые шаги (Первые деньги) >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Вам потребуются деньги, заработать немного денег вы можете на заводах, работая грузчиком.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Добраться на завод вы можете на автобусе или на такси,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "первый раз таксист отвезет вас бесплатно, просто сядьте в свободное такси.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Также заметьте, если у вас нет денег, то вы можете ехать на автобусе бесплатно.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX, "Первые шаги",sctring, "Далее", "Меню");
				}
				if(listitem == 8)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Первые шаги (Водительские права) >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Как только вы заработаете немного денег, отправляйтесь в автошколу.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Автошкола находиться в Сан Фиерро (2ой город).\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Стоимость сдачи экзамена состовляет 500 вирт.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Добраться вы можете на автобусе,либо на такси.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,116,DIALOG_STYLE_MSGBOX, "Первые шаги часть 2",sctring, "Далее", "Меню");
				}
				if(listitem == 9)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Первые шаги (Постоянная работа) >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "После того, как вы заработаете денег и получите права,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "вы сможете устроиться на официальную работу.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Устроиться на работу, и ознакомиться со списком профессий, вы можете в мэрии.\n");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,117,DIALOG_STYLE_MSGBOX, "Первые шаги часть 3",sctring, "Далее", "Меню");
				}
				if(listitem == 10)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Часовая зарплата >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Каждый час в **:00 игроки получают банковский чек, в котором указаны все доходы и\n");
					strcat(sctring,str);
					format(str,sizeof(str), "расходы.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Доходы: Зарплата с работы.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Расходы: Налог государству(после 5 лвл), Счет за телефон(если вы звонили),\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Кварплата(если вы владелец дома).");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,118,DIALOG_STYLE_MSGBOX, "Часовая зарплата",sctring, "Далее", "Меню");
				}
				if(listitem == 11)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Зарплата фракции >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "В некоторых фракциях вы получаете зарплату каждый час от государства.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "В других эта зарплата выдается лидером. Все организации на сервере имеют\n");
					strcat(sctring,str);
					format(str,sizeof(str), "свой заработок. Где то нелегальный бизнес, где то постоянная зарплата.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Банды: Бизнес(Нелегальный), оружие наркотики, ограбления.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Репортеры: Бизнес(Легальный), реклама.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Мэрия: от адвоката до управления казной.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,119,DIALOG_STYLE_MSGBOX, "Часовая зарплата",sctring, "Далее", "Меню");
				}
				if(listitem == 12)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Бизнес >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Все клубы, бары, забегаловки являются бизнесами, которые можно арендовать.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "По мимо этого еще есть Бензозаправки и Магазины.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Чтобы заработать на бизнесе нужен начальный капитал на покупку лицензии,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "аренды помещения, продуктов.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,120,DIALOG_STYLE_MSGBOX, "Бизнес",sctring, "Далее", "Меню");
				}
				if(listitem == 13)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Местность >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Лос Сантос(1 город)- самый опасный город, так как здесь большое количество\n");
					strcat(sctring,str);
					format(str,sizeof(str), "бандитов. Районы банд выделены на карте особыми цветами, но только там\n");
					strcat(sctring,str);
					format(str,sizeof(str), "можно купить оружие по дешевле и ни кто не спросит у вас лицензии\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Сан Фиерро(2 город). Если не хотите каждый день сталкиваться с беззаконием,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "то поселитесь в этом городе.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Лас Вентурас(3 город). Город азарта, город богачей. Конечно здесь не такие раскошные\n");
					strcat(sctring,str);
					format(str,sizeof(str), "особняки как на VINEWOOD, но улицы самые красивые.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,121,DIALOG_STYLE_MSGBOX, "Местность",sctring, "Далее", "Меню");
				}
				if(listitem == 14)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Законопослушность >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "У каждого игрока есть индикатор, который показывает как вы относитесь к закону.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "-100 и +100 Минимум и максимум. Узнать можно заглянув в ваш пасспорт \"/showpass [id]\"\n");
					strcat(sctring,str);
					format(str,sizeof(str), "С плохим отношением к закону вас могут не принять во многии Фракции, но в банду\n");
					strcat(sctring,str);
					format(str,sizeof(str), "попасть легче.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Законопослушность повышается каждый час на 1, однако может резко упасть если\n");
					strcat(sctring,str);
					format(str,sizeof(str), "совершите преступление");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,122,DIALOG_STYLE_MSGBOX, "Законопослушность",sctring, "Далее", "Меню");
				}
				if(listitem == 15)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "<< Дома >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Вы можете в любой момент купить себе дом, тогда при смерти или входе в игру\n");
					strcat(sctring,str);
					format(str,sizeof(str), "вы будете появляться там. Помимо этого у вас появится место для парковки машины,\n");
					strcat(sctring,str);
					format(str,sizeof(str), "а значит вы можете купить себе красивое авто.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Дома поделенны по классам - [Nope] [D] [C] [B] [A] [S]. Класс говорит о цене и красоте\n");
					strcat(sctring,str);
					format(str,sizeof(str), "дома как внутри, так и снаружи.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX, "Дома",sctring, "Далее", "Меню");
				}
				if(listitem == 16)
				{
					new str[128],sctring[2000];
					format(str,sizeof(str), "После покупки дома с вас будут сниматься Кварплата, она зависит от класса дома.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Важное примечание! Деньги снимаются каждый час даже когда вы оффлайн.\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "<< Личный транспорт >>\n\n");
					strcat(sctring,str);
					format(str,sizeof(str), "У нас есть несколько Автосалонов, где вы можете приобрести себе машину. Все они\n");
					strcat(sctring,str);
					format(str,sizeof(str), "указаны в \"/GPS\". Транспорт как и дома разделены по классам.\n");
					strcat(sctring,str);
					format(str,sizeof(str), "Чтобы выбрать себе машину, станьте на красный пикап. Далее вы\n");
					strcat(sctring,str);
					format(str,sizeof(str), "увидете подсказку по клавишам с правой стороны, а снизу цену и цвет.");
					strcat(sctring,str);
					ShowPlayerDialog(playerid,124,DIALOG_STYLE_MSGBOX, "Дома часть 2",sctring, "Далее", "Меню");
				}
			}
			else
			{
				showhelp[playerid] = 0;
				return true;
			}
		}
		case 150:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Список игроков >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Данный список можно посмотреть нажав клавишу \"TAB\".\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Там вы увидете:\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "\"ID\" игрока(используется в командах)\n");
				strcat(sctring,str);
				format(str,sizeof(str), "\"Ник(РП имя игрока)\"\n");
				strcat(sctring,str);
				format(str,sizeof(str), "\"Уровень(lvl)\" в графе score(Повышается автоматически каждый отыгранный час)\n");
				strcat(sctring,str);
				format(str,sizeof(str), "\"Пинг\" это не слишком важно, поэтому я не буду нагружать вас лишней информацией.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Для просмотра списка полностью, используйте прокрутку с право.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,151,DIALOG_STYLE_MSGBOX, "Список игроков",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 151:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Транспорт >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Я надеюсь вы умеете ездить, но даже если нет, наши Авто Инструкторы вас научат.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "В Автошколу вам придется идти в любом случае, поскольку езда разрешена только\n");
				strcat(sctring,str);
				format(str,sizeof(str), "с правами. Ну а пока вы можете воспользоваться мотороллером,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Или же общественным транспортом\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Для того чтобы сесть на пассажирское место используйте клавишу \"G\"");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,152,DIALOG_STYLE_MSGBOX, "Транспорт",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 152:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Общее >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Играя на сервере ваш лвл повышается автоматически.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "После получения определенного левла открываются новые возможности\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Но уровень персонажа не главное! На нашем сервере можно зарабатывать\n");
				strcat(sctring,str);
				format(str,sizeof(str), "деньги, после покупать дома, машины и т.д Можно вступить в банду и воевать за\n");
				strcat(sctring,str);
				format(str,sizeof(str), "территории, тем самым расширяя бизнес. Или стать членом мафии.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Можно работать полицейским защищая гражданских. И это только малая часть доступного!");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,111,DIALOG_STYLE_MSGBOX, "Общее",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 111:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Транспорт >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Для управления машиной необходимы водительские права, а пилатирование самолета\n");
				strcat(sctring,str);
				format(str,sizeof(str), "лицензия пилота. Транспорту нужен бензин, которым можно заправиться на любой заправке.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "При нарушении Правил дорожного движения(превышение скорости...), вас могут оштрафовать.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "<< Работа >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Многие профессии доступны каждому гражданскому. Устроиться на работу можно в Мэрии.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "К примеру Водитель автобуса, Таксист, Механик.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,112,DIALOG_STYLE_MSGBOX, "Транспорт часть 2",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 112:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Оружие и Убийство >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Для ношения оружия необходима лицензия, без нее вас не впустят в магазин.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Но оружие можно достать и другими способами.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "За убисйтво человека вы будете объявлены в розыск, как опасный преступник,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "а при аресте вы лишитесь крупной суммы денег и сядете в тюрьму!\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Изначально ваши навыки владения оружием будут малы, но со временем вы сможете\n");
				strcat(sctring,str);
				format(str,sizeof(str), "стать элитным стрелком, и относиться к вам будут с уважением!");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,113,DIALOG_STYLE_MSGBOX, "Оружие и Убийство",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 113:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "Role Play - Ролевая игра, игра по ролям.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Я объясню более понятно. Вам предоставлены уже готовые роли, к примеру\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Бандит, Полицейский.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Состоя в банде вы продаете наркотики, оружие. Грабите военные склады и т.п.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Состоя в Полиции вы следите за порядком, и пытаетесь посадить тех же бандитов.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Если вам не нравиться выше написанное, то можете стать к примеру репортером, и\n");
				strcat(sctring,str);
				format(str,sizeof(str), "вести собственную передачу по радио.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,114,DIALOG_STYLE_MSGBOX, "Role Play",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 114:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Первые шаги (Первые деньги) >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Вам потребуются деньги, заработать немного денег вы можете на заводах, работая грузчиком.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Добраться на завод вы можете на автобусе или на такси,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "первый раз таксист отвезет вас бесплатно, просто сядьте в свободное такси.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Также заметьте, если у вас нет денег, то вы можете ехать на автобусе бесплатно.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX, "Первые шаги",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 115:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Первые шаги (Водительские права) >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Как только вы заработаете немного денег, отправляйтесь в автошколу.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Автошкола находиться в Сан Фиерро (2ой город).\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Стоимость сдачи экзамена состовляет 500 вирт.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Добраться вы можете на автобусе \'Лос Сантос - Сан Фиерро\'.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,116,DIALOG_STYLE_MSGBOX, "Первые шаги часть 2",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 116:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Первые шаги (Постоянная работа) >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "После того как вы заработаете денег и получите права\n");
				strcat(sctring,str);
				format(str,sizeof(str), "вы сможете устроиться на официальную работу.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Устроиться на работу, и ознакомиться со списком профессий, вы можете в мэрии.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Добирайтесь на \'Внутригородском LS\'");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_MSGBOX, "Первые шаги часть 3",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 117:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Часовая зарплата >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Каждый час в 00 игроки получают банковский чек, в котором указаны все доходы и\n");
				strcat(sctring,str);
				format(str,sizeof(str), "расходы.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Доходы: Зарплата с работы.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Расходы: Налог государству(после 5 лвл), Счет за телефон(если вы звонили),\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Кварплата(если вы владелец дома).");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,118,DIALOG_STYLE_MSGBOX, "Часовая зарплата",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 118:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Зарплата фракции >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "В некоторых фракциях вы получаете Зарплату каждый час от государства.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "В других эта зарплата выдается лидером. Все организации на сервере имеют\n");
				strcat(sctring,str);
				format(str,sizeof(str), "свой заработок. Где то нелегальный бизнес, где то постоянная зарплата.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Банды: Бизнес(Нелегальный), Оружие и Наркотики, Ограбление.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Репортеры: Бизнес(Легальный), Реклама.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Мэрия: От адвоката до Управления казной.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,119,DIALOG_STYLE_MSGBOX, "Часовая зарплата",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 119:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Бизнес >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Все клубы, бары, забегаловки являются бизнесами, которые можно арендовать.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "По мимо этого еще есть Бензоправки и Магазины.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Чтобы заработать на бизнесе нужен начальный капитал. Для лицензии,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Аренды помещения, Продуктов.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,120,DIALOG_STYLE_MSGBOX, "Бизнес",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 120:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Местность >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Лос Сантос(1 город) самый опасный город, так как здесь большое количество\n");
				strcat(sctring,str);
				format(str,sizeof(str), "бандитов. Районы банд выделены на карте особыми цветами, но только там\n");
				strcat(sctring,str);
				format(str,sizeof(str), "можно купить оружие по дешевле и ни кто не спросит у вас лицензии\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Сан Фиерро(2 город). Если не хотите каждый день сталкиваться с беззаконием,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "то поселитесь в этом городе.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Лас Вентурас(3 город). Город азарта, город богачей. Конечно здесь не такие раскошные\n");
				strcat(sctring,str);
				format(str,sizeof(str), "особняки как на VINEWOOD, но улицы самые красивые.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,121,DIALOG_STYLE_MSGBOX, "Местность",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 121:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Законопослушность >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "У каждого игрока есть индикатор, который показывает как вы относитесь к закону.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "-100 и +100 Минимум и максимум. Узнать можно заглянув в ваш пасспорт \"/showpass [ид]\"\n");
				strcat(sctring,str);
				format(str,sizeof(str), "С плохим отношением к закону вас могут не принять во многии Фракции, но в банду\n");
				strcat(sctring,str);
				format(str,sizeof(str), "попасть легче.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Законопослушность повышается каждый час на 1, однако может резко упасть если\n");
				strcat(sctring,str);
				format(str,sizeof(str), "совершите преступление");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,122,DIALOG_STYLE_MSGBOX, "Законопослушность",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 122:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Дома >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Вы можете в любой момент купить себе дом, тогда при смерти или входе в игру\n");
				strcat(sctring,str);
				format(str,sizeof(str), "вы будете появляться там. По мимо этого у вас появиться место для парковки машины,\n");
				strcat(sctring,str);
				format(str,sizeof(str), "а значит вы можете купить себе красивое авто.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Дома поделенны по классам - [Nope] [D] [C] [B] [A]. Класс говорит о цене и красоте\n");
				strcat(sctring,str);
				format(str,sizeof(str), "дома как внутри, так и снаружи.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX, "Дома",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 123:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "После покупки дома с вас будут сниматься Кварплата, она зависит от класса дома.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Важное примечание! Деньги снимаются каждый час даже когда вы оффлайн.\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "<< Личный транспорт >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "У нас есть несколько Автосалонов, где вы можете приобрести себе машину. Все они\n");
				strcat(sctring,str);
				format(str,sizeof(str), "указаны в \"/GPS\". Транспорт как и дома разделены по классам.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Чтобы выбрать себе машину, воспользуйтесь командой \"/buycar\". Далее вы\n");
				strcat(sctring,str);
				format(str,sizeof(str), "увидете подсказку по клавишам с правой стороны, а снизу цену и цвет.");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,124,DIALOG_STYLE_MSGBOX, "Дома часть 2",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 124:
		{
			if(response)
			{
				new str[128],sctring[2000];
				format(str,sizeof(str), "<< Общение >>\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Вы можете обращаться с другими игроками через чат в левом верхнем углу.\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Чтобы напечатать сообщение нажмите клавишу \"F6\" или \"T\"(на латинеце).\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Так же с помощью чата используются все команды сервера, к примеру \"/mm\".\n\n\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Используйте \"/mm\" для просмотра команд...\n");
				strcat(sctring,str);
				format(str,sizeof(str), "Более подробное описание вы найдете на нашем сайте http://www.nextagerp.5nx.ru");
				strcat(sctring,str);
				ShowPlayerDialog(playerid,150,DIALOG_STYLE_MSGBOX, "Общение",sctring, "Далее", "Меню");
			}
			else
			{
				ShowPlayerDialog(playerid,61,DIALOG_STYLE_LIST, "Помощь", "[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Общее\n[5] Транспорт часть 2\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n\
				[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2", "Далее", "Выход");
			}
		}
		case 7102:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        SetPlayerPos(playerid, -1426.8191,994.2864,923.8662);
				        SetPlayerCameraPos(playerid, -1251.7350,993.7021,1080.8057);
						SetPlayerCameraLookAt(playerid, -1426.8191,994.2864,1023.8662);
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 1);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				    case 1:
				    {
				        SetPlayerPos(playerid, -1220.4607,-686.1622,1052.9302);
                        SetPlayerCameraPos(playerid, -1220.4607,-686.1622,1152.9302);
						SetPlayerCameraLookAt(playerid, -1427.2098,-663.5082,1059.8049);
						SetPlayerInterior(playerid, 4);
						SetPlayerVirtualWorld(playerid, 1);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				    case 2:
				    {
				        SetPlayerPos(playerid,1339.5055,-2541.0979,-87.9472);
				        SetPlayerCameraPos(playerid, 1339.5055,-2541.0979,103.9472);
						SetPlayerCameraLookAt(playerid, 1634.9442,-2543.4070,13.2740);
						SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				    case 3:
				    {
				        if(newscamstream[0] == 0) return SendClientMessage(playerid, COLOR_GREY, "Канал не в эфире");
				        SetPlayerPos(playerid,newscamlax[0],newscamlay[0],newscamlaz[0]-100);
				        SetPlayerCameraPos(playerid, newscamx[0],newscamy[0],newscamz[0]);
						SetPlayerCameraLookAt(playerid, newscamlax[0],newscamlay[0],newscamlaz[0]);
						SetPlayerInterior(playerid, newscami[0]);
						SetPlayerVirtualWorld(playerid, newscamw[0]);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				    case 4:
				    {
				        if(newscamstream[1] == 0) return SendClientMessage(playerid, COLOR_GREY, "Канал не в эфире");
				        SetPlayerPos(playerid,newscamlax[1],newscamlay[1],newscamlaz[1]-100);
				        SetPlayerCameraPos(playerid, newscamx[1],newscamy[1],newscamz[1]);
						SetPlayerCameraLookAt(playerid, newscamlax[1],newscamlay[1],newscamlaz[1]);
						SetPlayerInterior(playerid, newscami[1]);
						SetPlayerVirtualWorld(playerid, newscamw[1]);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				    case 5:
				    {
				        if(newscamstream[2] == 0) return SendClientMessage(playerid, COLOR_GREY, "Канал не в эфире");
				        SetPlayerPos(playerid,newscamlax[2],newscamlay[2],newscamlaz[2]-100);
				        SetPlayerCameraPos(playerid, newscamx[2],newscamy[2],newscamz[2]);
						SetPlayerCameraLookAt(playerid, newscamlax[2],newscamlay[2],newscamlaz[2]);
						SetPlayerInterior(playerid, newscami[2]);
						SetPlayerVirtualWorld(playerid, newscamw[2]);
						TogglePlayerControllable(playerid, 0);
						WatchingTV[playerid] = 1;
						SendClientMessage(playerid, COLOR_GREY, "Выключить телевизор/переключить канал - /tv");
						return true;
				    }
				}
			}
			else
			{
			    SetPlayerInterior(playerid, PlayerInt[playerid]);
				SetPlayerVirtualWorld(playerid, PlayerVirtMir[playerid]);
				SetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				WatchingTV[playerid] = 0;
  				return true;
			}
		}
		case 9594:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					 	new listitems[] = " [0] Shadow [15000]\n [1] Mega [15000]\n [2] Rimshine [15000]\n [3] Cable [15000]\n [4] Classic[15000]\n [5] Twist [15000]\n [6] Rezak [15000]\n [7] Switches [15000]\n [8] Grove [15000]\n [9] Import [15000]\n [10] Dollar [15000]\n [11] Trans[15000]\n [12] Atomic[15000]\n [13] Ahab[15000]\n [14] Virtual [15000]\n [15] Acces [15000]";
						ShowPlayerDialog(playerid, 6004, DIALOG_STYLE_LIST, "Колёса", listitems, "Выбрать", "Назад");
					}
				 	case 1:
					{
						new listitems[] = " [0] Race [10000]\n [1] Winner [10000]\n [2] Drag[10000]\n [3] Alpha [10000]\n [4] Chimpione [10000]\n [5] Racing [10000]\n [6] Worx[10000]\n [7] Ярость [10000]\n [8] Alien [10000] [Flash]\n [9] X-Flow [10000] [Flash]\n [10] Alien [10000] [Statum]\n [11] X-Flow [10000] [Statum]\n [12] Alien [10000] [Sultan]\n [13] X-Flow [10000] [Sultan]";
						ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_LIST, "Спойлеры", listitems, "Выбрать", "Назад");
		 			}
	 				case 2:
					{
						new listitems[] = " [0] Sultan\n [1] Elegy\n [2] Flash\n [3] Jester\n [4] Uranus\n [5] Remington\n [6] Broadway\n [7] Savanna\n [8] Tornado";
						ShowPlayerDialog(playerid, 6008, DIALOG_STYLE_LIST, "Бамперы", listitems, "Выбрать", "Назад");
	 				}
				  	case 3:
					{
						new listitems[] = " [0] Цветовая работа 1 [20.000]\n [1] Цветовая работа 2 [20.000]\n [2] Цветовая работа 3 [20.000]";
						ShowPlayerDialog(playerid, 6007, DIALOG_STYLE_LIST, "Покрасочные работы", listitems, "Выбрать", "Назад");
					}
					case 4:
					{
						new listitems[] = " [0] Чёрный [1000]\n [1] Красный][1000]\n [2] Серый[1000]\n [3] Белый[1000]\n [4] Синий[1000]\n [5] Голубой[1000]\n [6] Зелёный[1000]";
						ShowPlayerDialog(playerid, 6006, DIALOG_STYLE_LIST, "Цвета", listitems, "Выбрать", "Назад");
					}
					case 5:
					{
						new listitems[] = " [0] Чёрный [1000]\n [1] Красный][1000]\n [2] Серый[1000]\n [3] Белый[1000]\n [4] Синий[1000]\n [5] Голубой[1000]\n [6] Зелёный[1000]";
						ShowPlayerDialog(playerid, 6019, DIALOG_STYLE_LIST, "Цвета 2", listitems, "Выбрать", "Назад");
					}
					case 6:
					{
						if(PlayerInfo[playerid][pProcents] >= 100) return SendClientMessage(playerid, 0x6495EDFF, "Ремонт двигателя возможен, только если его состояние ниже 100 процентов!");
						if(PlayerInfo[playerid][pCash] < 100000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						repairdvig[playerid] = 1;
						SendClientMessage(playerid, 0x6495EDFF, "Ремонт двигателя заказан!");
						PlayerInfo[playerid][pCash] -= 100000;
					}
					case 7:
					{
						new str[128],sctring[2000];
						format(str,sizeof(str), "<< Инфомация по тюнингу >>\n\n");
						strcat(sctring,str);
						format(str,sizeof(str), "В данной мастерской, вы можете установить на свой автомобиль: \".\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Цвет, покрасочную работу, колёса, спойлер, передний и задний бампер,\n");
						strcat(sctring,str);
						format(str,sizeof(str), "а так же отремонтировать двигатель своей машины.\n\n\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Обратите внимание!\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Бампера и спойлеры,а так же покрасочные работы подходят не ко всем автомобилям.\n\n\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Список машин, которые поддерживают данные детали:\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Elegy, Jester, Sultan, Flash, Remington, Camper, Savanna\n");
						strcat(sctring,str);
						format(str,sizeof(str), "Slamvan, Blade, Uranus, Stratum, Broadway, Tornado");
						strcat(sctring,str);
						ShowPlayerDialog(playerid,6018,DIALOG_STYLE_MSGBOX, "Инфомация по тюнингу",sctring, "Готово", "");
					}
					case 8:
					{
						ShowPlayerDialog(playerid, 6020, DIALOG_STYLE_LIST, "Закись азота", " [0] 2X [10000]\n [1] 5X [20000]\n [2] 10X [30000]", "Выбрать", "Назад");
	 				}
	 				case 9:
					{
						if(PlayerInfo[playerid][pCash] < 50000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						Hydraw[playerid] = 1087;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 50000;
						SendClientMessage(playerid, 0x6495EDFF, "[Гидравлика] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 6004:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1073;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1074;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1075;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1076;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1077;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
     				case 5:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1078;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1079;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 7:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1080;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 8:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1081;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 9:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1082;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 10:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1083;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 11:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1084;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 12:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1085;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 13:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1096;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 14:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1097;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 15:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Wheels[playerid] = 1098;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Колёса] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
    	}
		case 6008:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCar] != 560) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] X- Flow [задний] [15000]\n [1] Alien [задний] [20000]\n [2] X-Flow [передний] [15000]\n [3] Alien [передний] [20000]";
						ShowPlayerDialog(playerid, 6009, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCar] != 562) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] X- Flow [передний] [15000]\n [1] Alien [передний] [20000]\n [2] X-Flow [задний] [15000]\n [3] Alien [задний] [20000]";
						ShowPlayerDialog(playerid, 6010, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCar] != 565) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] X- Flow [передний] [15000]\n [1] Alien [передний] [20000]\n [2] X-Flow [задний] [15000]\n [3] Alien [задний] [20000]";
						ShowPlayerDialog(playerid, 6011, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCar] != 559) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] Chrome [передний] [15000]\n [1] Slamin [передний] [20000]\n [2] Slamin [задний] [15000]\n [3] Chrome [задний] [20000]";
						ShowPlayerDialog(playerid, 6012, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCar] != 558) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] X- Flow [передний] [15000]\n [1] Alien [передний] [20000]\n [2] X-Flow [задний] [15000]\n[3] Alien [задний] [20000]";
						ShowPlayerDialog(playerid, 6013, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pCar] != 534) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] Chrome [передний] [15000]\n [1] Slamin [передний] [20000]\n [2] Slamin [задний] [15000]\n [3] Chrome [задний] [20000]";
						ShowPlayerDialog(playerid, 6014, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCar] != 575) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] Chrome [передний] [15000]\n [1] Slamin [передний] [20000]\n [2] Slamin [задний] [15000]\n[3] Chrome [задний] [20000]";
						ShowPlayerDialog(playerid, 6015, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 7:
					{
						if(PlayerInfo[playerid][pCar] != 567) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] Chrome [передний] [15000]\n [1] Slamin [передний] [20000]\n[2] Slamin [задний] [15000]\n[3] Chrome [задний] [20000]";
						ShowPlayerDialog(playerid, 6016, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
					case 8:
					{
						if(PlayerInfo[playerid][pCar] != 576) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						new listitems[] = " [0] Chrome [передний] [15000]\n[1] Slamin [передний] [20000]\n[2] Slamin [задний] [15000]\n[3] Chrome [задний] [20000]";
						ShowPlayerDialog(playerid, 6017, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "Назад");
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6009:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1140;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1141;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1170;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1169;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6010:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1172;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1171;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1148;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1149;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6011:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1152;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1153;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1151;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1150;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 6012:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1174;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1160;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1161;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1159;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6013:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1165;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1166;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1167;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1168;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6014:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1179;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1185;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1184;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1183;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6015:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1176;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1174;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1175;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1177;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6016:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1189;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1188;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1187;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1186;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6017:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1191;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper[playerid] = 1190;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 15000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1192;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 15000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Bumper2[playerid] = 1193;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Бампер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 6007:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
	  					if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PaintJob[playerid] = 0;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Покраска] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
	  					if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PaintJob[playerid] = 1;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Покраска] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						PaintJob[playerid] = 2;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Покраска] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
	 			}
	 		}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
	    case 6020:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Nitro[playerid] = 1009;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Азот] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 20000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Nitro[playerid] = 1008;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 20000;
						SendClientMessage(playerid, 0x6495EDFF, "[Азот] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 30000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Nitro[playerid] = 1010;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 30000;
						SendClientMessage(playerid, 0x6495EDFF, "[Азот] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
	    case 6019:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 0;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 3;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 9;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 1;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 79;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 5:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 2;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color1[playerid] = 86;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
    	}
	    case 6006:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 0;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 3;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 9;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 1;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 79;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 5:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 2;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < 1000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Color[playerid] = 86;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 1000;
						SendClientMessage(playerid, 0x6495EDFF, "[Цвет] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
    	}
		case 6005:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1000;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1001;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1002;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1003;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
						Spoiler[playerid] = 1014;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
					}
     				case 5:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1015;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 6:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1016;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 7:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						Spoiler[playerid] = 1023;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 8:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 565)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						Spoiler[playerid] = 1049;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 9:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 565)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						Spoiler[playerid] = 1050;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 10:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 561)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						Spoiler[playerid] = 1058;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 11:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 561)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						Spoiler[playerid] = 1060;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 12:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 576)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
						Spoiler[playerid] = 1138;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
					case 13:
					{
						if(PlayerInfo[playerid][pCash] < 10000)return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
						if(PlayerInfo[playerid][pCar] != 560)return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не поддерживает данную деталь!");
	  					Spoiler[playerid] = 1139;
						Order[playerid] = 1;
						PlayerInfo[playerid][pCash] -= 10000;
						SendClientMessage(playerid, 0x6495EDFF, "[Спойлер] Заказ принят, садитесь в ваш автомобиль!");
						SetPlayerChatBubble(playerid, "Выполнил(а) заказ",COLOR_PURPLE,30.0,10000);
					}
				}
			}
			else
			{
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			    return true;
			}
		}
		case 5461:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
                        if(PlayerInfo[playerid][pFishes] != 0)
                        {
                            if(PlayerInfo[playerid][pFishLic] == 1)
			                {
								new string[50];
			                    format(string,sizeof(string),"Вы продали рыбу %dг. за %d",PlayerInfo[playerid][pFishes],PlayerInfo[playerid][pFishes] / 2);
			                    SendClientMessage(playerid,COLOR_BLUE,string);
                                PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pFishes] / 2;
                                PlayerInfo[playerid][pFishes] = 0;
							}
							else
							{
							    new string[50];
                                format(string,sizeof(string),"Вы продали рыбу %dг. за %d",PlayerInfo[playerid][pFishes],PlayerInfo[playerid][pFishes] / 10);
			                    SendClientMessage(playerid,COLOR_BLUE,string);
                                PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pFishes] / 10;
                                PlayerInfo[playerid][pFishes] = 0;
							}
		                }
		                else SendClientMessage(playerid,COLOR_GREY,"У вас нет рыбы");
                    }
					case 1:
					{
                        if(PlayerInfo[playerid][pMushrooms] != 0)
		                {
		                    new string[50];
			                format(string,sizeof(string),"Вы продали грибы %d шт. за %d",PlayerInfo[playerid][pMushrooms],PlayerInfo[playerid][pMushrooms] * 500);
			                SendClientMessage(playerid,COLOR_BLUE,string);
			                PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pMushrooms] * 500;
			                PlayerInfo[playerid][pMushrooms] = 0;
		                }
		                else
		                {
                            SendClientMessage(playerid,COLOR_GREY,"У вас нет грибов");
		                }
                    }
			    }
			}
			else
			{
				return true;
			}
		}
		case 9623:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialog(playerid, 9973, DIALOG_STYLE_LIST, "Настройки", "[0] Выключить чат семьи\n[1] Включить чат семьи\n[2] Сменить пол", "Выбрать", "Назад");
					case 1: ShowStats(playerid,playerid);
					case 2: ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера", "[0] Поиск команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Мои команды\n[5] Главным\n[6] Дом\n[7] Бизнес\n[8] Автомобиль\n[9] Автомастерские\n[10] Банк\n[11] Фермы", "Выбрать", "Назад");
					case 3: ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "Отправить жалобу", "Вы собираетесь отправить администрации сообщение с жалобой\nОтпровляйте по форме [ID/ник нарушитиля] [Текст жалобы]", "Готово", "Назад");
					case 4: ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "    Введите Ваш новый пароль     ", "Принять", "Назад");
					case 5:
					{
						new clearc;
						while(clearc++ < 99)
						SendClientMessage(playerid, COLOR_WHITE, " ");
					}
					case 6:
					{
	                   	new rulesdialog[1300];
						format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
						ShowPlayerDialog(playerid,9980,DIALOG_STYLE_MSGBOX, "Правила сервера", rulesdialog, "Согласен", "Выйти");
						return true;
					}
		        	case 7: ShowPlayerDialog(playerid,8842,DIALOG_STYLE_INPUT, "Слив денег", "Если к Вам попали ворованные/читерские деньги\nотправьте их администрации сервера.\nИначе Вы будете забанены как соучастник", "Слив", "Назад");
			        case 8:
					{
						if(PlayerInfo[playerid][pCheckip]== 0) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Ключ безопасности", "У Вас не установлен ключ безопасности!\nВведите  ключ безопасности состоящий из 5 - 16 символом", "Готово", "Назад");
						ShowPlayerDialog(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[0] Вкл./Откл. проверку по IP\n[1] Сменить ключ\n[2] Последний вход\n[3] Помощь", "Выбрать", "Назад");
						return true;
					}
					case 9: ShowPlayerDialog(playerid,9943,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
					case 10:
					{
					    new listitems[] = "Посмотреть кол-во очков доната\n [1] Скиллы на оружие\t [1 000 000 очков]";
                        ShowPlayerDialog(playerid, 348, DIALOG_STYLE_LIST, "Донат меню",listitems, "Выбрать", "Отмена");
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 348:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new string[35];
						format(string, sizeof(string), "Кол-во очков доната: %d", PlayerInfo[playerid][pDonate]);
						SendClientMessage(playerid, COLOR_BLUE, string);
					}
					case 1:
					{
						if(PlayerInfo[playerid][pDonate] >= 1000000)
						{
                            PlayerInfo[playerid][pGunSkill][0] = 100;
                            PlayerInfo[playerid][pGunSkill][1] = 100;
                            PlayerInfo[playerid][pGunSkill][2] = 100;
                            PlayerInfo[playerid][pGunSkill][3] = 100;
                            PlayerInfo[playerid][pGunSkill][4] = 100;
                            PlayerInfo[playerid][pGunSkill][5] = 100;
                            PlayerInfo[playerid][pGunSkill][6] = 100;
                            PlayerInfo[playerid][pGunSkill][7] = 100;
                            PlayerInfo[playerid][pGunSkill][8] = 100;
                            PlayerInfo[playerid][pGunSkill][9] = 100;
                            PlayerInfo[playerid][pGunSkill][10] = 100;
                            SetPlayerSkills(playerid);
                            PlayerInfo[playerid][pDonate] -= 1000000;
                            SendClientMessage(playerid, 0x6495EDFF, "Вы приобрели все скиллы оружия за 1000000 очков доната");
						}
						else
						{
                            SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно очков доната");
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 20086:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Подача объявления возможна с 5 уровня");
				if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет 1000 вирт");
				ShowPlayerDialog(playerid,20087,1, "Подача объявления:", "Введите текст объявления\nОбъявление обойдётся вам в: 1000 вирт", "Отправить", "Назад");
				ChatStat[playerid] = 0;
			}
			else
			{
				new listitems[] = " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация";
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", listitems, "Далее", "Выход");
			}
		}
		case 20087:
		{
			if(response)
			{
			 	new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(ChatText,1024, "%s\nПрислал(а): %s | %s | Тел: %d",ChatText,sendername,inputtext,PlayerInfo[playerid][pPnumber]);
				ChatStat[playerid] = 1;
				PlayerInfo[playerid][pCash] -= 1000;
				AdvertAtm += 1;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(ChatStat[i] == 1)
					ShowPlayerDialog(playerid,20086,0, "Объявления:",ChatText, "Готово", "Назад");
				}
			}
			else
			{
	            new listitems[] = " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация";
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", listitems, "Далее", "Выход");
			}
			return true;
		}
		case 9973:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
				{
					gFam[playerid] = 1;
					SendClientMessage(playerid, 0x6495EDFF, "Просмотр семейного чата отключён!");
				}
				case 1:
				{
					gFam[playerid] = 0;
					SendClientMessage(playerid, 0x6495EDFF, "Просмотр семейного чата включён!");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,8843,DIALOG_STYLE_LIST, "Меню выбора пола", "[0] Мужской\n[1] Женский", "Выбрать", "Назад"); }
				}
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 8842:
		{
			if(response)
		    {
				new moneys;
				moneys = strval(inputtext);
				if(moneys > 999999999 || moneys < 1) return SendClientMessage(playerid, COLOR_RED, "Неверная сумма");
				if(PlayerInfo[playerid][pCash] < 1) return SendClientMessage(playerid, COLOR_RED, "У вас нет денег");
				PlayerInfo[playerid][pCash] -= moneys;
				new string[29];
				format(string, sizeof(string), "Вы пожертвовали $ %d", moneys);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Большое спасибо за сотрудничество");
			    return true;
			}
			else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
		 		return true;
			}
		}
		case 8843:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
			        {
				        PlayerInfo[playerid][pSex] = 1;
				        SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Мужской");
				       	return true;
			        }
			        case 1:
			        {
				        PlayerInfo[playerid][pSex] = 2;
				        SendClientMessage(playerid, COLOR_WHITE, "Вы сменили свой пол на Женский");
						return true;
			        }
				}
			}
		 	else
			{
				new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
				ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		case 7992:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GREY,"У вас нет столько денег");
                        PlayerInfo[playerid][pCash] -= 5000;
                        SetPlayerArmourAC(playerid, 25);
                        SendClientMessage(playerid,COLOR_WHITE,"Вы купили легкий бронежилет");
                        new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    				ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    				return true;
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GREY,"У вас нет столько денег");
                        PlayerInfo[playerid][pCash] -= 10000;
                        SetPlayerArmourAC(playerid, 50);
                        SendClientMessage(playerid,COLOR_WHITE,"Вы купили средний бронежилет");
                        new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    				ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    				return true;
		            }
		            case 2:
		            {
		                if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY,"У вас нет столько денег");
                        PlayerInfo[playerid][pCash] -= 15000;
                        SetPlayerArmourAC(playerid, 100);
                        SendClientMessage(playerid,COLOR_WHITE,"Вы купили тяжелый бронежилет");
                        new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    				ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
    					return true;
		            }
				}
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7925:
	    {
	        if(response)
	        {
		    	switch(listitem)
				{
					case 0:
			        {
		         		new listitems[] = " [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI";
		    			ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 1:
		            {
		                new listitems[] = " [1] Colt 45\n [2] Deagle\n [2] Silenced Colt 45";
		        		ShowPlayerDialog(playerid, 7927, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 2:
		            {
		                new listitems[] = " [1] Remington 1100(Дробовик)\n [2] Обрез\n [3] SPAS-12";
		        		ShowPlayerDialog(playerid, 7928, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 3:
		            {
		                new listitems[] = " [1] Winchester 1905(Винтовка)\n [2] Springfield M1903(Снайперская винтовка)";
		        		ShowPlayerDialog(playerid, 7995, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 4:
		            {
		                new listitems[] = " [1] Лёгкий бронежилет(25 брони) [5000 вирт]\n [2] Средний бронежилет(50 брони) [10000 вирт]\n [3] Тяжёлый бронежилет(100 брони) [15000 вирт]";
		        		ShowPlayerDialog(playerid, 7992, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
					case 5:
		            {
		                new listitems[] = " [1] Лазерный прицел [2500 вирт]";
		        		ShowPlayerDialog(playerid, 7985, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
						return true;
					}
				}
			}
			else
			{
				useguns[playerid] = 0;
				return true;
			}
		}
		case 7985:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
                    ShowPlayerDialog(playerid,7986,DIALOG_STYLE_LIST,"Цвета","{FF3300}Красный\n{0033CC}Синий\n{33FF00}Зелёный\n{FFFF00}Желтый\n{FEBFEF}Розовый\nОранжевый","Enter","Exit");
					SendClientMessage(playerid,COLOR_WHITE,"Продавец_Оружия:Не на всё оружие крепится прицел,но он перемещается когда вы меняете оружие");
	    			return true;
				}
			}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7986:
	    {
	        if(response)
        	{
            	if(listitem == 0)
            	{
                	SetPVarInt(playerid, "color", 18643);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
            	if(listitem == 1)
            	{
                	SetPVarInt(playerid, "color", 19080);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
            	if(listitem == 2)
            	{
                	SetPVarInt(playerid, "color", 19083);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
            	if(listitem == 3)
            	{
                	SetPVarInt(playerid, "color", 19084);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
            	if(listitem == 4)
            	{
                	SetPVarInt(playerid, "color", 19081);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
            	if(listitem == 5)
            	{
                	SetPVarInt(playerid, "color", 19082);
                	SetPVarInt(playerid, "laser", 1);
                	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                	PlayerInfo[playerid][pCash] -= 2500;
            	}
        	}
			else
			{
   				new listitems[] = " [1] Лазерный прицел [2500 вирт]";
     			ShowPlayerDialog(playerid, 7985, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Назад");
				return true;
			}
		}
		case 7926:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	    			ShowPlayerDialog(playerid, 7931, DIALOG_STYLE_INPUT, "<< M16 >>", "Цена за 1 образец -  5100 вирт\nЦена за 1 патрон - 50 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 1)
	            {
	    			ShowPlayerDialog(playerid, 7930, DIALOG_STYLE_INPUT, "<< AK - 47 >>","Цена за 1 образец -  4000 вирт\nЦена за 1 патрон - 40 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 2)
	            {
	    			ShowPlayerDialog(playerid, 7933, DIALOG_STYLE_INPUT, "<< MP5 >>", "Цена за 1 образец -  3500 вирт\nЦена за 1 патрон - 25 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 3)
	            {
	    			ShowPlayerDialog(playerid, 7932, DIALOG_STYLE_INPUT, "<< TEC-9 >>", "Цена за 1 образец -  2300 вирт\nЦена за 1 патрон - 25 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 4)
	            {
	    			ShowPlayerDialog(playerid, 7934, DIALOG_STYLE_INPUT, "<< UZI >>", "Цена за 1 образец -  3000 вирт\nЦена за 1 патрон - 25 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
			}
			else
			{
                new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7930:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,5,gun,ammo);
				if(gun == 30)
				{
    				money += ammol * 40;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 30, ammol);
						new string[56];
					 	format(string,sizeof(string), "Вы купили %d патронов для АК-47 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 4000;
        			money += ammol * 40;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						new string[56];
						GiveWeapon(playerid, 30, ammol);
						format(string,sizeof(string), "Вы купили %d патронов для АК-47 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7931:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,5,gun,ammo);
				if(gun == 31)
				{
    				money += ammol * 50;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 31, ammol);
					 	new string[54];
					 	format(string,sizeof(string), "Вы купили %d патронов для M16 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 5100;
        			money += ammol * 50;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 31, ammol);
						new string[54];
						format(string,sizeof(string), "Вы купили %d патронов для M16 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7932:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,4,gun,ammo);
				if(gun == 32)
				{
    				money += ammol * 25;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 32, ammol);
					 	new string[56];
					 	format(string,sizeof(string), "Вы купили %d патронов для TEC-9 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 2300;
        			money += ammol * 25;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 32, ammol);
						new string[56];
						format(string,sizeof(string), "Вы купили %d патронов для TEC-9 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7933:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,4,gun,ammo);
				if(gun == 29)
				{
    				money += ammol * 25;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 29, ammol);
					 	new string[54];
					 	format(string,sizeof(string), "Вы купили %d патронов для MP5 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 3500;
        			money += ammol * 25;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 29, ammol);
						new string[54];
						format(string,sizeof(string), "Вы купили %d патронов для MP5 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7934:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,4,gun,ammo);
				if(gun == 28)
				{
    				money += ammol * 25;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 28, ammol);
					 	new string[54];
					 	format(string,sizeof(string), "Вы купили %d патронов для UZI за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 3500;
        			money += ammol * 25;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 28, ammol);
						new string[54];
						format(string,sizeof(string), "Вы купили %d патронов для UZI за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7935:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,2,gun,ammo);
				if(gun == 22)
				{
    				money += ammol * 15;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 22, ammol);
					 	new string[58];
					 	format(string,sizeof(string), "Вы купили %d патронов для Colt 45 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 1500;
        			money += ammol * 15;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 22, ammol);
						new string[58];
						format(string,sizeof(string), "Вы купили %d патронов для Colt 45 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7936:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,2,gun,ammo);
				if(gun == 23)
				{
    				money += ammol * 15;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 23, ammol);
					 	new string[67];
					 	format(string,sizeof(string), "Вы купили %d патронов для Silenced Colt 45 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 1800;
        			money += ammol * 15;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 23, ammol);
						new string[67];
						format(string,sizeof(string), "Вы купили %d патронов для Silenced Colt 45 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7937:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,2,gun,ammo);
				if(gun == 24)
				{
    				money += ammol * 30;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 24, ammol);
					 	new string[57];
					 	format(string,sizeof(string), "Вы купили %d патронов для Deagle за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 2600;
        			money += ammol * 30;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 24, ammol);
						new string[57];
						format(string,sizeof(string), "Вы купили %d патронов для Deagle за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7938:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,3,gun,ammo);
				if(gun == 25)
				{
    				money += ammol * 35;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 25, ammol);
					 	new string[65];
					 	format(string,sizeof(string), "Вы купили %d патронов для Remington 1100 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 3600;
        			money += ammol * 35;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 25, ammol);
						new string[65];
						format(string,sizeof(string), "Вы купили %d патронов для Remington 1100 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7939:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,3,gun,ammo);
				if(gun == 26)
				{
    				money += ammol * 35;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 26, ammol);
					 	new string[57];
					 	format(string,sizeof(string), "Вы купили %d патронов для Обреза за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 2600;
        			money += ammol * 35;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 26, ammol);
						new string[56];
						format(string,sizeof(string), "Вы купили %d патронов для Обреза за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7940:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,3,gun,ammo);
				if(gun == 27)
				{
    				money += ammol * 35;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 27, ammol);
					 	new string[58];
					 	format(string,sizeof(string), "Вы купили %d патронов для SPAS-12 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 7000;
        			money += ammol * 35;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 27, ammol);
						new string[56];
						format(string,sizeof(string), "Вы купили %d патронов для SPAS-12 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7941:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,6,gun,ammo);
				if(gun == 33)
				{
    				money += ammol * 70;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 33, ammol);
					 	new string[66];
					 	format(string,sizeof(string), "Вы купили %d патронов для Winchester 1905 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 6500;
        			money += ammol * 70;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 33, ammol);
						new string[66];
						format(string,sizeof(string), "Вы купили %d патронов для Winchester 1905 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7942:
	    {
	        if(response)
	        {
	            new ammol = strval(inputtext);
	            if(ammol < 1 || ammol > 9999){SendClientMessage(playerid,COLOR_GREY,"Нельзя меньше 1 и больше 9999 патронов");return true;}
	            GetPlayerWeaponData(playerid,6,gun,ammo);
				if(gun == 34)
				{
    				money += ammol * 70;
				    if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
			 		{
			 			PlayerInfo[playerid][pCash] -= money;
					 	GiveWeapon(playerid, 34, ammol);
					 	new string[68];
					 	format(string,sizeof(string), "Вы купили %d патронов для Springfield M1903 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
			 		}
				}
				else
				{
    				money += 11000;
        			money += ammol * 70;
           			if(PlayerInfo[playerid][pCash] < money) { SendClientMessage(playerid,COLOR_GREY,"Недостаточно денег"); ShowPlayerDialog(playerid, 7926, DIALOG_STYLE_LIST, "Магазин оружия"," [1] M16\n [2] AK-47\n [3] MP5\n [4] TEC-9\n [5] Micro UZI", "Выбрать", "Назад"); gunchoise[playerid] = 0; return true; }
				    else
					{
						PlayerInfo[playerid][pCash] -= money;
						GiveWeapon(playerid, 34, ammol);
						new string[68];
						format(string,sizeof(string), "Вы купили %d патронов для Springfield M1903 за %d вирт",ammol, money);
				    	SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				money = 0;
			}
			else
			{
	         	new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7927:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	   				ShowPlayerDialog(playerid, 7935, DIALOG_STYLE_INPUT, "<< Colt 45 >>", "Цена за 1 образец -  1500 вирт\nЦена за 1 патрон - 15 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
	            else if(listitem == 1)
	            {
	    			ShowPlayerDialog(playerid, 7937, DIALOG_STYLE_INPUT, "<< Deagle >>",  "Цена за 1 образец -  2600 вирт\nЦена за 1 патрон - 30 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 2)
	            {
	    			ShowPlayerDialog(playerid, 7936, DIALOG_STYLE_INPUT, "<< Silenced Colt 45 >>",  "Цена за 1 образец -  1800 вирт\nЦена за 1 патрон - 15 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
			}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7928:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	    			ShowPlayerDialog(playerid, 7938, DIALOG_STYLE_INPUT, "<< Remington 1100 >>","Цена за 1 образец -  3600 вирт\nЦена за 1 патрон - 35 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 1)
	            {
	    			ShowPlayerDialog(playerid, 7939, DIALOG_STYLE_INPUT, "<< Обрез >>","Цена за 1 образец -  2600 вирт\nЦена за 1 патрон - 35 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 2)
	            {
	    			ShowPlayerDialog(playerid, 7940, DIALOG_STYLE_INPUT, "<< SPAS-12 >>","Цена за 1 образец -  7000 вирт\nЦена за 1 патрон - 35 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
	 		}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 7995:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	    			ShowPlayerDialog(playerid, 7941, DIALOG_STYLE_INPUT, "<< Winchester 1905 >>","Цена за 1 образец -  6500 вирт\nЦена за 1 патрон - 70 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
				else if(listitem == 1)
	            {
	    			ShowPlayerDialog(playerid, 7942, DIALOG_STYLE_INPUT, "<< Springfield M1903 >>","Цена за 1 образец -  11000 вирт\nЦена за 1 патрон - 70 вирт\nВведите кол-во патронов:", "Выбрать", "Назад");
	    			return true;
				}
	 		}
			else
			{
			    new listitems[] = " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия";
	    		ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", listitems, "Выбрать", "Закрыть");
	    		return true;
			}
		}
		case 2934:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext)) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
	            Dostup[playerid] = strval(inputtext);
	            if(Dostup[playerid] == PlayerInfo[playerid][pDostup])
	            {
					if(PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не администратор");
	                dostup[playerid] = 1;
	                new sendername[MAX_PLAYER_NAME];
	               	GetPlayerName(playerid, sendername, sizeof(sendername));
					new string[128];
					format(string, sizeof(string), "Администратор: {FFFFFF}%d {EAC700}уровня, {FFFFFF}%s [%d] {EAC700}авторизировался", PlayerInfo[playerid][pAdmin], sendername, playerid);
	   				ABroadCast(0xEAC700FF, string, 1);
	   				return true;
				}
				else
				{
					return true;
				}
			}
			else
			{
				return true;
			}
		}
		case 16:
	    {
	        if(response)
	        {
	            if(!strlen(inputtext))
	           	{
					ShowPlayerDialog(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ безопастности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
					SetPlayerInterior(playerid,0);
					SetPlayerFacingAngle(playerid, 179.5547);
					SetPlayerCameraPos(playerid,-1817.0808,1112.9937,235.4244);
					SetPlayerCameraLookAt(playerid,-1816.5471,949.6590,235.4244);
					TogglePlayerControllable(playerid, 0);
					gPlayerLogged[playerid] = 0;
					return true;
	            }
	            keyip[playerid] = strval(inputtext);
	            if(keyip[playerid] == PlayerInfo[playerid][pKeyip])
	            {
	            	new playersip[20];
					new string[37];
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s.ini",sendername);
					GetPlayerIp(playerid,playersip,sizeof(playersip));
					new files = ini_openFile(string);
					if(files < 0) print("нет файла");
					else
					{
						ini_setString(files, "pIp",playersip);
						ini_closeFile(files);
					}
					gPlayerLogged[playerid] = 1;
					SpawnPlayer(playerid);
					SetPlayerWeapons(playerid);
					TogglePlayerControllable(playerid, 1);
	   				return true;
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Неверный ключ безопасности'\nВведите '/q', чтобы выйти", "Закрыть", "");
					GKick(playerid);
					return true;
				}
			}
			else
	  		{
			    return true;
			}
	    }
	    case 19000:
	    {
	        new sendername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(response)
	        {
		        switch(listitem)
				{
				  	case 0:
				    {
					  	if (GetPlayerState(playerid) == 2)
					    {
						    new tmpcar = GetPlayerVehicleID(playerid);
						    SetVehiclePos(tmpcar, 1571.4309,-1697.8300,5.8906);
						    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						    return true;
					    }
						else
						{
							SetPlayerPos(playerid, 1571.4309,-1697.8300,5.8906);
						}
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					    PlayerInfo[playerid][pInt] = 0;
					    return true;
					}
			    	case 1:
			        {
					    if (GetPlayerState(playerid) == 2)
					    {
						    new tmpcar = GetPlayerVehicleID(playerid);
						    SetVehiclePos(tmpcar, -2442.3079,497.8275,30.1016);
						    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						    return true;
					    }
					    else
					    {
							SetPlayerPos(playerid, -2442.3079,497.8275,30.1016);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 2:
	 				{
				     	if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, -1333.3208,466.6040,7.3126);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, -1333.3208,466.6040,7.3126);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
	   				}
			    	case 3:
			        {
				    	if (GetPlayerState(playerid) == 2)
				    	{
					    	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, -2665.3213,630.1273,14.4531);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, -2665.3213,630.1273,14.4531);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
				   	}
			    	case 4:
			        {
				        if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, 1449.7888,757.1137,11.0234);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				    		SetPlayerPos(playerid, 1449.7888,757.1137,11.0234);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
			   		}
			   		case 5:
			   		{
				   		if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, 1461.8566,2774.2720,10.8203);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, 1461.8566,2774.2720,10.8203);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы!");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
			   		}
					case 6:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1480.4998,-1741.3499,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1480.4998,-1741.3499,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
					}
					case 7:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2180.0696,1678.8738,11.0544);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2180.0696,1678.8738,11.0544);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 8:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2047.0828,462.9518,35.1719);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2047.0828,462.9518,35.1719);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 9:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1620.9758,680.9807,7.1875);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1620.9758,680.9807,7.1875);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 10:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2052.8770,-191.6748,35.3274);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2052.8770,-191.6748,35.3274);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 11:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2645.0781,-2022.0994,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2645.0781,-2022.0994,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 12:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2780.3828,-1611.4655,10.9219);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2780.3828,-1611.4655,10.9219);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
					 	return true;
					}
					case 13:
					{
						if (GetPlayerState(playerid) == 2)
					 	{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 946.8076,1729.6902,8.8516);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 946.8076,1729.6902,8.8516);
						}
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					    PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 14:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2493.9863,-1676.0435,13.3382);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2493.9863,-1676.0435,13.3382);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 15:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1655.4059,-1707.0701,15.6094);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1655.4059,-1707.0701,15.6094);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 16:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1682.8450,-2111.4126,13.4467);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1682.8450,-2111.4126,13.4467);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 17:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2181.7979,-1807.1993,13.3727);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2181.7979,-1807.1993,13.3727);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 18:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 210.0474,1903.1409,17.6406);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 210.0474,1903.1409,17.6406);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 19:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2648.1716,1177.0957,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2648.1716,1177.0957,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 20:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2287.4087,2454.4585,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2287.4087,2454.4585,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 21:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1182.6404,-1326.7953,13.5814);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1182.6404,-1326.7953,13.5814);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 22:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1606.4557,1827.6920,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, 1606.4557,1827.6920,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 23:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2012.0291,67.1390,28.7122);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, -2013.5345,66.7428,29.1046);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 24:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2827.0518,-1526.7538,138.9299);
							SetVehicleZAngle(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,-2817.9292,-1516.2429,146.1073);
							SetPlayerFacingAngle(playerid,270.0);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 9000:
	    {
	        new sendername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(response)
	        {
		        switch(listitem)
				{
				  	case 0:
				    {
					  	if (GetPlayerState(playerid) == 2)
					    {
						    new tmpcar = GetPlayerVehicleID(playerid);
						    SetVehiclePos(tmpcar, 1134.9340,-1755.3342,13.2847);
						    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						    return true;
					    }
						else
						{
							SetPlayerPos(playerid, 1134.9340,-1754.9709,13.5791);
						}
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					    PlayerInfo[playerid][pInt] = 0;
					    return true;
					}
			    	case 1:
			        {
					    if (GetPlayerState(playerid) == 2)
					    {
						    new tmpcar = GetPlayerVehicleID(playerid);
						    SetVehiclePos(tmpcar, -1968.4684,137.9214,27.6875);
						    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						    return true;
					    }
					    else
					    {
							SetPlayerPos(playerid, -1968.4684,137.9214,27.6875);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 2:
	 				{
				     	if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, 2825.9026,1293.4166,10.7663);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, 2825.9026,1293.4166,10.7663);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
	   				}
			    	case 3:
			        {
				    	if (GetPlayerState(playerid) == 2)
				    	{
					    	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, -2042.7015,-92.3698,35.1718);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, -2042.7015,-92.3698,35.1718);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
				   	}
			    	case 4:
			        {
				        if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, 2519.5505,-567.7944,1573.8018);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				    		SetPlayerPos(playerid, 2519.5505,-567.7944,1573.8018);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
			   		}
			   		case 5:
			   		{
				   		if (GetPlayerState(playerid) == 2)
				    	{
					     	new tmpcar = GetPlayerVehicleID(playerid);
					     	SetVehiclePos(tmpcar, 1450.6117,-2467.6792,13.5547);
					     	TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					      	return true;
				    	}
				    	else
				    	{
				     		SetPlayerPos(playerid, 1450.6117,-2467.6792,13.5547);
				    	}
				    	SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы!");
				    	SetPlayerInterior(playerid,0);
				    	SetPlayerVirtualWorld(playerid,0);
				    	PlayerInfo[playerid][pInt] = 0;
				     	return true;
			   		}
					case 6:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1426.0859,-393.5218,6.4316);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1426.0859,-393.5218,6.4316);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
					}
					case 7:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1655.3542,1594.3129,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1655.3542,1594.3129,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 8:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1359.0708,-1278.9153,13.3582);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1359.0708,-1278.9153,13.3582);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 9:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1355.2563,-734.4781,104.4957);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1355.2563,-734.4781,104.4957);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 10:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1544.6545,-1354.1288,329.4729);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1544.6545,-1354.1288,329.4729);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 11:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2318.3291,-1526.8257,25.3438);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2318.3291,-1526.8257,25.3438);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 12:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1481.4983,-1741.6584,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1481.4983,-1741.6584,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
					 	return true;
					}
					case 13:
					{
						if (GetPlayerState(playerid) == 2)
					 	{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1418.4293,-1700.8469,13.5395);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1418.4293,-1700.8469,13.5395);
						}
					    SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					    PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 14:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2153.6045,256.6515,35.3203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2153.6045,256.6515,35.3203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 15:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1672.5289,2261.7092,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1672.5289,2261.7092,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 16:
					{
						SetPlayerPos(playerid, 267.8435,77.8744,1001.0391);
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,6);
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
					case 17:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 853.5198,-585.3717,18.0889);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 853.5198,-585.3717,18.0889);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 18:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1796.7948,1198.3381,25.1194);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1796.7948,1198.3381,25.1194);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 19:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1665.6893,2194.5054,10.8203);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1665.6893,2194.5054,10.8203);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 20:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 517.7473,-1784.1527,5.8384);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 517.7473,-1784.1527,5.8384);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 21:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2695.5076,-1704.6638,11.8438);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2695.5076,-1704.6638,11.8438);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 22:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2127.5366,-443.3879,35.5344);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, -2127.5366,-443.3879,35.5344);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 23:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1964.6908,-2180.7349,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, 1964.6908,-2180.7349,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 24:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1636.3082,-1150.1960,23.9063);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, 1636.3082,-1150.1960,23.9063);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
					case 25:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2203.8530,-2243.1206,13.5469);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid, 2203.8530,-2243.1206,13.5469);
						}
						SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PlayerInfo[playerid][pInt] = 0;
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
		case 10007:
		{
	        new name[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name, sizeof(name));
			if(response)
			{
			    new string[280];
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {ff0000}зарегистрирован {FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", name);
	           		ShowPlayerDialog(playerid,10007,DIALOG_STYLE_PASSWORD, "{FFFFFF}Авторизация",string, "Войти", "Отмена");
					return true;
				}
				new pass[100];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,10007,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				if(!strcmp(MD5_Hash(inputtext),pass,true))
				{
					OnPlayerLogin(playerid,MD5_Hash(inputtext));
				}
				else
				{
					ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты\nВведите '/q', чтобы выйти", "Закрыть", "");
					GKick(playerid);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	 			GKick(playerid);
			}
		}
		case 10008:
		{
	        new name[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, name, sizeof(name));
	        new string[280];
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,sizeof(string), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {ff0000}зарегистрирован {FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", name);
	           		ShowPlayerDialog(playerid,10008,DIALOG_STYLE_PASSWORD, "{FFFFFF}Авторизация",string, "Войти", "Отмена");
					return true;
				}
				new pass[100];
				GetPlayerName(playerid,playername,sizeof(playername));
				format(string,sizeof(string), "%s.ini",playername);
				new File = ini_openFile(string);
				ini_getString(File, "Key",pass);
				ini_closeFile(File);
				for(new i = strlen(inputtext); i != 0; --i)
 				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,10008,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				if(!strcmp(MD5_Hash(inputtext),pass,true))
				{
					OnPlayerLogin(playerid,MD5_Hash(inputtext));
				}
	            else
				{
					format(string,sizeof(string), "{FF6347}Внимание!Вы ввели неверный пароль!\n\tУ вас осталось(1) попытки\nПосле вы будете на время забанены");
					ShowPlayerDialog(playerid,10007,DIALOG_STYLE_MSGBOX, "Ошибка!",string, "Повтор", "Выйти");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				GKick(playerid);
			}
		}
		case 10009:
	    {
			new loginmsg[280+1];
		   	new loginname[MAX_PLAYER_NAME];
		   	GetPlayerName(playerid,loginname,sizeof(loginname));
	        if(response)
	        {
	  			format(loginmsg,sizeof(loginmsg), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {00FF00}не зарегистрирован{FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", loginname);
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFFFF}Регистрация",loginmsg, "Готово", "Отмена");
		 		PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
		    	return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
	  			GKick(playerid);
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}
public OnPlayerDisconnect(playerid, reason)
{
    if(GetPVarInt(playerid, "Kick") != 0) KillTimer(GetPVarInt(playerid, "Kick"));
	SetPlayerSkills(playerid);
	SaveWeapon(playerid);
    KillTimer(Collectionit[playerid]);
	KillTimer(Timerkk[playerid]);
	zips[playerid] = 0;
	IsConnected[playerid] = 0;
	RobbingCar[playerid] = false;
	MehJob[playerid] = 999;
	Tune[playerid] = 0;
	robh[playerid] = false;
	showhelp[playerid] = 0;
	PlayerPaintballing[playerid] = 0;
	Peredpaint[playerid] = 0;
	arenda[playerid] = 0;
	incosjob[playerid] = 0;
	Lightsp[playerid] = 0;
	afkto[playerid] = 0;
	chet[playerid] = 0;
	arenda[playerid] = 0;
	AddictionsTimer[playerid] = 0;
	proverkaforma[playerid] = 0;
	usegruz[playerid] = 0;
	CharPrice[playerid] = 0;
	gag[playerid] = 0;
    SelectCharPlace[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
    PicCP[playerid] = 0;
    repairdvig[playerid] = 0;
	PlayerRacing[playerid] = 0;
	enterbiz[playerid] = 0;
	PlayerEx[playerid][VarEx] = 0;
	TextDrawDestroy(URL[playerid]);
	TextDrawDestroy(SpeedShow[playerid]);
    TextDrawDestroy(FuelShow[playerid]);
    TextDrawDestroy(StatusShow[playerid]);
    TextDrawDestroy(KMShow[playerid]);
    TextDrawDestroy(FillShow[playerid]);
    TextDrawDestroy(MaxShow[playerid]);
    TextDrawDestroy(EngineShow[playerid]);
    TextDrawDestroy(LightsShow[playerid]);
    TextDrawDestroy(CarnameShow[playerid]);
    TextDrawDestroy(CarShow[playerid]);
	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);
	RemovePlayerAttachedObject(playerid, 2);
    RemovePlayerAttachedObject(playerid, 3);
    RemovePlayerAttachedObject(playerid, 4);
    RemovePlayerAttachedObject(playerid, 5);
	RemovePlayerAttachedObject(playerid, 6);
	RemovePlayerAttachedObject(playerid, 7);
	RemovePlayerAttachedObject(playerid, 8);
    RemovePlayerAttachedObject(playerid, 9);
    ResetCarInfo(playerid);
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(hvictim[i] == GetPlayerID(PlayerInfo[playerid][pName]))
		{
		    SendClientMessage(i,COLOR_GREY,"Ваша жертва скрылась");
		    SendClientMessage(hclient[i],COLOR_GREY,"Наёмник не смог выполнить заказ,так как жертва вышла с сервера");
		    hvictim[i] = -1;
		    hitmanworked[i] = 0;
		    hmoneys[i] = 0;
		    hclient[i] = -1;
		}
    }
	if(hmoneys[playerid] >= 1000)
	{
        SendClientMessage(hclient[playerid],COLOR_GREY,"Наёмник вышел с сервера,возможно,ваш заказ возьмёт другой наёмник");
        hvictim[playerid] = wvictim;
        hmoneys[playerid] = wmoneys;
        hclient[playerid] = wclient;
		new string[128];
        format(string,sizeof(string),"%s заказал %s за %d вирт(( /accept order чтобы принять ))",PlayerInfo[wclient][pName],PlayerInfo[wvictim][pName],wmoneys);
		SendFamilyMessage(35,COLOR_YELLOW2, string);
        hvictim[playerid] = -1;
 		hitmanworked[playerid] = 0;
   		hmoneys[playerid] = 0;
	    hclient[playerid] = -1;
	}
	if(PlayerInfo[playerid][pPHousekey] != 255)
	{
		PlayerInfo[playerid][pFuelCar] = Fuell[caridhouse[playerid]];
		DestroyVehicle(caridhouse[playerid]);
		createdcar --;
	}
	if(MehJob[playerid] == 0)
	{
		AvtoInfo[0][Rab] -= 1;
		if(AvtoInfo[0][Rab] < 0)
		{
			AvtoInfo[0][Rab] = 0;
		}
	}
	if(MehJob[playerid] == 1)
	{
		AvtoInfo[1][Rab] -= 1;
		if(AvtoInfo[1][Rab] < 0)
		{
			AvtoInfo[1][Rab] = 0;
		}
	}
	if(MehJob[playerid] == 2)
	{
		AvtoInfo[2][Rab] -= 1;
		if(AvtoInfo[2][Rab] < 0)
		{
			AvtoInfo[2][Rab] = 0;
		}
	}
	if(lNews[playerid] == 0)
	{
		radiols--;
		PlayerInfo[playerid][pRadio] = 2;
	}
	if(gNews[playerid] == 0)
	{
		radiosf--;
		PlayerInfo[playerid][pRadio] = 1;
	}
	if(LvNews[playerid] == 0)
	{
		radiolv--;
		PlayerInfo[playerid][pRadio] = 3;
	}
    if(PlayerCuffed[playerid] >= 1)
    {
        PlayerInfo[playerid][pJailed] = 1;
        PlayerInfo[playerid][pJailTime] = 600*PlayerInfo[playerid][pMadWant];
    }
    new sendername[MAX_PLAYER_NAME];
    new string[128];
	new playersip[125];
	new year, month,day;
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	format(string, sizeof(string), "%s.ini",sendername);
	new file = ini_openFile(string);
	if(file < 0) print("нет файла");
	else
	{
		ini_setInteger(file, "pVhoddata",day);
		ini_setInteger(file, "pVhodMes",month);
		ini_setInteger(file, "pVhodchas",hour);
		ini_setInteger(file, "pVhodminute",minute);
		ini_closeFile(file);
	}
	if(PlayerOnDerby[playerid] != 0)
	{
		DerbyAttend -= 1;
	}
	if(mesto[playerid] == 0)
	{
		AvtoInfo[0][Mesto] = 255;
	}
	if(mesto[playerid] == 1)
	{
		AvtoInfo[1][Mesto] = 255;
	}
	if(mesto[playerid] == 2)
	{
		AvtoInfo[2][Mesto] = 255;
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
  	{
		dostup[playerid] = 0;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Администратор: {FFFFFF}%d {EAC700}уровня, {FFFFFF}%s [%d] {EAC700}вышел", PlayerInfo[playerid][pAdmin], sendername, playerid);
   		ABroadCast(0xEAC700FF, string, 1);
  	}
	if(PlayerBoxing[playerid] > 0)
	{
		if(Boxer1 == playerid)
		{
			if(IsPlayerConnected(Boxer2))
			{
				PlayerBoxing[Boxer2] = 0;
				SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer2, 5);
				GameTextForPlayer(Boxer2, "~r~BREAK", 5000, 1);
			}
		}
		else if(Boxer2 == playerid)
		{
			if(IsPlayerConnected(Boxer1))
			{
				PlayerBoxing[Boxer1] = 0;
				SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer1, 5);
				GameTextForPlayer(Boxer1, "~r~BREAK", 5000, 1);
			}
		}
		InRing = 0;
 		RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
   	if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
   	if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
	{
	    Medics -= 1;
	}
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21)
	{
	    Police -= 1;
	}
	else if(PlayerInfo[playerid][pJob] == 2)
	{
	    Mechanics -= 1;
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~g~+%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	// maxplayers при выходе игрока
	for(new i=0;i<MaxPlayers;i++)
	{
     	if(PlayerIDs[i] == playerid)
     	{
         	MaxPlayers--;
         	PlayerIDs[i] = PlayerIDs[MaxPlayers];
         	PlayerIDs[MaxPlayers] = -1;
         	break;
     	}
	}
	//
	OnPlayerUpdateAc(playerid);
	return true;
}
stock SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pSlot][0] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][0], PlayerInfo[playerid][pSlotammo][0]);
		}
		if(PlayerInfo[playerid][pSlot][1] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][1], PlayerInfo[playerid][pSlotammo][1]);
		}
		if(PlayerInfo[playerid][pSlot][2] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][2], PlayerInfo[playerid][pSlotammo][2]);
		}
		if(PlayerInfo[playerid][pSlot][3] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][3], PlayerInfo[playerid][pSlotammo][3]);
		}
		if(PlayerInfo[playerid][pSlot][4] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][4], PlayerInfo[playerid][pSlotammo][4]);
		}
		if(PlayerInfo[playerid][pSlot][5] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][5], PlayerInfo[playerid][pSlotammo][5]);
		}
		if(PlayerInfo[playerid][pSlot][6] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][6], PlayerInfo[playerid][pSlotammo][6]);
		}
		if(PlayerInfo[playerid][pSlot][7] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][7], PlayerInfo[playerid][pSlotammo][7]);
		}
		if(PlayerInfo[playerid][pSlot][8] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][8], PlayerInfo[playerid][pSlotammo][8]);
		}
		if(PlayerInfo[playerid][pSlot][9] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][9], PlayerInfo[playerid][pSlotammo][9]);
		}
		if(PlayerInfo[playerid][pSlot][10] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][10], PlayerInfo[playerid][pSlotammo][10]);
		}
		if(PlayerInfo[playerid][pSlot][11] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][11], PlayerInfo[playerid][pSlotammo][11]);
		}
		if(PlayerInfo[playerid][pSlot][12] > 0)
		{
			GiveWeapon(playerid, PlayerInfo[playerid][pSlot][12], PlayerInfo[playerid][pSlotammo][12]);
		}
		if(IsABiker(playerid))
		{
			GiveWeapon(playerid, 7, 1);
		}
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
		{
		    GiveWeapon(playerid, 2, 1);
		}
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
		    GiveWeapon(playerid, 8, 1);
		}
		if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 3 && PlayerInfo[playerid][pRank] <= 4)
		{
		    GiveWeapon(playerid, 24, 100);
			SetPlayerArmourAC(playerid, 100);
		}
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    GiveWeapon(playerid, 43, 30);
		}
		if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
		{
			GiveWeapon(playerid, 1, 1);
		}
		if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			GiveWeapon(playerid, 43, 30);
		}
		if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
		{
			GiveWeapon(playerid, 5, 1);
		}
		if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
			GiveWeapon(playerid, 43, 30);
		}
	}
	return true;
}
stock SetPlayerSpawn(playerid)
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
		GKick(playerid);
		return true;
	}
	if(IsPlayerConnected(playerid))
	{
		new house = PlayerInfo[playerid][pPHousekey];
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		if(PlayerInfo[playerid][pHP] > 1) SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHP]);
		if(PlayerInfo[playerid][pHP] <= 0) SetPlayerHealthAC(playerid, 20);
		if(PlayerInfo[playerid][pMadWant] >= 1) SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
		if(defx != 0.0)
		{
		    if(PlayerInfo[playerid][pForma] != 0)
		    {
		    	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		    	SetPlayerToTeamColor(playerid);
		    }
			else SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			SetPlayerInterior(playerid,defi);
   			SetPlayerPos(playerid,defx,defy,defz);
   			SetPlayerVirtualWorld(playerid,defv);
			defx = 0.0;
			defy = 0.0;
			defz = 0.0;
			defi = 0;
			defv = 0;
			ApplyAnimation(playerid, "SUNBATHE", "Lay_Bac_out",4.0,0,0,0,0,0,1);
			return true;
		}
		if(PlayerInfo[playerid][pTut] == 0)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 179.5547);
			SetPlayerCameraPos(playerid,-1817.0808,1112.9937,235.4244);
			SetPlayerCameraLookAt(playerid,-1816.5471,949.6590,235.4244);
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX, " ", "Какого пола будет ваш персонаж:\n", "Мужчина", "Женщина");
			TogglePlayerControllable(playerid, 0);
			DelGun(playerid);
		}
		if(PlayerInfo[playerid][pForma] == 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
		else
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			SetPlayerToTeamColor(playerid);
		}
		if(Peredpaint[playerid] != 0)
		{
			new rand;
			new rands = random(sizeof(paintgun));
			GiveWeapon(playerid, paintgun[rands], 9999);
			rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerColor(playerid, COLOR_REDD);
			SetPlayerArmourAC(playerid, 100);
			return true;
		}
		switch(PlayerInfo[playerid][pJailed])
		{
  			case 1:
	    	{
      			SetPlayerInterior(playerid, 6);
				SetPlayerPos(playerid,264.1425,77.4712,1001.0391);
				return true;
			}
			case 2:
			{
   				SetPlayerInterior(playerid, 10);
				SetPlayerPos(playerid,219.5400,109.9767,999.0156);
				return true;
			}
			case 3:
			{
   				SetPlayerInterior(playerid, 3);
				SetPlayerPos(playerid,198.3642,161.8103,1003.0300);
				return true;
			}
			case 4:
			{
   				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,5508.3706,1244.7594,23.1886);
				return true;
			}
		}
		if(house != 255)
		{
        	if(SpawnChange[playerid])
            {
            	SetPlayerInterior(playerid,HouseInfo[house][hInt]);
           		SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
            	PlayerInfo[playerid][pLocal] = house;
            	PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
            	SetPlayerVirtualWorld(playerid, house+50);
				return true;
			}
		}
  		switch(PlayerInfo[playerid][pMember])
		{
 			case 1:
			{
    			SetPlayerInterior(playerid, 6);
			    SetPlayerPos(playerid, 235.8750,73.5106,1005.0391);
			    SetPlayerVirtualWorld(playerid, 0);
			    return true;
			}
			case 2:
			{
    			SetPlayerInterior(playerid, 5);
       			SetPlayerPos(playerid, 322.4131,316.9056,999.1484);
          		SetPlayerFacingAngle(playerid, 180.5557);
            	return true;
            }
            case 3:
            {
            	if(PlayerInfo[playerid][pForma] == 100)
            	{
            	    PlayerInfo[playerid][pModel] = 252;
     				SetPlayerSkin(playerid, 252);
            	}
	        	SetPlayerInterior(playerid, 0);
	        	SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
	        	SetPlayerVirtualWorld(playerid, 0);
	        	return true;
          	}
			case 4:
			{
				SetPlayerInterior(playerid, 15);
    			SetPlayerVirtualWorld(playerid, 3);
			    SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
		    	SetPlayerFacingAngle(playerid, 90.0000);
			    return true;
			}
			case 5:
			{
	 	   		SetPlayerInterior(playerid, 5);
			    SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerVirtualWorld(playerid, 2);
			    return true;
			}
			case 6:
			{
			    SetPlayerInterior(playerid, 5);
			    SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerVirtualWorld(playerid, 0);
			    return true;
			}
   			case 7:
      		{
    			SetPlayerInterior(playerid, 3);
       			SetPlayerPos(playerid, 358.5969,207.5322,1008.3828);
          		SetPlayerFacingAngle(playerid, 182.7769);
	            SetPlayerVirtualWorld(playerid, 0);
	            return true;
            }
			case 8:
			{
    			SetPlayerInterior(playerid, 1);
			    SetPlayerPos(playerid, 2151.4502,1602.8522,1006.1752);
			    SetPlayerFacingAngle(playerid, 269.7087);
			    SetPlayerVirtualWorld(playerid, 0);
			    return true;
			}
			case 9:
  			{
    			SetPlayerInterior(playerid, 15);
				SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
				SetPlayerFacingAngle(playerid, 270.0000);
				SetPlayerVirtualWorld(playerid, 2);
    			return true;
    		}
      		case 10:
        	{
         		SetPlayerInterior(playerid, 10);
           		SetPlayerPos(playerid, 221.2526,111.5752,1010.2118);
	            SetPlayerFacingAngle(playerid, 268.9050);
	            SetPlayerVirtualWorld(playerid, 0);
	            return true;
			}
   			case 11:
      		{
				SetPlayerPos(playerid, -2031.7778,-117.3789,1035.1719);
				SetPlayerFacingAngle(playerid, 268.5241);
				SetPlayerInterior(playerid,3);
				SetPlayerVirtualWorld(playerid, 1);
				return true;
    		}
    		case 12:
	    	{
				SetPlayerPos(playerid, -61.2984,1364.5847,1080.2109);
				SetPlayerFacingAngle(playerid, 100);
				SetPlayerInterior(playerid,6);
				SetPlayerVirtualWorld(playerid, 34);
		        return true;
	    	}
	      	case 13:
	    	{
			    SetPlayerInterior(playerid, 4);
			    SetPlayerVirtualWorld(playerid, 75);
			    SetPlayerFacingAngle(playerid, 263.0497);
			    SetPlayerPos(playerid, 303.63,309.25,999.15);
			    return true;
	    	}
			case 14:
			{
			    SetPlayerInterior(playerid, 5);
			    SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
			    SetPlayerVirtualWorld(playerid, 1);
			    return true;
			}
			case 15:
	    	{
			    SetPlayerInterior(playerid, 3);
			    SetPlayerVirtualWorld(playerid, 0);
			    SetPlayerPos(playerid,  2496.012939,-1708.923217,1014.742187);
			    SetPlayerFacingAngle(playerid, 0.191693);
			    SetPlayerVirtualWorld(playerid, 1);
		        return true;
	    	}
		    case 16:
		    {
		    	SetPlayerInterior(playerid, 15);
				SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
				SetPlayerFacingAngle(playerid, 270.0000);
				SetPlayerVirtualWorld(playerid, 1);
    			return true;
    		}
    		case 17:
	    	{
		        SetPlayerFacingAngle(playerid, 90.4248);
				SetPlayerPos(playerid, -49.7558,1400.3553,1084.4297);
				SetPlayerInterior(playerid,8);
				SetPlayerVirtualWorld(playerid, 36);
		        return true;
	    	}
	    	case 18:
			{
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 63);
			    SetPlayerPos(playerid, -223.84,1410.51,27.77);
			    RemovePlayerAttachedObject(playerid, 1);
			    return true;
			}
      		case 19:
        	{
       			if(PlayerInfo[playerid][pForma] == 100)
            	{
            	    PlayerInfo[playerid][pModel] = 252;
     				SetPlayerSkin(playerid, 252);
            	}
	            SetPlayerInterior(playerid, 0);
	            SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
	            SetPlayerVirtualWorld(playerid, 0);
	            return true;
         	}
			case 20:
			{
   				SetPlayerInterior(playerid, 15);
				SetPlayerPos(playerid, 997.6838,1005.4717,1999.7999);
				SetPlayerFacingAngle(playerid, 270.0000);
				SetPlayerVirtualWorld(playerid, 3);
   				return true;
			}
   			case 21:
            {
    			SetPlayerInterior(playerid, 3);
       			SetPlayerPos(playerid, 211.3636,184.3113,1003.0313);
          		SetPlayerFacingAngle(playerid, 174.3579);
	            SetPlayerVirtualWorld(playerid, 122);
	            return true;
            }
			case 22:
			{
 				SetPlayerInterior(playerid, 15);
	    		SetPlayerVirtualWorld(playerid, 4);
			    SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
		    	SetPlayerFacingAngle(playerid, 90.0000);
			    return true;
			}
			case 23:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 2);
			    return true;
			}
			case 24:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 3);
			    return true;
			}
			case 25:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 4);
			    return true;
			}
			case 26:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
	    		SetPlayerVirtualWorld(playerid, 5);
				return true;
			}
			case 27:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 6);
			    return true;
			}
   			case 28:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 7);
			    return true;
			}
   			case 29:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 8);
			    return true;
			}
			case 30:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 9);
			    return true;
			}
			case 31:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 10);
			    return true;
			}
 			case 32:
			{
	 	   		SetPlayerInterior(playerid, 11);
			    SetPlayerPos(playerid, 508.3728,-78.6393,998.9609);
			    SetPlayerFacingAngle(playerid, 7.3397);
			    SetPlayerVirtualWorld(playerid, 11);
			    return true;
			}
			case 33:
			{
				SetPlayerInterior(playerid, 15);
    			SetPlayerVirtualWorld(playerid, 5);
		    	SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
	    		SetPlayerFacingAngle(playerid, 90.0000);
		    	return true;
 	     	}
 	     	case 34:
			{
                SetPlayerInterior(playerid, 1);
			    SetPlayerPos(playerid,685.7822, -462.8278, -25.6368);
			    SetPlayerFacingAngle(playerid, 180.0000);
			    SetPlayerVirtualWorld(playerid, 1);
			    return true;
			}
			case 35:
			{
                SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid,-2815.7935,-1519.0220,140.8438);
			    SetPlayerFacingAngle(playerid, 180.0000);
			    SetPlayerVirtualWorld(playerid, 0);
			    return true;
			}
			default:
			{
				switch(PlayerInfo[playerid][pLevel])
				{
		    		case 1,2:
		    		{
		    		    SetPlayerPos(playerid,299.4926,-200.4908,1004.0547);
			    		SetPlayerFacingAngle(playerid, 0.0);
			    		SetPlayerInterior(playerid,1);
			    		SetPlayerVirtualWorld(playerid, 0);
			    		return true;
					}
					case 3..7:
					{
					    SetPlayerPos(playerid,-1968.7729,114.3221,27.6875);
			    		SetPlayerFacingAngle(playerid, 359.5770);
			    		SetPlayerInterior(playerid,0);
			    		SetPlayerVirtualWorld(playerid, 0);
			    		return true;
					}
					default:
					{
					    SetPlayerPos(playerid,2853.6133,1291.7916,11.3906);
			    		SetPlayerFacingAngle(playerid, 90.0);
			    		SetPlayerInterior(playerid,0);
			    		PlayerInfo[playerid][pInt] = 0;
					}
				}
			}
		}
	}
	return true;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	SetPlayerHealthAC(playerid, 100);
	PlayerInfo[playerid][pHP] = 100;
	TextDrawHideForPlayer(playerid, DRAP);
	zips[playerid] = 0;
	Bags[playerid] = 999;
	WithBag[playerid] = 0;
	enterbiz[playerid] = 0;
	switch(MehJob[playerid])
	{
	    case 0:
	    {
			AvtoInfo[0][Rab] -= 1;
			if(AvtoInfo[0][Rab] < 0) AvtoInfo[0][Rab] = 0;
		}
		case 1:
		{
			AvtoInfo[1][Rab] -= 1;
			if(AvtoInfo[1][Rab] < 0) AvtoInfo[1][Rab] = 0;
		}
		case 2:
		{
			AvtoInfo[2][Rab] -= 1;
			if(AvtoInfo[2][Rab] < 0) AvtoInfo[2][Rab] = 0;
		}
	}
	switch(mesto[playerid])
	{
	    case 0:
	    {
			AvtoInfo[0][Mesto] = 255;
			DestroyVehicle(GetPlayerVehicleID(playerid));
		}
		case 1:
		{
			AvtoInfo[1][Mesto] = 255;
			DestroyVehicle(GetPlayerVehicleID(playerid));
		}
		case 2:
		{
			AvtoInfo[2][Mesto] = 255;
			DestroyVehicle(GetPlayerVehicleID(playerid));
		}
	}
 	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract[playerid] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract[playerid] = 0;
		}
	}
	MehJob[playerid] = 999;
	RemovePlayerAttachedObject(playerid,1);
    RemovePlayerAttachedObject(playerid,2);
    RemovePlayerAttachedObject(playerid,3);
    RemovePlayerAttachedObject(playerid,4);
    RemovePlayerAttachedObject(playerid,0);
	arenda[playerid] = 0;
	incosjob[playerid] = 0;
	Lightsp[playerid] = 0;
	showhelp[playerid] = 0;
	usegruz[playerid] = 0;
	afkto[playerid] = 0;
	usemats[playerid] = 0;
	/*if(SelectChar[playerid] == 255)
	{
		SetPlayerSkin(playerid, OldSkin[playerid]);
		PlayerInfo[playerid][pChar] = OldSkin[playerid];
		SelectChar[playerid] = 0;
    }*/
	PlayerEx[playerid][pSpawnEx] = false;
	AddictionsTimer[playerid] = 0;
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	DisablePlayerCheckpoint(playerid);
	LiveOffer[playerid] = 999;
	TalkingLive[playerid] = 255;
 	LiveOfferls[playerid] = 999;
 	LiveOfferlv[playerid] = 999;
	TalkingLivels[playerid] = 255;
	TalkingLivelv[playerid] = 255;
	KillTimer(Timerkk[playerid]);
	switch(PlayerInfo[killerid][pMember])
	{
	    case 0,4..6,8,9,11..18,20,21..40:
	    {
	        PlayerInfo[killerid][pLabiding] -= 2;
			PlayerInfo[killerid][pKills] += 1;
		}
	}
	if(PlayerInfo[playerid][pMadWant] > 0)
	{
	    if(IsACop(killerid))
	    {
            if(!IsAArm(killerid) && !IsACop(killerid) && PlayerPaintballing[killerid] != 1)
			{
				PlayerInfo[playerid][pJailed] = 1;
	        	if(PlayerInfo[playerid][pMadWant] == 1)
	        	{
	            	DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
                	PlayerInfo[playerid][pJailTime] = 600;
                	PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 600 секунд!");
					SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 600 секунд!");
				}
				else if(PlayerInfo[playerid][pMadWant] == 2)
	        	{
	            	DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pJailTime] = 1200;
					PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 1200 секунд!");
					SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 1200 секунд!");
				}
				else if(PlayerInfo[playerid][pMadWant] == 3)
	        	{
	            	DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pJailTime] = 1800;
					PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 1800 секунд!");
                	SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 1800 секунд!");
				}
				else if(PlayerInfo[playerid][pMadWant] == 4)
	        	{
					DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pJailTime] = 2400;
					PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 2400 секунд!");
					SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 2400 секунд!");
				}
				else if(PlayerInfo[playerid][pMadWant] == 5)
	        	{
					DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pJailTime] = 3000;
					PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 3000 секунд!");
					SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 3000 секунд!");
				}
				else if(PlayerInfo[playerid][pMadWant] >= 6)
	     	   	{
	      	      	DelGun(playerid);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pJailTime] = 3600;
					PlayerInfo[playerid][pMadWant] = 0;
					SetPlayerInterior(playerid, 6);
					SetPlayerWantedLevel(playerid, 0);
					SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
					SendClientMessage(playerid,COLOR_LIGHTRED, "Вы посажены в тюрьму на 3600 секунд!");
					SendClientMessage(killerid,0x6495EDFF, "Вы посадили преступника на 3600 секунд!");
				}
			}
	    }
	}
	if(killerid != INVALID_PLAYER_ID)
	{
        if(!IsAArm(killerid)&& !IsACop(killerid) && PlayerPaintballing[killerid] != 1)
		{
		    if(GetPlayerState(killerid) == 2)
			{
				SendClientMessage(killerid, COLOR_LIGHTRED, "Убийство с водительского места запрещено!");
				if(PlayerInfo[killerid][pMadWant] >= 4) PlayerInfo[killerid][pMadWant] = 6;
				else PlayerInfo[killerid][pMadWant] += 2;
				SetPlayerWantedLevel(killerid, PlayerInfo[killerid][pMadWant]);
				SendClientMessage(killerid, COLOR_WHITE, "Ваша узнаваемость повысилась");
				new string[128];
				format(string, sizeof(string), "Рация: Подозреваемый: %s. Преступление: Убийство с водительского места. Уровень розыска: %d", PlayerInfo[killerid][pName], PlayerInfo[killerid][pMadWant]);
				SendRadioMessage(1, COLOR_LIGHTRED, string);
				SendRadioMessage(2, COLOR_LIGHTRED, string);
				SendRadioMessage(10, COLOR_LIGHTRED, string);
				SendRadioMessage(21, COLOR_LIGHTRED, string);
			}
		}
		return true;
	}
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
    	if(IsPlayerConnected(playerid) && PlayerPaintballing[killerid] != 1 && !IsAArm(killerid) && !IsACop(killerid) && !PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
 			GetPlayerPos(playerid, xdeadp,ydeadp,zdeadp);
	    	SendJobMessage(9,COLOR_REDD, "Диспетчер:Покушение на убийство.Сообщает:Спутниковая система((Введите /use call чтобы принять вызов))");
   	 		GetPlayerName(playerid, victimd, sizeof(victimd));
      		GetPlayerName(killerid, murder, sizeof(murder));
       		GetWeaponName(reason, murdgun, sizeof(murdgun));
     		deathplace = CreatePickup(2908,2,xdeadp,ydeadp,zdeadp);
      		CrInProgress = true;
	 	}
    }
    for(new i = 0; i < sizeof(GZInfo); i++)
	{
    	if(hvictim[killerid] == GetPlayerID(PlayerInfo[playerid][pName]) && PlayerPaintballing[killerid] != 1 && !PlayerToKvadrat(killerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
	    	new string[100];
 			PlayerInfo[killerid][pCash] += hmoneys[killerid];
 			SendClientMessage(hclient[killerid],TEAM_AZTECAS_COLOR,"Ваш заказ был успешно выполнен");
 			format(string,sizeof(string),"Вы успешно выполнили заказ от %s на сумму %d",PlayerInfo[hclient[killerid]][pName],hmoneys[killerid]);
 			SendClientMessage(killerid,TEAM_AZTECAS_COLOR,string);
 			SendClientMessage(playerid,COLOR_RED,"Вы были убиты по заказу игрока");
 			hvictim[killerid] = -1;
 			hmoneys[killerid] = 0;
 			hclient[killerid] = -1;
 			hitmanworked[killerid] = 0;
		}
	}
	if(IsAArm(killerid))
	{
		if(IsAGang(playerid) || IsABiker(playerid))
		{
		    if(PlayerToPoint(100.0, killerid, 2746.1118,-2444.9143,13.6484) || PlayerToPoint(150.0, killerid, 204.4098,1912.7648,17.6406) || PlayerToPoint(150.0, killerid, -1409.8993,401.5589,7.1875))
		    {
		        if(PlayerToPoint(100.0, playerid, 2746.1118,-2444.9143,13.6484) || PlayerToPoint(150.0, playerid, 204.4098,1912.7648,17.6406) || PlayerToPoint(150.0, playerid, -1409.8993,401.5589,7.1875))
		        {
		            PlayerInfo[killerid][pPayCheck] += 250;
					GameTextForPlayer(killerid, "~g~+$250", 5000, 1);
				}
			}
		}
	}
	if(PlayerTalkingWith[playerid] != -1)
	{
		if(PlayerTalkingWith[playerid] < 1000)
		{
			SendClientMessage(PlayerTalkingWith[playerid], COLOR_GREY, "Связь оборвалась.");
			PlayerTalkingWith[PlayerTalkingWith[playerid]] = 255;
		}
		PlayerTalkingWith[playerid] = -1;
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        for(new i = 0; i < MaxPlayers; i++)
	        {
	            if(IsPlayerConnected(PlayerIDs[i]))
	            {
	                if(Peredpaint[PlayerIDs[i]] != 0)
	                {
	                    new string[62];
	                    format(string, sizeof(string), "%s выигрывает с %d убийствами", PlayerInfo[killerid][pName],PaintballWinnerKills);
						SendClientMessage(PlayerIDs[i], COLOR_YELLOW, string);
	                }
	            }
	        }
	    }
	    return true;
	}
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMember] == 3 && forma[killerid] == 0 || PlayerInfo[playerid][pMember] == 19 && forma[killerid] == 0)
		{
			for(new i = 0; i < sizeof(GZInfo); i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
       			{
          			forma[killerid] = 1;
             		PlayerInfo[playerid][pModel] = 252;
              		SendClientMessage(playerid, COLOR_REDD, "Вы потеряли армейскую форму");
                	SendClientMessage(killerid, COLOR_GREEN, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
	                PlayerInfo[killerid][pLabiding] -= 2;
	                SpawnPlayer(playerid);
				}
			}
		}
 		else if(IsACop(playerid))
		{
		    for(new i = 0; i < sizeof(GZInfo); i++)
		    {
		    	if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
    			{
       				PlayerInfo[killerid][pKeys] += 1;
       				PlayerInfo[playerid][pKeys] = 0;
          			SendClientMessage(playerid, COLOR_REDD, "Вы потеряли ключи от камеры");
            		SendClientMessage(killerid, COLOR_GREEN, "Вы забрали у полицейского ключи от камеры!");
              		PlayerInfo[killerid][pLabiding] -= 2;
				}
			}
	    }
	}
 	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	if(PlayerInfo[playerid][pMadWant] > 0)
	{
		PlayerInfo[playerid][pMadWant] -= 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
		SendClientMessage(playerid, COLOR_WHITE, "Ваша узнаваемость понизилась");
	}
	DelGun(playerid);
	return true;
}
public OnPlayerSpawn(playerid)
{
	SetPVarInt(playerid, "NoAB", 1);
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	PlayerInfo[playerid][pBisIn] = -1;
	PlayerPlaySound(playerid,1188,0,0,0);
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Необходимо авторизоваться");
		GKick(playerid);
		return true;
	}
	if(PlayerInfo[playerid][pMember] > 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	if(PlayerInfo[playerid][pMember] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	if(PlayerInfo[playerid][pHat] != 0) SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pHat],2,PlayerInfo[playerid][pHatX],PlayerInfo[playerid][pHatY],PlayerInfo[playerid][pHatZ],PlayerInfo[playerid][pHatRX],PlayerInfo[playerid][pHatRY],PlayerInfo[playerid][pHatRZ],1.1,1.1,1.1);
	if(PlayerInfo[playerid][pGlasses] != 0) SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pGlasses],2,PlayerInfo[playerid][pGlassesX],PlayerInfo[playerid][pGlassesY],PlayerInfo[playerid][pGlassesZ],PlayerInfo[playerid][pGlassesRX],PlayerInfo[playerid][pGlassesRY],PlayerInfo[playerid][pGlassesRZ],1.1,1.1,1.1);
	if(PlayerInfo[playerid][pMask] != 0) SetPlayerAttachedObject(playerid,2,PlayerInfo[playerid][pMask],18,PlayerInfo[playerid][pMaskX],PlayerInfo[playerid][pMaskY],PlayerInfo[playerid][pMaskZ],PlayerInfo[playerid][pMaskRX],PlayerInfo[playerid][pMaskRY],PlayerInfo[playerid][pMaskRZ],1.1,1.1,1.1);
	if(PlayerInfo[playerid][pWatchs] != 0) SetPlayerAttachedObject(playerid,5,PlayerInfo[playerid][pWatchs],5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3);
    if(PlayerInfo[playerid][pOther] != 0) SetPlayerAttachedObject(playerid,4,PlayerInfo[playerid][pOther],18,PlayerInfo[playerid][pOtherX],PlayerInfo[playerid][pOtherY],PlayerInfo[playerid][pOtherZ],PlayerInfo[playerid][pOtherRX],PlayerInfo[playerid][pOtherRY],PlayerInfo[playerid][pOtherRZ],1.1,1.1,1.1);
	PreloadAllAnimLibs(playerid);
	KillTimer(Collectionit[playerid]);
	SetPlayerScore(playerid, LevScore);
	SetPlayerSkills(playerid);
	InitLockDoors(playerid);
	SetPlayerSpawn(playerid);
	return true;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(CollectionStarted[playerid] == 1 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 478)
    {
        for(new i = 0; i < 4; i++)
        {
            if(PlayerToPoint(5.0, playerid, Venue[i][0], Venue[i][1], Venue[i][2]))
            {
                for(new f = 0; f < sizeof(FermInfo); f++)
                {
                    new string[128];
                    DisablePlayerCheckpoint(playerid);
                    new carid = GetPlayerVehicleID(playerid);
                    SetVehicleVelocity(carid, 0.0, 0.0, 0.0);
                    GetVehiclePos(carid, X12, Y12, Z12);
                    GetXYInFrontOfPlayer(playerid, X12, Y12,-3.0);
                    collection = CreatePickup(19197,23,X12,Y12,Z12+0.3);
                    WithPickup[carid] = true;
                    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(carid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
                    EngineState[carid] = false;
                    RemovePlayerFromVehicleAc(playerid);
                    SetVehicleParamsForPlayer(carid,i,0,0);
                    CollectionStarted[playerid] = 2;
                    format(string, sizeof(string), "Загружено\n{ffffff}%d / 1000",FermInfo[f][vnutricar]);
                    JobText2 = Create3DTextLabel(string, 0x5CABBDFF,X12,Y12,Z12+0.5,15.0,0,1);
                    return true;
                }
            }
        }
    }
	if(CollectionStarted[playerid] == 3 && (!GetPlayerVehicleID(playerid)))
    {
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            if(FermInfo[f][vnutricar] >= 1000)
            {
                DisablePlayerCheckpoint(playerid);
                RemovePlayerAttachedObject(playerid, 3);
                return true;
            }
            else
            {
                DisablePlayerCheckpoint(playerid);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Loop",4.0,1,0,0,0,0);
                Collectionit[playerid] = SetTimerEx("Collection", 6000, true, "d",playerid);
                return true;
            }
        }
        //return true;
	}
	if(IsPlayerInRangeOfPoint(playerid, 2, -2236.9424,130.6598,1035.4141))
	{
		if(PlayerInfo[playerid][pLevel] <= 2) return SendClientMessage(playerid,COLOR_GREY, "Можно купить RC TC только с 3 лет в штате");
	    ShowPlayerDialog(playerid,8512,DIALOG_STYLE_LIST, "Zero RC Магазин>>Покупка","RC машина(Бандит)\t\t\t[12000]\nRC самолёт(Барон)\t\t\t[23000]\nЗелёный RC вертолёт(Райдер)\t[16000]\nКрасный RC вертолёт(Гоблин)\t[16000]\nRC танк(Тайгер)\t\t\t[14000]\nГоршок с камерой\t\t\t[10000]\nИнструкция", "Купить", "Отмена");
	    RCController[playerid] = 0;
	    KillTimer(RCControlTimer);
	    return true;
	}
	new tmpcar = GetPlayerVehicleID(playerid);
	if(VertMats[playerid] == 1)
    {
		DisablePlayerCheckpoint(playerid);
		vertmatbi = 10000;
		VertMats[playerid] = 2;
		SendClientMessage(playerid, TEAM_GROVE_COLOR, "Материалы успешно загружены. Материалов в вертолёте: 10000/10000");
		SendClientMessage(playerid, COLOR_WHITE, "Отвезите материалы на Зону 51");
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
		return true;
	}
	else if(VertMats[playerid] == 2)
    {
		if(armmatbi > 99999)
		{
			SendClientMessage(playerid, COLOR_GREY, "На складе нет места");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		else if(armmatbi > 90000)
		{
		    vertmatbi = armmatbi - 90000;
			armmatbi = 100000;
		}
		else
		{
			vertmatbi -= 10000;
			armmatbi += 10000;
		}
		new string[72];
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов в вертолёте: %d/10000", vertmatbi);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "На складе Зоны 51 %d/100000 материалов", armmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		DisablePlayerCheckpoint(playerid);
  		MatsArmyCar[playerid] = 0;
  		VertMats[playerid] = 0;
		SaveMaterials();
	}
	if(VertMatslsa[playerid] == 1)
    {
		vertmatbilsa += 10000;
		new string[71];
        format(string, sizeof(string), "Материалы успешно загружены. Материалов в вертолёте: %d/10000", vertmatbilsa);
        SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
        SendClientMessage(playerid, COLOR_WHITE, "Доставьте материалы на LSA");
		VertMatslsa[playerid] = 2;
        DisablePlayerCheckpoint(playerid);
        SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
        if(vertmatbilsa >= 10000)
        {
	        VertMatslsa[playerid] = 2;
	        DisablePlayerCheckpoint(playerid);
	        SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
	        return true;
        }
    }
    else if(VertMatslsa[playerid] == 2)
    {
        if(lsamatbi >= 49999)
        {
            SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
            DisablePlayerCheckpoint(playerid);
            return true;
        }
        vertmatbilsa -= 10000;
        lsamatbi += 10000;
        new string[72];
        format(string, sizeof(string), "Материалы успешно доставлены. Материалов в вертолёте: %d/10000", vertmatbilsa);
        SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
        format(string, sizeof(string), "На складе LSA %d/50000 материалов", lsamatbi);
        SendClientMessage(playerid, COLOR_WHITE, string);
        DisablePlayerCheckpoint(playerid);
        MatsArmyCar[playerid] = 0;
		VertMatslsa[playerid] = 0;
        SaveMaterials();
        {
	        SetPlayerCheckpoint(playerid,-1469.0442,1489.7952,8.2578,14.0);
			SendClientMessage(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки материалов");
			VertMatslsa[playerid] = 1;
        }
    }
    if(PlayerIsInkasator[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы загрузились деньгами. Отправляйтесь развозить деньги по банкоматам");
		PlayerIsInkasator[playerid] = 2;
		SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		new randomize;
        randomize = random(sizeof(gInkasatorPoints));
        SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
		return true;
	}
	if(PlayerIsInkasator[playerid] == 2)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы заполнили банкомат, отправляйтесь к следующему");
		ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,0,1);
		PlayerIsInkasator[playerid] = 3;
	    new randomize;
        randomize = random(sizeof(gInkasatorPoints));
        SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
		return true;
	}
	if(PlayerIsInkasator[playerid] == 3)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы заполнили банкомат, отправляйтесь к следующему");
		ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,0,1);
		PlayerIsInkasator[playerid] = 4;
	    new randomize;
        randomize = random(sizeof(gInkasatorPoints));
        SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
		return true;
	}
	if(PlayerIsInkasator[playerid] == 4)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы заполнили банкомат, отправляйтесь к следующему");
		ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,0,1);
		PlayerIsInkasator[playerid] = 5;
	    new randomize;
        randomize = random(sizeof(gInkasatorPoints));
        SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
		return true;
	}
	if(PlayerIsInkasator[playerid] == 5)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы заполнили банкомат, отправляйтесь к следующему");
		ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,0,1);
		PlayerIsInkasator[playerid] = 6;
	    new randomize;
        randomize = random(sizeof(gInkasatorPoints));
        SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
		return true;
	}
	if(PlayerIsInkasator[playerid] == 6)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы заполнили банкомат, отправляйтесь в банк");
		ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,1);
		PlayerIsInkasator[playerid] = 7;
		SetPlayerCheckpoint(playerid,1413.3165,-1700.8553,13.5395,4);
		return true;
	}
	else if(PlayerIsInkasator[playerid] == 7)
	{
		if(PlayerToPoint(4.0,playerid,1413.3165,-1700.8553,13.5395))  
		{
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,0x26BF99AA,"Вы предоставили отчет и закончили ваш рабочий день. Заработано: 3000 вирт");
			SendClientMessage(playerid,COLOR_WHITE,"Деньги будут перечислены на ваш счёт во время ближайшей зарплаты");
			RemovePlayerAttachedObject(playerid,3);
			PlayerInfo[playerid][pZp] += 3000;
			PlayerIsInkasator[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			incosjob[playerid] = 0;
			return true;
		}
	}
	if(MatsArmyCar[playerid]==1000)
	{
 		if(PlayerHaul[tmpcar-comptruck[0]][pLoad] >= 500)
		{
			SendClientMessage(playerid, COLOR_GREY,"Машина заполнена");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		PlayerHaul[tmpcar-comptruck[0]][pLoad] += 500;
		new string[50];
		format(string, sizeof(string), "Продукты загружены. Продуктов в машине: %d/500",PlayerHaul[tmpcar-comptruck[0]][pLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /sellprods, чтобы начать развозку. Примечание: Нужно быть у бизнеса");
	}
	if(MatsArmyCar[playerid] == 2525)
	{
 		if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] >= 1000)
		{
			SendClientMessage(playerid, COLOR_GREY,"Машина заполнена");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		PlayersHaul[tmpcar-benzovoz[0]][sLoad] += 1000;
		new string[50];
		format(string, sizeof(string), "Бензин загружен. Бензина в прицепе: %d/1000",PlayersHaul[tmpcar-benzovoz[0]][sLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /sellgas, чтобы начать развозку. Примечание: Нужно быть у бизнеса");
	}
	if(CP[playerid] == 500)
	{
		SendClientMessage(playerid, COLOR_GREEN, "Вы получили премию, в размере: 600 вирт");
		PlayerInfo[playerid][pCash] += 600;
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	else if(MatsArmyCar[playerid] == 20)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] >= 5000 || armmatbi <= 1000)
		{
			SendClientMessage(playerid, COLOR_GREY,"Склад пуст или грузовик полон");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] += 5000;
		format(string, sizeof(string), "Материалы успешно загружены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		armmatbi -= 5000;
		DisablePlayerCheckpoint(playerid);
		format(string, sizeof(string), "Склад Зоны 51: %d/100000", armmatbi);
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /carm, чтобы начать развозку материалов");
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 35)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || sfpdmats >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад SFPD заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		new string[55];
		sfpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад SFPD: %d/50000", sfpdmats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		CP[playerid] = 0;
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 150)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lvpdmats >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад LVPD заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lvpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LVPD: %d/50000", lvpdmats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 151)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lsamatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад LSA заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lsamatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LSA: %d/50000", lsamatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 60)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || ssmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Sons of Silence MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		ssmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Sons of Silence MC: %d/50000", ssmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 61)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || hamcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Hell's Angels MC заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		hamcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Hell's Angels MC: %d/50000", hamcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 62)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || omcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Outlaws MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		omcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Outlaws MC: %d/50000", omcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 63)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || wmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Warlocks MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		wmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Warlocks MC: %d/50000", wmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 64)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || hwmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Highwayman MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		hwmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Highwayman MC: %d/50000", hwmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 65)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || fsmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Free Souls MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		fsmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Free Souls MC: %d/50000", fsmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 66)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || pmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Pagans MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		pmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Pagans MC: %d/50000", pmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 67)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || mmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Mongols MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		mmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Mongols MC: %d/50000", mmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid ] == 68)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || vmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Vagos MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		vmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Vagos Mc: %d/50000", vmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 69)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || bmcmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад Bandidos MC заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		bmcmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Bandidos MC: %d/50000", bmcmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 100)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || ballasmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Склад The Ballas заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		ballasmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Ballas: %d/50000", ballasmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 101)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || vagosmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Склад The Vagos заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		vagosmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Vagos: %d/50000", vagosmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 102)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || groovmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад The Grove заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		groovmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Grove: %d/50000", groovmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 103)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || aztekmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Склад The Aztek заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		aztekmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Aztek: %d/50000", aztekmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 104)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || rifamatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Склад The Rifa заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		rifamatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад The Rifa: %d/50000", rifamatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 31)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || lspdmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад LSPD заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		lspdmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад LSPD: %d/50000", lspdmatbi);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 24)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || fbimats >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад FBI заполнен либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		fbimats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Материалы успешно доставлены. Материалов: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад FBI: %d/50000", fbimats);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 21)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatbi >= 49999)
		{
			SendClientMessage(playerid, COLOR_GREY,"Cклад Армии SF заполнен, или грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Оружие успешно доставлено. Оружие: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Армии SF: %d/50000", armmatsf);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 25)
	{
		if(MatHaul[tmpcar-gunscar[0]][mLoad] == 0 || armmatsf >= 49999)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Склад армии SF заполнен, либо грузовик пуст");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		new string[55];
		MatHaul[tmpcar-gunscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid] = 0;
		format(string, sizeof(string), "Оружие успешно доставлено. Оружие: %d/5000", MatHaul[tmpcar-gunscar[0]][mLoad]);
		SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		format(string, sizeof(string), "Склад Армии SF: %d/50000", armmatsf);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SaveMaterials();
	}
	if(IsPlayerInDynamicCP(playerid, HelpCP[playerid]) && CollectionStarted[playerid] == 0)
	{
		if(showhelp[playerid] == 0) return ShowPlayerDialog(playerid, 10032, DIALOG_STYLE_MSGBOX, "Помощь", "Здравствуйте, я объясню вам как играть на этом сервере.\nЧто вам делать, куда идти в данный момент", "Далее", "Отмена");
	}
	if(IsPlayerInDynamicCP(playerid, HelpCP2[playerid]) && CollectionStarted[playerid] == 0)
	{
		if(showhelp[playerid] == 0) return ShowPlayerDialog(playerid, 10032, DIALOG_STYLE_MSGBOX, "Помощь", "Здравствуйте, я объясню Вам как играть на этом сервере.\nЧто вам делать, куда идти в данный момент", "Далее", "Отмена");
	}
	if(IsPlayerInDynamicCP(playerid, CarLeasing[playerid]) && CollectionStarted[playerid] == 0)
	{
        if(provas[playerid] == 0)
        {
		    if(PlayerInfo[playerid][pCarLic] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете водительские права");
		    ShowPlayerDialog(playerid,10022,DIALOG_STYLE_MSGBOX, "Экзамен по вождению","Приветствуем вас в Автошколе.\nЕсли вы хотите сдать на права, нажмите Далее", "Далее", "Отмена");
		    return true;
        }
        else if(provas[playerid] == 1)
        {
			if(provadat[playerid] == 1)
			{
                SendClientMessage(playerid, COLOR_WHITE, "Поздравляем вас! Вы сдали экзамен по вождению");
	            SendClientMessage(playerid, TEAM_GROVE_COLOR, "Подсказка: Теперь вы можете устроить на работу в Мэрии << Используйте /GPS >>");
	            SendClientMessage(playerid, TEAM_GROVE_COLOR, "Подсказка: Работа водителя автобуса очень интересная и прибыльная (зарплата от государства + деньги за билеты)");
	            SendClientMessage(playerid, COLOR_WHITE, "Удачного дня!");
	            PlayerInfo[playerid][pCarLic] = 1;
	            provas[playerid] = 0;
	            provadat[playerid] = 0;
            }
			else if(provadat[playerid] == 2)
			{
			    SendClientMessage(playerid, COLOR_RED, "Вы не достаточно хорошо водите, чтобы получить права");
			    provas[playerid] = 0;
	            provadat[playerid] = 0;
            }
        }
	}
	if(PicCP[playerid] == 2 && CollectionStarted[playerid] == 0)
	{
		if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен не может устроиться на эту работу");
		ShowPlayerDialog(playerid, 10092, DIALOG_STYLE_MSGBOX, "Приём на работу", "Вы хотите посмотреть список доступных работ?", "Да", "Нет");
		return true;
	}
	if(PicCP[playerid] == 2 && CollectionStarted[playerid] == 0)
	{
		if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен не может устроиться на эту работу");
		ShowPlayerDialog(playerid, 10092, DIALOG_STYLE_MSGBOX, "Приём на работу", "Вы хотите посмотреть список доступных работ?", "Да", "Нет");
		return true;
	}
	else if(CP[playerid] == 0)
	{
		DisablePlayerCheckpoint(playerid);
	}
	if(GruzCP[playerid] == 1 && PlayerToPoint(2.0,playerid,600.4599,868.0458,-42.9609))
	{
		DisablePlayerCheckpoint(playerid);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
	}
	if(Works[playerid])
	{
		if(JobCP[playerid] == 1 && IsPlayerInRangeOfPoint(playerid,2.0,2230.3528,-2286.1353,14.3751))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,2172.4146,-2255.5405,13.3041,1.5);
    			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
				SetPlayerAttachedObject(playerid, 7 , 2060, 1,0.11,0.36,0.0,0.0,90.0);
				JobCP[playerid] = 2;
				Bags[playerid] = 1;
				WithBag[playerid] = 1;
			}
		}
		if(JobCP[playerid] == 2 && IsPlayerInRangeOfPoint(playerid,2.0,2172.4146,-2255.5405,13.3041))
		{
	    	if(!IsPlayerInAnyVehicle(playerid))
			{
				new string[30];
				JobAmmount[playerid] ++;
				format(string,sizeof(string), "Перенесено мешков: {ffffff}%d",JobAmmount[playerid]);
				SendClientMessage(playerid,COLOR_GREEN,string);
				DisablePlayerCheckpoint(playerid);
				Bags[playerid] = 0;
				WithBag[playerid] = 0;
   				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
				if(IsPlayerAttachedObjectSlotUsed(playerid,7)) RemovePlayerAttachedObject(playerid,7);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
			}
		}
	}
	else if(CP[playerid] == 500)
	{
		PlayerInfo[playerid][pCash] += 600;
		CP[playerid] = 0;
		GameTextForPlayer(playerid,"~g~+600", 5000, 1);
		DisablePlayerCheckpoint(playerid);
 	}
	else
	{
		switch(gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
		    }
		    case CHECKPOINT_FIRE:
            {
                PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
                DisablePlayerCheckpoint(playerid);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
                SendClientMessage(playerid, COLOR_WHITE, "Теперь вы можете тушить пожар (( Огнетушителем или на Пожарной машине ))");
            }
		}
	}
	return true;
}
public OnPlayerLeaveCheckpoint(playerid)
{
	return true;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
 	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(LessonCar[playerid] == 1)
		{
	    	switch(pLessonCar[playerid])
			{
				case CHECKPOINT_1:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~1/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,-2047.1299,-82.7046,32.9072,-2021.2046,-72.2330,34.9150, 5.0);
				}
				case CHECKPOINT_2:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~2/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,-2021.2046,-72.2330,34.9150,-2004.2841,-56.4547,34.9083, 5.0);
				}
				case CHECKPOINT_3:
				{
	                GameTextForPlayer(playerid,"~b~~h~~h~3/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.2841,-56.4547,34.9083,-2004.3656,63.5635,29.0903, 5.0);
				}
				case CHECKPOINT_4:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~4/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.3656,63.5635,29.0903,-2003.5389,169.0928,27.2806, 5.0);
				}
				case CHECKPOINT_5:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~5/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,-2003.5389,169.0928,27.2806,-1999.3879,309.9337,34.7228, 5.0);
				}
				case CHECKPOINT_6:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~6/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,-1999.3879,309.9337,34.7228,-1999.1091,488.9284,34.7584, 5.0);
				}
				case CHECKPOINT_7:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~7/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,-1999.1091,488.9284,34.7584,-2020.0480,506.7851,34.7583, 5.0);
				}
				case CHECKPOINT_8:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~8/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.0480,506.7851,34.7583,-2123.5198,506.4044,34.7593, 5.0);
				}
				case CHECKPOINT_9:
				{

				    GameTextForPlayer(playerid,"~b~~h~~h~9/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,-2123.5198,506.4044,34.7593,-2147.1807,490.5033,34.7583, 5.0);
				}
				case CHECKPOINT_10:
				{

			    	GameTextForPlayer(playerid,"~b~~h~~h~10/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,-2147.1807,490.5033,34.7583,-2149.1292,407.9551,34.8205, 5.0);
				}
				case CHECKPOINT_11:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~11/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,-2149.1292,407.9551,34.8205,-2148.8479,229.6411,34.9152, 5.0);
				}
				case CHECKPOINT_13:
				{
	                GameTextForPlayer(playerid,"~b~~h~~h~12/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,-2148.8479,229.6411,34.9152,-2165.5833,210.6641,34.9144, 5.0);
				}
				case CHECKPOINT_14:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~13/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,-2165.5833,210.6641,34.9144,-2233.7517,210.4253,34.9137, 5.0);
				}
				case CHECKPOINT_15:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~14/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,-2233.7517,210.4253,34.9137,-2249.0859,233.7054,34.9071, 5.0);
				}
				case CHECKPOINT_16:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~15/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 0,-2249.0859,233.7054,34.9071,-2261.7542,372.9274,33.2418, 5.0);
				}
				case CHECKPOINT_17:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~16/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,-2261.7542,372.9274,33.2418,-2359.8423,484.6871,30.3849, 5.0);
				}
				case CHECKPOINT_18:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~17/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,-2359.8423,484.6871,30.3849,-2383.4255,790.3303,34.7652, 5.0);
				}
				case CHECKPOINT_19:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~18/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,-2383.4255,790.3303,34.7652,-2364.3657,805.9047,36.6098, 5.0);
				}
				case CHECKPOINT_20:
				{
			    	GameTextForPlayer(playerid,"~b~~h~~h~19/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,-2364.3657,805.9047,36.6098,-2217.7344,806.2595,49.0387, 5.0);
				}
				case CHECKPOINT_21:
				{
				    GameTextForPlayer(playerid, "~b~~h~~h~20/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 0,-2217.7344,806.2595,49.0387,-2095.3938,806.2051,69.1558, 5.0);
				}
				case CHECKPOINT_22:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~21/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;
					SetPlayerRaceCheckpoint(playerid, 0,-2095.3938,806.2051,69.1558,-2023.7908,806.1768,47.0934, 5.0);
				}
				case CHECKPOINT_23:
				{
	                GameTextForPlayer(playerid,"~b~~h~~h~22/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,-2023.7908,806.1768,47.0934,-2000.5417,825.1227,45.0399, 5.0);
				}
				case CHECKPOINT_24:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~23/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,-2000.5417,825.1227,45.0399,-2000.4559,901.5263,45.0433, 5.0);
				}
				case CHECKPOINT_25:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~24/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,-2000.4559,901.5263,45.0433,-1983.4757,917.6733,45.0391, 5.0);
				}
				case CHECKPOINT_26:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~25/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,-1983.4757,917.6733,45.0391,-1859.3486,917.3110,34.7522, 5.0);
				}
				case CHECKPOINT_27:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~26/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 0,-1859.3486,917.3110,34.7522,-1738.9817,917.5093,24.4839, 5.0);
				}
				case CHECKPOINT_28:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~27/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_29;
					SetPlayerRaceCheckpoint(playerid, 0,-1738.9817,917.5093,24.4839,-1584.8662,917.9406,7.2808, 5.0);
				}
				case CHECKPOINT_29:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~28/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 0,-1584.8662,917.9406,7.2808,-1541.6730,928.6280,6.7821, 5.0);
				}
				case CHECKPOINT_30:
				{
			    	GameTextForPlayer(playerid,"~b~~h~~h~29/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_31;
					SetPlayerRaceCheckpoint(playerid, 0,-1541.6730,928.6280,6.7821,-1540.8986,962.7398,6.7813, 5.0);
				}
				case CHECKPOINT_31:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~30/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_32;
					SetPlayerRaceCheckpoint(playerid, 0,-1540.8986,962.7398,6.7813,-1586.9012,1029.1655,6.7806, 5.0);
				}
				case CHECKPOINT_32:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~31/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_33;
					SetPlayerRaceCheckpoint(playerid, 0,-1586.9012,1029.1655,6.7806,-1634.6927,1240.9236,6.7836, 5.0);
				}
				case CHECKPOINT_33:
				{
	                GameTextForPlayer(playerid,"~b~~h~~h~32/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_34;
					SetPlayerRaceCheckpoint(playerid, 0,-1634.6927,1240.9236,6.7836,-1733.3973,1340.2684,6.7808, 5.0);
				}
				case CHECKPOINT_34:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~33/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_35;
					SetPlayerRaceCheckpoint(playerid, 0,-1733.3973,1340.2684,6.7808,-1822.0417,1375.2615,6.7819, 5.0);
				}
				case CHECKPOINT_35:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~34/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_36;
					SetPlayerRaceCheckpoint(playerid, 0,-1822.0417,1375.2615,6.7819,-1930.4690,1306.2540,6.7826, 5.0);
				}
				case CHECKPOINT_36:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~35/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_37;
					SetPlayerRaceCheckpoint(playerid, 0,-1930.4690,1306.2540,6.7826,-2025.0059,1304.6970,6.8203, 5.0);
				}
				case CHECKPOINT_37:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~36/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_38;
					SetPlayerRaceCheckpoint(playerid, 0,-2025.0059,1304.6970,6.8203,-2062.1274,1281.8025,7.5473, 5.0);
				}
				case CHECKPOINT_38:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~37/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_40;
					SetPlayerRaceCheckpoint(playerid, 0,-2062.1274,1281.8025,7.5473,-2270.4485,1204.1831,53.2871, 5.0);
				}
				case CHECKPOINT_40:
				{
			    	GameTextForPlayer(playerid,"~b~~h~~h~38/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_41;
					SetPlayerRaceCheckpoint(playerid, 0,-2270.4485,1204.1831,53.2871,-2267.0386,1095.9159,79.6025, 5.0);
				}
				case CHECKPOINT_41:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~39/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_42;
					SetPlayerRaceCheckpoint(playerid, 0,-2267.0386,1095.9159,79.6025,-2266.0283,990.1443,75.1669, 5.0);
				}
				case CHECKPOINT_42:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~40/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_43;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.0283,990.1443,75.16690,-2266.5266,807.7878,49.0438, 5.0);
				}
				case CHECKPOINT_43:
				{
	                GameTextForPlayer(playerid,"~b~~h~~h~41/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_44;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.5266,807.7878,49.0438,-2266.6682,585.7730,36.3168, 5.0);
				}
				case CHECKPOINT_44:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~42/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_45;
					SetPlayerRaceCheckpoint(playerid, 0,-2266.6682,585.7730,36.3168,-2242.5308,562.4396,34.75896, 5.0);
				}
				case CHECKPOINT_45:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~43/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_46;
					SetPlayerRaceCheckpoint(playerid, 0,-2242.5308,562.4396,34.7589,-2229.0964,540.6600,34.7586, 5.0);
				}
				case CHECKPOINT_46:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~44/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_47;
					SetPlayerRaceCheckpoint(playerid, 0,-2229.0964,540.6600,34.7586,-2209.9031,506.0080,34.7579, 5.0);
				}
				case CHECKPOINT_47:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~45/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_48;
					SetPlayerRaceCheckpoint(playerid, 0,-2209.9031,506.0080,34.7579,-2102.6755,501.8567,34.7602, 5.0);
				}
				case CHECKPOINT_48:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~46/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_49;
					SetPlayerRaceCheckpoint(playerid, 0,-2102.6755,501.8567,34.7602,-2020.8113,501.6382,34.7586, 5.0);
				}
				case CHECKPOINT_49:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~47/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_50;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.8113,501.6382,34.7586,-2007.8937,491.4999,34.7592, 5.0);
				}
				case CHECKPOINT_50:
				{
			    	GameTextForPlayer(playerid,"~b~~h~~h~48/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_51;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.8937,491.4999,34.7592,-2009.4333,253.1356,30.0010, 5.0);
				}
				case CHECKPOINT_51:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~49/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_52;
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4333,253.1356,30.0010,-2008.9186,60.0073,29.5201, 5.0);
				}
				case CHECKPOINT_52:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~50/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_53;
					SetPlayerRaceCheckpoint(playerid, 0,-2008.9186,60.0073,29.5201,-2008.8951,-83.7164,35.0135, 5.0);
				}
				case CHECKPOINT_53:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~51/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_54;
					SetPlayerRaceCheckpoint(playerid, 0,-2008.8951,-83.7164,35.0135,-2007.6554,-162.2175,35.4526, 5.0);
				}
				case CHECKPOINT_54:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~52/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_55;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.6554,-162.2175,35.4526,-2007.6746,-276.8484,35.0604, 5.0);
				}
				case CHECKPOINT_55:
				{
			    	GameTextForPlayer(playerid,"~b~~h~~h~53/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_56;
					SetPlayerRaceCheckpoint(playerid, 0,-2007.6746,-276.8484,35.0604,-2038.9626,-289.8528,35.1186, 5.0);
				}
				case CHECKPOINT_56:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~54/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_57;
					SetPlayerRaceCheckpoint(playerid, 0,-2038.9626,-289.8528,35.1186,-2195.3115,-290.1100,35.0690, 5.0);
				}
				case CHECKPOINT_57:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~55/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_58;
					SetPlayerRaceCheckpoint(playerid, 0,-2195.3115,-290.1100,35.0690,-2205.7070,-272.5776,35.0689, 5.0);
				}
				case CHECKPOINT_58:
				{
	                GameTextForPlayer(playerid, "~b~~h~~h~56/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_59;
					SetPlayerRaceCheckpoint(playerid, 0,-2205.7070,-272.5776,35.0689,-2205.3076,-204.0107,35.0867, 5.0);
				}
				case CHECKPOINT_59:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~57/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_60;
					SetPlayerRaceCheckpoint(playerid, 0,-2205.3076,-204.0107,35.0867,-2236.1755,-187.5369,34.9148, 5.0);
				}
				case CHECKPOINT_60:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~58/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_61;
					SetPlayerRaceCheckpoint(playerid, 0,-2236.1755,-187.5369,34.9148,-2251.8374,-86.5177,34.9136, 5.0);
				}
				case CHECKPOINT_61:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~59/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_62;
					SetPlayerRaceCheckpoint(playerid, 0,-2251.8374,-86.5177,34.9136,-2234.4314,-72.5208,34.9151, 5.0);
				}
				case CHECKPOINT_62:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~60/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_63;
					SetPlayerRaceCheckpoint(playerid, 0,-2234.4314,-72.5208,34.9151,-2083.7751,-72.7984,34.9150, 5.0);
				}
				case CHECKPOINT_63:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~61/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 0,-2083.7751,-72.7984,34.9150,-2046.7074,-84.9175,34.9071, 5.0);
				}
				case CHECKPOINT_64:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~62/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_65;
					SetPlayerRaceCheckpoint(playerid, 0,-2046.7074,-84.9175,34.9071,-2052.1284,-117.4562,35.1445, 5.0);
				}
				case CHECKPOINT_65:
				{
				    GameTextForPlayer(playerid,"~b~~h~~h~63/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_66;
					SetPlayerRaceCheckpoint(playerid, 0,-2052.1284,-117.4562,35.1445,-2077.2036,-126.5695,35.1866, 5.0);
				}
				case CHECKPOINT_66:
				{
			    	GameTextForPlayer(playerid, "~b~~h~~h~64/65", 5000, 4);
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_67;
					SetPlayerRaceCheckpoint(playerid, 1,-2077.2036,-126.5695,35.1866,0.0,0.0,0.0, 5.0);
				}
				case CHECKPOINT_67:
				{
				    new Float:health;
    				GetVehicleHealth(GetPlayerVehicleID(playerid),health);
    				if (health >= 850)
    				{
    					JobCarTime[playerid] = 0;
		    			LessonCar[playerid] = 0;
       					LessonStat[playerid] = 0;
		    			TakingLesson[playerid] = 0;
						provas[playerid] = 1;
						provadat[playerid] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GREEN, "Пройдите в здание автошколы");
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	  				}
	  				else
	   				{
                        provas[playerid] = 1;
                        provadat[playerid] = 2;
 						JobCarTime[playerid] = 0;
		    			LessonCar[playerid] = 0;
       					LessonStat[playerid] = 0;
		    			TakingLesson[playerid] = 0;
		    			SendClientMessage(playerid, COLOR_GREEN, "Пройдите в здание автошколы");
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	   				}
				}
			}
		}
       	if(SeitCar[playerid] == 1)
        {
            switch(Seitfers[playerid])
            {
            	case FCHECKPOINT_0:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_1;
                    SetPlayerRaceCheckpoint(playerid, 0,-324.9671,-1413.2345,15.1417,-319.7507,-1353.2788,10.4477, 5.0);
                }
            	case FCHECKPOINT_1:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_2;
                    SetPlayerRaceCheckpoint(playerid, 0,-319.7507,-1353.2788,10.4477,-302.8108,-1330.5516,9.3634, 5.0);
                }
            	case FCHECKPOINT_2:
                {

                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_3;
                    SetPlayerRaceCheckpoint(playerid, 0,-302.8108,-1330.5516,9.3634,-304.8828,-1398.6143,14.0514, 5.0);
                }
            	case FCHECKPOINT_3:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_4;
                    SetPlayerRaceCheckpoint(playerid, 0,-304.8828,-1398.6143,14.0514,-292.4781,-1411.9258,13.7231, 5.0);
                }
            	case FCHECKPOINT_4:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_5;
                    SetPlayerRaceCheckpoint(playerid, 0,-292.4781,-1411.9258,13.7231,-284.0013,-1345.8210,8.6990, 5.0);
                }
            	case FCHECKPOINT_5:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_6;
                    SetPlayerRaceCheckpoint(playerid, 0,-284.0013,-1345.8210,8.6990,-265.3550,-1328.0093,9.5660, 5.0);
                }
            	case FCHECKPOINT_6:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_7;
                    SetPlayerRaceCheckpoint(playerid, 0,-265.3550,-1328.0093,9.5660,-265.2292,-1400.7456,11.8385, 5.0);
                }
            	case FCHECKPOINT_7:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_8;
                    SetPlayerRaceCheckpoint(playerid, 0,-265.2292,-1400.7456,11.8385,-243.2095,-1414.9027,8.8774, 5.0);
                }
            	case FCHECKPOINT_8:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_9;
                    SetPlayerRaceCheckpoint(playerid, 0,-243.2095,-1414.9027,8.8774,-239.2340,-1333.6256,9.6473, 5.0);
                }
            	case FCHECKPOINT_9:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_10;
                    SetPlayerRaceCheckpoint(playerid, 0,-239.2340,-1333.6256,9.6473,-216.5273,-1397.2335,8.1476, 5.0);
                }
            	case FCHECKPOINT_10:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_11;
                    SetPlayerRaceCheckpoint(playerid, 0,-216.5273,-1397.2335,8.1476,-193.9838,-1407.4570,5.0371, 5.0);
                }
            	case FCHECKPOINT_11:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_12;
                    SetPlayerRaceCheckpoint(playerid, 0,-193.9838,-1407.4570,5.0371,-182.2128,-1328.1821,7.4454, 5.0);
                }
            	case FCHECKPOINT_12:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_13;
                    SetPlayerRaceCheckpoint(playerid, 0,-182.2128,-1328.1821,7.4454,-295.1464,-1324.0284,9.6751, 5.0);
                }
            	case FCHECKPOINT_13:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_14;
                    SetPlayerRaceCheckpoint(playerid, 0,-295.1464,-1324.0284,9.6751,-324.0269,-1424.3162,15.7661, 5.0);
                }
            	case FCHECKPOINT_14:
                {
                    Seitferma0[playerid]++;
                    Seitfers[playerid] = FCHECKPOINT_15;
                    SetPlayerRaceCheckpoint(playerid, 1,-324.0269,-1424.3162,15.7661,0.0,0.0,0.0, 5.0);
                }
            	case FCHECKPOINT_15:
                {
                    for(new f = 0; f < sizeof(FermInfo); f++)
                    {
                        new string[128];
                        FermInfo[f][fzernozakup] -= 5000;
                        FermInfo[f][fzernoseiano] += 5000;
                        if(FermInfo[f][fzernozakup] < 0 ){FermInfo[f][fzernozakup] = 0;}
                        if(FermInfo[f][fzernoseiano] > 5001){FermInfo[f][fzernoseiano] = 5000;}
                        GameTextForPlayer(playerid, "~w~5000/5000", 100, 1);
                        new prod[10];
                        switch(FermInfo[f][fProdukt])
                        {
							case 0: { prod = "нет"; }
							case 1: { prod = "хлеб"; }
							case 2: { prod = "марихуану"; }
							case 3: { prod = "картошку"; }
                        }
                        SeitCar[playerid] = 0;
                        Seitferma0[playerid] = 0;
                        DisablePlayerRaceCheckpoint(playerid);
                        format(string, sizeof(string), "Вы успешно посадили %s, на поле 5000/5000, на складе %d /10000",prod,FermInfo[f][fzernozakup]);
                        SendClientMessage(playerid, COLOR_GREEN, string);
                    }
                }
            }
        }
        if(MusorJob[playerid] == 1)
        {
            switch(pMusor[playerid])
            {
				case CHECKPOINT_1:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,1536.0526,-1844.1660,13.5469,1142.8920,-1328.3668,13.6188, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор возле {F30F40}Мэрии");
				}
				case CHECKPOINT_2:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,1142.8920,-1328.3668,13.6188,379.0806,-2034.0837,7.8301, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор возле {F30F40}Больницы ЛС");
				}
				case CHECKPOINT_3:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,379.0806,-2034.0837,7.8301,-84.6175,-1186.2795,1.7500, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор возле {F30F40}Парка атракционов на пирсе");
				}
				case CHECKPOINT_4:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-84.6175,-1186.2795,1.7500,1740.0730,-2287.7793,13.5324, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор возле {F30F40}Заправки");
				}
                case CHECKPOINT_5:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,1740.0730,-2287.7793,13.5324,2410.5435,-2474.4304,13.6309, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор возле {F30F40}Аэропорта ЛС");
				}
				case CHECKPOINT_6:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,2410.5435,-2474.4304,13.6309,1628.9395,-1903.0195,13.5534, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "Отвезите мусор {F30F40}на утилизацию");
				}
				case CHECKPOINT_7:
				{
					MusorCheck[playerid]++;
					pMusor[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 1,1628.9395,-1903.0195,13.5534,1664.0234,-1120.7411,23.9063, 7.0);
                    SendClientMessage(playerid,COLOR_YELLOW, "{F0F00B}Отправляйтесь в {F30F40}офис{F0F00B} и заберите свою зарплату.");
				}
				case CHECKPOINT_8:
				{
					MusorCheck[playerid]++;
					new zarplata2 = 2000 + random(1000);
                    new rabota[64];
                    format(rabota, sizeof(rabota), "Вы отвезли мусор и заработали{CC3300} %d$", zarplata2);
                    SendClientMessage(playerid, COLOR_YELLOW,rabota);
                    PlayerInfo[playerid][pCash] += zarplata2;
                    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
                    MusorJob[playerid] = 0;
                    return true;
				}
		    }
		}
		if(TrainJob[playerid] == 1)
		{
            switch(pTrain[playerid])
            {
                case CHECKPOINT_1:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 1,2864.7500,1321.6504,12.1256,1746.2073,2664.7842,12.1256, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 1;
				}
				case CHECKPOINT_2:
				{
				    if(BusStop[playerid] == 1)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_3;
						SetPlayerRaceCheckpoint(playerid, 0,1746.2073,2664.7842,12.1256,1396.5754,2632.2500,12.1256, 7.0);
					}
				}
				case CHECKPOINT_3:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 1,1396.5754,2632.2500,12.1256,742.6328,1755.4784,7.1046, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 2;
				}
				case CHECKPOINT_4:
				{
				    if(BusStop[playerid] == 2)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_5;
						SetPlayerRaceCheckpoint(playerid, 0,742.6328,1755.4784,7.1046,580.4129,1272.4216,13.2034, 7.0);
					}
				}
				case CHECKPOINT_5:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 1,580.4129,1272.4216,13.2034,-1610.2450,505.2649,28.6208, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 3;
				}
				case CHECKPOINT_6:
				{
				    if(BusStop[playerid] == 3)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Охлаждаем двигатель.");
						ProxDetector(10.0, playerid, "Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_7;
						SetPlayerRaceCheckpoint(playerid, 0,-1610.2450,505.2649,28.6208,-1944.3750,99.7487,27.0006, 7.0);
					}
				}
				case CHECKPOINT_7:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 1,-1944.3750,99.7487,27.0006,512.1183,-1140.7336,10.5256, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 4;
				}
				case CHECKPOINT_8:
				{
				    if(BusStop[playerid] == 4)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_9;
						SetPlayerRaceCheckpoint(playerid, 0,512.1183,-1140.7336,10.5256,842.1416,-1391.7030,-0.2006, 7.0);
					}
				}
				case CHECKPOINT_9:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 1,842.1416,-1391.7030,-0.2006,1288.4905,-1882.5579,-0.8676, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 5;
				}
				case CHECKPOINT_10:
				{
				    if(BusStop[playerid] == 5)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_11;
						SetPlayerRaceCheckpoint(playerid, 0,1288.4905,-1882.5579,-0.8676,1773.6536,-1953.8021,14.8756, 7.0);
					}
				}
				case CHECKPOINT_11:
				{
                    AutoBusCheck[playerid]++;
				    pTrain[playerid] = CHECKPOINT_12;
					SetPlayerRaceCheckpoint(playerid, 1,1773.6536,-1953.8021,14.8756,2764.7500,879.0110,12.2506, 7.0);
					SendClientMessage(playerid, COLOR_GREEN, "Начинайте тормозить");
					BusStop[playerid] = 6;
				}
				case CHECKPOINT_12:
				{
				    if(BusStop[playerid] == 6)
				    {
                    	TrainStopTime[playerid] = 31;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Поезд отъезжает через 30 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pTrain[playerid] = CHECKPOINT_1;
						SetPlayerRaceCheckpoint(playerid, 0,2764.7500,879.0110,12.2506,2864.7500,1321.6504,12.1256, 7.0);
					}
				}
	        }
		}
		if(AutoBusJob[playerid] == 1)
		{
	    	switch(pAutoBusLS[playerid])
			{
				case CHECKPOINT_1:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,1638.5587,-1163.1345,23.8965,1699.7222,-1163.1721,23.6563, 7.0);
				}
				case CHECKPOINT_2:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 1,1699.7222,-1163.1721,23.6563,1076.8751,-1850.1189,13.5237, 7.0);
					BusStop[playerid] = 1;
				}
				case CHECKPOINT_3:
				{
				    if(BusStop[playerid] == 1)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_4;
						SetPlayerRaceCheckpoint(playerid, 0,1826.2285,-1183.2179,23.6299,1845.1951,-1187.5983,23.6531, 7.0);
					}
				}
				case CHECKPOINT_4:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,1845.1951,-1187.5983,23.6531,1845.3867,-1338.3827,13.3946, 7.0);
				}
				case CHECKPOINT_5:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,1845.3867,-1338.3827,13.3946,1846.2590,-1479.7095,13.3744, 7.0);
				}
				case CHECKPOINT_6:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,1846.2590,-1479.7095,13.3744,1819.1733,-1596.4869,13.3585, 7.0);
				}
				case CHECKPOINT_7:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,1819.1733,-1596.4869,13.3585,1819.1627,-1719.6196,13.3828, 7.0);
				}
				case CHECKPOINT_8:
                {
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,1819.1627,-1719.6196,13.3828,1818.7792,-1810.9220,13.4014, 7.0);
				}
				case CHECKPOINT_9:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 1,1818.7792,-1810.9220,13.4014,1294.8989,-1836.0220,13.5162, 7.0);
					BusStop[playerid] = 2;
				}
				case CHECKPOINT_10:
				{
				    if(BusStop[playerid] == 2)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_11;
						SetPlayerRaceCheckpoint(playerid, 0,1818.8003,-1905.8124,13.3966,1846.1039,-1934.7594,13.3768, 7.0);
					}
				}
				case CHECKPOINT_11:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_13;
					SetPlayerRaceCheckpoint(playerid, 0,1846.1039,-1934.7594,13.3768,1945.5770,-1935.1366,13.3828, 7.0);
				}
				case CHECKPOINT_13:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,1945.5770,-1935.1366,13.3828,1958.8378,-1953.4496,13.7421, 7.0);
				}
				case CHECKPOINT_14:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,1958.8378,-1953.4496,13.7421,1958.5356,-2032.9645,13.3828, 7.0);
				}
				case CHECKPOINT_15:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,1958.5356,-2032.9645,13.3828,1958.7772,-2098.0173,13.3902, 7.0);
				}
				case CHECKPOINT_16:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 1,1958.7772,-2098.0173,13.3902,0.0,0.0,0.0, 7.0);
					BusStop[playerid] = 3;
				}
				case CHECKPOINT_17:
				{
    				if(BusStop[playerid] == 3)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_18;
						SetPlayerRaceCheckpoint(playerid, 0,1975.8633,-2112.3513,13.3710,2085.5320,-2112.6597,13.3358, 7.0);
					}
				}
				case CHECKPOINT_18:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,2085.5320,-2112.6597,13.3358,2142.4329,-2122.1948,13.3337, 7.0);
				}
				case CHECKPOINT_19:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,2142.4329,-2122.1948,13.3337,2182.7952,-2153.2410,13.3828, 7.0);
				}
				case CHECKPOINT_20:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,2182.7952,-2153.2410,13.3828,2225.3228,-2197.1875,13.3153, 7.0);
				}
				case CHECKPOINT_21:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 1,2225.3228,-2197.1875,13.3153,1805.0760,-1614.4507,13.4869, 7.0);
					BusStop[playerid] = 4;
				}
				case CHECKPOINT_22:
				{
    				if(BusStop[playerid] == 4)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_23;
						SetPlayerRaceCheckpoint(playerid, 0,2279.2666,-2249.0049,13.5683,2305.0295,-2266.4392,13.3750, 7.0);
					}
				}
				case CHECKPOINT_23:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,2305.0295,-2266.4392,13.3750,2380.8979,-2194.2502,13.3750, 7.0);
				}
				case CHECKPOINT_24:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,2380.8979,-2194.2502,13.3750,2458.8408,-2169.5918,13.4399, 7.0);
				}
				case CHECKPOINT_25:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,2458.8408,-2169.5918,13.4399,2598.3923,-2168.5479,12.5212, 7.0);
				}
				case CHECKPOINT_26:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,2598.3923,-2168.5479,12.5212,2691.4839,-2167.8496,10.9297, 7.0);
				}
				case CHECKPOINT_27:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 0,2691.4839,-2167.8496,10.9297,2746.9121,-2165.0281,10.9362, 7.0);
				}
				case CHECKPOINT_28:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_29;
					SetPlayerRaceCheckpoint(playerid, 0,2746.9121,-2165.0281,10.9362,2809.3276,-2127.5168,10.9297, 7.0);
				}
				case CHECKPOINT_29:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 0,2809.3276,-2127.5168,10.9297,2834.9993,-2044.0890,10.9299, 7.0);
				}
				case CHECKPOINT_30:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_31;
					SetPlayerRaceCheckpoint(playerid, 0,2834.9993,-2044.0890,10.9299,2835.9622,-1908.9738,10.9375, 7.0);
				}
				case CHECKPOINT_31:
	            {
                    AutoBusCheck[playerid]++;
                    pAutoBusLS[playerid] = CHECKPOINT_32;
                    SetPlayerRaceCheckpoint(playerid, 0,2835.9622,-1908.9738,10.9375,2830.4727,-1891.4956,10.9375, 7.0);
				}
				case CHECKPOINT_32:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_33;
					SetPlayerRaceCheckpoint(playerid, 0,2830.4727,-1891.4956,10.9375,2810.8967,-1888.5054,10.9329, 7.0);
				}
				case CHECKPOINT_33:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_34;
					SetPlayerRaceCheckpoint(playerid, 0,2810.8967,-1888.5054,10.9329,2758.4009,-1887.2511,10.8828, 7.0);
				}
				case CHECKPOINT_34:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_35;
					SetPlayerRaceCheckpoint(playerid, 0,2758.4009,-1887.2511,10.8828,2681.9255,-1874.5675,10.8828, 7.0);
				}
				case CHECKPOINT_35:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_36;
					SetPlayerRaceCheckpoint(playerid, 0,2681.9255,-1874.5675,10.8828,2650.4714,-1831.4414,10.8438, 7.0);
				}
				case CHECKPOINT_36:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_37;
					SetPlayerRaceCheckpoint(playerid, 0,2650.4714,-1831.4414,10.8438,2645.8472,-1747.4325,10.7239, 7.0);
				}
				case CHECKPOINT_37:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_38;
					SetPlayerRaceCheckpoint(playerid, 1,2645.8472,-1747.4325,10.7239,0.0,0.0,0.0, 7.0);
					BusStop[playerid] = 5;
				}
				case CHECKPOINT_38:
				{
    				if(BusStop[playerid] == 5)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_40;
						SetPlayerRaceCheckpoint(playerid, 0,2629.5608,-1730.1902,10.9159,2449.4963,-1729.9722,13.5207, 7.0);
					}
				}
				case CHECKPOINT_40:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_41;
					SetPlayerRaceCheckpoint(playerid, 0,2449.4963,-1729.9722,13.5207,2357.9429,-1730.1731,13.3828, 7.0);
				}
				case CHECKPOINT_41:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_42;
					SetPlayerRaceCheckpoint(playerid, 0,2357.9429,-1730.1731,13.3828,2233.0347,-1729.6084,13.3828, 7.0);
				}
				case CHECKPOINT_42:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_43;
					SetPlayerRaceCheckpoint(playerid, 1,2233.0347,-1729.6084,13.3828,2796.0964,-2144.5806,11.0631, 7.0);
					BusStop[playerid] = 6;
				}
				case CHECKPOINT_43:
				{
    				if(BusStop[playerid] == 6)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_44;
						SetPlayerRaceCheckpoint(playerid, 0,2188.5439,-1733.7574,13.3750,2174.1436,-1750.6453,13.3848, 7.0);
					}
				}
				case CHECKPOINT_44:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_45;
					SetPlayerRaceCheckpoint(playerid, 0,2174.1436,-1750.6453,13.3848,2109.8962,-1749.9078,13.4062, 7.0);
				}
				case CHECKPOINT_45:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_46;
					SetPlayerRaceCheckpoint(playerid, 0,2109.8962,-1749.9078,13.4062,2019.3126,-1750.1307,13.3828, 7.0);
				}
				case CHECKPOINT_46:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_47;
					SetPlayerRaceCheckpoint(playerid, 0,2019.3126,-1750.1307,13.3828,1922.9449,-1749.2015,13.3828, 7.0);
				}
				case CHECKPOINT_47:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_48;
					SetPlayerRaceCheckpoint(playerid, 1,1922.9449,-1749.2015,13.3828,2640.6577,-1712.9298,10.8611, 7.0);
					BusStop[playerid] = 7;
				}
				case CHECKPOINT_48:
				{
    				if(BusStop[playerid] == 7)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_49;
						SetPlayerRaceCheckpoint(playerid, 0,1834.8926,-1750.2449,13.3828,1824.4990,-1741.1572,13.3828, 7.0);
					}
				}
				case CHECKPOINT_49:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_50;
					SetPlayerRaceCheckpoint(playerid, 0,1824.4990,-1741.1572,13.3828,1805.8406,-1730.2002,13.3906, 7.0);
				}
				case CHECKPOINT_50:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_51;
					SetPlayerRaceCheckpoint(playerid, 0,1805.8406,-1730.2002,13.3906,1704.1219,-1729.2922,13.3828, 7.0);
				}
				case CHECKPOINT_51:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_52;
					SetPlayerRaceCheckpoint(playerid, 0,1704.1219,-1729.2922,13.3828,1622.1241,-1729.4041,13.3828, 7.0);
				}
				case CHECKPOINT_52:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_53;
					SetPlayerRaceCheckpoint(playerid, 0,1622.1241,-1729.4041,13.3828,1548.1932,-1729.5847,13.3828, 7.0);
				}
				case CHECKPOINT_53:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_54;
					SetPlayerRaceCheckpoint(playerid, 0,1548.1932,-1729.5847,13.3828,1454.6294,-1729.9337,13.3828, 7.0);
				}
				case CHECKPOINT_54:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_55;
					SetPlayerRaceCheckpoint(playerid, 1,1454.6294,-1729.9337,13.3828,2661.2539,-1654.8489,10.8343, 7.0);
					BusStop[playerid] = 8;
				}
				case CHECKPOINT_55:
				{
      				if(BusStop[playerid] == 8)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_56;
						SetPlayerRaceCheckpoint(playerid, 0,1408.9320,-1729.8221,13.3906,1350.8334,-1730.2009,13.3828, 7.0);
					}
				}
				case CHECKPOINT_56:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_57;
					SetPlayerRaceCheckpoint(playerid, 1,1350.8334,-1730.2009,13.3828,2350.8696,-1381.9030,23.9650, 7.0);
					BusStop[playerid] = 9;
				}
				case CHECKPOINT_57:
				{
      				if(BusStop[playerid] == 9)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_58;
						SetPlayerRaceCheckpoint(playerid, 0,1326.1938,-1729.8999,13.5369,1310.4901,-1757.9518,13.3828, 7.0);
					}
				}
				case CHECKPOINT_58:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_59;
					SetPlayerRaceCheckpoint(playerid, 0,1310.4901,-1757.9518,13.3828,1310.5471,-1836.0758,13.3828, 7.0);
				}
				case CHECKPOINT_59:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_60;
					SetPlayerRaceCheckpoint(playerid, 0,1310.5471,-1836.0758,13.3828,1299.3611,-1849.8289,13.3828, 7.0);
				}
				case CHECKPOINT_60:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_61;
					SetPlayerRaceCheckpoint(playerid, 0,1299.3611,-1849.8289,13.3828,1196.1499,-1849.0432,13.3958, 7.0);
				}
				case CHECKPOINT_61:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_62;
					SetPlayerRaceCheckpoint(playerid, 0,1196.1499,-1849.0432,13.3958,1181.7061,-1837.0214,13.4088, 7.0);
				}
				case CHECKPOINT_62:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_63;
					SetPlayerRaceCheckpoint(playerid, 0,1181.7061,-1837.0214,13.4088,1182.2383,-1759.4034,13.3984, 7.0);
				}
				case CHECKPOINT_63:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 1,1182.2383,-1759.4034,13.3984,1832.4225,-1178.3257,23.7677, 7.0);
					BusStop[playerid] = 10;
				}
				case CHECKPOINT_64:
				{
      				if(BusStop[playerid] == 10)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_65;
						SetPlayerRaceCheckpoint(playerid, 0,1181.7429,-1725.9309,13.4632,1167.9005,-1709.6970,13.6778, 7.0);
					}
				}
				case CHECKPOINT_65:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_66;
					SetPlayerRaceCheckpoint(playerid, 0,1167.9005,-1709.6970,13.6778,1051.4254,-1709.7410,13.3828, 7.0);
				}
				case CHECKPOINT_66:
				{
                    AutoBusCheck[playerid]++;
                    pAutoBusLS[playerid] = CHECKPOINT_67;
				    SetPlayerRaceCheckpoint(playerid, 0,1051.4254,-1709.7410,13.3828,1040.5111,-1695.1740,13.3828, 7.0);
				}
				case CHECKPOINT_67:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_68;
					SetPlayerRaceCheckpoint(playerid, 0,1040.5111,-1695.1740,13.3828,1040.0034,-1587.6819,13.3828, 7.0);
				}
				case CHECKPOINT_68:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_69;
					SetPlayerRaceCheckpoint(playerid, 0,1040.0034,-1587.6819,13.3828,1041.8794,-1541.9896,13.3596, 7.0);
				}
				case CHECKPOINT_69:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_70;
					SetPlayerRaceCheckpoint(playerid, 0,1041.8794,-1541.9896,13.3596,1064.9503,-1421.3506,13.4058, 7.0);
				}
				case CHECKPOINT_70:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_71;
					SetPlayerRaceCheckpoint(playerid, 0,1064.9503,-1421.3506,13.4058,1068.8213,-1405.0374,13.5156, 7.0);
				}
				case CHECKPOINT_71:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_72;
					SetPlayerRaceCheckpoint(playerid, 0,1068.8213,-1405.0374,13.5156,1155.8079,-1403.4205,13.4758, 7.0);
				}
				case CHECKPOINT_72:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_73;
					SetPlayerRaceCheckpoint(playerid, 0,1155.8079,-1403.4205,13.4758,1192.1906,-1402.9597,13.2262, 7.0);
				}
				case CHECKPOINT_73:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_74;
					SetPlayerRaceCheckpoint(playerid, 0,1192.1906,-1402.9597,13.2262,1206.9834,-1378.3167,13.2682, 7.0);
				}
				case CHECKPOINT_74:
				{
     				AutoBusCheck[playerid]++;
				    pAutoBusLS[playerid] = CHECKPOINT_75;
				    SetPlayerRaceCheckpoint(playerid, 0,1206.9834,-1378.3167,13.2682,1207.7404,-1344.1509,13.3999, 7.0);
				}
				case CHECKPOINT_75:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_76;
					SetPlayerRaceCheckpoint(playerid, 1,1207.7404,-1344.1509,13.3999,1845.5515,-1197.3513,22.9131, 7.0);
					BusStop[playerid] = 11;
				}
				case CHECKPOINT_76:
				{
      				if(BusStop[playerid] == 11)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_77;
						SetPlayerRaceCheckpoint(playerid, 0,1206.4561,-1294.2214,13.3820,1182.5089,-1278.1727,13.3244, 7.0);
					}
				}
				case CHECKPOINT_77:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_78;
					SetPlayerRaceCheckpoint(playerid, 0,1182.5089,-1278.1727,13.3244,1075.7480,-1278.6248,13.3828, 7.0);
				}
				case CHECKPOINT_78:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_79;
					SetPlayerRaceCheckpoint(playerid, 0,1075.7480,-1278.6248,13.3828,1056.1025,-1298.6237,13.5628, 7.0);
				}
				case CHECKPOINT_79:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_80;
					SetPlayerRaceCheckpoint(playerid, 0,1056.1025,-1298.6237,13.5628,1056.1765,-1343.7495,13.3828, 7.0);
				}
				case CHECKPOINT_80:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_81;
					SetPlayerRaceCheckpoint(playerid, 0,1056.1765,-1343.7495,13.3828,1055.9500,-1379.5574,13.4694, 7.0);
				}
				case CHECKPOINT_81:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_82;
					SetPlayerRaceCheckpoint(playerid, 0,1055.9500,-1379.5574,13.4694,1059.5009,-1428.3922,13.3700, 7.0);
				}
				case CHECKPOINT_82:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_83;
					SetPlayerRaceCheckpoint(playerid, 0,1059.5009,-1428.3922,13.3700,1052.1005,-1479.3190,13.3858, 7.0);
				}
				case CHECKPOINT_83:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_84;
					SetPlayerRaceCheckpoint(playerid, 0,1052.1005,-1479.3190,13.3858,1035.6606,-1559.2651,13.3578, 7.0);
				}
				case CHECKPOINT_84:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_85;
					SetPlayerRaceCheckpoint(playerid, 0,1035.6606,-1559.2651,13.3578,1034.3412,-1679.7960,13.3828, 7.0);
				}
				case CHECKPOINT_85:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_86;
					SetPlayerRaceCheckpoint(playerid, 0,1034.3412,-1679.7960,13.3828,1032.5784,-1782.5796,13.5448, 7.0);
				}
				case CHECKPOINT_86:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_87;
					SetPlayerRaceCheckpoint(playerid, 1,1032.5784,-1782.5796,13.5448,2427.7188,-1259.3298,23.9650, 7.0);
					BusStop[playerid] = 12;
				}
				case CHECKPOINT_87:
				{
      				if(BusStop[playerid] == 12)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_88;
						SetPlayerRaceCheckpoint(playerid, 0,1026.9589,-1796.0031,13.6907,967.2961,-1779.3804,14.1042, 7.0);
					}
				}
				case CHECKPOINT_88:
				{
                    AutoBusCheck[playerid]++;
				    pAutoBusLS[playerid] = CHECKPOINT_89;
			        SetPlayerRaceCheckpoint(playerid, 0,967.2961,-1779.3804,14.1042,879.7377,-1768.6984,13.3828, 7.0);
				}
				case CHECKPOINT_89:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_90;
					SetPlayerRaceCheckpoint(playerid, 0,879.7377,-1768.6984,13.3828,769.7524,-1764.4347,12.8576, 7.0);
				}
				case CHECKPOINT_90:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_91;
					SetPlayerRaceCheckpoint(playerid, 0,769.7524,-1764.4347,12.8576,650.9993,-1732.1003,13.7081, 7.0);
				}
				case CHECKPOINT_91:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_92;
					SetPlayerRaceCheckpoint(playerid, 0,650.9993,-1732.1003,13.7081,487.6268,-1707.2123,11.6351, 7.0);
				}
				case CHECKPOINT_92:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_93;
					SetPlayerRaceCheckpoint(playerid, 1,487.6268,-1707.2123,11.6351,2428.4851,-1713.3696,14.6449, 7.0);
					BusStop[playerid] = 13;
				}
				case CHECKPOINT_93:
				{
      				if(BusStop[playerid] == 13)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_94;
						SetPlayerRaceCheckpoint(playerid, 0,376.4385,-1699.2418,7.3431,284.0227,-1686.7153,7.6167, 7.0);
					}
				}
				case CHECKPOINT_94:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_95;
					SetPlayerRaceCheckpoint(playerid, 0,284.0227,-1686.7153,7.6167,235.8849,-1654.7008,11.7007, 7.0);
				}
				case CHECKPOINT_95:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_96;
					SetPlayerRaceCheckpoint(playerid, 0,235.8849,-1654.7008,11.7007,165.9832,-1571.4700,12.3626, 7.0);
				}
				case CHECKPOINT_96:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_97;
					SetPlayerRaceCheckpoint(playerid, 0,165.9832,-1571.4700,12.3626,107.3906,-1530.4773,6.4866, 7.0);
				}
				case CHECKPOINT_97:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_98;
					SetPlayerRaceCheckpoint(playerid, 0,107.3906,-1530.4773,6.4866,42.8854,-1522.8143,5.1607, 7.0);
				}
				case CHECKPOINT_98:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_99;
					SetPlayerRaceCheckpoint(playerid, 0,42.8854,-1522.8143,5.1607,-64.6927,-1506.2645,2.1362, 7.0);
				}
				case CHECKPOINT_99:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_100;
					SetPlayerRaceCheckpoint(playerid, 0,-64.6927,-1506.2645,2.1362,-111.3568,-1476.4445,2.6953, 7.0);
				}
				case CHECKPOINT_100:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_101;
					SetPlayerRaceCheckpoint(playerid, 0,-111.3568,-1476.4445,2.6953,-140.6316,-1421.6285,2.6953, 7.0);
				}
				case CHECKPOINT_101:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_103;
					SetPlayerRaceCheckpoint(playerid, 1,-140.6316,-1421.6285,2.6953,2410.2681,-2165.5828,13.5078, 7.0);
					BusStop[playerid] = 14;
				}
				case CHECKPOINT_103:
				{
      				if(BusStop[playerid] == 14)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_104;
						SetPlayerRaceCheckpoint(playerid, 0,-148.6244,-1341.1152,2.6953,-131.8248,-1226.3862,2.6953, 7.0);
					}
				}
				case CHECKPOINT_104:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_105;
					SetPlayerRaceCheckpoint(playerid, 0,-131.8248,-1226.3862,2.6953,-108.7763,-1160.4513,2.2504, 7.0);
				}
				case CHECKPOINT_105:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_106;
					SetPlayerRaceCheckpoint(playerid, 1,-108.7763,-1160.4513,2.2504,2248.0229,-2211.1538,13.4549, 7.0);
					BusStop[playerid] = 15;
				}
				case CHECKPOINT_106:
				{
      				if(BusStop[playerid] == 15)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_107;
						SetPlayerRaceCheckpoint(playerid, 0,-80.1806,-1089.7332,7.2398,-82.3118,-1045.5808,21.6718, 7.0);
					}
				}
				case CHECKPOINT_107:
				{
     				AutoBusCheck[playerid]++;
				    pAutoBusLS[playerid] = CHECKPOINT_108;
				    SetPlayerRaceCheckpoint(playerid, 0,-82.3118,-1045.5808,21.6718,-116.0329,-991.2133,25.0899, 7.0);
				}
				case CHECKPOINT_108:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_109;
					SetPlayerRaceCheckpoint(playerid, 0,-116.0329,-991.2133,25.0899,-156.9799,-954.6189,29.6085, 7.0);
				}
				case CHECKPOINT_109:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_110;
					SetPlayerRaceCheckpoint(playerid, 0,-156.9799,-954.6189,29.6085,-253.3885,-891.6917,44.2275, 7.0);
				}
				case CHECKPOINT_110:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_111;
					SetPlayerRaceCheckpoint(playerid, 0,-253.3885,-891.6917,44.2275,-314.5242,-863.7043,46.8772, 7.0);
				}
				case CHECKPOINT_111:
				{
     				AutoBusCheck[playerid]++;
				    pAutoBusLS[playerid] = CHECKPOINT_112;
				    SetPlayerRaceCheckpoint(playerid, 0,-314.5242,-863.7043,46.8772,-415.2588,-826.9346,48.3152, 7.0);
				}
				case CHECKPOINT_112:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_113;
					SetPlayerRaceCheckpoint(playerid, 0,-415.2588,-826.9346,48.3152,-519.4057,-889.2591,54.6094, 7.0);
				}
				case CHECKPOINT_113:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_114;
					SetPlayerRaceCheckpoint(playerid, 0,-519.4057,-889.2591,54.6094,-612.4424,-977.7162,64.7582, 7.0);
				}
				case CHECKPOINT_114:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_115;
					SetPlayerRaceCheckpoint(playerid, 0,-612.4424,-977.7162,64.7582,-704.6360,-1005.7759,73.3395, 7.0);
				}
				case CHECKPOINT_115:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_116;
					SetPlayerRaceCheckpoint(playerid, 0,-704.6360,-1005.7759,73.3395,-819.9837,-1008.5967,83.2808, 7.0);
				}
				case CHECKPOINT_116:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_117;
					SetPlayerRaceCheckpoint(playerid, 0,-819.9837,-1008.5967,83.2808,-863.8864,-1051.6416,90.8718, 7.0);
				}
				case CHECKPOINT_117:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_118;
					SetPlayerRaceCheckpoint(playerid, 0,-863.8864,-1051.6416,90.8718,-887.1791,-1114.5867,98.9095, 7.0);
				}
				case CHECKPOINT_118:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_119;
					SetPlayerRaceCheckpoint(playerid, 0,-887.1791,-1114.5867,98.9095,-965.9476,-1036.0823,95.8849, 7.0);
				}
				case CHECKPOINT_119:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_120;
					SetPlayerRaceCheckpoint(playerid, 0,-965.9476,-1036.0823,95.8849,-1106.9972,-891.4062,75.2112, 7.0);
				}
				case CHECKPOINT_120:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_121;
					SetPlayerRaceCheckpoint(playerid, 0,-1106.9972,-891.4062,75.2112,-1220.7365,-775.1832,63.9063, 7.0);
				}
				case CHECKPOINT_121:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_122;
					SetPlayerRaceCheckpoint(playerid, 0,-1220.7365,-775.1832,63.9063,-1252.9476,-781.4708,66.4270, 7.0);
				}
				case CHECKPOINT_122:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_123;
					SetPlayerRaceCheckpoint(playerid, 0,-1252.9476,-781.4708,66.4270,-1353.6205,-812.0906,77.9167, 7.0);
				}
				case CHECKPOINT_123:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_124;
					SetPlayerRaceCheckpoint(playerid, 0,-1353.6205,-812.0906,77.9167,-1508.8899,-817.1320,60.0798, 7.0);
				}
				case CHECKPOINT_124:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_125;
					SetPlayerRaceCheckpoint(playerid, 0,-1508.8899,-817.1320,60.0798,-1702.0160,-748.7166,38.5745, 7.0);
				}
				case CHECKPOINT_125:
				{
     				AutoBusCheck[playerid]++;
				    pAutoBusLS[playerid] = CHECKPOINT_126;
				    SetPlayerRaceCheckpoint(playerid, 0,-1702.0160,-748.7166,38.5745,-1750.5891,-710.1972,28.9106, 7.0);
				}
				case CHECKPOINT_126:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_127;
					SetPlayerRaceCheckpoint(playerid, 0,-1750.5891,-710.1972,28.9106,-1759.1984,-653.6463,20.0697, 7.0);
				}
				case CHECKPOINT_127:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_128;
					SetPlayerRaceCheckpoint(playerid, 0,-1759.1984,-653.6463,20.0697,-1759.4705,-600.1092,16.2592, 7.0);
				}
				case CHECKPOINT_128:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_129;
					SetPlayerRaceCheckpoint(playerid, 0,-1759.4705,-600.1092,16.2592,-1768.8086,-577.0197,16.3359, 7.0);
				}
				case CHECKPOINT_129:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_130;
					SetPlayerRaceCheckpoint(playerid, 0,-1768.8086,-577.0197,16.3359,-1804.2716,-576.0726,15.9634, 7.0);
				}
				case CHECKPOINT_130:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_131;
					SetPlayerRaceCheckpoint(playerid, 0,-1804.2716,-576.0726,15.9634,-1868.9965,-575.9127,23.8891, 7.0);
				}
				case CHECKPOINT_131:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_132;
					SetPlayerRaceCheckpoint(playerid, 0,-1868.9965,-575.9127,23.8891,-1911.6157,-575.8336,24.4391, 7.0);
				}
				case CHECKPOINT_132:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_133;
					SetPlayerRaceCheckpoint(playerid, 0,-1911.6157,-575.8336,24.4391,-1997.0309,-576.9562,25.7583, 7.0);
				}
				case CHECKPOINT_133:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_134;
					SetPlayerRaceCheckpoint(playerid, 0,-1997.0309,-576.9562,25.7583,-2110.7312,-531.8246,34.4361, 7.0);
				}
				case CHECKPOINT_134:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_135;
					SetPlayerRaceCheckpoint(playerid, 0,-2110.7312,-531.8246,34.4361,-2185.4568,-458.8317,49.1848, 7.0);
				}
				case CHECKPOINT_135:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_136;
					SetPlayerRaceCheckpoint(playerid, 0,-2185.4568,-458.8317,49.1848,-2243.0225,-390.1130,50.8672, 7.0);
				}
				case CHECKPOINT_136:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_137;
					SetPlayerRaceCheckpoint(playerid, 0,-2243.0225,-390.1130,50.8672,-2252.6479,-309.7447,49.4165, 7.0);
				}
				case CHECKPOINT_137:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_138;
					SetPlayerRaceCheckpoint(playerid, 0,-2252.6479,-309.7447,49.4165,-2252.3591,-205.1595,35.3106, 7.0);
				}
				case CHECKPOINT_138:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_139;
					SetPlayerRaceCheckpoint(playerid, 0,-2252.3591,-205.1595,35.3106,-2233.4663,-192.6136,35.1746, 7.0);
				}
				case CHECKPOINT_139:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_140;
					SetPlayerRaceCheckpoint(playerid, 0,-2233.4663,-192.6136,35.1746,-2182.1030,-187.2606,35.1797, 7.0);
				}
				case CHECKPOINT_140:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_141;
					SetPlayerRaceCheckpoint(playerid, 0,-2182.1030,-187.2606,35.1797,-2165.0034,-154.5832,35.1719, 7.0);
				}
				case CHECKPOINT_141:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_142;
					SetPlayerRaceCheckpoint(playerid, 0,-2165.0034,-154.5832,35.1719,-2164.5107,-84.2327,35.1719, 7.0);
				}
				case CHECKPOINT_142:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_143;
					SetPlayerRaceCheckpoint(playerid, 0,-2164.5107,-84.2327,35.1719,-2152.7930,-72.9926,35.1719, 7.0);
				}
				case CHECKPOINT_143:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_144;
					SetPlayerRaceCheckpoint(playerid, 0,-2152.7930,-72.9926,35.1719,-2066.8088,-73.2738,35.1719, 7.0);
				}
				case CHECKPOINT_144:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_145;
					SetPlayerRaceCheckpoint(playerid, 0,-2066.8088,-73.2738,35.1719,-2025.3568,-73.3334,35.1719, 7.0);
				}
				case CHECKPOINT_145:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_146;
					SetPlayerRaceCheckpoint(playerid, 1,-2025.3568,-73.3334,35.1719,-1911.6157,-575.8336,24.4391, 7.0);
					BusStop[playerid] = 16;
				}
				case CHECKPOINT_146:
				{
      				if(BusStop[playerid] == 16)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_147;
						SetPlayerRaceCheckpoint(playerid, 0,-1991.2076,-72.1619,33.9390,-1954.1107,-66.5257,25.9141, 7.0);
					}
				}
				case CHECKPOINT_147:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_148;
					SetPlayerRaceCheckpoint(playerid, 0,-1954.1107,-66.5257,25.9141,-1927.7465,-69.9171,25.5547, 7.0);
				}
				case CHECKPOINT_148:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_149;
					SetPlayerRaceCheckpoint(playerid, 0,-1927.7465,-69.9171,25.5547,-1854.4957,-118.6294,6.1681, 7.0);
				}
				case CHECKPOINT_149:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_150;
					SetPlayerRaceCheckpoint(playerid, 0,-1854.4957,-118.6294,6.1681,-1813.7277,-118.4177,5.4975, 7.0);
				}
				case CHECKPOINT_150:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_151;
					SetPlayerRaceCheckpoint(playerid, 0,-1813.7277,-118.4177,5.4975,-1801.6578,-133.5275,5.8771, 7.0);
				}
				case CHECKPOINT_151:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_152;
					SetPlayerRaceCheckpoint(playerid, 0,-1801.6578,-133.5275,5.8771,-1801.2479,-222.1358,17.8006, 7.0);
				}
				case CHECKPOINT_152:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_153;
					SetPlayerRaceCheckpoint(playerid, 0,-1801.2479,-222.1358,17.8006,-1801.6243,-295.1216,24.3120, 7.0);
				}
				case CHECKPOINT_153:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_154;
					SetPlayerRaceCheckpoint(playerid, 0,-1801.6243,-295.1216,24.3120,-1817.2476,-410.6356,15.6615, 7.0);
				}
				case CHECKPOINT_154:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_155;
					SetPlayerRaceCheckpoint(playerid, 0,-1817.2476,-410.6356,15.6615,-1827.8024,-503.6023,14.9609, 7.0);
				}
				case CHECKPOINT_155:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_156;
					SetPlayerRaceCheckpoint(playerid, 0,-1827.8024,-503.6023,14.9609,-1821.6041,-562.4339,16.2630, 7.0);
				}
				case CHECKPOINT_156:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_157;
					SetPlayerRaceCheckpoint(playerid, 0,-1821.6041,-562.4339,16.2630,-1797.0907,-584.4467,16.1388, 7.0);
				}
				case CHECKPOINT_157:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_158;
					SetPlayerRaceCheckpoint(playerid, 0,-1797.0907,-584.4467,16.1388,-1775.6769,-584.5009,16.3359, 7.0);
				}
				case CHECKPOINT_158:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_159;
					SetPlayerRaceCheckpoint(playerid, 0,-1775.6769,-584.5009,16.3359,-1764.0984,-600.6434,16.2437, 7.0);
				}
				case CHECKPOINT_159:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_160;
					SetPlayerRaceCheckpoint(playerid, 0,-1764.0984,-600.6434,16.2437,-1758.1919,-702.8716,27.4348, 7.0);
				}
				case CHECKPOINT_160:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_161;
					SetPlayerRaceCheckpoint(playerid, 0,-1758.1919,-702.8716,27.4348,-1705.1025,-753.0931,38.4953, 7.0);
				}
				case CHECKPOINT_161:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_162;
					SetPlayerRaceCheckpoint(playerid, 0,-1705.1025,-753.0931,38.4953,-1588.0803,-804.9173,49.5163, 7.0);
				}
				case CHECKPOINT_162:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_163;
					SetPlayerRaceCheckpoint(playerid, 0,-1588.0803,-804.9173,49.5163,-1504.3199,-821.8488,61.3357, 7.0);
				}
				case CHECKPOINT_163:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_164;
					SetPlayerRaceCheckpoint(playerid, 0,-1504.3199,-821.8488,61.3357,-1408.0629,-819.6098,81.5006, 7.0);
				}
				case CHECKPOINT_164:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_165;
					SetPlayerRaceCheckpoint(playerid, 0,-1408.0629,-819.6098,81.5006,-1310.8848,-815.2949,73.3199, 7.0);
				}
				case CHECKPOINT_165:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_166;
					SetPlayerRaceCheckpoint(playerid, 0,-1310.8848,-815.2949,73.3199,-1234.4491,-776.5530,64.2864, 7.0);
				}
				case CHECKPOINT_166:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_167;
					SetPlayerRaceCheckpoint(playerid, 0,-1234.4491,-776.5530,64.2864,-1198.1680,-735.0199,58.7258, 7.0);
				}
				case CHECKPOINT_167:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_168;
					SetPlayerRaceCheckpoint(playerid, 0,-1198.1680,-735.0199,58.7258,-1159.9318,-620.7462,39.2942, 7.0);
				}
				case CHECKPOINT_168:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_169;
					SetPlayerRaceCheckpoint(playerid, 0,-1159.9318,-620.7462,39.2942,-1125.1732,-534.3915,30.2751, 7.0);
				}
				case CHECKPOINT_169:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_170;
					SetPlayerRaceCheckpoint(playerid, 0,-1125.1732,-534.3915,30.2751,-1076.7054,-475.0704,33.9354, 7.0);
				}
				case CHECKPOINT_170:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_171;
					SetPlayerRaceCheckpoint(playerid, 0,-1076.7054,-475.0704,33.9354,-1013.2856,-443.0581,36.2537, 7.0);
				}
				case CHECKPOINT_171:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_172;
					SetPlayerRaceCheckpoint(playerid, 0,-1013.2856,-443.0581,36.2537,-971.6297,-445.3166,34.8588, 7.0);
				}
				case CHECKPOINT_172:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_173;
					SetPlayerRaceCheckpoint(playerid, 0,-971.6297,-445.3166,34.8588,-853.0244,-462.3990,20.9178, 7.0);
				}
				case CHECKPOINT_173:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_174;
					SetPlayerRaceCheckpoint(playerid, 0,-853.0244,-462.3990,20.9178,-740.8592,-437.2043,15.9430, 7.0);
				}
				case CHECKPOINT_174:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_175;
					SetPlayerRaceCheckpoint(playerid, 0,-740.8592,-437.2043,15.9430,-606.6573,-394.6393,22.8225, 7.0);
				}
				case CHECKPOINT_175:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_176;
					SetPlayerRaceCheckpoint(playerid, 0,-606.6573,-394.6393,22.8225,-471.9191,-408.2843,14.4679, 7.0);
				}
				case CHECKPOINT_176:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_177;
					SetPlayerRaceCheckpoint(playerid, 0,-471.9191,-408.2843,14.4679,-400.5131,-521.5760,18.5859, 7.0);
				}
				case CHECKPOINT_177:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_178;
					SetPlayerRaceCheckpoint(playerid, 0,-400.5131,-521.5760,18.5859,-425.5618,-611.4982,9.9517, 7.0);
				}
				case CHECKPOINT_178:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_179;
					SetPlayerRaceCheckpoint(playerid, 0,-425.5618,-611.4982,9.9517,-376.3390,-716.8224,23.4180, 7.0);
				}
				case CHECKPOINT_179:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_180;
					SetPlayerRaceCheckpoint(playerid, 0,-376.3390,-716.8224,23.4180,-355.2479,-767.3871,29.9398, 7.0);
				}
				case CHECKPOINT_180:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_181;
					SetPlayerRaceCheckpoint(playerid, 0,-355.2479,-767.3871,29.9398,-342.4390,-785.1407,31.1663, 7.0);
				}
				case CHECKPOINT_181:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_182;
					SetPlayerRaceCheckpoint(playerid, 0,-342.4390,-785.1407,31.1663,-293.1800,-805.3435,37.3556, 7.0);
				}
				case CHECKPOINT_182:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_183;
					SetPlayerRaceCheckpoint(playerid, 0,-293.1800,-805.3435,37.3556,-288.9802,-844.9160,45.3106, 7.0);
				}
				case CHECKPOINT_183:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_184;
					SetPlayerRaceCheckpoint(playerid, 0,-288.9802,-844.9160,45.3106,-295.6248,-875.9469,46.5896, 7.0);
				}
				case CHECKPOINT_184:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_185;
					SetPlayerRaceCheckpoint(playerid, 0,-295.6248,-875.9469,46.5896,-188.0515,-939.1647,34.0170, 7.0);
				}
				case CHECKPOINT_185:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_186;
					SetPlayerRaceCheckpoint(playerid, 0,-188.0515,-939.1647,34.0170,-135.3907,-981.6378,26.1059, 7.0);
				}
				case CHECKPOINT_186:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_187;
					SetPlayerRaceCheckpoint(playerid, 0,-135.3907,-981.6378,26.1059,-92.5597,-1032.6296,24.1499, 7.0);
				}
				case CHECKPOINT_187:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_188;
					SetPlayerRaceCheckpoint(playerid, 0,-92.5597,-1032.6296,24.1499,-86.5774,-1095.1771,5.4126, 7.0);
				}
				case CHECKPOINT_188:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_189;
					SetPlayerRaceCheckpoint(playerid, 0,-86.5774,-1095.1771,5.4126,-121.6818,-1177.1115,2.6953, 7.0);
				}
				case CHECKPOINT_189:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_190;
					SetPlayerRaceCheckpoint(playerid, 0,-121.6818,-1177.1115,2.6953,-148.9412,-1291.2833,2.6953, 7.0);
				}
				case CHECKPOINT_190:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_191;
					SetPlayerRaceCheckpoint(playerid, 0,-148.9412,-1291.2833,2.6953,-145.9154,-1426.6249,2.6953, 7.0);
				}
				case CHECKPOINT_191:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_192;
					SetPlayerRaceCheckpoint(playerid, 0,-145.9154,-1426.6249,2.6953,-93.6564,-1500.0251,2.6953, 7.0);
				}
				case CHECKPOINT_192:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_193;
					SetPlayerRaceCheckpoint(playerid, 0,-93.6564,-1500.0251,2.6953,-20.5978,-1520.6768,1.8273, 7.0);
				}
				case CHECKPOINT_193:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_194;
					SetPlayerRaceCheckpoint(playerid, 0,-20.5978,-1520.6768,1.8273,65.3064,-1538.4517,5.0079, 7.0);
				}
				case CHECKPOINT_194:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_195;
					SetPlayerRaceCheckpoint(playerid, 0,65.3064,-1538.4517,5.0079,128.4319,-1558.5803,9.1244, 7.0);
				}
				case CHECKPOINT_195:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_196;
					SetPlayerRaceCheckpoint(playerid, 0,128.4319,-1558.5803,9.1244,225.2470,-1666.5477,11.6049, 7.0);
				}
				case CHECKPOINT_196:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_197;
					SetPlayerRaceCheckpoint(playerid, 0,225.2470,-1666.5477,11.6049,315.3292,-1709.5632,6.6440, 7.0);
				}
				case CHECKPOINT_197:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_198;
					SetPlayerRaceCheckpoint(playerid, 0,315.3292,-1709.5632,6.6440,424.5115,-1714.8335,9.4428, 7.0);
				}
				case CHECKPOINT_198:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_199;
					SetPlayerRaceCheckpoint(playerid, 0,424.5115,-1714.8335,9.4428,599.1240,-1738.0477,13.3379, 7.0);
				}
				case CHECKPOINT_199:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_200;
					SetPlayerRaceCheckpoint(playerid, 0,599.1240,-1738.0477,13.3379,732.3187,-1772.1262,13.8494, 7.0);
				}
				case CHECKPOINT_200:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_201;
					SetPlayerRaceCheckpoint(playerid, 0,732.3187,-1772.1262,13.8494,868.3299,-1781.4940,13.6794, 7.0);
				}
				case CHECKPOINT_201:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_202;
					SetPlayerRaceCheckpoint(playerid, 0,868.3299,-1781.4940,13.6794,1020.3047,-1809.6880,13.9782, 7.0);
				}
				case CHECKPOINT_202:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_203;
					SetPlayerRaceCheckpoint(playerid, 0,1020.3047,-1809.6880,13.9782,1038.0938,-1782.6329,13.5085, 7.0);
				}
				case CHECKPOINT_203:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_204;
					SetPlayerRaceCheckpoint(playerid, 0,1038.0938,-1782.6329,13.5085,1040.2793,-1726.6008,13.3828, 7.0);
				}
				case CHECKPOINT_204:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_205;
					SetPlayerRaceCheckpoint(playerid, 0,1040.2793,-1726.6008,13.3828,1055.8601,-1714.7909,13.3828, 7.0);
				}
				case CHECKPOINT_205:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_206;
					SetPlayerRaceCheckpoint(playerid, 0,1055.8601,-1714.7909,13.3828,1131.5461,-1714.0148,13.5124, 7.0);
				}
				case CHECKPOINT_206:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_207;
					SetPlayerRaceCheckpoint(playerid, 1,1131.5461,-1714.0148,13.5124,-1801.2479,-222.1358,17.8006, 7.0);
					BusStop[playerid] = 17;
				}
				case CHECKPOINT_207:
				{
      				if(BusStop[playerid] == 17)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_208;
						SetPlayerRaceCheckpoint(playerid, 0,1168.3724,-1714.2424,13.6931,1283.8179,-1714.4620,13.3828, 7.0);
					}
				}
				case CHECKPOINT_208:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_209;
					SetPlayerRaceCheckpoint(playerid, 0,1283.8179,-1714.4620,13.3828,1299.1836,-1690.9917,13.3828, 7.0);
				}
				case CHECKPOINT_209:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_210;
					SetPlayerRaceCheckpoint(playerid, 0,1299.1836,-1690.9917,13.3828,1299.9449,-1572.8984,13.3828, 7.0);
				}
				case CHECKPOINT_210:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_211;
					SetPlayerRaceCheckpoint(playerid, 0,1299.9449,-1572.8984,13.3828,1314.2142,-1515.1968,13.3828, 7.0);
				}
				case CHECKPOINT_211:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_212;
					SetPlayerRaceCheckpoint(playerid, 0,1314.2142,-1515.1968,13.3828,1345.4519,-1418.7618,13.3828, 7.0);
				}
				case CHECKPOINT_212:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_213;
					SetPlayerRaceCheckpoint(playerid, 0,1345.4519,-1418.7618,13.3828,1344.6176,-1380.3506,13.4940, 7.0);
				}
				case CHECKPOINT_213:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_214;
					SetPlayerRaceCheckpoint(playerid, 0,1344.6176,-1380.3506,13.4940,1344.5986,-1297.2760,13.5703, 7.0);
				}
				case CHECKPOINT_214:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_215;
					SetPlayerRaceCheckpoint(playerid, 0,1344.5986,-1297.2760,13.5703,1344.5470,-1234.1475,13.5746, 7.0);
				}
				case CHECKPOINT_215:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_216;
					SetPlayerRaceCheckpoint(playerid, 0,1344.5470,-1234.1475,13.5746,1343.9142,-1168.2686,23.7208, 7.0);
				}
				case CHECKPOINT_216:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_217;
					SetPlayerRaceCheckpoint(playerid, 0,1343.9142,-1168.2686,23.7208,1375.5760,-1143.1552,23.6563, 7.0);
				}
				case CHECKPOINT_217:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_218;
					SetPlayerRaceCheckpoint(playerid, 0,1375.5760,-1143.1552,23.6563,1439.8564,-1163.0170,23.6563, 7.0);
				}
				case CHECKPOINT_218:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_219;
					SetPlayerRaceCheckpoint(playerid, 0,1439.8564,-1163.0170,23.6563,1564.4581,-1163.0774,23.9063, 7.0);
				}
				case CHECKPOINT_219:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_220;
					SetPlayerRaceCheckpoint(playerid, 0,1564.4581,-1163.0774,23.9063,1631.0093,1163.5320,23.8947, 7.0);
				}
				case CHECKPOINT_220:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_221;
					SetPlayerRaceCheckpoint(playerid, 1,1631.0093,-1163.5320,23.8947,1636.5211,-1139.4545,23.9063, 7.0);
					BusStop[playerid] = 18;
				}
				case CHECKPOINT_221:
				{
      				if(BusStop[playerid] == 18)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLS[playerid] = CHECKPOINT_222;
						SetPlayerRaceCheckpoint(playerid, 0,1636.5211,-1139.4545,23.9063,1639.9530,-1071.1113,23.8984, 7.0);
					}
				}
				case CHECKPOINT_222:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_223;
					SetPlayerRaceCheckpoint(playerid, 0,1639.9530,-1071.1113,23.8984,1666.5861,-1074.1132,23.8984, 7.0);
				}
				case CHECKPOINT_223:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_224;
					SetPlayerRaceCheckpoint(playerid, 0,1666.5861,-1074.1132,23.8984,1664.0234,-1120.7411,23.9063, 7.0);
				}
				case CHECKPOINT_224:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_225;
					SetPlayerRaceCheckpoint(playerid, 0,1664.0234,-1120.7411,23.9063,1637.3256,-1133.6256,23.9063, 7.0);
				}
				case CHECKPOINT_225:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLS[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid,0,1637.3256,-1133.6256,23.9063,1638.5587,-1163.1345,23.8965,5.0);
				}
			}
		}
		if(AutoBusJob[playerid] == 2)
		{
	    	switch(pAutoBusSF[playerid])
			{
				case CHECKPOINT_1:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 1,-1991.6980,135.4355,27.1006,-1995.1545,183.7995,27.0891, 7.0);
                    BusStop[playerid] = 1;
				}
				case CHECKPOINT_2:
				{
                    if(BusStop[playerid] == 1)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_3;
						SetPlayerRaceCheckpoint(playerid, 0,-1995.1545,183.7995,27.0891,-2002.3506,295.1832,33.9743, 7.0);
					}
				}
				case CHECKPOINT_3:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,-2002.3506,295.1832,33.9743,-1973.7347,341.6311,33.9575, 7.0);
				}
				case CHECKPOINT_4:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-1973.7347,341.6311,33.9575,-1883.4500,360.1311,23.5636, 7.0);
				}
				case CHECKPOINT_5:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,-1883.4500,360.1311,23.5636,-1863.6099,409.9655,16.5726, 7.0);
				}
				case CHECKPOINT_6:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,-1863.6099,409.9655,16.5726,-1815.4646,372.2739,16.5784, 7.0);
				}
				case CHECKPOINT_7:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,-1815.4646,372.2739,16.5784,-1766.1660,319.6794,6.9367, 7.0);
				}
				case CHECKPOINT_8:
                {
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,-1766.1660,319.6794,6.9367,-1715.4607,332.6389,6.5855, 7.0);
				}
				case CHECKPOINT_9:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,-1715.4607,332.6389,6.5855,-1626.1046,419.1978,6.5933, 7.0);
				}
				case CHECKPOINT_10:
				{
				    AutoBusCheck[playerid]++;
				    pAutoBusSF[playerid] = CHECKPOINT_11;
				    SetPlayerRaceCheckpoint(playerid, 1,-1626.1046,419.1978,6.5933,-1557.3323,536.0574,6.5949, 7.0);
				    BusStop[playerid] = 2;
				}
				case CHECKPOINT_11:
				{
				    if(BusStop[playerid] == 2)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_13;
					    SetPlayerRaceCheckpoint(playerid, 0,-1557.3323,536.0574,6.5949,-1554.2756,699.2153,6.6010, 7.0);
					}
				}
				case CHECKPOINT_13:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,-1554.2756,699.2153,6.6010,-1540.9736,819.8768,6.5885, 7.0);
				}
				case CHECKPOINT_14:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,-1540.9736,819.8768,6.5885,-1588.0629,1042.3093,6.6026, 7.0);
				}
				case CHECKPOINT_15:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 0,-1588.0629,1042.3093,6.6026,-1611.6682,1231.7312,6.6094, 7.0);
				}
				case CHECKPOINT_16:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_17;
					SetPlayerRaceCheckpoint(playerid, 1,-1611.6682,1231.7312,6.6094,-1737.4580,1354.6034,6.6026, 7.0);
					BusStop[playerid] = 3;
				}
				case CHECKPOINT_17:
				{
                    if(BusStop[playerid] == 3)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_18;
						SetPlayerRaceCheckpoint(playerid, 0,-1737.4580,1354.6034,6.6026,-1949.9220,1311.5750,6.6026, 7.0);
					}
				}
				case CHECKPOINT_18:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,-1949.9220,1311.5750,6.6026,-2118.5659,1334.2229,6.6115, 7.0);
				}
				case CHECKPOINT_19:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,-2118.5659,1334.2229,6.6115,-2340.8108,1376.2273,6.6026, 7.0);
				}
				case CHECKPOINT_20:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,-2340.8108,1376.2273,6.6026,-2602.1038,1334.7786,6.5967, 7.0);
				}
				case CHECKPOINT_21:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 1,-2602.1038,1334.7786,6.5967,-2712.8115,1294.0096,6.6132, 7.0);
					BusStop[playerid] = 4;
				}
				case CHECKPOINT_22:
				{
                    if(BusStop[playerid] == 4)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid,"Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_23;
						SetPlayerRaceCheckpoint(playerid, 0,-2712.8115,1294.0096,6.6132,-2879.8953,1192.4105,6.6024, 7.0);
					}
				}
				case CHECKPOINT_23:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,-2879.8953,1192.4105,6.6024,-2873.2810,1012.4788,37.5316, 7.0);
				}
				case CHECKPOINT_24:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,-2873.2810,1012.4788,37.5316,-2810.7183,854.8864,43.7482, 7.0);
				}
				case CHECKPOINT_25:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,-2810.7183,854.8864,43.7482,-2761.3486,806.1169,52.4449, 7.0);
				}
				case CHECKPOINT_26:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,-2761.3486,806.1169,52.4449,-2753.1589,693.6199,40.6894, 7.0);
				}
				case CHECKPOINT_27:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 0,-2753.1589,693.6199,40.6894,-2752.8772,575.0302,13.9772, 7.0);
				}
				case CHECKPOINT_28:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_29;
					SetPlayerRaceCheckpoint(playerid, 0,-2752.8772,575.0302,13.9772,-2643.0701,560.2437,14.0320, 7.0);
				}
				case CHECKPOINT_29:
				{
					AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 1,-2643.0701,560.2437,14.0320,-2609.7512,541.7668,14.0448, 7.0);
					BusStop[playerid] = 5;
				}
				case CHECKPOINT_30:
				{
                    if(BusStop[playerid] == 5)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_31;
						SetPlayerRaceCheckpoint(playerid, 0,-2609.7512,541.7668,14.0448,-2626.9602,470.3486,14.0176, 7.0);
					}
				}
				case CHECKPOINT_31:
	            {
                    AutoBusCheck[playerid]++;
                    pAutoBusSF[playerid] = CHECKPOINT_32;
                    SetPlayerRaceCheckpoint(playerid, 0,-2626.9602,470.3486,14.0176,-2708.4954,442.5543,3.7414, 7.0);
				}
				case CHECKPOINT_32:
				{
                    AutoBusCheck[playerid]++;
                    pAutoBusSF[playerid] = CHECKPOINT_33;
                    SetPlayerRaceCheckpoint(playerid, 0,-2708.4954,442.5543,3.7414,-2752.8147,380.4068,3.6855, 7.0);
				}
				case CHECKPOINT_33:
				{
                    AutoBusCheck[playerid]++;
                    pAutoBusSF[playerid] = CHECKPOINT_34;
                    SetPlayerRaceCheckpoint(playerid, 1,-2752.8147,380.4068,3.6855,-2725.8572,334.0807,3.7410, 7.0);
                    BusStop[playerid] = 6;
				}
				case CHECKPOINT_34:
				{
                    if(BusStop[playerid] == 6)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_35;
						SetPlayerRaceCheckpoint(playerid, 0,-2725.8572,334.0807,3.7410,-2708.0049,301.7969,3.7534, 7.0);
					}
				}
				case CHECKPOINT_35:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_36;
					SetPlayerRaceCheckpoint(playerid, 0,-2708.0049,301.7969,3.7534,-2708.6208,132.3162,3.7442, 7.0);
				}
				case CHECKPOINT_36:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_37;
					SetPlayerRaceCheckpoint(playerid, 0,-2708.6208,132.3162,3.7442,-2708.2715,-56.4955,3.7558, 7.0);
				}
				case CHECKPOINT_37:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_38;
					SetPlayerRaceCheckpoint(playerid, 0,-2708.2715,-56.4955,3.7558,-2660.3115,-72.4178,3.7442, 7.0);
				}
				case CHECKPOINT_38:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_40;
					SetPlayerRaceCheckpoint(playerid, 0,-2660.3115,-72.4178,3.7442,-2494.0449,-71.9765,25.0937, 7.0);
				}
				case CHECKPOINT_40:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_41;
					SetPlayerRaceCheckpoint(playerid, 0,-2494.0449,-71.9765,25.0937,-2392.7932,-72.6190,34.7188, 7.0);
				}
				case CHECKPOINT_41:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_42;
					SetPlayerRaceCheckpoint(playerid, 0,-2392.7932,-72.6190,34.7188,-2374.2886,-112.7356,34.7332, 7.0);
				}
				case CHECKPOINT_42:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_43;
					SetPlayerRaceCheckpoint(playerid, 0,-2374.2886,-112.7356,34.7332,-2276.3818,-192.8028,34.7380, 7.0);
				}
				case CHECKPOINT_43:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_44;
					SetPlayerRaceCheckpoint(playerid, 0,-2276.3818,-192.8028,34.7380,-2260.1655,-229.9266,36.2113, 7.0);
				}
				case CHECKPOINT_44:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_45;
					SetPlayerRaceCheckpoint(playerid, 0,-2260.1655,-229.9266,36.2113,-2201.8093,-453.5424,49.8877, 7.0);
				}
				case CHECKPOINT_45:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_46;
					SetPlayerRaceCheckpoint(playerid, 0,-2201.8093,-453.5424,49.8877,-2109.8052,-547.9105,32.8555, 7.0);
				}
				case CHECKPOINT_46:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_47;
					SetPlayerRaceCheckpoint(playerid, 1,-2109.8052,-547.9105,32.8555,-1954.4362,-583.7670,24.0175, 7.0);
					BusStop[playerid] = 7;
				}
				case CHECKPOINT_47:
				{
    				if(BusStop[playerid] == 7)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_48;
						SetPlayerRaceCheckpoint(playerid, 0,-1954.4362,-583.7670,24.0175,-1836.8593,-582.9950,17.3360, 7.0);
					}
				}
				case CHECKPOINT_48:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_49;
					SetPlayerRaceCheckpoint(playerid, 0,-1836.8593,-582.9950,17.3360,-1823.1945,-494.6979,14.5266, 7.0);
				}
				case CHECKPOINT_49:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_50;
					SetPlayerRaceCheckpoint(playerid, 0,-1823.1945,-494.6979,14.5266,-1796.9377,-261.2698,19.2452, 7.0);
				}
				case CHECKPOINT_50:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_51;
					SetPlayerRaceCheckpoint(playerid, 0,-1796.9377,-261.2698,19.2452,-1796.7626,-132.9200,5.4191, 7.0);
				}
				case CHECKPOINT_51:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_52;
					SetPlayerRaceCheckpoint(playerid, 0,-1796.7626,-132.9200,5.4191,-1846.4329,-113.2612,5.0613, 7.0);
				}
				case CHECKPOINT_52:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_53;
					SetPlayerRaceCheckpoint(playerid, 0,-1846.4329,-113.2612,5.0613,-1936.0524,-62.9979,25.1267, 7.0);
				}
				case CHECKPOINT_53:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_54;
					SetPlayerRaceCheckpoint(playerid, 0,-1936.0524,-62.9979,25.1267,-2004.1715,-47.3372,34.7261, 7.0);
				}
				case CHECKPOINT_54:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_55;
					SetPlayerRaceCheckpoint(playerid, 1,-2004.1715,-47.3372,34.7261,-2003.1067,81.8387,27.1051, 7.0);
					BusStop[playerid] = 8;
				}
				case CHECKPOINT_55:
				{
    				if(BusStop[playerid] == 8)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusSF[playerid] = CHECKPOINT_56;
						SetPlayerRaceCheckpoint(playerid, 0,-2003.1067,81.8387,27.1051,-1989.7347,107.2169,27.5391, 7.0);
					}
				}
				case CHECKPOINT_56:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusSF[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid, 0,-1989.7347,107.2169,27.5391,-1991.6980,135.4355,27.1006, 7.0);
				}
	        }
	    }
	    if(AutoBusJob[playerid] == 3)
		{
	    	switch(pAutoBusLV[playerid])
			{
				case CHECKPOINT_1:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_2;
					SetPlayerRaceCheckpoint(playerid, 0,2817.6255,1265.3569,10.3652,2827.2673,1287.0476,10.3804, 7.0);
				}
				case CHECKPOINT_2:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 1,2827.2673,1287.0476,10.3804,2828.8628,1380.1879,10.3639, 7.0);
					BusStop[playerid] = 1;
				}
				case CHECKPOINT_3:
				{
				    if(BusStop[playerid] == 1)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_4;
						SetPlayerRaceCheckpoint(playerid, 0,2828.8628,1380.1879,10.3639,2814.3599,1475.9866,10.3095, 7.0);
					}
				}
				case CHECKPOINT_4:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,2814.3599,1475.9866,10.3095,2659.5176,1475.7146,10.4297, 7.0);
				}
				case CHECKPOINT_5:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,2659.5176,1475.7146,10.4297,2517.8826,1476.1008,10.2923, 7.0);
				}
				case CHECKPOINT_6:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,2517.8826,1476.1008,10.2923,2384.1243,1475.2242,10.2840, 7.0);
				}
				case CHECKPOINT_7:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,2384.1243,1475.2242,10.2840,2364.9900,1390.1920,10.2840, 7.0);
				}
				case CHECKPOINT_8:
                {
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,2364.9900,1390.1920,10.2840,2296.5461,1375.8248,10.2982, 7.0);
				}
				case CHECKPOINT_9:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,2296.5461,1375.8248,10.2982,2204.2114,1375.5630,10.2840, 7.0);
				}
				case CHECKPOINT_10:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 1,2204.2114,1375.5630,10.2840,2086.9465,1375.3234,10.2840, 7.0);
					BusStop[playerid] = 2;
				}
				case CHECKPOINT_11:
				{
				    if(BusStop[playerid] == 2)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_13;
						SetPlayerRaceCheckpoint(playerid, 0,2086.9465,1375.3234,10.2840,2069.2205,1415.6626,10.2840, 7.0);
					}
				}
				case CHECKPOINT_13:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_14;
					SetPlayerRaceCheckpoint(playerid, 0,2069.2205,1415.6626,10.2840,2068.6787,1582.6388,10.2917, 7.0);
				}
				case CHECKPOINT_14:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_15;
					SetPlayerRaceCheckpoint(playerid, 0,2068.6787,1582.6388,10.2917,2074.7043,1689.3260,10.2839, 7.0);
				}
				case CHECKPOINT_15:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_16;
					SetPlayerRaceCheckpoint(playerid, 1,2074.7043,1689.3260,10.2839,2114.3967,1792.6563,10.2840, 7.0);
					BusStop[playerid] = 3;
				}
				case CHECKPOINT_16:
				{
    				if(BusStop[playerid] == 3)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_17;
						SetPlayerRaceCheckpoint(playerid, 0,2114.3967,1792.6563,10.2840,2149.7122,1963.9828,10.2917, 7.0);
					}
				}
				case CHECKPOINT_17:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_18;
					SetPlayerRaceCheckpoint(playerid, 0,2149.7122,1963.9828,10.2917,2148.1357,2141.9585,10.2840, 7.0);
				}
				case CHECKPOINT_18:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_19;
					SetPlayerRaceCheckpoint(playerid, 0,2148.1357,2141.9585,10.2840,2179.1367,2309.8945,10.2288, 7.0);
				}
				case CHECKPOINT_19:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_20;
					SetPlayerRaceCheckpoint(playerid, 0,2179.1367,2309.8945,10.2288,2226.5276,2378.4978,10.2878, 7.0);
				}
				case CHECKPOINT_20:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_21;
					SetPlayerRaceCheckpoint(playerid, 0,2226.5276,2378.4978,10.2878,2229.6680,2434.6697,10.2840, 7.0);
				}
				case CHECKPOINT_21:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_22;
					SetPlayerRaceCheckpoint(playerid, 1,2229.6680,2434.6697,10.2840,2228.9421,2499.6650,10.2839, 7.0);
					BusStop[playerid] = 4;
				}
				case CHECKPOINT_22:
				{
    				if(BusStop[playerid] == 4)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_23;
						SetPlayerRaceCheckpoint(playerid, 0,2228.9421,2499.6650,10.2839,2363.8604,2510.9553,10.4234, 7.0);
					}
				}
				case CHECKPOINT_23:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_24;
					SetPlayerRaceCheckpoint(playerid, 0,2363.8604,2510.9553,10.4234,2389.9612,2577.9036,11.3211, 7.0);
				}
				case CHECKPOINT_24:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_25;
					SetPlayerRaceCheckpoint(playerid, 0,2389.9612,2577.9036,11.3211,2389.6365,2700.9473,10.2906, 7.0);
				}
				case CHECKPOINT_25:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_26;
					SetPlayerRaceCheckpoint(playerid, 0,2389.6365,2700.9473,10.2906,2246.9343,2715.1528,10.2840, 7.0);
				}
				case CHECKPOINT_26:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_27;
					SetPlayerRaceCheckpoint(playerid, 0,2246.9343,2715.1528,10.2840,2230.0378,2740.6116,10.2839, 7.0);
				}
				case CHECKPOINT_27:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_28;
					SetPlayerRaceCheckpoint(playerid, 1,2230.0378,2740.6116,10.2839,2197.9922,2776.2000,10.2840, 7.0);
					BusStop[playerid] = 5;
				}
				case CHECKPOINT_28:
				{
    				if(BusStop[playerid] == 5)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_29;
						SetPlayerRaceCheckpoint(playerid, 0,2197.9922,2776.2000,10.2840,2085.8945,2758.1282,10.2840, 7.0);
					}
				}
				case CHECKPOINT_29:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_30;
					SetPlayerRaceCheckpoint(playerid, 0,2085.8945,2758.1282,10.2840,2042.2162,2744.7126,10.2840, 7.0);
				}
				case CHECKPOINT_30:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_31;
					SetPlayerRaceCheckpoint(playerid, 0,2042.2162,2744.7126,10.2840,1921.1859,2744.5645,10.2839, 7.0);
				}
				case CHECKPOINT_31:
	            {
                    AutoBusCheck[playerid]++;
                    pAutoBusLV[playerid] = CHECKPOINT_32;
                    SetPlayerRaceCheckpoint(playerid, 0,1921.1859,2744.5645,10.2839,1888.0192,2715.6758,10.2840, 7.0);
				}
				case CHECKPOINT_32:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_33;
					SetPlayerRaceCheckpoint(playerid, 0,1888.0192,2715.6758,10.2840,1703.9749,2714.9016,10.2840, 7.0);
				}
				case CHECKPOINT_33:
				{
   					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_34;
					SetPlayerRaceCheckpoint(playerid, 0,1703.9749,2714.9016,10.2840,1666.0341,2735.6807,10.2840, 7.0);
				}
				case CHECKPOINT_34:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_35;
					SetPlayerRaceCheckpoint(playerid, 0,1666.0341,2735.6807,10.2840,1560.4751,2735.8142,10.2853, 7.0);
				}
				case CHECKPOINT_35:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_36;
					SetPlayerRaceCheckpoint(playerid, 0,1560.4751,2735.8142,10.2853,1485.9957,2715.2500,10.2840, 7.0);
				}
				case CHECKPOINT_36:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_37;
					SetPlayerRaceCheckpoint(playerid, 0,1485.9957,2715.2500,10.2840,1465.6173,2687.4531,10.2840, 7.0);
				}
				case CHECKPOINT_37:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_38;
					SetPlayerRaceCheckpoint(playerid, 0,1465.6173,2687.4531,10.2840,1444.5378,2675.7119,10.2840, 7.0);
				}
				case CHECKPOINT_38:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_40;
					SetPlayerRaceCheckpoint(playerid, 1,1444.5378,2675.7119,10.2840,1409.9070,2697.7488,10.3798, 7.0);
					BusStop[playerid] = 6;
				}
				case CHECKPOINT_40:
				{
    				if(BusStop[playerid] == 6)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_41;
						SetPlayerRaceCheckpoint(playerid, 0,1409.9070,2697.7488,10.3798,1370.2880,2715.7729,10.2839, 7.0);
					}
				}
				case CHECKPOINT_41:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_42;
					SetPlayerRaceCheckpoint(playerid, 0,1370.2880,2715.7729,10.2839,1249.2789,2712.3035,10.2839, 7.0);
				}
				case CHECKPOINT_42:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_43;
					SetPlayerRaceCheckpoint(playerid, 0,1249.2789,2712.3035,10.2839,1246.5571,2595.5288,10.2840, 7.0);
				}
				case CHECKPOINT_43:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_44;
					SetPlayerRaceCheckpoint(playerid, 0,1246.5571,2595.5288,10.2840,1369.0684,2587.7476,10.2878, 7.0);
				}
				case CHECKPOINT_44:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_45;
					SetPlayerRaceCheckpoint(playerid, 0,1369.0684,2587.7476,10.2878,1462.0663,2588.6887,10.2840, 7.0);
				}
				case CHECKPOINT_45:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_46;
					SetPlayerRaceCheckpoint(playerid, 0,1462.0663,2588.6887,10.2840,1475.2533,2514.2974,10.9185, 7.0);
				}
				case CHECKPOINT_46:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_47;
					SetPlayerRaceCheckpoint(playerid, 0,1475.2533,2514.2974,10.9185,1489.8453,2390.9673,10.2839, 7.0);
				}
				case CHECKPOINT_47:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_48;
					SetPlayerRaceCheckpoint(playerid, 0,1489.8453,2390.9673,10.2839,1561.2063,2389.6877,10.2839, 7.0);
				}
				case CHECKPOINT_48:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_49;
					SetPlayerRaceCheckpoint(playerid, 0,1561.2063,2389.6877,10.2839,1565.0935,2288.2080,10.2918, 7.0);
				}
				case CHECKPOINT_49:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_50;
					SetPlayerRaceCheckpoint(playerid, 0,1565.0935,2288.2080,10.2918,1590.7365,2270.8059,10.2840, 7.0);
				}
				case CHECKPOINT_50:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_51;
					SetPlayerRaceCheckpoint(playerid, 0,1590.7365,2270.8059,10.2840,1654.7103,2270.6260,10.2840, 7.0);
				}
				case CHECKPOINT_51:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_52;
					SetPlayerRaceCheckpoint(playerid, 1,1654.7103,2270.6260,10.2840,1711.2433,2271.6030,10.2840, 7.0);
					BusStop[playerid] = 7;
				}
				case CHECKPOINT_52:
				{
    				if(BusStop[playerid] == 7)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_53;
						SetPlayerRaceCheckpoint(playerid, 0,1711.2433,2271.6030,10.2840,1725.0824,2244.9504,10.2839, 7.0);
					}
				}
				case CHECKPOINT_53:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_54;
					SetPlayerRaceCheckpoint(playerid, 0,1725.0824,2244.9504,10.2839,1725.9111,2187.3657,10.2839, 7.0);
				}
				case CHECKPOINT_54:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_55;
					SetPlayerRaceCheckpoint(playerid, 0,1725.9111,2187.3657,10.2839,1705.2535,2157.3870,10.2839, 7.0);
				}
				case CHECKPOINT_55:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_56;
					SetPlayerRaceCheckpoint(playerid, 0,1705.2535,2157.3870,10.2839,1704.9137,1987.6484,10.2840, 7.0);
				}
				case CHECKPOINT_56:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_57;
					SetPlayerRaceCheckpoint(playerid, 0,1704.9137,1987.6484,10.2840,1702.7605,1877.9966,10.2839, 7.0);
				}
				case CHECKPOINT_57:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_58;
					SetPlayerRaceCheckpoint(playerid, 0,1702.7605,1877.9966,10.2839,1619.0281,1876.2834,10.2840, 7.0);
				}
				case CHECKPOINT_58:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_59;
					SetPlayerRaceCheckpoint(playerid, 1,1619.0281,1876.2834,10.2840,1502.9625,1875.4736,10.2840, 7.0);
					BusStop[playerid] = 8;
				}
				case CHECKPOINT_59:
				{
      				if(BusStop[playerid] == 8)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_60;
						SetPlayerRaceCheckpoint(playerid, 0,1502.9625,1875.4736,10.2840,1332.6865,1875.2997,10.2844, 7.0);
					}
				}
				case CHECKPOINT_60:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_61;
					SetPlayerRaceCheckpoint(playerid, 0,1332.6865,1875.2997,10.2844,1320.9811,1817.3921,10.2840, 7.0);
				}
				case CHECKPOINT_61:
				{
					AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_62;
					SetPlayerRaceCheckpoint(playerid, 0,1320.9811,1817.3921,10.2840,1152.5814,1815.7042,10.2838, 7.0);
				}
				case CHECKPOINT_62:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_63;
					SetPlayerRaceCheckpoint(playerid, 0,1152.5814,1815.7042,10.2838,1074.5522,1815.3824,10.2839, 7.0);
				}
				case CHECKPOINT_63:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 0,1074.5522,1815.3824,10.2839,1053.5845,1761.3792,10.4324, 7.0);
				}
				case CHECKPOINT_64:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_65;
					SetPlayerRaceCheckpoint(playerid, 0,1053.5845,1761.3792,10.4324,1060.8735,1730.4946,10.4324, 7.0);
				}
				case CHECKPOINT_65:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_66;
					SetPlayerRaceCheckpoint(playerid, 1,1060.8735,1730.4946,10.4324,1069.7362,1759.8049,10.4324, 7.0);
					BusStop[playerid] = 9;
				}
				case CHECKPOINT_66:
				{
      				if(BusStop[playerid] == 9)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_67;
						SetPlayerRaceCheckpoint(playerid, 0,1069.7362,1759.8049,10.4324,1078.1500,1810.8596,10.2840, 7.0);
					}
				}
				case CHECKPOINT_67:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_68;
					SetPlayerRaceCheckpoint(playerid, 0,1078.1500,1810.8596,10.2840,1186.6622,1810.7556,12.3261, 7.0);
				}
				case CHECKPOINT_68:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_69;
					SetPlayerRaceCheckpoint(playerid, 0,1186.6622,1810.7556,12.3261,1327.1339,1815.5195,10.2839, 7.0);
				}
				case CHECKPOINT_69:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_70;
					SetPlayerRaceCheckpoint(playerid, 0,1327.1339,1815.5195,10.2839,1333.8208,1870.0508,10.2839, 7.0);
				}
				case CHECKPOINT_70:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_71;
					SetPlayerRaceCheckpoint(playerid, 0,1333.8208,1870.0508,10.2839,1477.2328,1870.9011,10.2964, 7.0);
				}
				case CHECKPOINT_71:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_72;
					SetPlayerRaceCheckpoint(playerid, 0,1477.2328,1870.9011,10.2964,1631.5552,1871.2821,10.2893, 7.0);
				}
				case CHECKPOINT_72:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_73;
					SetPlayerRaceCheckpoint(playerid, 0,1631.5552,1871.2821,10.2893,1644.7585,1852.9585,10.2878, 7.0);
				}
				case CHECKPOINT_73:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_74;
					SetPlayerRaceCheckpoint(playerid, 1,1644.7585,1852.9585,10.2878,1645.2117,1728.0068,10.2839, 7.0);
					BusStop[playerid] = 10;
				}
				case CHECKPOINT_74:
				{
      				if(BusStop[playerid] == 10)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_75;
						SetPlayerRaceCheckpoint(playerid, 0,1645.2117,1728.0068,10.2839,1703.2483,1710.3271,10.2840, 7.0);
					}
				}
				case CHECKPOINT_75:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_76;
					SetPlayerRaceCheckpoint(playerid, 0,1703.2483,1710.3271,10.2840,1738.2789,1649.0994,9.1001, 7.0);
				}
				case CHECKPOINT_76:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_77;
					SetPlayerRaceCheckpoint(playerid, 0,1738.2789,1649.0994,9.1001,1722.6511,1582.0980,10.0406, 7.0);
				}
				case CHECKPOINT_77:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_78;
					SetPlayerRaceCheckpoint(playerid, 0,1722.6511,1582.0980,10.0406,1728.9796,1529.7086,10.2803, 7.0);
				}
				case CHECKPOINT_78:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_79;
					SetPlayerRaceCheckpoint(playerid, 1,1728.9796,1529.7086,10.2803,1710.9683,1412.2664,10.1081, 7.0);
					BusStop[playerid] = 11;
				}
				case CHECKPOINT_79:
				{
      				if(BusStop[playerid] == 11)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_80;
						SetPlayerRaceCheckpoint(playerid, 0,1710.9683,1412.2664,10.1081,1726.7715,1289.0037,10.2839, 7.0);
					}
				}
				case CHECKPOINT_80:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_81;
					SetPlayerRaceCheckpoint(playerid, 0,1726.7715,1289.0037,10.2839,1751.2716,1270.8110,11.2683, 7.0);
				}
				case CHECKPOINT_81:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_82;
					SetPlayerRaceCheckpoint(playerid, 0,1751.2716,1270.8110,11.2683,1928.5764,1271.2592,10.2840, 7.0);
				}
				case CHECKPOINT_82:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_83;
					SetPlayerRaceCheckpoint(playerid, 0,1928.5764,1271.2592,10.2840,2029.4401,1271.5649,10.2840, 7.0);
				}
				case CHECKPOINT_83:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_84;
					SetPlayerRaceCheckpoint(playerid, 0,2029.4401,1271.5649,10.2840,2044.2627,1244.0823,10.2839, 7.0);
				}
				case CHECKPOINT_84:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_85;
					SetPlayerRaceCheckpoint(playerid, 0,2044.2627,1244.0823,10.2839,2039.5966,1028.4305,10.2840, 7.0);
				}
				case CHECKPOINT_85:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_86;
					SetPlayerRaceCheckpoint(playerid, 1,2039.5966,1028.4305,10.2840,2044.6298,984.1657,10.2768, 7.0);
					BusStop[playerid] = 12;
				}
				case CHECKPOINT_86:
				{
      				if(BusStop[playerid] == 12)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_87;
						SetPlayerRaceCheckpoint(playerid, 0,2044.6298,984.1657,10.2768,2087.7178,971.6008,10.2840, 7.0);
					}
				}
				case CHECKPOINT_87:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_88;
					SetPlayerRaceCheckpoint(playerid, 0,2087.7178,971.6008,10.2840,2175.7395,970.8600,10.3244, 7.0);
				}
				case CHECKPOINT_88:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_89;
					SetPlayerRaceCheckpoint(playerid, 1,2175.7395,970.8600,10.3244,2331.0356,970.7445,10.2840, 7.0);
					BusStop[playerid] = 13;
				}
				case CHECKPOINT_89:
				{
      				if(BusStop[playerid] == 13)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_90;
						SetPlayerRaceCheckpoint(playerid, 0,2331.0356,970.7445,10.2840,2349.6572,1055.0546,10.2878, 7.0);
					}
				}
				case CHECKPOINT_90:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_91;
					SetPlayerRaceCheckpoint(playerid, 0,2349.6572,1055.0546,10.2878,2349.4419,1182.9208,10.2875, 7.0);
				}
				case CHECKPOINT_91:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_92;
					SetPlayerRaceCheckpoint(playerid, 0,2349.4419,1182.9208,10.2875,2412.1008,1190.5602,10.2840, 7.0);
				}
				case CHECKPOINT_92:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_93;
					SetPlayerRaceCheckpoint(playerid, 0,2412.1008,1190.5602,10.2840,2526.6353,1190.4495,10.6134, 7.0);
				}
				case CHECKPOINT_93:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_94;
					SetPlayerRaceCheckpoint(playerid, 0,2526.6353,1190.4495,10.6134,2609.3452,1207.6649,10.2839, 7.0);
				}
				case CHECKPOINT_94:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_95;
					SetPlayerRaceCheckpoint(playerid, 1,2609.3452,1207.6649,10.2839,2612.6018,1248.3743,10.3624, 7.0);
					BusStop[playerid] = 14;
				}
				case CHECKPOINT_95:
				{
      				if(BusStop[playerid] == 14)
				    {
                    	BusStopTime[playerid] = 11;
                    	SendClientMessage(playerid, COLOR_GREEN, "Остановка. Ждите пассажиров");
						ProxDetector(10.0, playerid, "Автобус отъезжает через 10 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						pAutoBusLV[playerid] = CHECKPOINT_96;
						SetPlayerRaceCheckpoint(playerid, 0,2612.6018,1248.3743,10.3624,2629.3521,1300.4755,10.2839, 7.0);
					}
				}
				case CHECKPOINT_96:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_97;
					SetPlayerRaceCheckpoint(playerid, 0,2629.3521,1300.4755,10.2839,2660.7747,1311.1750,10.5268, 7.0);
				}
				case CHECKPOINT_97:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_98;
					SetPlayerRaceCheckpoint(playerid, 0,2660.7747,1311.1750,10.5268,2804.4221,1309.3159,10.3621, 7.0);
				}
				case CHECKPOINT_98:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_99;
					SetPlayerRaceCheckpoint(playerid, 0,2804.4221,1309.3159,10.3621,2807.5671,1284.1392,10.3659, 7.0);
				}
				case CHECKPOINT_99:
				{
                   	AutoBusCheck[playerid]++;
					pAutoBusLV[playerid] = CHECKPOINT_1;
					SetPlayerRaceCheckpoint(playerid, 0,2807.5671,1284.1392,10.3659,2817.6255,1265.3569,10.3652, 7.0);
				}
			}
	    }
	}
	new tmp2[30];
	if(RaceCP[playerid] == 50) { RaceCP[playerid] = 51; DisablePlayerRaceCheckpoint(playerid); 	motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[1][0],velogonka[1][1],velogonka[1][2], velogonka[2][0],velogonka[2][1],velogonka[2][2],8.0); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 51) { RaceCP[playerid] = 52; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[2][0],velogonka[2][1],velogonka[2][2],velogonka[3][0],velogonka[3][1],velogonka[3][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 52) { RaceCP[playerid] = 53; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[3][0],velogonka[3][1],velogonka[3][2],velogonka[4][0],velogonka[4][1],velogonka[4][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 53) { RaceCP[playerid] = 54; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[4][0],velogonka[4][1],velogonka[4][2],velogonka[5][0],velogonka[5][1],velogonka[5][2],8);	format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 54) { RaceCP[playerid] = 55; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[5][0],velogonka[5][1],velogonka[5][2],velogonka[6][0],velogonka[6][1],velogonka[6][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 55) { RaceCP[playerid] = 56; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[6][0],velogonka[6][1],velogonka[6][2],velogonka[7][0],velogonka[7][1],velogonka[7][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 56) { RaceCP[playerid] = 57; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[7][0],velogonka[7][1],velogonka[7][2],velogonka[8][0],velogonka[8][1],velogonka[8][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 57) { RaceCP[playerid] = 58; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[8][0],velogonka[8][1],velogonka[8][2],velogonka[9][0],velogonka[9][1],velogonka[9][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 58) { RaceCP[playerid] = 59; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[9][0],velogonka[9][1],velogonka[9][2],velogonka[10][0],velogonka[10][1],velogonka[10][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 59) { RaceCP[playerid] = 60; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[10][0],velogonka[10][1],velogonka[10][2],velogonka[0][0],velogonka[0][1],velogonka[0][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 60) { RaceCP[playerid] = 50; DisablePlayerRaceCheckpoint(playerid); motochet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,velogonka[0][0],velogonka[0][1],velogonka[0][2],velogonka[1][0],velogonka[1][1],velogonka[1][2],8); format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	if(motochet[playerid] == 35)
	{
        DisablePlayerRaceCheckpoint(playerid);
        motochet[playerid] +=1;
		SetPlayerRaceCheckpoint(playerid,1,gonka[0][0],gonka[0][1],gonka[0][2],0.0,0.0,0.0,8);
		format(tmp2, sizeof(tmp2), "~b~%d/35", motochet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	}
	if(motochet[playerid] == 36)
	{
        RaceCP[playerid] = 37;
        SetPlayerRaceCheckpoint(playerid,1,gonka[0][0],gonka[0][1],gonka[0][2],0.0,0.0,0.0,8);
	}
	new name[MAX_PLAYER_NAME];
	if(RaceCP[playerid] == 37)
	{
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		GetPlayerName(playerid, name, sizeof(name));
		motochet[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2690.2271,-1700.9700,10.4215);
		SetPlayerFacingAngle(playerid, 45.9013);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		if(FirstmotoWinner == 999)
		{
			FirstmotoWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Playermoto[i] != 0)
					{
					    new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 1st",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 1 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 15 000 рублей");
						PlayerInfo[playerid][pCash] +=15000;
						Playermoto[playerid] = 0;
						motochet[playerid] = 0;
						EndingmotoRound = 1;
						return true;

					}
				}
			}
		}
		else if(SecondmotoWinner == 999)
		{
			SecondmotoWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Playermoto[i] != 0 )
					{
					    new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 2nd",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 2 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 10 000 рублей");
						PlayerInfo[playerid][pCash] +=10000;
						Playermoto[playerid] = 0;
						EndingmotoRound = 1;
						motochet[playerid] = 0;
						return true;
					}
				}
			}
		}
		else if(ThirdmotoWinner == 999)
		{
			ThirdmotoWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Playermoto[i] != 0)
					{
					    new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 3d",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 3 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 5 000 рублей");
						PlayerInfo[playerid][pCash] +=5000;
						Playermoto[playerid] = 0;
						EndingmotoRound = 1;
						motochet[playerid] = 0;
						return true;
					}
				}
			}
		}
	}
	if(RaceCP[playerid] == 10) { RaceCP[playerid] = 11; DisablePlayerRaceCheckpoint(playerid); 	chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[1][0],race[1][1],race[1][2], race[2][0],race[2][1],race[2][2],8.0); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 11) { RaceCP[playerid] = 12; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[2][0],race[2][1],race[2][2],race[3][0],race[3][1],race[3][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 12) { RaceCP[playerid] = 13; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[3][0],race[3][1],race[3][2],race[4][0],race[4][1],race[4][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 13) { RaceCP[playerid] = 14; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[4][0],race[4][1],race[4][2],race[5][0],race[5][1],race[5][2],8);	format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 14) { RaceCP[playerid] = 15; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[5][0],race[5][1],race[5][2],race[6][0],race[6][1],race[6][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 15) { RaceCP[playerid] = 16; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[6][0],race[6][1],race[6][2],race[7][0],race[7][1],race[7][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 16) { RaceCP[playerid] = 17; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[7][0],race[7][1],race[7][2],race[8][0],race[8][1],race[8][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 17) { RaceCP[playerid] = 18; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[8][0],race[8][1],race[8][2],race[9][0],race[9][1],race[9][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 18) { RaceCP[playerid] = 19; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[9][0],race[9][1],race[9][2],race[10][0],race[10][1],race[10][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 19) { RaceCP[playerid] = 20; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[10][0],race[10][1],race[10][2],race[11][0],race[11][1],race[11][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 20) { RaceCP[playerid] = 21; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[11][0],race[11][1],race[11][2],race[12][0],race[12][1],race[12][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 21) { RaceCP[playerid] = 22; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[12][0],race[12][1],race[12][2],race[13][0],race[13][1],race[13][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 22) { RaceCP[playerid] = 23; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[13][0],race[13][1],race[13][2],race[14][0],race[14][1],race[14][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 23) { RaceCP[playerid] = 24; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[14][0],race[14][1],race[14][2],race[15][0],race[15][1],race[15][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 24) { RaceCP[playerid] = 25; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[15][0],race[15][1],race[15][2],race[16][0],race[16][1],race[16][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 25) { RaceCP[playerid] = 26; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[16][0],race[16][1],race[16][2],race[17][0],race[17][1],race[17][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 26) { RaceCP[playerid] = 27; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[17][0],race[17][1],race[17][2],race[18][0],race[18][1],race[18][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 27) { RaceCP[playerid] = 28; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[18][0],race[18][1],race[18][2],race[19][0],race[19][1],race[19][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 28) { RaceCP[playerid] = 29; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[19][0],race[19][1],race[19][2],race[20][0],race[20][1],race[20][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 29) { RaceCP[playerid] = 30; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[20][0],race[20][1],race[20][2],race[21][0],race[21][1],race[21][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	else if(RaceCP[playerid] == 30) { RaceCP[playerid] = 31; DisablePlayerRaceCheckpoint(playerid); chet[playerid] +=1; SetPlayerRaceCheckpoint(playerid,0,race[21][0],race[21][1],race[21][2],race[22][0],race[22][1],race[22][2],8); format(tmp2, sizeof(tmp2), "~b~%d/22", chet[playerid]); GameTextForPlayer(playerid, tmp2, 5000, 3);}
	if(chet[playerid] == 22)
	{
		SetPlayerRaceCheckpoint(playerid,1,race[0][0],race[0][1],race[0][2],0.0,0.0,0.0,8);
		RaceCP[playerid] = 31;
	}
	if(RaceCP[playerid] == 31)
	{
		GetPlayerName(playerid, name, sizeof(name));
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerInterior(playerid, 3);
		chet[playerid] = 0;
		DestroyVehicle(GetPlayerVehicleID(playerid));
		if(FirstRaceWinner == 999)
		{
			FirstRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
						new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 1st", name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 1 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 15000 вирт");
						PlayerInfo[playerid][pCash] += 15000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						SetPlayerVirtualWorld(playerid, 0);
						DestroyVehicle(GetPlayerVehicleID(playerid));
                        new iniFile = ini_openFile("gamefiles/racelist.ini");
                        ini_removeKey(iniFile, "1." );
                        ini_setString(iniFile, "1.", name);
                        ini_closeFile(iniFile);
						return true;
					}
				}
			}
		}
		else if(SecondRaceWinner == 999)
		{
			SecondRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
					    new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 2nd",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 2 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 10000 вирт");
						PlayerInfo[playerid][pCash] += 10000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						SetPlayerVirtualWorld(playerid, 0);
						DestroyVehicle(GetPlayerVehicleID(playerid));
                        new iniFile = ini_openFile("gamefiles/racelist.ini");
                        ini_removeKey(iniFile, "2." );
                        ini_setString(iniFile, "2.", name);
                        ini_closeFile(iniFile);
						return true;
					}
				}
			}
		}
		else if(ThirdRaceWinner == 999)
		{
			ThirdRaceWinner = playerid;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerRacing[i] != 0)
					{
					    new string[90];
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s finished - 3rd",name);
						GameTextForPlayer(i, string, 2500, 3);
						SendClientMessage(playerid, 0x6495EDFF, "Поздравляем! Вы заняли 3 место");
						SendClientMessage(playerid, 0x6495EDFF, "Вы выиграли 5000 вирт");
						PlayerInfo[playerid][pCash] += 5000;
						PlayerRacing[playerid] = 0;
						EndingRaceRound = 1;
						SetPlayerInterior(playerid, 3);
						DisablePlayerRaceCheckpoint(playerid);
						SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
						SetPlayerFacingAngle(playerid, 39.0413);
						SetPlayerVirtualWorld(playerid, 0);
						DestroyVehicle(GetPlayerVehicleID(playerid));
                        new iniFile = ini_openFile("gamefiles/racelist.ini");
                        ini_removeKey(iniFile, "3." );
                        ini_setString(iniFile, "3.", name);
                        ini_closeFile(iniFile);
						return true;
					}
				}
			}
		}
		PlayerRacing[playerid] = 0;
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerInterior(playerid, 3);
		chet[playerid] = 0;
		SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
		SetPlayerFacingAngle(playerid, 39.0413);
		SetPlayerVirtualWorld(playerid, 0);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	return true;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

public OnRconCommand(cmd[])
{
	return true;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
		printf("FAILED RCON LOGIN BY IP %s USING PASSWORD %s",ip, password);
        new pip[16];
		new name[MAX_PLAYER_NAME];
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            GetPlayerName(i, name, MAX_PLAYER_NAME);
            if(!strcmp(ip, pip, true))
            {
                new string[64];
				format(string,sizeof(string), "[Защита] %s забанен за попытку взлома RCON.",name);
				GetPlayerIp(i,pip,sizeof(pip));
				format(string,sizeof(string), "ID: %d | IP: %s",i,pip);
			    ABroadCast(COLOR_LIGHTRED, string, 1);
				PlayerInfo[i][pLocked] = 1;
				BanEx(i, string);
		    	return true;
            }
        }
    }
    return true;
}

public OnObjectMoved(objectid)
{
new Float:x, Float:y, Float:z;
	if(objectid == salut[0]) GetObjectPos(salut[0],x,y,z), DestroyObject(salut[0]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[1]) GetObjectPos(salut[1],x,y,z), DestroyObject(salut[1]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[2]) GetObjectPos(salut[2],x,y,z), DestroyObject(salut[2]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[3]) GetObjectPos(salut[3],x,y,z), DestroyObject(salut[3]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[4]) GetObjectPos(salut[4],x,y,z), DestroyObject(salut[4]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[5]) GetObjectPos(salut[5],x,y,z), DestroyObject(salut[5]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[6]) GetObjectPos(salut[6],x,y,z), DestroyObject(salut[6]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[7]) GetObjectPos(salut[7],x,y,z), DestroyObject(salut[7]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[8]) GetObjectPos(salut[8],x,y,z), DestroyObject(salut[8]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[9]) GetObjectPos(salut[9],x,y,z), DestroyObject(salut[9]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[10]) GetObjectPos(salut[10],x,y,z), DestroyObject(salut[10]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[11]) GetObjectPos(salut[11],x,y,z), DestroyObject(salut[11]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[12]) GetObjectPos(salut[12],x,y,z), DestroyObject(salut[12]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[13]) GetObjectPos(salut[13],x,y,z), DestroyObject(salut[13]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[14]) GetObjectPos(salut[14],x,y,z), DestroyObject(salut[14]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[15]) GetObjectPos(salut[15],x,y,z), DestroyObject(salut[15]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[16]) GetObjectPos(salut[16],x,y,z), DestroyObject(salut[16]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[17]) GetObjectPos(salut[17],x,y,z), DestroyObject(salut[17]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[18]) GetObjectPos(salut[18],x,y,z), DestroyObject(salut[18]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[19]) GetObjectPos(salut[19],x,y,z), DestroyObject(salut[19]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[20]) GetObjectPos(salut[20],x,y,z), DestroyObject(salut[20]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[21]) GetObjectPos(salut[21],x,y,z), DestroyObject(salut[21]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[22]) GetObjectPos(salut[22],x,y,z), DestroyObject(salut[22]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[23]) GetObjectPos(salut[23],x,y,z), DestroyObject(salut[23]), CreateExplosion(x, y , z, 11, 0.5);
    if(objectid == salut[24])
    {
     GetObjectPos(salut[24],x,y,z), DestroyObject(salut[24]), CreateExplosion(x, y , z, 11, 0.5);
     if(salut[25] == 45){ DestroyObject(salut[26]); salut[25] = -1; }
     else salutik();
    }
	return true;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return true;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(Dpic[playerid] == 1) return false; else Dpic[playerid] = 1,GetPlayerPos(playerid,PosPic[0][playerid],PosPic[1][playerid],PosPic[2][playerid]);
	if(pickupid == porterinfo)
    {
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s%s%s%s%s%s",
		rabotaMSG[0],rabotaMSG[1],rabotaMSG[2],rabotaMSG[3],rabotaMSG[4],rabotaMSG[5],rabotaMSG[6],rabotaMSG[7],rabotaMSG[8],rabotaMSG[9],rabotaMSG[10],rabotaMSG[11]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация о работе", rabotadialog, "Готово", "");
    }
 	else if(pickupid == AdmVillagePick[0])
	{
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid, 0x6495EDFF, "Вы получили парашют");
        PlayerPlaySound(playerid,1052,0,0,0);
	}
	else if(pickupid == AdmVillagePick[2])
	{
		if(PlayerInfo[playerid][pAdmin] != 0)
		{
            ShowPlayerDialog(playerid,9328,DIALOG_STYLE_MSGBOX, "Полёт на джетпаке", "Вы действительно хотите полетать на джетпаке?", "Да","Нет");
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDFF, "Вы не администратор!");
        }
	}
	else if(pickupid == zerorc[0])
	{
        SetPlayerInterior(playerid, 6);
        SetPlayerFacingAngle(playerid,0.0);
        SetPlayerPos(playerid,-2239.7649,130.0027,1035.4141);
        SetPlayerCheckpoint(playerid,-2236.9424,130.6598,1035.4141, 1.0);
	}
	else if(pickupid == zerorc[1])
	{
        SetPlayerInterior(playerid, 0);
        SetPlayerFacingAngle(playerid,90.0);
        SetPlayerPos(playerid,-2244.6484,128.8533,35.3203);
        DisablePlayerCheckpoint(playerid);
	}
	else if(pickupid == hatpickup)
	{
		SetPlayerInterior(playerid, 5);
  		SetPlayerVirtualWorld(playerid, 1);
    	ShowMenuForPlayer(hatmenu, playerid);
	    new rand = random(sizeof(gInviteSpawns));
	    SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	    SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
	    SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	    SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	    TogglePlayerControllable(playerid, 0);
	}
	else if(pickupid == ApsPickst[0])
	{
        SetPlayerInterior(playerid,1);
        SetPlayerFacingAngle(playerid,270.0);
        SetPlayerPos(playerid,-1857.3865,-3065.0291,21.2724);
	}
	else if(pickupid == ApsPickst[1])
	{
        SetPlayerInterior(playerid,1);
        SetPlayerFacingAngle(playerid,145.0);
        SetPlayerPos(playerid,-1910.9222,-2947.7786,26.5688);
	}
	else if(pickupid == hitman)
	{
	    //ShowPlayerDialog(playerid,9026,DIALOG_STYLE_LIST,"[1]Маскировка\n[2]Оружие\n[3]
        SendClientMessage(playerid,COLOR_GREY,"Арсенал пока что закрыт");
	}
	else if(pickupid == ApsPick[0])
	{
        SetPlayerInterior(playerid,1);
        SetPlayerFacingAngle(playerid,270.0);
        SetPlayerVirtualWorld(playerid,1);
        SetPlayerPos(playerid,-1920.1316,-2947.4692,27.7000);
        PlayerInfo[playerid][pAp] = 1;
	}
	else if(pickupid == ApsPick[1])
	{
        SetPlayerInterior(playerid,1);
        SetPlayerFacingAngle(playerid,270.0);
        SetPlayerVirtualWorld(playerid,2);
        PlayerInfo[playerid][pAp] = 2;
        SetPlayerPos(playerid,-1920.1316,-2947.4692,27.7000);
	}
	else if(pickupid == ApsPick[2])
	{
        SetPlayerInterior(playerid,1);
        SetPlayerFacingAngle(playerid,270.0);
        SetPlayerVirtualWorld(playerid,3);
        PlayerInfo[playerid][pAp] = 3;
        SetPlayerPos(playerid,-1920.1316,-2947.4692,27.7000);
	}
	else if(pickupid == ApsExitPick)
	{
		if(PlayerInfo[playerid][pAp] == 1)
		{
            SetPlayerPos(playerid,1498.4246,-1583.7001,13.5469);
            SetPlayerFacingAngle(playerid,180.0);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pAp] = 0;
		}
		if(PlayerInfo[playerid][pAp] == 2)
		{
            SetPlayerPos(playerid,1325.7638,-1557.2356,13.5397);
            SetPlayerFacingAngle(playerid,140.0);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pAp] = 0;
		}
		if(PlayerInfo[playerid][pAp] == 3)
		{
            SetPlayerPos(playerid,1309.9026,-1368.7203,13.5525);
            SetPlayerFacingAngle(playerid,270.0);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pAp] = 0;
		}
		SetPlayerInterior(playerid,0);
	}
	else if(pickupid >= carjackpic[2] && pickupid == carjackpic[4])
    {
	    if(PlayerInfo[playerid][pJob] != 15) return SendClientMessage(playerid, 0x6495EDFF, "У вас уже есть работа");
	    DestroyVehicle(createdvehicles[playerid]);
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
  		createdvehicles[playerid] = CreateVehicle(462,X,Y,Z,170,0,0,300);
    	PutPlayerInVeh(playerid, createdvehicles[playerid], 0);
		CreatedCars[CreatedCar] = createdvehicles[playerid];
		UnLockCar(createdvehicles[playerid]);
		IsLocked[createdvehicles[playerid]] = 0;
		RepairVehicle(createdvehicles[playerid]);
		createdvehs ++;
	}
	else if(pickupid == sellpickup)
	{
        new gribcena = PlayerInfo[playerid][pMushrooms]*500;
        if(PlayerInfo[playerid][pFishLic] == 1)
        {
		    new fishcena = PlayerInfo[playerid][pFishes]/2;
		    new string[128];
		    format(string,sizeof(string), " [1] Продать всю рыбу\t\t(%d)[%d$] \n [2] Продать все грибы\t(%d)[%d$]",PlayerInfo[playerid][pFishes],fishcena,PlayerInfo[playerid][pMushrooms],gribcena);
            ShowPlayerDialog(playerid, 5461, DIALOG_STYLE_LIST, "Продажа", string, "Выбрать", "Отмена");
        }
        else
        {
            new fishcena = PlayerInfo[playerid][pFishes] / 10;
            new string[128];
		    SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на рыболовство, поэтому рыба стоит в 5 раз дешевле");
		    format(string,sizeof(string), " [1] Продать всю рыбу\t\t(%d)[%d$] \n [2] Продать все грибы\t(%d)[%d$]",PlayerInfo[playerid][pFishes],fishcena,PlayerInfo[playerid][pMushrooms],gribcena);
            ShowPlayerDialog(playerid, 5461, DIALOG_STYLE_LIST, "Продажа", string, "Выбрать", "Отмена");
		}
	}
	else if(pickupid == metro[0])
	{
        new listitems[] = " [1] Автовокзал\n [2] Площадь Родео(одежда)\n [3] Площадь Першинг(Мэрия)\n [4] Гэнтон(Гетто)\n [5] Восточный пляж(Вагос,стадион)\n [6] Джеферсон\n [7] Аэропорт ЛС\n [8] Пляж вероны(Аренда лодок)\n [9] Автосалон ЛС\n [10] Доки[ЛСа]\n [11] Пригород\n [12] МЧС ЛС";
		ShowPlayerDialog(playerid,2033,DIALOG_STYLE_LIST, "Метрополитен ЛС,Стоимость проезда - 200 вирт,новичкам - 0",listitems, "Выбрать", "Отмена");
	}
	else if(pickupid == metro[1])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[2])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[3])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[4])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 4);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[5])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 5);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[6])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 6);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[7])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 7);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[8])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 8);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[9])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 9);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[10])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 10);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[11])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 11);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[12])
	{
        SetPlayerInterior(playerid,3);
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerPos(playerid,362.2151,185.5133,1040.3378);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[13])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,1139.4435,-1758.5297,13.5884);
	    SetPlayerFacingAngle(playerid, 0.0);
	}
	else if(pickupid == metro[14])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,421.9315,-1506.0939,31.2372);
	    SetPlayerFacingAngle(playerid, 267.0);
	}
	else if(pickupid == metro[15])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,1422.5332,-1640.2747,13.5469);
	    SetPlayerFacingAngle(playerid, 270.0);
	}
	else if(pickupid == metro[16])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2238.8467,-1659.6322,15.4766);
	    SetPlayerFacingAngle(playerid, 344.8015);
	}
	else if(pickupid == metro[17])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2868.2310,-1465.8840,10.9611);
	    SetPlayerFacingAngle(playerid, 270.0);
	}
	else if(pickupid == metro[18])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2077.6460,-1205.0494,23.9327);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == metro[19])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,1952.8458,-2175.7122,13.5469);
	    SetPlayerFacingAngle(playerid, 0.0);
	}
	else if(pickupid == metro[20])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,847.1652,-1821.7908,12.1793);
	    SetPlayerFacingAngle(playerid, 180.0);
	}
	else if(pickupid == metro[21])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,480.1571,-1281.2893,15.5989);
	    SetPlayerFacingAngle(playerid, 270.0);
	}
	else if(pickupid == metro[22])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2614.2930,-2411.2554,13.6299);
	    SetPlayerFacingAngle(playerid, 0.0);
	}
	else if(pickupid == metro[23])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,-84.3129,-1178.2694,2.0050);
	    SetPlayerFacingAngle(playerid,62.5345);
	}
	else if(pickupid == metro[24])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,1281.8361,-1329.0568,13.3764);
	    SetPlayerFacingAngle(playerid, 90.0);
	}
	else if(pickupid == carjackpic[0])
	{
		if(PlayerInfo[playerid][pLevel] <= 3) return SendClientMessage(playerid, 0x6495EDFF, "У вас уровень ниже 3");
		if(PlayerInfo[playerid][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Эта работа доступна только гражданским!");
		if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен не может работать тут");
		if(PlayerInfo[playerid][pAutoMast] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен не может работать тут");
		if(PlayerInfo[playerid][pFerma] != 255) return SendClientMessage(playerid, COLOR_GREY, "Бизнесмен неможет работать тут");
	    if(PlayerInfo[playerid][pJob] == 15) return ShowPlayerDialog(playerid, 211+1, DIALOG_STYLE_LIST, "Взять заказ","Класс None\nКласс D\nКласс C\nКласс B\nКласс A","Выбор","Отмена");
	    else ShowPlayerDialog(playerid,211+2,DIALOG_STYLE_MSGBOX,"Автоугонщик","Привет,\nнам сейчас требуются хорошие водилы,\n\nХочешь работать на нас?","Да","Нет");
	}
	else if(pickupid == carjackpic[1])
	{
	    if(PlayerInfo[playerid][pJob] != 15)return SendClientMessage(playerid, 0x6495EDFF, "У вас уже есть работа");
	    DestroyVehicle(createdvehicles[playerid]);
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
        createdvehicles[playerid] = CreateVehicle(462,X,Y,Z,170,0,0,300);
        PutPlayerInVeh(playerid, createdvehicles[playerid], 0);
		CreatedCars[CreatedCar] = createdvehicles[playerid];
		UnLockCar(createdvehicles[playerid]);
		IsLocked[createdvehicles[playerid]] = 0;
		RepairVehicle(createdvehicles[playerid]);
		createdvehs ++;
	}
    else if(pickupid >= getgun[0]&& pickupid <= getgun[2])
    {
        OnPlayerCommandText(playerid,"/getgun");
    }
    else if(pickupid >= buygun[0]&& pickupid <= buygun[2])
    {
        OnPlayerCommandText(playerid,"/buygun");
    }
   	else if(pickupid == autostation[0])
    {
	    SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,304.1146,-198.8917,999.6016);
	    SetPlayerFacingAngle(playerid, 0.0);
    }
   	else if(pickupid == autostation[1])
    {
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,1154.2184,-1769.3910,16.5938);
	    SetPlayerFacingAngle(playerid, 0.0);
    }
	else if(pickupid == caligula[0])
    {
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2190.8826,1677.7642,11.7998);
	    SetPlayerFacingAngle(playerid, 87.3093);
    }
   	else if(pickupid == church[0])
    {
	    SetPlayerPos(playerid,-2019.4525,1119.3763,26.0531);
	    SetPlayerFacingAngle(playerid,87.3641);
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid,1);
    }
   	else if(pickupid == church[1])
    {
	    SetPlayerPos(playerid,-1987.6782,1118.0597,54.3814);
	    SetPlayerFacingAngle(playerid,267.8224);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid,0);
    }
   	else if(pickupid == deathplace)
	{
		if(PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_GREY, "Вы не детектив");
	    else ShowPlayerDialog(playerid,5228,DIALOG_STYLE_LIST, "Улики", "Собрать улики\nУничтожить улики\nОставить улики", "Выбрать", "Назад");
	}
    else if(pickupid == caligula[1])
    {
	    SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid,2233.5422,1710.7037,1011.2906);
	    SetPlayerFacingAngle(playerid, 180.0);
    }
    else if(pickupid == detectivag[0])
	{
	    SetPlayerInterior(playerid,3);
	    SetPlayerPos(playerid,1494.4924,1306.2300,1093.2891);
	    SetPlayerFacingAngle(playerid, 0.0);
    }
    else if(pickupid == detectivag[1])
	{
        if(PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_GREY,"Вы не детектив");
		{
				GiveWeapon(playerid, 22, 200);
				GiveWeapon(playerid, 41, 100);
				SetPlayerArmourAC(playerid, 25);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				lspdmatbi -= 100;
				PlayerInfo[playerid][pGunLspdTime] = 300;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Доширак,Colt.45(200),Лёгкий бронежилет,Перцовка(100)");
		}
    }
    else if(pickupid == detectivag[2])
	{
        SetPlayerInterior(playerid,0);
	    SetPlayerPos(playerid,630.0333,-571.6694,16.3359);
	    SetPlayerFacingAngle(playerid, 270.0);
    }
    if(pickupid == motorace)
	{
		if(EndingmotoRound >= 1) return SendClientMessage(playerid,COLOR_WHITE,"Регистрация закрыта");
		if(PlayerInfo[playerid][pLevel] < 3 ) return SendClientMessage(playerid,COLOR_GRAD1,"Участвовать можно с 3-х лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >=1 ) return SendClientMessage(playerid,COLOR_GRAD1,"Нельзя учавствовать с Warnom");
		if( Playermoto[playerid] == 1) return SendClientMessage(playerid,COLOR_WHITE,"Вы уже зарегистрированы на гонку");
		SendClientMessage(playerid, 0x6495EDFF, "::: Вы зарегистрировались на гонку :::");
		MotoPlayers += 1;
		Playermoto[playerid] = 1;
	}
	if(pickupid == bonus)
	{
       if(PlayerInfo[playerid][pLevel] > 2) return SendClientMessage(playerid,COLOR_RED,"Бонус только для новичков(1-2лвл)");
       {
           PlayerInfo[playerid][pCash] += 10000000;
           PlayerInfo[playerid][pLevel] = 5;
           PlayerInfo[playerid][pCarLic] = 1;
           PlayerInfo[playerid][pFlyLic] = 1;
           PlayerInfo[playerid][pGunLic] = 1;
           PlayerInfo[playerid][pBoatLic] = 1;
           PlayerInfo[playerid][pBisLic] = 1;
           PlayerInfo[playerid][pDonateMoney] += 30000;
           PlayerInfo[playerid][pDonate] += 30000;
           PlayerInfo[playerid][pGunSkill][0] = 100;
           PlayerInfo[playerid][pGunSkill][1] = 100;
           PlayerInfo[playerid][pGunSkill][2] = 100;
           PlayerInfo[playerid][pGunSkill][3] = 100;
           PlayerInfo[playerid][pGunSkill][4] = 100;
           PlayerInfo[playerid][pGunSkill][5] = 100;
           PlayerInfo[playerid][pGunSkill][6] = 100;
           PlayerInfo[playerid][pGunSkill][7] = 100;
           PlayerInfo[playerid][pGunSkill][8] = 100;
           PlayerInfo[playerid][pGunSkill][9] = 100;
           PlayerInfo[playerid][pGunSkill][10] = 100;
           SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы получили все лицензии,скиллы,10кк и 5 лвл!");
	   }
	}
	else if(pickupid == robber)
	{
		if(robh[playerid] != true)return SendClientMessage(playerid,COLOR_GREY,"У тебя нет материалов для сдачи");
		{
			robh[playerid] = false;
			PlayerInfo[playerid][pCash] += 500;
			SendClientMessage(playerid,COLOR_GREY,"Вы сдали ограбленное на 500$");
			return true;
		}
	}
	if(pickupid == monitor)
	{
		ShowPlayerDialog(playerid,9953,DIALOG_STYLE_LIST, "Мониторинг цен", "Магазины 24/7\nЗаправки\nКлубы / Бары", "Готово", "Назад");
	}
    if(pickupid == sporthelp)
    {
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s%s%s%s",
		sportMSG[0],sportMSG[1],sportMSG[2],sportMSG[3],sportMSG[4],sportMSG[5],sportMSG[6],sportMSG[7],sportMSG[8],sportMSG[9]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация", rabotadialog, "Готово", "");
    }
    if(pickupid == boxfight[0])
    {
        if(InRing > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли бой");
        if(PlayerBoxing[playerid] > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже боритесь");
        ShowPlayerDialog(playerid, 462, DIALOG_STYLE_INPUT, "Спарринг", "Введите ID игрока с которым хотите сразиться", "Ок", "Отмена");
	    return true;
    }
 	else if(pickupid == dice)
  	{
  	    if(gDice[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вам уже выдали игральные кости");
		SendClientMessage(playerid, COLOR_BLUE, "Вам выдали игральные кости");
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /dice, чтобы бросить");
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		gDice[playerid] = 1;
	}
	else if(pickupid == collection)
    {
        if(CollectionStarted[playerid] == 2)
        {
            if(FarmWorks[playerid] == 1)
            {
                if(WithBush[playerid] == true)
                {
                    for(new f = 0; f < sizeof(FermInfo); f++)
                    {
                        if(FermInfo[f][vnutricar] >= 1000)
                        {
                            new string[40];
                            SendClientMessage(playerid, COLOR_GREY, "Грузовик полон");
                            RemovePlayerAttachedObject(playerid,3);
                            WithBush[playerid] = false;
                            FermInfo[f][vnutricar] = 1000;
                            DisablePlayerCheckpoint(playerid);
                            format(string, sizeof(string), "Загружено\n{ffffff}%d / 1000",FermInfo[f][vnutricar]);
                            Update3DTextLabelText(JobText2, 0x5CABBDAA, string);
                            return true;
                        }
                        else
                        {
                            new string[40];
                            FermInfo[f][fzernoseiano] -= 5;
                            FermInfo[f][vnutricar] += 5;
                            PlayerInfo[playerid][pFermazarobotok] += FermInfo[f][fEntranceCost];
                            format(string, sizeof(string), "~b~count:~w~+%d$",PlayerInfo[playerid][pFermazarobotok]);
                            GameTextForPlayer(playerid, string, 3000, 1);
                            DisablePlayerCheckpoint(playerid);
                            WithBush[playerid] = false;
                            RemovePlayerAttachedObject(playerid,3);
                            GetXYInFrontOfPlayer(playerid, X12, Y12, Z12);
                            SetPlayerCheckpoint(playerid,X12+random(10),Y12+random(10),Z12, 1.0);
                            CollectionStarted[playerid] = 3;
                            format(string, sizeof(string), "Загружено\n{ffffff}%d / 1000",FermInfo[f][vnutricar]);
                            Update3DTextLabelText(JobText2, 0x5CABBDAA, string);
                            return true;
                        }
                    }
                    return true;
                }
                else
                {
                    DisablePlayerCheckpoint(playerid);
                    RemovePlayerAttachedObject(playerid,3);
                    GetXYInFrontOfPlayer(playerid, X12, Y12, Z12);
                    SetPlayerCheckpoint(playerid,X12+random(10),Y12+random(10),Z12, 1.0);
                    SendClientMessage(playerid, COLOR_GREEN, "{00D607} Для начала соберите урожай {FFFFFF}(( Встаньте на красный чекпоинт, и ждите 15 секунд ))");
                    SendClientMessage(playerid, COLOR_GREEN, "{00D607} Когда соберёте положите в кузов автомобиля {FFFFFF}(( Встаньте на желтую стрелку ))");
                    SendClientMessage(playerid, COLOR_GREEN, "{00D607} Если захотите завершить работу, пройдите к раздевалке {FFFFFF}(( Встаньте на синий пикап у фермы ))");
                    SendClientMessage(playerid, COLOR_GREEN, "{00D607} Если вы фермер, то просто сядьте в машину для завершения сбора урожая");
                    CollectionStarted[playerid] = 3;
                    WithBush[playerid] = false;
                    return true;
                }
            }
            else
            {
                return SendClientMessage(playerid, COLOR_GREY, "Вы должны переодеться в раздевалке!");
            }
        }
    }
	else if(pickupid == lspic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(playerid, 175.8234);
		SetPlayerVirtualWorld(playerid, 0);
	}
    else if(pickupid == lspic[1])
    {
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 16)
		{
			ShowPlayerDialog(playerid,190,DIALOG_STYLE_LIST,"Меню:","Офис\nСтоянка","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
    }
	else if(pickupid == lspic[2])
    {
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 16)
		{
			ShowPlayerDialog(playerid,193,DIALOG_STYLE_LIST,"Меню:","Офис\nКрыша","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
    }
   	else if(pickupid == ffpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2024.5050,66.9364,28.4428);
		SetPlayerFacingAngle(playerid, 270.8234);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ffpic[1])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,681.1373,-452.4848,-25.6172);
		SetPlayerFacingAngle(playerid, 270.8234);
		SetPlayerVirtualWorld(playerid, 1);
	}
    if(pickupid == Farm)
    {
        ShowPlayerDialog(playerid,134,DIALOG_STYLE_MSGBOX, "Информация о работе", "Здесь вы можете поработать сборщиком урожая.\n\nЧто бы начать работу найдите фермера,\nон вам всё объяснит.\n\nНеподалеку находится раздевалка,\nтам же получать деньги.\n\nЧтобы начать работу необходимо переодеться в робу,\nдалее вам укажут где,брать груз.\n\nКак только вы захотите завершить рабочий день,\nподойдите к раздевалке.", "Готово", "");
    }
    if(pickupid == CloakroomFarm)
    {
        ShowPlayerDialog(playerid,135,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочй день?", "Начать", "Завершить");
    }
	else if(pickupid == FormaFracPic[0])
	{
		if(PlayerInfo[playerid][pMember] == 1)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[1])
	{
		if(PlayerInfo[playerid][pMember] == 2)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[2])
	{
		if(PlayerInfo[playerid][pMember] == 3)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[3])
	{
		if(PlayerInfo[playerid][pMember] == 4)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[4])
	{
		if(PlayerInfo[playerid][pMember] == 7)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[5])
	{
		if(PlayerInfo[playerid][pMember] == 9)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[6])
	{
		if(PlayerInfo[playerid][pMember] == 10)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[7])
	{
		if(PlayerInfo[playerid][pMember] == 11)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[8])
	{
		if(PlayerInfo[playerid][pMember] == 16)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[9])
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[10])
	{
		if(PlayerInfo[playerid][pMember] == 20)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[11])
	{
		if(PlayerInfo[playerid][pMember] == 21)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[12])
	{
		if(PlayerInfo[playerid][pMember] == 22)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[13])
	{
		if(PlayerInfo[playerid][pMember] == 33)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[14])
	{
		if(PlayerInfo[playerid][pMember] == 8)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[15])
	{
		if(PlayerInfo[playerid][pMember] == 34)
		{
			ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	if(pickupid == derbyrace[0])
	{
		if(DerbyOpen != 1) return SendClientMessage(playerid,COLOR_GREY, "Регистрация закрыта");
		if(PlayerOnDerby[playerid] == 1) return SendClientMessage(playerid,COLOR_WHITE, "Вы уже зарегистрированы на гонку");
		if(PlayerInfo[playerid][pLevel] <= 2) return SendClientMessage(playerid,COLOR_GREY, "Участвовать можно с 3 лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendClientMessage(playerid,COLOR_GREY, "Нельзя учавствовать с Варном");
		if(DerbyAttend >= 20) return SendClientMessage(playerid,COLOR_GREY, "Слишком много участников");
		SendClientMessage(playerid, 0x6495EDFF, "Вы успешно зарегистрированы на гонку. Не выходите из помещения!");
		PlayerOnDerby[playerid] = 1;
		DerbyAttend += 1;
	}
	if(pickupid == derbyrace[1])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-2170.4685,638.5978,1052.3750);
		SetPlayerFacingAngle(playerid,355.9632);
	}
	if(pickupid == derbyrace[2])
	{
		DerbyAttend -= 1;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2113.5208,-442.3560,38.2776);
		SetPlayerFacingAngle(playerid, 76.4112);
		PlayerOnDerby[playerid] = 0;
	}
	if(pickupid == paint)
	{
		if(PaintballRound >= 1) return SendClientMessage(playerid,COLOR_GREY, "Регистрация закрыта");
		if(PlayerInfo[playerid][pLevel] <= 2) return SendClientMessage(playerid,COLOR_GREY, "Участвовать можно с 3 лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendClientMessage(playerid,COLOR_GREY, "Нельзя учавствовать с Варном");
		if(PaintballPlayers >= 10) return SendClientMessage(playerid,COLOR_GREY, "Слишком много участников");
		if(PlayerPaintballing[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY, "Вы уже зарегистрированы на матч");
		SendClientMessage(playerid, 0x6495EDFF, "Вы успешно зарегистрированы на матч");
		PaintballPlayers += 1;
		PlayerPaintballing[playerid] = 1;
	}
	if(pickupid >= Carshop[0] && pickupid <= Carshop[4])
	{
        if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_RED, "У вас нет дома");
		if(PlayerInfo[playerid][pCarLic] != 1) return SendClientMessage(playerid, COLOR_RED, "У вас нет водительских прав");
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2200.8657,1394.8059,11.0625))
		{
		    if(PlayerInfo[playerid][pCash] < 3000000)return SendClientMessage(playerid,COLOR_RED, "У вас недостаточно денег");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1952.3577,300.3648,35.4688))
		{
		    if(PlayerInfo[playerid][pCash] < 1200000)return SendClientMessage(playerid,COLOR_RED, "У вас недостаточно денег");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1671.5214,1814.4053,10.8203))
		{
		    if(PlayerInfo[playerid][pCash] < 600000)return SendClientMessage(playerid,COLOR_RED, "У вас недостаточно денег");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 559.5280,-1293.9313,17.2482))
		{
		    if(PlayerInfo[playerid][pCash] < 200000)return SendClientMessage(playerid,COLOR_RED, "У вас недостаточно денег");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1663.7235,1208.0890,7.2546))
		{
		    if(PlayerInfo[playerid][pCash] < 500000)return SendClientMessage(playerid,COLOR_RED, "У вас недостаточно денег");
		}
        NextCAR = CreatePlayerTextDraw(playerid, 540.000000, 279.562500, "NEXT =>");
		PlayerTextDrawLetterSize(playerid, NextCAR, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, NextCAR, 619.000000, 20.125000);
		PlayerTextDrawAlignment(playerid, NextCAR, 1);
		PlayerTextDrawColor(playerid, NextCAR, -1);
		PlayerTextDrawUseBox(playerid, NextCAR, true);
		PlayerTextDrawBoxColor(playerid, NextCAR, 64);
		PlayerTextDrawSetShadow(playerid, NextCAR, 0);
		PlayerTextDrawSetOutline(playerid, NextCAR, 1);
		PlayerTextDrawBackgroundColor(playerid, NextCAR, 51);
		PlayerTextDrawFont(playerid, NextCAR, 1);
		PlayerTextDrawSetProportional(playerid, NextCAR, 1);
		PlayerTextDrawSetSelectable(playerid, NextCAR, 1);
 		NextCarPic = CreatePlayerTextDraw(playerid, 538.000000, 190.750000, "_");
		PlayerTextDrawLetterSize(playerid, NextCarPic, 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, NextCarPic, 83.000000, 84.000000);
		PlayerTextDrawAlignment(playerid, NextCarPic, 1);
		PlayerTextDrawColor(playerid, NextCarPic, -1);
		PlayerTextDrawSetShadow(playerid, NextCarPic, 0);
		PlayerTextDrawSetOutline(playerid, NextCarPic, 0);
		PlayerTextDrawFont(playerid, NextCarPic, TEXT_DRAW_FONT_MODEL_PREVIEW);
		PlayerTextDrawBackgroundColor(playerid, NextCarPic, 64);
		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 411);
		PlayerTextDrawSetPreviewRot(playerid, NextCarPic, -15.0, 0.0, 50.0, 0.9);
		PrevCAR = CreatePlayerTextDraw(playerid, 19.500000, 279.562500, "<= PREV");
		PlayerTextDrawLetterSize(playerid, PrevCAR, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, PrevCAR, 98.500000, 20.125000);
		PlayerTextDrawAlignment(playerid, PrevCAR, 1);
		PlayerTextDrawColor(playerid, PrevCAR, -1);
		PlayerTextDrawUseBox(playerid, PrevCAR, true);
		PlayerTextDrawBoxColor(playerid, PrevCAR, 64);
		PlayerTextDrawSetShadow(playerid, PrevCAR, 0);
		PlayerTextDrawSetOutline(playerid, PrevCAR, 1);
		PlayerTextDrawBackgroundColor(playerid, PrevCAR, 51);
		PlayerTextDrawFont(playerid, PrevCAR, 1);
		PlayerTextDrawSetProportional(playerid, PrevCAR, 1);
		PlayerTextDrawSetSelectable(playerid, PrevCAR, 1);
		PrevCarPic = CreatePlayerTextDraw(playerid, 17.500000, 190.750000, "_");
		PlayerTextDrawLetterSize(playerid, PrevCarPic, 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, PrevCarPic, 83.000000, 84.000000);
		PlayerTextDrawAlignment(playerid, PrevCarPic, 1);
		PlayerTextDrawColor(playerid, PrevCarPic, -1);
		PlayerTextDrawSetShadow(playerid, PrevCarPic, 0);
		PlayerTextDrawSetOutline(playerid, PrevCarPic, 0);
		PlayerTextDrawFont(playerid, PrevCarPic, TEXT_DRAW_FONT_MODEL_PREVIEW);
		PlayerTextDrawBackgroundColor(playerid, PrevCarPic, 64);
		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 411);
		PlayerTextDrawSetPreviewRot(playerid, PrevCarPic, -15.0, 0.0, -50.0, 0.9);
		ColorNext = CreatePlayerTextDraw(playerid, 538.500000, 164.312500, "COLOR =>");
		PlayerTextDrawLetterSize(playerid, ColorNext, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, ColorNext, 619.000000, 19.125000);
		PlayerTextDrawAlignment(playerid, ColorNext, 1);
		PlayerTextDrawColor(playerid, ColorNext, -1);
		PlayerTextDrawUseBox(playerid, ColorNext, true);
		PlayerTextDrawBoxColor(playerid, ColorNext, 64);
		PlayerTextDrawSetShadow(playerid, ColorNext, 0);
		PlayerTextDrawSetOutline(playerid, ColorNext, 1);
		PlayerTextDrawBackgroundColor(playerid, ColorNext, 51);
		PlayerTextDrawFont(playerid, ColorNext, 1);
		PlayerTextDrawSetProportional(playerid, ColorNext, 1);
		PlayerTextDrawSetSelectable(playerid, ColorNext, 1);
		ColorPrev = CreatePlayerTextDraw(playerid, 19.100000, 164.312500, "<= COLOR");
		PlayerTextDrawLetterSize(playerid, ColorPrev, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, ColorPrev, 100.000000, 19.125000);
		PlayerTextDrawAlignment(playerid, ColorPrev, 1);
		PlayerTextDrawColor(playerid, ColorPrev, -1);
		PlayerTextDrawUseBox(playerid, ColorPrev, true);
		PlayerTextDrawBoxColor(playerid, ColorPrev, 64);
		PlayerTextDrawSetShadow(playerid, ColorPrev, 0);
		PlayerTextDrawSetOutline(playerid, ColorPrev, 1);
		PlayerTextDrawBackgroundColor(playerid, ColorPrev, 51);
		PlayerTextDrawFont(playerid, ColorPrev, 1);
		PlayerTextDrawSetProportional(playerid, ColorPrev, 1);
		PlayerTextDrawSetSelectable(playerid, ColorPrev, 1);
		Buycar = CreatePlayerTextDraw(playerid, 582.000000, 308.562500, "BUY");
		PlayerTextDrawLetterSize(playerid, Buycar, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, Buycar, 619.000000, 20.125000);
		PlayerTextDrawAlignment(playerid, Buycar, 1);
		PlayerTextDrawColor(playerid, Buycar, -1);
		PlayerTextDrawUseBox(playerid, Buycar, true);
		PlayerTextDrawBoxColor(playerid, Buycar, 64);
		PlayerTextDrawSetShadow(playerid, Buycar, 0);
		PlayerTextDrawSetOutline(playerid, Buycar, 1);
		PlayerTextDrawBackgroundColor(playerid, Buycar, 51);
		PlayerTextDrawFont(playerid, Buycar, 1);
		PlayerTextDrawSetProportional(playerid, Buycar, 1);
		PlayerTextDrawSetSelectable(playerid, Buycar, 1);
		Exitcar = CreatePlayerTextDraw(playerid, 582.000000, 327.750000, "EXIT");
		PlayerTextDrawLetterSize(playerid, Exitcar, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, Exitcar, 619.000000, 20.125000);
		PlayerTextDrawAlignment(playerid, Exitcar, 1);
		PlayerTextDrawColor(playerid, Exitcar, -1);
		PlayerTextDrawUseBox(playerid, Exitcar, true);
		PlayerTextDrawBoxColor(playerid, Exitcar, 64);
		PlayerTextDrawSetShadow(playerid, Exitcar, 0);
		PlayerTextDrawSetOutline(playerid, Exitcar, 1);
		PlayerTextDrawBackgroundColor(playerid, Exitcar, 51);
		PlayerTextDrawFont(playerid, Exitcar, 1);
		PlayerTextDrawSetProportional(playerid, Exitcar, 1);
		PlayerTextDrawSetSelectable(playerid, Exitcar, 1);
		NameCar = CreatePlayerTextDraw(playerid, 19.500000, 351.625000, "_");
		PlayerTextDrawLetterSize(playerid, NameCar, 0.449999, 1.600000);
		PlayerTextDrawTextSize(playerid, NameCar, 210.500000, -39.375000);
		PlayerTextDrawAlignment(playerid, NameCar, 1);
		PlayerTextDrawColor(playerid, NameCar, -1);
		PlayerTextDrawUseBox(playerid, NameCar, true);
		PlayerTextDrawBoxColor(playerid, NameCar, 64);
		PlayerTextDrawSetShadow(playerid, NameCar, 0);
		PlayerTextDrawSetOutline(playerid, NameCar, 1);
		PlayerTextDrawBackgroundColor(playerid, NameCar, 51);
		PlayerTextDrawFont(playerid, NameCar, 1);
		PlayerTextDrawSetProportional(playerid, NameCar, 1);
		new carid;
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2200.8657,1394.8059,11.0625)) // A
		{
     		CarPrice[playerid] = 3000000;
       		PlayerTextDrawSetString(playerid, NameCar, "  NAME: ZR-350     \n\nMAX SPEED: 104\nKM/H \n\nPRICE: 3000000$");
   			carid = CreateVehicle(477, -1655.9785,1209.4010,20.9879,227.2012, 1, 1, -1);
   			PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 506);
   			PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 411);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1952.3577,300.3648,35.4688)) // B
		{
     		CarPrice[playerid] = 1200000;
     		PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sunrise     \n\nMAX SPEED: 81\nKM/H \n\nPRICE: 1200000$");
   			carid = CreateVehicle(550, -1655.9785,1209.4010,20.9879,227.2012, 1, 1, -1);
   			PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 561);
   			PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 579);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1671.5214,1814.4053,10.8203)) // C
		{
     		CarPrice[playerid] = 600000;
     		PlayerTextDrawSetString(playerid, NameCar, "  NAME: Manana     \n\nMAX SPEED: 72\nKM/H \n\nPRICE: 600000$");
   			carid = CreateVehicle(410, -1655.9785,1209.4010,20.9879,227.2012, 1, 1, -1);
   			PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 547);
   			PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 505);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 559.5280,-1293.9313,17.2482)) // NOPE
		{
     		CarPrice[playerid] = 200000;
     		PlayerTextDrawSetString(playerid, NameCar, "  NAME: Perenniel     \n\nMAX SPEED: 74\nKM/H \n\nPRICE: 200000$");
   			carid = CreateVehicle(404, -1655.9785,1209.4010,20.9879,227.2012, 1, 1, -1);
   			PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 479);
   			PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 483);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1663.7235,1208.0890,7.2546))// BIKES
		{
     		CarPrice[playerid] = 500000;
     		PlayerTextDrawSetString(playerid, NameCar, "  NAME: Wayfarer     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 500000$");
   			carid = CreateVehicle(586, -1655.9785,1209.4010,20.9879,227.2012, 1, 1, -1);
   			PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 463);
   			PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 522);
		}
		CarColor[playerid] = 1;
		SetVehicleZAngle(carid, 111.7966);
		PutPlayerInVehicle(playerid, carid, 0);
		TogglePlayerControllable(playerid, 0);
		SetPlayerCameraPos(playerid, -1647.2406, 1209.6245, 22.9207);
		SetPlayerCameraLookAt(playerid, -1648.2365, 1209.5519, 22.7062);
		new Vworld = random(64);
		SetVehicleVirtualWorld(carid,Vworld);
		SetPlayerVirtualWorld(playerid,Vworld);
		PlayerTextDrawSetPreviewVehCol(playerid, NextCarPic, 1, 1);
		PlayerTextDrawSetPreviewVehCol(playerid, PrevCarPic, 1, 1);
		PlayerTextDrawColor(playerid, ColorNext, 255);
		PlayerTextDrawBackgroundColor(playerid, ColorNext, -16780060);
		PlayerTextDrawColor(playerid, ColorPrev, -50331393);
		PlayerTextDrawBackgroundColor(playerid, ColorPrev, 228);
   		PlayerTextDrawShow(playerid, PlayerText:NextCAR);
   		PlayerTextDrawShow(playerid, PlayerText:NextCarPic);
   		PlayerTextDrawShow(playerid, PlayerText:PrevCAR);
   		PlayerTextDrawShow(playerid, PlayerText:PrevCarPic);
   		PlayerTextDrawShow(playerid, PlayerText:ColorNext);
   		PlayerTextDrawShow(playerid, PlayerText:ColorPrev);
   		PlayerTextDrawShow(playerid, PlayerText:Buycar);
   		PlayerTextDrawShow(playerid, PlayerText:Exitcar);
   		PlayerTextDrawShow(playerid, PlayerText:NameCar);
   		SelectTextDraw(playerid, COLOR_RED);
		return true;
	}
	if(pickupid == paintguns[0])
	{
		if(PlayerPaintballing[playerid] == 1) return GiveWeapon(playerid, 25, 30);
	}
	if(pickupid == paintguns[1])
	{
		if(PlayerPaintballing[playerid] == 1) return GiveWeapon(playerid, 24, 30);
	}
	if(pickupid == paintguns[2])
	{
		if(PlayerPaintballing[playerid] == 1) return GiveWeapon(playerid, 31, 90);
	}
	if(pickupid == paintguns[3])
	{
		if(PlayerPaintballing[playerid] == 1) return GiveWeapon(playerid, 30, 90);
	}
	if(pickupid == sportroom[0])
	{
		if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0)
		{
			SetPlayerSkin(playerid, 49);
	 	}
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
		FightSkilling[playerid] = 0;
	}
	else if(pickupid == sportroom[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2227.1162,-1723.1353,13.5533);
		SetPlayerFacingAngle(playerid, 130.5909);
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		FightSkilling[playerid] = 0;
		if(PlayerInfo[playerid][pMember] >= 1) { SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);}
		if(PlayerInfo[playerid][pMember] == 0) { SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);}
	}
	else if(pickupid == arace)
	{
		if(EndingRaceRound >= 1) return SendClientMessage(playerid,COLOR_GREY, "Регистрация закрыта");
		if(PlayerInfo[playerid][pLevel] <= 2) return SendClientMessage(playerid,COLOR_GREY, "Участвовать можно с 3 лет проживания в штате");
		if(PlayerInfo[playerid][pWarns] >= 1) return SendClientMessage(playerid,COLOR_GREY, "Нельзя учавствовать с Варном");
		if(RacingPlayers >= 20) return SendClientMessage(playerid,COLOR_GREY, "Слишком много участников");
		if(PlayerRacing[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY, "Вы уже зарегистрированы на гонку");
		SendClientMessage(playerid, 0x6495EDFF, "Вы успешно зарегистрированы на гонку. Не выходите из помещения");
		RacingPlayers += 1;
		PlayerRacing[playerid] = 1;
	}
	if(pickupid == racepic[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
	}
	else if(pickupid == racepic[1])
	{
		chet[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1958.6117,-2183.5022,13.5469);
		SetPlayerFacingAngle(playerid,271.8013);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerRacing[playerid] = 0;
		CP[playerid] = 0;
		RacingPlayers -= 1;
	}
	if(pickupid == lvpic[0])
	{
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 20)
		{
			SetPlayerInterior(playerid,15);
			SetPlayerPos(playerid,999.5983,1000.0139,1999.7999);
			SetPlayerFacingAngle(playerid, 268.4196);
			SetPlayerVirtualWorld(playerid, 3);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта. У вас нет пропуска");
		}
	}
	else if(pickupid == lvpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2649.1655,1183.9111,10.8203);
		SetPlayerFacingAngle(playerid, 180.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == SDA)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
	}
	else if(pickupid == libertycity)
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-738.6339,506.2390,1371.9766);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 15);
        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили билет в Либерти Сити. Приятного путешествия");
       	PlayerInfo[playerid][pCash] -= 2500;
	}
	else if(pickupid == bistro)
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-794.6661,491.7114,1376.1953);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 15);
	}
	else if(pickupid == ebistro)
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-775.6469,489.6095,1376.5747);
		SetPlayerFacingAngle(playerid, 265.9479);
		SetPlayerVirtualWorld(playerid, 15);
	}
    else if(pickupid == fromlctolv)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1730.9360,1480.0436,10.8128);
		SetPlayerFacingAngle(playerid, 265.9479);
		SetPlayerVirtualWorld(playerid, 0);
        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"Вы купили билет в Лас Вентурас. Приятного путешествия");
       	PlayerInfo[playerid][pCash] -= 2500;
	}

	else if(pickupid == medicss[0])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 3);
	}
	if(pickupid == medicss[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2664.4895,636.7567,14.4531);
		SetPlayerFacingAngle(playerid, 180.9984);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[2])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 4);
	}
	if(pickupid == medicss[3])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[4])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 5);
	}
	if(pickupid == medicss[5])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1607.5677,1818.9572,10.8203);
		SetPlayerFacingAngle(playerid, 360.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == workshoppicc[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1657.9347,2197.8618,10.8203);
		SetPlayerFacingAngle(playerid, 183.9151);
		SetPlayerVirtualWorld(playerid, 0);
		if(PlayerInfo[playerid][pJob] == 2)
		{
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
				AvtoInfo[b][Rab] -= 1;
			}
			MehJob[playerid] = 999;
			SendClientMessage(playerid, COLOR_GREEN, "Рабочий день окончен");
			return true;
		}
	}
	else if(pickupid == workshoppicc[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1800.4135,1197.5573,25.1194);
		SetPlayerFacingAngle(playerid, 182.3717);
		SetPlayerVirtualWorld(playerid, 0);
		if(PlayerInfo[playerid][pJob] == 2)
		{
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
				AvtoInfo[b][Rab] -= 1;
			}
			MehJob[playerid] = 999;
			SendClientMessage(playerid, COLOR_GREEN, "Рабочий день окончен");
			return true;
		}
	}
	else if(pickupid == workshoppicc[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,854.0541,-601.7619,18.4219);
		SetPlayerFacingAngle(playerid, 0.6835);
		SetPlayerVirtualWorld(playerid, 0);
		if(PlayerInfo[playerid][pJob] == 2)
		{
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
				AvtoInfo[b][Rab] -= 1;
			}
			MehJob[playerid] = 999;
			SendClientMessage(playerid, COLOR_GREEN, "Рабочий день окончен");
			return true;
		}
	}
	else if(pickupid == addictionenter)
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfnewspic[0])
	{
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 9)
		{
			ShowPlayerDialog(playerid,194,DIALOG_STYLE_LIST,"Меню:","Офис\nСтоянка","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта. У вас нет пропуска");
		}
    }
	else if(pickupid == sfnewspic[1])
	{
		if(PlayerInfo[playerid][pNkeys] == 1 || PlayerInfo[playerid][pMember] == 9)
		{
			ShowPlayerDialog(playerid,195,DIALOG_STYLE_LIST,"Меню:","Офис\nКрыша","Выбрать","Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Дверь заперта. У вас нет пропуска");
		}
    }
	else if(pickupid == sfnewspic[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2052.4917,458.5779,35.1719);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == lcnpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == zip[0])
	{
		zips[playerid] = 1;
		SetPlayerInterior(playerid,18);
		SetPlayerPos(playerid,161.6730,-95.5809,1001.8047);
		SetPlayerFacingAngle(playerid, 1.0183);
	}
	else if(pickupid == zip[1])
	{
		zips[playerid] = 0;
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1885.0364,862.9141,35.1719);
		SetPlayerFacingAngle(playerid, 151.0559);
	}
	else if(pickupid == victim[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
	}
	else if(pickupid == victim[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
	}
	else if(pickupid == addictionexit)
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,2168.0977,-1673.5548,15.0826);
	 	SetPlayerFacingAngle(playerid,217.7220);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[4])
	{
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,313.7110,-140.3784,999.6016);
		SetPlayerFacingAngle(playerid, 334.2157);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ammonac[5])
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,2156.1997,943.3864,10.8203);
	 	SetPlayerFacingAngle(playerid, 81.7582);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[2])
	{
		SetPlayerInterior(playerid,4);
		SetPlayerPos(playerid,286.8773,-83.5809,1001.5156);
		SetPlayerFacingAngle(playerid, 334.2157);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ammonac[3])
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,-2626.6384,210.3960,4.5971);
	 	SetPlayerFacingAngle(playerid, 13.1113);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == ammonac[0])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.9145,-38.6596,1001.5156);
		SetPlayerFacingAngle(playerid, 329.0564);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ammonac[1])
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,1366.5776,-1279.5397,13.5469);
	 	SetPlayerFacingAngle(playerid, 89.7301);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,940.2619,1733.4958,8.8516);
	 	SetPlayerFacingAngle(playerid, 276.0833);
	 	SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == yakuzapic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
	}
	else if(pickupid == yakuzapic[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbi[1])
	{
	 	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2453.7595,503.7701,30.0798);
		SetPlayerFacingAngle(playerid, 272.4807);
 	}
	else if(pickupid == fbi[0])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,322.1685,304.5911,999.1484);
		SetPlayerFacingAngle(playerid, 6.1412);
 	}
 	else if(pickupid == lspd[0])
	{
	    SetPlayerInterior(playerid,6);
	    SetPlayerPos(playerid,246.6428,65.8026,1003.6406);
	    SetPlayerFacingAngle(playerid, 2.2168);
	}
	else if(pickupid == lspd[1])
	{
	     SetPlayerInterior(playerid,0);
	     SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
	     SetPlayerFacingAngle(playerid, 91.8310);
	     SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lspd[2])
	{
	 	SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
		SetPlayerFacingAngle(playerid, 34.3574);
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pickupid == lspd[3])
	{
  		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pKeys] > 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
		    SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта");
		}
	}
	else if(pickupid == lspd[4])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lspd[5])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,246.5438,85.7663,1003.6406);
		SetPlayerFacingAngle(playerid, 278.0311);
	}
	else if(pickupid == sfpd[4])
	{
	 	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pKeys] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта");
		}
	}
	else if(pickupid == sfpd[0])
	{
		SetPlayerInterior(playerid,0);
	 	SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sfpd[2])
	{
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 270.0);
	}
	else if(pickupid == sfpd[3])
 	{
	   	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pKeys] > 0)
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,-1605.3708,713.8040,13.2590);
			SetPlayerFacingAngle(playerid, 0.0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта");
		}
	}
	else if(pickupid == sfpd[5])
 	{
	   	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pKeys] > 0)
		{
		    SetPlayerInterior(playerid,10);
			SetPlayerPos(playerid,246.5317,109.1494,1003.2188);
			SetPlayerFacingAngle(playerid, 0.0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта");
		}
	}
	else if(pickupid == sfpd[1])
	{
	  	if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| PlayerInfo[playerid][pKeys] > 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Дверь заперта");
		}
	}
	else if(pickupid == armijavhod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,156.4952,1945.6383,20.0000);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
	else if(pickupid == armijavihod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,139.5660,1936.6910,19.2734);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
	else if(pickupid == avtosh[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-2029.7194,-118.0359,1035.1719);
		SetPlayerFacingAngle(playerid, 359.7984);
	}
	else if(pickupid == avtosh[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2070.0757,-196.6505,53.4172);
		SetPlayerFacingAngle(playerid,178.4111);
	}
 	else if(pickupid == avtosh[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2060.8633,-194.7464,35.3203);
		SetPlayerFacingAngle(playerid, 355.8038);
	}
	else if(pickupid == avtosh[3])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-2028.9421,-105.0366,1035.1719);
		SetPlayerFacingAngle(playerid, 183.1738);
 	}
    if(pickupid == hamcvhod)
	{
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid,3);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == hamcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid,0);
	    SetPlayerPos(playerid, 681.4176,-476.4924,16.3359);
	  	SetPlayerFacingAngle(playerid,178.7480);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == omcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 4);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == wmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 5);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == wmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 661.4137,1718.1427,7.1875);
	  	SetPlayerFacingAngle(playerid,39.7059);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == hwmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 6);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == hwmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 20.3090,-2647.5273,40.4693);
	  	SetPlayerFacingAngle(playerid,180.0000);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == fsmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 7);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == fsmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -252.3049,2602.9155,62.8582);
	  	SetPlayerFacingAngle(playerid,228.3243);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == vmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 10);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == vmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -311.4987,1770.1803,43.6406);
	  	SetPlayerFacingAngle(playerid,265.8421);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == ssmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == ssmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, 1243.8165,203.4229,19.5547);
	  	SetPlayerFacingAngle(playerid,155.0000);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == bmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 11);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == bmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -1939.5114,2379.9812,49.6953);
	  	SetPlayerFacingAngle(playerid,265.8421);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == pmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 8);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == pmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -2103.5435,-2482.9031,30.6250);
	  	SetPlayerFacingAngle(playerid,93.5094);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == mmcvhod)
    {
	    SetPlayerInterior(playerid, 11);
	    SetPlayerVirtualWorld(playerid, 9);
	    SetPlayerPos(playerid, 502.0615,-70.1586,998.7578);
	  	SetPlayerFacingAngle(playerid,178.1080);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == mmcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -1263.4878,2717.1335,50.2663);
	  	SetPlayerFacingAngle(playerid,214.8409);
	  	PlayerInfo[playerid][pBisIn] = -1;
    }
    if(pickupid == omcvqhod)
    {
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerPos(playerid, -308.0020,1303.4598,53.6063);
	  	SetPlayerFacingAngle(playerid,206.1165);
        PlayerInfo[playerid][pBisIn] = -1;
    }
	else if(pickupid == lvpd[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		SetPlayerPos(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
	}
	else if(pickupid == lvpd[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
	}
	else if(pickupid == lvpd[2])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 122);
		SetPlayerPos(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
	}
	else if(pickupid == lvpd[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
	}
 	else if(pickupid == lvpd[4])
	{
		ShowPlayerDialog(playerid,8240,DIALOG_STYLE_MSGBOX, "Вход", "Куда вы хотите войти?", "Склад", "На крышу");
	}
	else if(pickupid == lvpd[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
	}
	else if(pickupid == lvpd[6])
	{
		ShowPlayerDialog(playerid,8241,DIALOG_STYLE_MSGBOX, "Вход", "Куда Вы хотите войти?", "Склад", "Вниз");
	}
	else if(pickupid >= chekmaterialslv[0] && pickupid <= chekmaterialslv[9])
  	{
  		if(!IsAGang(playerid) && !IsABiker(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не бандит");
		if(armmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
   		if(PlayerInfo[playerid][pMaterials] >= 500) return SendClientMessage(playerid, COLOR_GREY, "У вас на руках уже есть материалы");
     	SendClientMessage(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		armmatbi -= 500;
		PlayerInfo[playerid][pMaterials] = 500;
	}
	else if(pickupid >= chekmaterialssf[0]&& pickupid <= chekmaterialssf[2])
  	{
		if (!IsAGang(playerid) && !IsABiker(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не бандит");
		if(armmatsf <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
		if(PlayerInfo[playerid][pMaterials] >= 500) return SendClientMessage(playerid, COLOR_GREY, "У вас на руках уже есть материалы");
		SendClientMessage(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		armmatsf -= 500;
		PlayerInfo[playerid][pMaterials] = 500;
	}
	else if(pickupid >= mushroom[0]&& pickupid <= mushroom[52])
	{
		new sendername[MAX_PLAYER_NAME];
		new string[50];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s срезал(а) гриб", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pMushrooms] += 1;
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		format(string,sizeof(string), "Грибов собрано: {ffffff}%d",PlayerInfo[playerid][pMushrooms]);
		SendClientMessage(playerid,COLOR_GREEN,string);
		SendClientMessage(playerid,COLOR_BLUE,"Продать грибы можно /gps --> По работе --> Склад продуктов");
	}
	else if(pickupid == fracgunpic[0])
	{
		if(PlayerInfo[playerid][pForma] == 2)
		{
			if(PlayerInfo[playerid][pGunFbiTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
			if(fbimats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
			{
				GiveWeapon(playerid, 24, 100);
				GiveWeapon(playerid, 29, 100);
				GiveWeapon(playerid, 41, 100);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				fbimats -= 100;
				PlayerInfo[playerid][pGunFbiTime] = 300;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),Spray (100),MP5 (100)");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не агент ФБР");
		}
	}
	else if(pickupid == fracgunpic[1])
	{
		if(PlayerInfo[playerid][pForma] == 1)
		{
			if(PlayerInfo[playerid][pGunLspdTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
			if(lspdmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
			{
				new listitems[] = " [1] Обычный набор\n [2] Набор SWAT\n [3] Набор шерифа\n [4] Набор для спец.операций";
				ShowPlayerDialog(playerid, 9200, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LSPD");
		}
	}
	else if(pickupid == fracgunpic[3])
	{
		if(PlayerInfo[playerid][pForma] == 21)
		{
			if(PlayerInfo[playerid][pGunLspdTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
			if(lvpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
			{
				new listitems[] = " [1] Обычный набор\n [2] Набор SWAT\n [3] Набор шерифа\n [4] Набор для спец.операций";
				ShowPlayerDialog(playerid, 9200, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LVPD");
		}
	}
	else if(pickupid == fracgunpic[2])
	{
		if(PlayerInfo[playerid][pForma] == 10)
		{
			if(PlayerInfo[playerid][pGunLspdTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
			if(sfpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов!");
			{
				new listitems[] = " [1] Обычный набор\n [2] Набор SWAT\n [3] Набор шерифа\n [4] Набор для спец.операций";
				ShowPlayerDialog(playerid, 9200, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
				return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не cостоите в SFPD");
		}
	}
	else if(pickupid == fracgunpic[4])
	{
		if(PlayerInfo[playerid][pMember] == 34)
		{
			if(PlayerInfo[playerid][pGunLspdTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать комплект можно раз в 5 минут");
			{
				GiveWeapon(playerid, 15, 1);
				GiveWeapon(playerid, 42, 1000);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid, 100);
				PlayerInfo[playerid][pHP] = 100;
				PlayerInfo[playerid][pGunLspdTime] = 300;
				SendClientMessage(playerid, COLOR_USE, "Вам выдано: Ломик,Огнетушитель,Сухпай");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Пожарном Депо");
		}
	}
	else if(pickupid >= healheart[0]&& pickupid <= healheart[3])
	{
		if(PlayerInfo[playerid][pLevel] == 1)
  		{
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
		}
		else
		{
			SendClientMessage(playerid, COLOR_REDD, "Только для новичков(1 лвл)");
		}
	}
	else if(pickupid == cashs)
	{
	    if(PlayerInfo[playerid][pJob] == 7)
	    {
			if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не устроились");
		    if(JobAmmount[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ты еще ничего не заработал");
		    new string[50];
		    format(string,sizeof(string), "Вы заработали: {FFFFFF}%d вирт",JobAmmount[playerid]*50);
	        SendClientMessage(playerid,COLOR_GREEN,string);
		    PlayerInfo[playerid][pCash] += JobAmmount[playerid]*50;
	        JobAmmount[playerid] = 0;
	        SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён");
		    Prorab[playerid] = false; JobAmmount[playerid] = 0; Employer[playerid] = 999;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			DisablePlayerCheckpoint(playerid);
	    }
	    else
	    {
			if(Works[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не устроились");
		    if(JobAmmount[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ты еще ничего не заработал");
		    new string[50];
		    format(string,sizeof(string), "Вы заработали: {FFFFFF}%d вирт",JobAmmount[playerid]*25);
	        SendClientMessage(playerid,COLOR_GREEN,string);
		    PlayerInfo[playerid][pCash] += JobAmmount[playerid]*25;
	        JobAmmount[playerid] = 0;
	        SendClientMessage(playerid,COLOR_GREEN, "Рабочий день завершён");
		    Works[playerid] = false; JobAmmount[playerid] = 0; JobCP[playerid] = 0; Employer[playerid] = 999;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			DisablePlayerCheckpoint(playerid);
		}
    }
	else if(pickupid == clothes)
	{
	    if(PlayerInfo[playerid][pJob] == 7)
	    {
	        ShowPlayerDialog(playerid,406,DIALOG_STYLE_MSGBOX,"Раздевалка","Выберите одежду","Форма","Обычная");
		}
		else
		{
			ShowPlayerDialog(playerid,405,DIALOG_STYLE_MSGBOX, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[2])
  	{
	  	if(PlayerInfo[playerid][pSex] != 1)
	  	{
		  	SendClientMessage(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		  	return true;
	  	}
		if(PlayerInfo[playerid][pForma] == 0)
  		{
			OldSkin[playerid] = GetPlayerSkin(playerid);
			SetPlayerInterior(playerid,5);
			ShowMenuForPlayer(skinshopmagaz[0],playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Используйте клавишу SHIFT, чтобы выбрать скин");
			SendClientMessage(playerid, COLOR_GREY, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
			new rand = random(sizeof(gInviteSpawns));
			SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			ChosenSkin[playerid] = 230;
			CharPrice[playerid] = 1000;
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			new skin =2 + random(100);
			SetPlayerVirtualWorld(playerid,skin);
			CharPrice[playerid] = 1000;
			GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);
			return true;
  		}
	  	if(PlayerInfo[playerid][pForma] >= 1)
	  	{
			ShowMenuForPlayer(ChoseSkin,playerid);
			if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; }
			else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
			else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 23) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 24) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 25) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 26) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 27) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 28) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 29) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 30) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 31) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 32) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 33) {  ChosenSkin[playerid] = 70; }
			else { return true; }
			SetPlayerInterior(playerid,5);
			SetPlayerVirtualWorld(playerid,3);
			new rand = random(sizeof(gInviteSpawns));
			SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = PlayerInfo[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			return true;
		}
   	}
	if(pickupid == skinshop[1] || pickupid == skinshop[3])
  	{
	  	if(PlayerInfo[playerid][pSex] != 2)
	  	{
		  	SendClientMessage(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		  	return true;
	  	}
	  	if(PlayerInfo[playerid][pForma] == 0)
		{
			OldSkin[playerid] = GetPlayerSkin(playerid);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pChar] = 90;
			ShowMenuForPlayer(skinshopmagaz[1],playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Используйте клавишу SHIFT, чтобы выбрать скин");
			SendClientMessage(playerid, COLOR_GREY, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
			new rand = random(sizeof(gInviteSpawns));
			SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			ChosenSkin[playerid] = 90;
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			new skin =2 + random(100);
			SetPlayerVirtualWorld(playerid,skin);
			PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.0);
			CharPrice[playerid] = 10000;
			GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);
			return true;
	  	}
		if(PlayerInfo[playerid][pForma] >= 1)
		{
			ShowMenuForPlayer(ChoseSkin,playerid);
			if(PlayerInfo[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(PlayerInfo[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; }
			else if(PlayerInfo[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(PlayerInfo[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(PlayerInfo[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(PlayerInfo[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(PlayerInfo[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(PlayerInfo[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(PlayerInfo[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(PlayerInfo[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(PlayerInfo[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(PlayerInfo[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(PlayerInfo[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(PlayerInfo[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
			else if(PlayerInfo[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(PlayerInfo[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(PlayerInfo[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(PlayerInfo[playerid][pMember] == 23) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 24) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 25) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 26) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 27) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 28) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 29) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 30) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 31) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 32) {  ChosenSkin[playerid] = 247; }
			else if(PlayerInfo[playerid][pMember] == 33) {  ChosenSkin[playerid] = 70; }
			else { return true; }
			SetPlayerInterior(playerid,5);
			SetPlayerVirtualWorld(playerid,3);
			new rand = random(sizeof(gInviteSpawns));
			SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = PlayerInfo[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			return true;
		}
 	}
	else if(pickupid == hallenter[0])
	{
	    if(chlocked == 1) return SendClientMessage(playerid,COLOR_GREY,"Мэрия закрыта,подойдите позже");
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,385.9440,173.6978,1008.3828);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerCheckpoint(playerid,359.8466,184.7337,1008.3828,1.5);
		PicCP[playerid] = 2;
	}
	else if(pickupid == hallenter[1])
	{
	    if(chbacklocked == 1) return SendClientMessage(playerid,COLOR_GREY,"Мэрия закрыта,подойдите позже");
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,366.4958,193.5977,1008.3828);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerCheckpoint(playerid,359.8466,184.7337,1008.3828,1.5);
		PicCP[playerid] = 2;
	}
	else if(pickupid == hallexit)
	{
	    if(chlocked == 1) return SendClientMessage(playerid,COLOR_RED,"Мэрия закрыта");
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1480.8832,-1769.0471,18.7958);
		SetPlayerFacingAngle(playerid, 0.0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
	}
	else if(pickupid == hallbackexit)
	{
		if(chbacklocked == 1) return SendClientMessage(playerid,COLOR_RED,"Мэрия закрыта");
        SetPlayerInterior(playerid,0);
        SetPlayerFacingAngle(playerid,90.0);
        SetPlayerVirtualWorld(playerid,0);
        SetPlayerPos(playerid,1409.7998,-1790.4530,13.5469);
        DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
	}
 	else if(pickupid == rifaenter[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2185.7517,-1811.1965,13.5469);
		SetPlayerFacingAngle(playerid, 2.5609);
		PlayerInfo[playerid][pBisIn] = -1;
	}
	else if(pickupid == rifaenter[1])
	{
		SetPlayerInterior(playerid,18);
		SetPlayerVirtualWorld(playerid, 63);
		SetPlayerPos(playerid,-226.9188,1401.3635,27.7656);
		SetPlayerFacingAngle(playerid, 500);
		PlayerInfo[playerid][pBisIn] = -1;
	}
	else if(pickupid == vagospic[0])
	{
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPos(playerid,303.2970,307.1475,1003.5391);
		SetPlayerFacingAngle(playerid, 500);
	}
	else if(pickupid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2774.2017,-1628.0233,12.1775);
		SetPlayerFacingAngle(playerid, 330.4577);
	}
	else if(pickupid == grove[1])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == grove[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == aztecpic[0])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 36);
		SetPlayerPos(playerid,-42.31,1408.18,1084.43);
		SetPlayerFacingAngle(playerid, 1000);
	}
	else if(pickupid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
	}
	else if(pickupid == bankpic[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2307.6462,-15.7474,26.7496);
		SetPlayerFacingAngle(playerid, 281.2246);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == bankpic[1])
	{
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,1414.14,-1702.78,13.5395);
	    SetPlayerFacingAngle(playerid, 209.7472);
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == banksf[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,2307.6462,-15.7474,26.7496);
		SetPlayerFacingAngle(playerid, 281.2246);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == banksf[1])
	{
	    SetPlayerPos(playerid,-2169.2756,251.8620,35.3314);
		SetPlayerFacingAngle(playerid, 267.6245);
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ballasenter[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2647.9932,-2021.5747,13.5469);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == ballasenter[1])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 34);
		SetPlayerPos(playerid,-68.6311,1353.8743,1080.2109);
		SetPlayerFacingAngle(playerid, 100);
	}
	else if(pickupid == warehousearmy[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == warehousearmy[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == warehousearmy[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == warehousearmy[3])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pickupid == lsaammo)
	{
		if(PlayerInfo[playerid][pForma] == 19 || PlayerInfo[playerid][pForma] == 3 || proverkaforma[playerid] == 1)
		{
	    	if(PlayerInfo[playerid][pGunLsaTime] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
				return true;
			}
			if(lsamatbi <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			lsamatbi -= 100;
			PlayerInfo[playerid][pGunLsaTime] = 300;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не армеец");
		}
	}
	else if(pickupid == lsamaterials)
	{
		SendClientMessage(playerid, 0x6495EDFF, "Склад с оружием. Чтобы украсть комплект, используйте /materials get");
	}
    else if(pickupid == gunarm[0])
    {
    	if(PlayerInfo[playerid][pForma] == 19 || proverkaforma[playerid] == 1)
    	{
		    if(PlayerInfo[playerid][pGunLvaTime] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
				return true;
			}
			if(armmatbi <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			armmatbi -= 100;
			PlayerInfo[playerid][pGunLvaTime] = 300;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "Вы не солдат LVA");
		}
	}
	else if(pickupid == gunarm[1])
	{
		if(PlayerInfo[playerid][pForma] == 3 || proverkaforma[playerid] == 1)
		{
			if(PlayerInfo[playerid][pGunaSfaTime] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
				return true;
			}
			if(armmatsf <= 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "На складе нет оружия");
				return true;
			}
			GiveWeapon(playerid, 24, 100);
			GiveWeapon(playerid, 31, 200);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			PlayerInfo[playerid][pSatiety] = 100;
			armmatsf -= 100;
			PlayerInfo[playerid][pGunaSfaTime] = 300;
			SendClientMessage(playerid, COLOR_USE, "Вам выдано: Deagle (100),M4 (200), Бронижелет, Сухой паёк");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы не солдат SFA");
		}
	}
	else if(pickupid == zone[1])
	{
    	if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "У вас нет ключа!");
		}
	}
	else if(pickupid == zone[0])
	{
	    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else
		{
    		SendClientMessage(playerid, COLOR_WHITE, "У вас нет ключа");
		}
  	}
	return true;
}
stock ShowMenuToPlayer(menuid, playerid)
{
    if(menuid == 1)
    {
        if(PlayerInfo[playerid][pSex] == 2)
        {
			switch(PlayerInfo[playerid][pMember])
			{
		    	case 1,10,21:
		    	{
					PlayerInfo[playerid][pModel] = 141;
  					SetPlayerSkin(playerid, 141);
				}
				case 2:
		    	{
					PlayerInfo[playerid][pModel] = 192;
  					SetPlayerSkin(playerid, 192);
				}
				case 3,19:
		    	{
					PlayerInfo[playerid][pModel] = 191;
  					SetPlayerSkin(playerid, 191);
				}
				case 4,22,33:
		    	{
					PlayerInfo[playerid][pModel] = 219;
  					SetPlayerSkin(playerid, 219);
				}
				case 5:
		    	{
					PlayerInfo[playerid][pModel] = 93;
  					SetPlayerSkin(playerid, 93);
				}
				case 6:
		    	{
					PlayerInfo[playerid][pModel] = 160;
  					SetPlayerSkin(playerid, 160);
				}
				case 7:
		    	{
					PlayerInfo[playerid][pModel] = 150;
  					SetPlayerSkin(playerid, 150);
				}
				case 8:
		    	{
					PlayerInfo[playerid][pModel] = 11;
  					SetPlayerSkin(playerid, 11);
				}
				case 9,16,20:
		    	{
					PlayerInfo[playerid][pModel] = 211;
  					SetPlayerSkin(playerid, 211);
				}
				case 11:
		    	{
					PlayerInfo[playerid][pModel] = 172;
  					SetPlayerSkin(playerid, 172);
				}
				case 12:
		    	{
					PlayerInfo[playerid][pModel] = 13;
  					SetPlayerSkin(playerid, 13);
				}
				case 13:
		    	{
					PlayerInfo[playerid][pModel] = 215;
  					SetPlayerSkin(playerid, 215);
				}
				case 14:
		    	{
					PlayerInfo[playerid][pModel] = 56;
  					SetPlayerSkin(playerid, 56);
				}
				case 15:
		    	{
					PlayerInfo[playerid][pModel] = 195;
  					SetPlayerSkin(playerid, 195);
				}
				case 17:
		    	{
					PlayerInfo[playerid][pModel] = 41;
  					SetPlayerSkin(playerid, 41);
				}
				case 18:
		    	{
					PlayerInfo[playerid][pModel] = 226;
  					SetPlayerSkin(playerid, 226);
				}
				case 23..32:
		    	{
					PlayerInfo[playerid][pModel] = 201;
  					SetPlayerSkin(playerid, 201);
				}
				case 34:
		    	{
					PlayerInfo[playerid][pModel] = 298;
  					SetPlayerSkin(playerid, 298);
				}
			}
			if(InviteMan[playerid] == 1)
			{
  				InviteMan[playerid] = 0;
				return SpawnPlayer(playerid);
			}
			else if(GetPlayerInterior(playerid) == 18) return SetPlayerPos(playerid, 177.2619,-88.1585,1001.8047);
			else return SetPlayerPos(playerid ,222.5185,-8.1003,1002.2109);
		}
		else
		{
			switch(PlayerInfo[playerid][pMember])
  			{
    			case 1: SetPlayerSkin(playerid, 280);
				case 2: SetPlayerSkin(playerid, 286);
				case 3,19:
				{
				    PlayerInfo[playerid][pModel] = 287;
  					SetPlayerSkin(playerid, 287);
  					if(InviteMan[playerid] == 1)
					{
  						InviteMan[playerid] = 0;
						return SpawnPlayer(playerid);
					}
					else if(GetPlayerInterior(playerid) == 18) return SetPlayerPos(playerid, 177.2619,-88.1585,1001.8047);
					else return SetPlayerPos(playerid ,222.5185,-8.1003,1002.2109);
				}
				case 4,22,33: SetPlayerSkin(playerid, 276);
				case 5: SetPlayerSkin(playerid, 126);
				case 6: SetPlayerSkin(playerid, 120);
				case 7: SetPlayerSkin(playerid, 71);
				case 8:
				{
				    PlayerInfo[playerid][pModel] = 171;
  					SetPlayerSkin(playerid, 171);
  					if(InviteMan[playerid] == 1)
					{
  						InviteMan[playerid] = 0;
						return SpawnPlayer(playerid);
					}
					else if(GetPlayerInterior(playerid) == 18) return SetPlayerPos(playerid, 177.2619,-88.1585,1001.8047);
					else return SetPlayerPos(playerid ,222.5185,-8.1003,1002.2109);
				}
				case 9,16,20: SetPlayerSkin(playerid, 60);
				case 10: SetPlayerSkin(playerid, 267);
				case 11: SetPlayerSkin(playerid, 189);
				case 12: SetPlayerSkin(playerid, 103);
				case 13: SetPlayerSkin(playerid, 108);
				case 14: SetPlayerSkin(playerid, 112);
				case 15: SetPlayerSkin(playerid, 105);
				case 17: SetPlayerSkin(playerid, 114);
				case 18: SetPlayerSkin(playerid, 175);
				case 21: SetPlayerSkin(playerid, 282);
				case 23..32: SetPlayerSkin(playerid, 181);
				case 34: SetPlayerSkin(playerid, 277);
				case 35:
				{
				    if(InviteMan[playerid] == 1)
					{
  						InviteMan[playerid] = 0;
						return SpawnPlayer(playerid);
					}
					else return ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
			}
		}
		SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
		SendClientMessage(playerid, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
		SendClientMessage(playerid, COLOR_GREY, "Если Вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз");
		InviteMan[playerid] = 0;
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid, 222.3489, -8.5845, 1002.2109);
		SetPlayerFacingAngle(playerid, 266.7302);
		SetPlayerCameraPos(playerid, 225.3489, -8.5845, 1002.2109);
		SetPlayerCameraLookAt(playerid, 222.3489, -8.5845, 1002.2109);
		TogglePlayerControllable(playerid, 0);
		SelectCharPlace[playerid] = 1;
		ShowMenuForPlayer(ChoseSkin, playerid);
	}
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == bomj[0])
	{
		switch(row)
		{
			case 0:
			{
			    switch(SelectCharPlace[playerid])
			    {
			        case 1:
					{
						SetPlayerSkin(playerid, 79);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = 79;
					}
					case 2:
					{
					    SetPlayerSkin(playerid, 213);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = 213;
					}
					case 3:
					{
					    SetPlayerSkin(playerid, 212);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = 212;
					}
					case 4:
					{
					    SetPlayerSkin(playerid, 200);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = 200;
					}
					case 5:
					{
					    SetPlayerSkin(playerid, 137);
						SelectCharPlace[playerid] = 6;
						ChosenSkin[playerid] = 137;
					}
					case 6:
					{
					    SetPlayerSkin(playerid, 136);
						SelectCharPlace[playerid] = 7;
						ChosenSkin[playerid] = 136;
					}
					case 7:
					{
					    SetPlayerSkin(playerid, 135);
						SelectCharPlace[playerid] = 8;
						ChosenSkin[playerid] = 135;
					}
					case 8:
					{
					    SetPlayerSkin(playerid, 134);
						SelectCharPlace[playerid] = 9;
						ChosenSkin[playerid] = 134;
					}
					case 9:
					{
					    SetPlayerSkin(playerid, 78);
						SelectCharPlace[playerid] = 10;
						ChosenSkin[playerid] = 78;
					}
					case 10:
					{
					    SetPlayerSkin(playerid, 239);
						SelectCharPlace[playerid] = 11;
						ChosenSkin[playerid] = 239;
					}
					case 11:
					{
					    SetPlayerSkin(playerid, 230);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = 230;
					}
				}
	            ShowMenuForPlayer(bomj[0],playerid);
            }
            case 1:
            {
	            PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
	            SelectCharPlace[playerid] = 0;
	            PlayerInfo[playerid][pTut] = 1;
	            CharPrice[playerid] = 0;
	            SelectCharID[playerid] = 0;
	            SelectChar[playerid] = 0;
	            PicCP[playerid] = 0;
	            PlayerInfo[playerid][pRank] = 0;
	            SendClientMessage(playerid, COLOR_WHITE, "Поздравляем Вас с успешной регистрацией!");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Направляйтесь на работу грузчика(( Используйте /GPS >> [26] Работа грузчика ))");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Грузчиком вы сможете заработать денег на водительские права");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Рядом с вами есть остановка, где можно дождаться автобус ( Внутри Городской )");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: А также любой таксист отвезёт вас на работу бесплатно");
	            SendClientMessage(playerid, COLOR_WHITE, "Подсказка: Мы настоятельно рекомендуем вам прочесть 'Помощь'");
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	            SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	            SpawnPlayer(playerid);
			}
		}
		return true;
	}
	else if(Current == bomj[1])
    {
		switch(row)
		{
            case 0:
            {
                switch(SelectCharPlace[playerid])
				{
				    case 1:
				    {
				        SetPlayerSkin(playerid, 199);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = 199;
					}
					case 2:
					{
					    SetPlayerSkin(playerid, 197);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = 197;
					}
					case 3:
					{
					    SetPlayerSkin(playerid, 77);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = 77;
					}
					case 4:
					{
					    SetPlayerSkin(playerid, 90);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = 90;
					}
				}
	            ShowMenuForPlayer(bomj[1],playerid);
            }
            case 1:
            {
	            PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
	            SelectCharPlace[playerid] = 0;
	            PlayerInfo[playerid][pTut] = 1;
	            CharPrice[playerid] = 0;
	            SelectCharID[playerid] = 0;
	            SelectChar[playerid] = 0;
	            PicCP[playerid] = 0;
	            PlayerInfo[playerid][pRank] = 0;
	            SendClientMessage(playerid, COLOR_WHITE, "Поздравляем Вас с успешной регистрацией!");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Направляйтесь на работу грузчика(( Используйте /GPS >> [26] Работа грузчика ))");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Грузчиком вы сможете заработать денег на водительские права");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: Рядом с вами есть остановка, где можно дождаться автобус ( Внутри Городской )");
	            SendClientMessage(playerid, 0x00D900C8, "Подсказка: А также любой таксист отвезёт вас на работу бесплатно");
	            SendClientMessage(playerid, COLOR_WHITE, "Подсказка: Мы настоятельно рекомендуем вам прочесть 'Помощь'");
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	            SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	            SpawnPlayer(playerid);
			}
		}
		return true;
  	}
    else if(Current == ChoseSkin)
	{
	 	switch(row)
	 	{
			case 0:
	  		{
		  		switch(PlayerInfo[playerid][pMember])
				{
					case 1: // LSPD
					{
						switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 281);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 284);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 285);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 280);
								SelectCharPlace[playerid] = 1;
							}
						}
			      		ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 2: // FBI
					{
						switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 164);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 163);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 166);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 165);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
							{
							    SetPlayerSkin(playerid, 286);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
	    			}
					case 4,22,33: // Medics SF
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 275);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 274);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 70);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 276);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 5: // La Cosa Nostra
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 223);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 124);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 127);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 126);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 6: // Yakuza
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 186);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 208);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 123);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 120);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 7: // Goverment
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 98);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 187);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 295);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 228);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
       						{
							    SetPlayerSkin(playerid, 227);
								SelectCharPlace[playerid] = 6;
							}
							case 6:
       						{
							    SetPlayerSkin(playerid, 57);
								SelectCharPlace[playerid] = 7;
							}
							case 7:
       						{
							    SetPlayerSkin(playerid, 147);
								SelectCharPlace[playerid] = 8;
							}
							case 8:
       						{
							    SetPlayerSkin(playerid, 71);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 9,16,20: // NEWS
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 250);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 170);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 217);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 261);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
       						{
							    SetPlayerSkin(playerid, 290);
								SelectCharPlace[playerid] = 6;
							}
							case 6:
       						{
							    SetPlayerSkin(playerid, 60);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 10: // SFPD
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 266);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 265);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 284);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 285);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
       						{
							    SetPlayerSkin(playerid, 267);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 11: // Instructors
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 240);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 59);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 20);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
       						{
							    SetPlayerSkin(playerid, 189);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 12: // Ballas
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 102);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 104);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 103);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 13: // Vagos
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 109);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 110);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 108);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 14: // Russian Mafia
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 111);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 125);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 272);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 113);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
							{
							    SetPlayerSkin(playerid, 112);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 15: // Grove
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 106);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 107);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 271);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 269);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
							{
							    SetPlayerSkin(playerid, 270);
								SelectCharPlace[playerid] = 6;
							}
							case 6:
							{
							    SetPlayerSkin(playerid, 105);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 17: // Aztek
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 115);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 116);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 114);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 18: // Rifa
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 173);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 174);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 175);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 21: // LVPD
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 283);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 288);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 284);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 285);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
							{
							    SetPlayerSkin(playerid, 282);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 23..32: // байкеры
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 247);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 248);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 254);
								SelectCharPlace[playerid] = 4;
							}
							case 4:
							{
							    SetPlayerSkin(playerid, 100);
								SelectCharPlace[playerid] = 5;
							}
							case 5:
							{
							    SetPlayerSkin(playerid, 181);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
					case 34: // Ffighters
					{
					    switch(SelectCharPlace[playerid])
						{
							case 1:
							{
							    SetPlayerSkin(playerid, 278);
								SelectCharPlace[playerid] = 2;
			    			}
			    			case 2:
			    			{
			    			    SetPlayerSkin(playerid, 279);
								SelectCharPlace[playerid] = 3;
							}
							case 3:
							{
							    SetPlayerSkin(playerid, 277);
								SelectCharPlace[playerid] = 1;
							}
						}
					    ShowMenuForPlayer(ChoseSkin,playerid);
					}
				}
			}
			case 1:
			{
			    PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
			    forma[playerid] = 0;
			    SetPlayerVirtualWorld(playerid,0);
	 			SelectCharPlace[playerid] = 0;
			   	CharPrice[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
			    PicCP[playerid] = 0;
			    SpawnPlayer(playerid);
			    return true;
			}
		}
	}
	else if(Current == skinshopmagaz[0])
	{
		if(PlayerToPoint(3.0,playerid,222.3489,-8.5845,1002.2109))
		{
			switch(row)
			{
				case 0:
	  			{
   					if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, Peds[1][0]);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = Peds[1][0];
						CharPrice[playerid] = 2000000;
						GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);
					}
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[1][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[1][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[2][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[2][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[3][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[3][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[4][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[4][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[5][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[5][0];	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[6][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[6][0];	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[7][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[7][0]; 	CharPrice[playerid] = 1000;    	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[8][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[8][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[9][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[9][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[10][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[10][0];CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[11][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[11][0];CharPrice[playerid] = 2000;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[12][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = Peds[12][0];CharPrice[playerid] = 2000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, Peds[13][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = Peds[13][0]; CharPrice[playerid] = 2000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, Peds[14][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = Peds[14][0];CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, Peds[15][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = Peds[15][0];CharPrice[playerid] = 2500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, Peds[16][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = Peds[16][0];CharPrice[playerid] = 2500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, Peds[17][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = Peds[17][0];CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, Peds[18][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = Peds[18][0];CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, Peds[19][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = Peds[19][0]; CharPrice[playerid] = 2000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, Peds[20][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = Peds[20][0];CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, Peds[21][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = Peds[21][0];CharPrice[playerid] = 1600000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1600000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, Peds[22][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = Peds[22][0]; CharPrice[playerid] = 1700000;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1700000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, Peds[23][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = Peds[23][0]; CharPrice[playerid] = 4000000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, Peds[24][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = Peds[24][0]; CharPrice[playerid] = 10000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, Peds[25][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = Peds[25][0]; CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, Peds[26][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = Peds[26][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, Peds[27][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = Peds[27][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, Peds[28][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = Peds[28][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, Peds[29][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = Peds[29][0]; CharPrice[playerid] = 15000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~15000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, Peds[30][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = Peds[30][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, Peds[31][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = Peds[31][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, Peds[32][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = Peds[32][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, Peds[33][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = Peds[33][0]; CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, Peds[34][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = Peds[34][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, Peds[35][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = Peds[35][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, Peds[36][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = Peds[36][0]; CharPrice[playerid] = 3500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, Peds[37][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = Peds[37][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, Peds[38][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = Peds[38][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, Peds[39][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = Peds[39][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, Peds[40][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = Peds[40][0];CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, Peds[41][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = Peds[41][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, Peds[42][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = Peds[42][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, Peds[43][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = Peds[43][0]; CharPrice[playerid] = 3500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, Peds[44][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[44][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
 			    	ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				case 1:
	  			{
   					if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, Peds[44][0]);
						SelectCharPlace[playerid] = 45;
						ChosenSkin[playerid] = Peds[44][0];
						CharPrice[playerid] = 3500000;
						GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3500000", 2000, 3);
					}
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[1][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = Peds[1][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[2][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[2][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[3][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[3][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[4][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[4][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[5][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[5][0];	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[6][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[6][0];	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[7][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[7][0]; 	CharPrice[playerid] = 1000;    	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[8][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[8][0]; 	CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[9][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[9][0]; 	CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[10][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[10][0];CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[11][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[11][0];CharPrice[playerid] = 2000;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[12][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[12][0];CharPrice[playerid] = 2000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, Peds[13][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[13][0]; CharPrice[playerid] = 2000;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, Peds[14][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = Peds[14][0];CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, Peds[15][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = Peds[15][0];CharPrice[playerid] = 2500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, Peds[16][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = Peds[16][0];CharPrice[playerid] = 2500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, Peds[17][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = Peds[17][0];CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, Peds[18][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = Peds[18][0];CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, Peds[19][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = Peds[19][0]; CharPrice[playerid] = 2000;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, Peds[20][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = Peds[20][0];CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, Peds[21][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = Peds[21][0];CharPrice[playerid] = 1600000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1600000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, Peds[22][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = Peds[22][0]; CharPrice[playerid] = 1700000;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1700000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, Peds[23][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = Peds[23][0]; CharPrice[playerid] = 4000000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, Peds[24][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = Peds[24][0]; CharPrice[playerid] = 10000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, Peds[25][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = Peds[25][0]; CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, Peds[26][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = Peds[26][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, Peds[27][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = Peds[27][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, Peds[28][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = Peds[28][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, Peds[29][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = Peds[29][0]; CharPrice[playerid] = 15000;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~15000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, Peds[30][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = Peds[30][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, Peds[31][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = Peds[31][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, Peds[32][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = Peds[32][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, Peds[33][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = Peds[33][0]; CharPrice[playerid] = 3000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, Peds[34][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = Peds[34][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, Peds[35][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = Peds[35][0]; CharPrice[playerid] = 1500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, Peds[36][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = Peds[36][0]; CharPrice[playerid] = 3500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, Peds[37][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = Peds[37][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, Peds[38][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = Peds[38][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, Peds[39][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = Peds[39][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, Peds[40][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = Peds[40][0];CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3); }
				    else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, Peds[41][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = Peds[41][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, Peds[42][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = Peds[42][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, Peds[43][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = Peds[43][0]; CharPrice[playerid] = 3500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~3500000", 2000, 3);}
				    else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, Peds[44][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = Peds[44][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
 			    	ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < CharPrice[playerid])
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						ShowMenuForPlayer(skinshopmagaz[0],playerid);
						return true;
			  		}
		  			PlayerInfo[playerid][pCash] -= CharPrice[playerid];
			     	if(zips[playerid] == 1)
			  		{
				  		SetPlayerInterior(playerid,18);
						SetPlayerVirtualWorld(playerid,0);
				  		CharPrice[playerid] = 0;
				       	PlayerInfo[playerid][pCash]-= CharPrice[playerid];
						SetPlayerPos(playerid ,181.1844,-88.0599,1002);
				        TogglePlayerControllable(playerid,1);
					    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
					    SetCameraBehindPlayer(playerid);
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						return true;
			  		}
			  		CharPrice[playerid] = 0;
			       	PlayerInfo[playerid][pCash] -= CharPrice[playerid];
			      	SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
			        TogglePlayerControllable(playerid, 1);
			        SetPlayerVirtualWorld(playerid, 0);
				    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SetCameraBehindPlayer(playerid);
					SelectCharPlace[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		 		}
		 		case 3:
			  	{
					if(zips[playerid] == 1)
					{
						SetPlayerVirtualWorld(playerid,0);
	  					SetPlayerInterior(playerid,18);
				  		CharPrice[playerid] = 0;
		    			TogglePlayerControllable(playerid,1);
				  		SetCameraBehindPlayer(playerid);
				  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
				   		SetPlayerPos(playerid, 181.1844,-88.0599,1002);
					    SetPlayerSkin(playerid, OldSkin[playerid]);
					    PlayerInfo[playerid][pChar] = OldSkin[playerid];
					    SelectCharPlace[playerid] = 0;
					    SelectCharID[playerid] = 0;
					    SelectChar[playerid] = 0;
					    return true;
		  			}
			   		SetPlayerVirtualWorld(playerid, 0);
			  		CharPrice[playerid] = 0;
		    		TogglePlayerControllable(playerid, 1);
			  		SetCameraBehindPlayer(playerid);
			  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
				   	SetPlayerPos(playerid, 209.4333,-7.9053,1001.2109);
				    SetPlayerSkin(playerid, OldSkin[playerid]);
				    PlayerInfo[playerid][pChar] = OldSkin[playerid];
				    SelectCharPlace[playerid] = 0;
				    SelectCharID[playerid] = 0;
				    SelectChar[playerid] = 0;
				}
			}
		}
		return true;
	}
	else if(Current == hatmenu)
    {
		switch(row)
		{
            case 0:
            {
	            choise[playerid] = 1;
	            ChosenHat[playerid] = 18910;
           		HideMenuForPlayer(hatmenu, playerid);
	            ShowMenuForPlayer(hatmenu2,playerid);
            }
            case 1:
            {
	            choise[playerid] = 151;
	            ChosenHat[playerid] = 19140;
	            HideMenuForPlayer(hatmenu, playerid);
	            ShowMenuForPlayer(hatmenu2,playerid);
            }
            case 2:
            {
	            choise[playerid] = 250;
	            ChosenHat[playerid] = 18920;
	            HideMenuForPlayer(hatmenu, playerid);
	            ShowMenuForPlayer(hatmenu2,playerid);
			}
			case 3:
            {
	            choise[playerid] = 201;
	            ChosenHat[playerid] = 19053;
	            HideMenuForPlayer(hatmenu, playerid);
	            ShowMenuForPlayer(hatmenu2,playerid);
			}
			case 4:
            {
                HideMenuForPlayer(hatmenu, playerid);
			    ShowMenuForPlayer(hatmenu,playerid);
	            SendClientMessage(playerid,COLOR_GREY,"Ещё не завезли,ожидайте!");
			}
			case 5:
			{
                choise[playerid] = 351;
                ChosenHat[playerid] = 18640;
	            HideMenuForPlayer(hatmenu, playerid);
	            ShowMenuForPlayer(hatmenu2,playerid);
			}
			case 6:
            {
                HideMenuForPlayer(hatmenu, playerid);
    			SetPlayerInterior(playerid,5);
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
				SetPlayerFacingAngle(playerid, 89.5070);
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
		}
		return true;
  	}
  	else if(Current == hatmenu2)
    {
		switch(row)
		{
            case 0:
            {
                if(choise[playerid] == 1) { SetPlayerAttachedObject(playerid,0,18638,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 2; ChosenHat[playerid] = 19100;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/125 COST: ~y~5000", 2000, 3); }
				else if(choise[playerid] == 2) { SetPlayerAttachedObject(playerid,0,19101,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 3; ChosenHat[playerid] = 19101;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/125 COST: ~y~5000", 2000, 3); }
    			else if(choise[playerid] == 3) { SetPlayerAttachedObject(playerid,0,18909,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 4; ChosenHat[playerid] = 18909;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 4) { SetPlayerAttachedObject(playerid,0,18908,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 5; ChosenHat[playerid] = 18908;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 5) { SetPlayerAttachedObject(playerid,0,18907,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 6; ChosenHat[playerid] = 18907;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 6) { SetPlayerAttachedObject(playerid,0,18906,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 7; ChosenHat[playerid] = 18906;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 7) { SetPlayerAttachedObject(playerid,0,18905,2,0.1,0.0,0.0,90.0,180.0,90.0,1.2,1.2,1.2); choise[playerid] = 8; ChosenHat[playerid] = 18905;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 8) { SetPlayerAttachedObject(playerid,0,18904,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 9; ChosenHat[playerid] = 18904;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/125 COST: ~y~5000", 2000, 3); }
	   			else if(choise[playerid] == 9) { SetPlayerAttachedObject(playerid,0,18903,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 10; ChosenHat[playerid] = 18903;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 10) { SetPlayerAttachedObject(playerid,0,18902,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 11; ChosenHat[playerid] = 18902;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 11) { SetPlayerAttachedObject(playerid,0,18901,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 12; ChosenHat[playerid] = 18901;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 12) { SetPlayerAttachedObject(playerid,0,18900,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 13; ChosenHat[playerid] = 18900;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 13) { SetPlayerAttachedObject(playerid,0,18899,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 14; ChosenHat[playerid] = 18899;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 14) { SetPlayerAttachedObject(playerid,0,18898,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 15; ChosenHat[playerid] = 18898;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 15) { SetPlayerAttachedObject(playerid,0,18897,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 16; ChosenHat[playerid] = 18897;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 16) { SetPlayerAttachedObject(playerid,0,18896,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 17; ChosenHat[playerid] = 18896;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~16/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 17) { SetPlayerAttachedObject(playerid,0,18895,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 18; ChosenHat[playerid] = 18895;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~17/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 18) { SetPlayerAttachedObject(playerid,0,18894,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 19; ChosenHat[playerid] = 18894;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~18/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 19) { SetPlayerAttachedObject(playerid,0,18893,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 20; ChosenHat[playerid] = 18893;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~19/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 20) { SetPlayerAttachedObject(playerid,0,18892,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 21; ChosenHat[playerid] = 18892;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~20/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 21) { SetPlayerAttachedObject(playerid,0,18925,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 22; ChosenHat[playerid] = 18925;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~21/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 22) { SetPlayerAttachedObject(playerid,0,19160,2,0.09,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 23; ChosenHat[playerid] = 19160;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~22/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 23) { SetPlayerAttachedObject(playerid,0,19161,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 24; ChosenHat[playerid] = 19161;  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~23/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 24) { SetPlayerAttachedObject(playerid,0,19162,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 25; ChosenHat[playerid] = 19162;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~24/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 25) { SetPlayerAttachedObject(playerid,0,19163,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 26; ChosenHat[playerid] = 19163;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~25/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 26) { SetPlayerAttachedObject(playerid,0,18961,2,0.15,0.03,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 27; ChosenHat[playerid] = 18961;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~26/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 27) { SetPlayerAttachedObject(playerid,0,18960,2,0.15,0.03,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 28; ChosenHat[playerid] = 18960;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~27/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 28) { SetPlayerAttachedObject(playerid,0,18959,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 29; ChosenHat[playerid] = 18959;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~28/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 29) { SetPlayerAttachedObject(playerid,0,18958,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 30; ChosenHat[playerid] = 18958;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~29/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 30) { SetPlayerAttachedObject(playerid,0,18957,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 31; ChosenHat[playerid] = 18957;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~30/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 31) { SetPlayerAttachedObject(playerid,0,18956,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 32; ChosenHat[playerid] = 18956;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~31/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 32) { SetPlayerAttachedObject(playerid,0,18955,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 33; ChosenHat[playerid] = 18955;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~32/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 33) { SetPlayerAttachedObject(playerid,0,18954,2,0.12,0.03,0.0,0.0,0.0,0.0,1.1,1.1,1.3); choise[playerid] = 34; ChosenHat[playerid] = 18954;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~33/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 34) { SetPlayerAttachedObject(playerid,0,18953,2,0.12,0.03,0.0,0.0,0.0,0.0,1.1,1.1,1.3); choise[playerid] = 35; ChosenHat[playerid] = 18953;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~34/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 35) { SetPlayerAttachedObject(playerid,0,18943,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 36; ChosenHat[playerid] = 18943;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~35/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 36) { SetPlayerAttachedObject(playerid,0,18942,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 37; ChosenHat[playerid] = 18942;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~36/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 37) { SetPlayerAttachedObject(playerid,0,18941,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 38; ChosenHat[playerid] = 18941;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~37/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 38) { SetPlayerAttachedObject(playerid,0,18940,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 39; ChosenHat[playerid] = 18940;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~38/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 39) { SetPlayerAttachedObject(playerid,0,18939,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 40; ChosenHat[playerid] = 18939;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~39/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 40) { SetPlayerAttachedObject(playerid,0,19102,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 41; ChosenHat[playerid] = 19102;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~40/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 41) { SetPlayerAttachedObject(playerid,0,19103,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 42; ChosenHat[playerid] = 19103;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~41/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 42) { SetPlayerAttachedObject(playerid,0,19104,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 43; ChosenHat[playerid] = 19104;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~42/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 43) { SetPlayerAttachedObject(playerid,0,19105,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 44; ChosenHat[playerid] = 19105;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~43/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 44) { SetPlayerAttachedObject(playerid,0,19106,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 45; ChosenHat[playerid] = 19106;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~44/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 45) { SetPlayerAttachedObject(playerid,0,19107,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 46; ChosenHat[playerid] = 19107;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~45/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 46) { SetPlayerAttachedObject(playerid,0,19108,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 47; ChosenHat[playerid] = 19108;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~46/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 47) { SetPlayerAttachedObject(playerid,0,19109,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 48; ChosenHat[playerid] = 19109;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~47/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 48) { SetPlayerAttachedObject(playerid,0,19110,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 49; ChosenHat[playerid] = 19110;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~48/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 49) { SetPlayerAttachedObject(playerid,0,19111,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 50; ChosenHat[playerid] = 19111;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~49/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 50) { SetPlayerAttachedObject(playerid,0,19112,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 51; ChosenHat[playerid] = 19112;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~50/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 51) { SetPlayerAttachedObject(playerid,0,19113,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 52; ChosenHat[playerid] = 19113;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~51/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 52) { SetPlayerAttachedObject(playerid,0,19114,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 53; ChosenHat[playerid] = 19114;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~52/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 53) { SetPlayerAttachedObject(playerid,0,19115,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 54; ChosenHat[playerid] = 19115;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~53/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 54) { SetPlayerAttachedObject(playerid,0,19116,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 55; ChosenHat[playerid] = 19116;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~54/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 55) { SetPlayerAttachedObject(playerid,0,19117,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 56; ChosenHat[playerid] = 19117;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~55/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 56) { SetPlayerAttachedObject(playerid,0,19118,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 57; ChosenHat[playerid] = 19118;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~56/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 57) { SetPlayerAttachedObject(playerid,0,19119,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 58; ChosenHat[playerid] = 19119;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~57/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 58) { SetPlayerAttachedObject(playerid,0,19120,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 59; ChosenHat[playerid] = 19120;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~58/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 59) { SetPlayerAttachedObject(playerid,0,19067,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 60; ChosenHat[playerid] = 19067;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~59/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 60) { SetPlayerAttachedObject(playerid,0,19068,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 61; ChosenHat[playerid] = 19068;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~60/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 61) { SetPlayerAttachedObject(playerid,0,19069,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 62; ChosenHat[playerid] = 19069;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~61/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 62) { SetPlayerAttachedObject(playerid,0,18970,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 63; ChosenHat[playerid] = 18970;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~62/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 63) { SetPlayerAttachedObject(playerid,0,18969,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 64; ChosenHat[playerid] = 18969;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~63/125 COST: ~y~5000", 2000, 3); }
  	    		else if(choise[playerid] == 64) { SetPlayerAttachedObject(playerid,0,18968,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 65; ChosenHat[playerid] = 18968;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~64/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 65) { SetPlayerAttachedObject(playerid,0,18967,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 66; ChosenHat[playerid] = 18967;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~65/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 66) { SetPlayerAttachedObject(playerid,0,18973,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 67; ChosenHat[playerid] = 18973;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~66/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 67) { SetPlayerAttachedObject(playerid,0,18972,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 68; ChosenHat[playerid] = 18972;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~67/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 68) { SetPlayerAttachedObject(playerid,0,18971,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 69; ChosenHat[playerid] = 18971;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~68/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 69) { SetPlayerAttachedObject(playerid,0,18951,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 70; ChosenHat[playerid] = 18951;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~69/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 70) { SetPlayerAttachedObject(playerid,0,18950,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 71; ChosenHat[playerid] = 18950;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~70/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 71) { SetPlayerAttachedObject(playerid,0,18949,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 72; ChosenHat[playerid] = 18949;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~71/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 72) { SetPlayerAttachedObject(playerid,0,18948,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 73; ChosenHat[playerid] = 18948;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~72/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 73) { SetPlayerAttachedObject(playerid,0,18947,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 74; ChosenHat[playerid] = 18947;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~73/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 74) { SetPlayerAttachedObject(playerid,0,18946,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 75; ChosenHat[playerid] = 18946;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~74/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 75) { SetPlayerAttachedObject(playerid,0,18945,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 76; ChosenHat[playerid] = 18945;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~75/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 76) { SetPlayerAttachedObject(playerid,0,18944,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 77; ChosenHat[playerid] = 18944;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~76/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 77) { SetPlayerAttachedObject(playerid,0,18935,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 78; ChosenHat[playerid] = 18935;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~77/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 78) { SetPlayerAttachedObject(playerid,0,18934,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 79; ChosenHat[playerid] = 18934;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~78/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 79) { SetPlayerAttachedObject(playerid,0,18933,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 80; ChosenHat[playerid] = 18933;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~79/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 80) { SetPlayerAttachedObject(playerid,0,18932,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 81; ChosenHat[playerid] = 18932;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~80/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 81) { SetPlayerAttachedObject(playerid,0,18931,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 82; ChosenHat[playerid] = 18931;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~81/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 82) { SetPlayerAttachedObject(playerid,0,18930,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 83; ChosenHat[playerid] = 18930;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~82/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 83) { SetPlayerAttachedObject(playerid,0,18929,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 84; ChosenHat[playerid] = 18929;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~83/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 84) { SetPlayerAttachedObject(playerid,0,18928,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 85; ChosenHat[playerid] = 18928;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~84/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 85) { SetPlayerAttachedObject(playerid,0,18927,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 86; ChosenHat[playerid] = 18927;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~85/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 86) { SetPlayerAttachedObject(playerid,0,18926,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 87; ChosenHat[playerid] = 18926;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~86/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 87) { SetPlayerAttachedObject(playerid,0,19093,2,0.09,0.0,0.01,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 88; ChosenHat[playerid] = 19093;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~87/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 88) { SetPlayerAttachedObject(playerid,0,19096,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 89; ChosenHat[playerid] = 19096;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~88/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 89) { SetPlayerAttachedObject(playerid,0,19095,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 90; ChosenHat[playerid] = 19095;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~89/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 90) { SetPlayerAttachedObject(playerid,0,19097,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 91; ChosenHat[playerid] = 19097;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~90/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 91) { SetPlayerAttachedObject(playerid,0,18962,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 92; ChosenHat[playerid] = 18962;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~91/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 92) { SetPlayerAttachedObject(playerid,0,18639,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 93; ChosenHat[playerid] = 18639;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~92/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 93) { SetPlayerAttachedObject(playerid,0,19137,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 94; ChosenHat[playerid] = 19137;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~93/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 94) { SetPlayerAttachedObject(playerid,0,19098,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 95; ChosenHat[playerid] = 19098;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~94/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 95) { SetPlayerAttachedObject(playerid,0,19141,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 96; ChosenHat[playerid] = 19141;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~95/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 96) { SetPlayerAttachedObject(playerid,0,19200,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 97; ChosenHat[playerid] = 19200;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~96/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 97) { SetPlayerAttachedObject(playerid,0,18979,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 98; ChosenHat[playerid] = 18979;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~97/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 98) { SetPlayerAttachedObject(playerid,0,18978,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 99; ChosenHat[playerid] = 18978;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~98/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 99) { SetPlayerAttachedObject(playerid,0,18977,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 100; ChosenHat[playerid] = 18977;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~99/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 100) { SetPlayerAttachedObject(playerid,0,18976,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 101; ChosenHat[playerid] = 18976;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~100/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 101) { SetPlayerAttachedObject(playerid,0,18938,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 102; ChosenHat[playerid] = 18938;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~101/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 102) { SetPlayerAttachedObject(playerid,0,18937,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 103; ChosenHat[playerid] = 18937;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~102/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 103) { SetPlayerAttachedObject(playerid,0,18936,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 104; ChosenHat[playerid] = 18936;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~103/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 104) { SetPlayerAttachedObject(playerid,0,18952,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 105; ChosenHat[playerid] = 18952;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~104/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 105) { SetPlayerAttachedObject(playerid,0,18645,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 106; ChosenHat[playerid] = 18645;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~105/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 106) { SetPlayerAttachedObject(playerid,0,18636,2,0.15,0.04,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 107; ChosenHat[playerid] = 18636;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~106/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 107) { SetPlayerAttachedObject(playerid,0,18966,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 108; ChosenHat[playerid] = 18966;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~107/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 108) { SetPlayerAttachedObject(playerid,0,18965,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 109; ChosenHat[playerid] = 18965;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~108/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 109) { SetPlayerAttachedObject(playerid,0,18964,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 110; ChosenHat[playerid] = 18964;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~109/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 110) { SetPlayerAttachedObject(playerid,0,19066,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 111; ChosenHat[playerid] = 19066;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~110/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 111) { SetPlayerAttachedObject(playerid,0,19065,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 112; ChosenHat[playerid] = 19065;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~111/125 COST: ~y~5000", 2000, 3); }
  	    		else if(choise[playerid] == 112) { SetPlayerAttachedObject(playerid,0,19064,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 113; ChosenHat[playerid] = 19064;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~112/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 113) { SetPlayerAttachedObject(playerid,0,19331,2,0.15,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 114; ChosenHat[playerid] = 19331;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~113/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 114) { SetPlayerAttachedObject(playerid,0,19330,2,0.15,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 115; ChosenHat[playerid] = 19330;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~114/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 115) { SetPlayerAttachedObject(playerid,0,19487,2,0.13,0.0,0.0,90.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 116; ChosenHat[playerid] = 19487;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~115/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 116) { SetPlayerAttachedObject(playerid,0,19352,2,0.13,0.0,0.0,90.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 117; ChosenHat[playerid] = 19352;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~116/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 117) { SetPlayerAttachedObject(playerid,0,19469,2,0.05,-0.07,0.01,210.0,0.0,0.0,2.0,2.0,2.0); choise[playerid] = 118; ChosenHat[playerid] = 19469;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~117/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 118) { SetPlayerAttachedObject(playerid,0,19488,2,0.14,0.03,0.0,90.0,90.0,0.0,1.2,1.2,1.2); choise[playerid] = 119; ChosenHat[playerid] = 19488;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~118/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 119) { SetPlayerAttachedObject(playerid,0,19521,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 120; ChosenHat[playerid] = 19521;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~119/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 120) { SetPlayerAttachedObject(playerid,0,19520,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 121; ChosenHat[playerid] = 19520;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~120/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 121) { SetPlayerAttachedObject(playerid,0,19424,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 122; ChosenHat[playerid] = 19424;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~121/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 122) { SetPlayerAttachedObject(playerid,0,19423,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 123; ChosenHat[playerid] = 19423;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~122/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 123) { SetPlayerAttachedObject(playerid,0,19422,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 124; ChosenHat[playerid] = 19422;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~123/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 124) { SetPlayerAttachedObject(playerid,0,19421,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 125; ChosenHat[playerid] = 19421;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~124/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 125) { SetPlayerAttachedObject(playerid,0,18910,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 1; ChosenHat[playerid] = 19421;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~125/125 COST: ~y~5000", 2000, 3); }
			    //Очки
       			else if(choise[playerid] == 151) { SetPlayerAttachedObject(playerid,1,19140,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 152; ChosenHat[playerid] = 19140;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/35 COST: ~y~2000", 2000, 3); }
				else if(choise[playerid] == 152) { SetPlayerAttachedObject(playerid,1,19139,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 153; ChosenHat[playerid] = 19139;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/35 COST: ~y~2000", 2000, 3); }
    			else if(choise[playerid] == 153) { SetPlayerAttachedObject(playerid,1,19138,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 154; ChosenHat[playerid] = 19038;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 154) { SetPlayerAttachedObject(playerid,1,19035,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 155; ChosenHat[playerid] = 19035;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 155) { SetPlayerAttachedObject(playerid,1,19034,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 156; ChosenHat[playerid] = 19034;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 156) { SetPlayerAttachedObject(playerid,1,19035,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 157; ChosenHat[playerid] = 19033;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 157) { SetPlayerAttachedObject(playerid,1,19032,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 158; ChosenHat[playerid] = 19032;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 158) { SetPlayerAttachedObject(playerid,1,19031,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 159; ChosenHat[playerid] = 19031;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/35 COST: ~y~2000", 2000, 3); }
	   			else if(choise[playerid] == 159) { SetPlayerAttachedObject(playerid,1,19030,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 160; ChosenHat[playerid] = 19030;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 160) { SetPlayerAttachedObject(playerid,1,19029,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 161; ChosenHat[playerid] = 19029;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 161) { SetPlayerAttachedObject(playerid,1,19028,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 162; ChosenHat[playerid] = 19028;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 162) { SetPlayerAttachedObject(playerid,1,19027,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 163; ChosenHat[playerid] = 19027;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 163) { SetPlayerAttachedObject(playerid,1,19026,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 164; ChosenHat[playerid] = 19026;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 164) { SetPlayerAttachedObject(playerid,1,19025,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 165; ChosenHat[playerid] = 19025;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 165) { SetPlayerAttachedObject(playerid,1,19024,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 166; ChosenHat[playerid] = 19024;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 166) { SetPlayerAttachedObject(playerid,1,19023,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 167; ChosenHat[playerid] = 19023;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~16/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 167) { SetPlayerAttachedObject(playerid,1,19022,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 168; ChosenHat[playerid] = 19022;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~17/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 168) { SetPlayerAttachedObject(playerid,1,19021,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 169; ChosenHat[playerid] = 19021;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~18/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 169) { SetPlayerAttachedObject(playerid,1,19020,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 170; ChosenHat[playerid] = 19020;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~19/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 170) { SetPlayerAttachedObject(playerid,1,19019,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 171; ChosenHat[playerid] = 19019;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~20/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 171) { SetPlayerAttachedObject(playerid,1,19018,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 172; ChosenHat[playerid] = 19018;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~21/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 172) { SetPlayerAttachedObject(playerid,1,19017,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 173; ChosenHat[playerid] = 19017;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~22/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 173) { SetPlayerAttachedObject(playerid,1,19016,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 174; ChosenHat[playerid] = 19016;  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~23/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 174) { SetPlayerAttachedObject(playerid,1,19015,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 175; ChosenHat[playerid] = 19015;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~24/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 175) { SetPlayerAttachedObject(playerid,1,19014,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 176; ChosenHat[playerid] = 19014;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~25/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 176) { SetPlayerAttachedObject(playerid,1,19013,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 177; ChosenHat[playerid] = 19013;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~26/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 177) { SetPlayerAttachedObject(playerid,1,19012,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 178; ChosenHat[playerid] = 19012;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~27/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 178) { SetPlayerAttachedObject(playerid,1,19011,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 179; ChosenHat[playerid] = 19011;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~28/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 179) { SetPlayerAttachedObject(playerid,1,19010,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 180; ChosenHat[playerid] = 19010;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~29/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 180) { SetPlayerAttachedObject(playerid,1,19009,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 181; ChosenHat[playerid] = 19009;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~30/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 181) { SetPlayerAttachedObject(playerid,1,19008,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 182; ChosenHat[playerid] = 19008;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~31/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 182) { SetPlayerAttachedObject(playerid,1,19007,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 183; ChosenHat[playerid] = 19007;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~32/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 183) { SetPlayerAttachedObject(playerid,1,19006,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 184; ChosenHat[playerid] = 19006;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~33/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 184) { SetPlayerAttachedObject(playerid,1,18974,2,0.09,0.04,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 185; ChosenHat[playerid] = 18974;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~34/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 185) { SetPlayerAttachedObject(playerid,1,19006,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 151; ChosenHat[playerid] = 19006;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~35/35 COST: ~y~2000", 2000, 3); }
			    //Маски
    			else if(choise[playerid] == 250) { SetPlayerAttachedObject(playerid,2,18920,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 251; ChosenHat[playerid] = 18920;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/16 COST: ~y~1500", 2000, 3); }
				else if(choise[playerid] == 251) { SetPlayerAttachedObject(playerid,2,18919,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 252; ChosenHat[playerid] = 18919;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/16 COST: ~y~1500", 2000, 3); }
    			else if(choise[playerid] == 252) { SetPlayerAttachedObject(playerid,2,18918,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 253; ChosenHat[playerid] = 18918;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 253) { SetPlayerAttachedObject(playerid,2,18917,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 254; ChosenHat[playerid] = 18917;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 254) { SetPlayerAttachedObject(playerid,2,18916,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 255; ChosenHat[playerid] = 18916;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 255) { SetPlayerAttachedObject(playerid,2,18915,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 256; ChosenHat[playerid] = 18915;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 256) { SetPlayerAttachedObject(playerid,2,18914,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 257; ChosenHat[playerid] = 18914;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 257) { SetPlayerAttachedObject(playerid,2,18913,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 258; ChosenHat[playerid] = 18913;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/16 COST: ~y~1500", 2000, 3); }
	   			else if(choise[playerid] == 258) { SetPlayerAttachedObject(playerid,2,18912,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 259; ChosenHat[playerid] = 18912;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 259) { SetPlayerAttachedObject(playerid,2,18911,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 260; ChosenHat[playerid] = 18911;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 260) { SetPlayerAttachedObject(playerid,2,18963,2,0.08,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 261; ChosenHat[playerid] = 18963;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 261) { SetPlayerAttachedObject(playerid,2,19163,2,0.08,0.03,0.0,180.0,90.0,0.0,1.2,1.2,1.2); choise[playerid] = 262; ChosenHat[playerid] = 19163;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 262) { SetPlayerAttachedObject(playerid,2,19037,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 263; ChosenHat[playerid] = 19037;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 263) { SetPlayerAttachedObject(playerid,2,19038,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 264; ChosenHat[playerid] = 19038;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 264) { SetPlayerAttachedObject(playerid,2,19036,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 265; ChosenHat[playerid] = 19036;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 265) { SetPlayerAttachedObject(playerid,2,19472,18,0.1,-0.05,0.0,90.0,340.0,0.0,1.0,1.2,1.3); choise[playerid] = 250; ChosenHat[playerid] = 19472;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~35/35 COST: ~y~1500", 2000, 3); }
			    //Часы
    			else if(choise[playerid] == 201) { SetPlayerAttachedObject(playerid,5,19053,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 202; ChosenHat[playerid] = 19053;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/15 COST: ~y~3500", 2000, 3); }
				else if(choise[playerid] == 202) { SetPlayerAttachedObject(playerid,5,19052,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 203; ChosenHat[playerid] = 19052;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/15 COST: ~y~3500", 2000, 3); }
    			else if(choise[playerid] == 203) { SetPlayerAttachedObject(playerid,5,19051,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 204; ChosenHat[playerid] = 19051;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 204) { SetPlayerAttachedObject(playerid,5,19050,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 205; ChosenHat[playerid] = 19050;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 205) { SetPlayerAttachedObject(playerid,5,19049,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 206; ChosenHat[playerid] = 19049;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 206) { SetPlayerAttachedObject(playerid,5,19048,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 207; ChosenHat[playerid] = 19048;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 207) { SetPlayerAttachedObject(playerid,5,19047,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 208; ChosenHat[playerid] = 19047;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 208) { SetPlayerAttachedObject(playerid,5,19046,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 209; ChosenHat[playerid] = 19046;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/15 COST: ~y~3500", 2000, 3); }
	   			else if(choise[playerid] == 209) { SetPlayerAttachedObject(playerid,5,19045,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 210; ChosenHat[playerid] = 19045;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 210) { SetPlayerAttachedObject(playerid,5,19044,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 211; ChosenHat[playerid] = 19044;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 211) { SetPlayerAttachedObject(playerid,5,19043,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 212; ChosenHat[playerid] = 19043;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 212) { SetPlayerAttachedObject(playerid,5,19042,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 213; ChosenHat[playerid] = 19042;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 213) { SetPlayerAttachedObject(playerid,5,19041,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 214; ChosenHat[playerid] = 19041;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 214) { SetPlayerAttachedObject(playerid,5,19040,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 215; ChosenHat[playerid] = 19040;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 215) { SetPlayerAttachedObject(playerid,5,19039,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 201; ChosenHat[playerid] = 19024;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/15 COST: ~y~3500", 2000, 3); }
			    //Другое
    			else if(choise[playerid] == 351) { SetPlayerAttachedObject(playerid,0,18640,2,0.08,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 352; ChosenHat[playerid] = 18640;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/13 COST: ~y~5000", 2000, 3); }
				else if(choise[playerid] == 352) { SetPlayerAttachedObject(playerid,0,19274,2,0.13,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 353; ChosenHat[playerid] = 19274;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/13 COST: ~y~5000", 2000, 3); }
    			else if(choise[playerid] == 353) { SetPlayerAttachedObject(playerid,0,19077,2,0.10,0.01,0.0,0.0,0.0,0.0,1.2,1.0,1.1); choise[playerid] = 354; ChosenHat[playerid] = 19077;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 354) { SetPlayerAttachedObject(playerid,0,18975,2,0.10,0.01,0.0,0.0,0.0,0.0,1.2,1.0,1.1); choise[playerid] = 355; ChosenHat[playerid] = 18975;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 355) { SetPlayerAttachedObject(playerid,2,19351,18,0.1,-0.04,0.0,180.0,0.0,20.0,1.0,1.0,1.0); choise[playerid] = 356; ChosenHat[playerid] = 19351;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 356) { SetPlayerAttachedObject(playerid,2,19350,18,0.1,-0.04,0.0,180.0,0.0,20.0,1.0,1.0,1.0); choise[playerid] = 357; ChosenHat[playerid] = 19350;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 357) { SetPlayerAttachedObject(playerid,0,19518,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 358; ChosenHat[playerid] = 19518;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 358) { SetPlayerAttachedObject(playerid,0,19517,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 359; ChosenHat[playerid] = 19517;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/13 COST: ~y~5000", 2000, 3); }
	   			else if(choise[playerid] == 359) { SetPlayerAttachedObject(playerid,0,19516,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 360; ChosenHat[playerid] = 19516;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 360) { SetPlayerAttachedObject(playerid,0,19519,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 361; ChosenHat[playerid] = 19519;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 361) { SetPlayerAttachedObject(playerid,0,19136,2,0.10,0.01,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 362; ChosenHat[playerid] = 19136;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 362) { SetPlayerAttachedObject(playerid,4,19079,15,0.13,0.05,0.055,0.0,90.0,180.0,1.0,1.0,1.0); choise[playerid] = 363; ChosenHat[playerid] = 19079;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 363) { SetPlayerAttachedObject(playerid,4,19347,4,0.14,0.0,-0.05,180.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 351; ChosenHat[playerid] = 19347;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/13 COST: ~y~5000", 2000, 3); }
			    ShowMenuForPlayer(hatmenu2,playerid);
            }
            case 1:
            {
	            if(choise[playerid] == 1) { SetPlayerAttachedObject(playerid,0,18638,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 125; ChosenHat[playerid] = 19100;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~125/125 COST: ~y~5000", 2000, 3); }
				else if(choise[playerid] == 2) { SetPlayerAttachedObject(playerid,0,19101,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 1; ChosenHat[playerid] = 19101;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/125 COST: ~y~5000", 2000, 3); }
    			else if(choise[playerid] == 3) { SetPlayerAttachedObject(playerid,0,18909,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 2; ChosenHat[playerid] = 18909;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 4) { SetPlayerAttachedObject(playerid,0,18908,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 3; ChosenHat[playerid] = 18908;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 5) { SetPlayerAttachedObject(playerid,0,18907,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 4; ChosenHat[playerid] = 18907;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 6) { SetPlayerAttachedObject(playerid,0,18906,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 5; ChosenHat[playerid] = 18906;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 7) { SetPlayerAttachedObject(playerid,0,18905,2,0.1,0.0,0.0,90.0,180.0,90.0,1.2,1.2,1.2); choise[playerid] = 6; ChosenHat[playerid] = 18905;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 8) { SetPlayerAttachedObject(playerid,0,18904,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 7; ChosenHat[playerid] = 18904;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/125 COST: ~y~5000", 2000, 3); }
	   			else if(choise[playerid] == 9) { SetPlayerAttachedObject(playerid,0,18903,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 8; ChosenHat[playerid] = 18903;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 10) { SetPlayerAttachedObject(playerid,0,18902,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 9; ChosenHat[playerid] = 18902;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 11) { SetPlayerAttachedObject(playerid,0,18901,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 10; ChosenHat[playerid] = 18901;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 12) { SetPlayerAttachedObject(playerid,0,18900,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 11; ChosenHat[playerid] = 18900;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 13) { SetPlayerAttachedObject(playerid,0,18899,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 12; ChosenHat[playerid] = 18899;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 14) { SetPlayerAttachedObject(playerid,0,18898,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 13; ChosenHat[playerid] = 18898;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 15) { SetPlayerAttachedObject(playerid,0,18897,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 14; ChosenHat[playerid] = 18897;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 16) { SetPlayerAttachedObject(playerid,0,18896,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 15; ChosenHat[playerid] = 18896;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 17) { SetPlayerAttachedObject(playerid,0,18895,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 16; ChosenHat[playerid] = 18895;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~16/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 18) { SetPlayerAttachedObject(playerid,0,18894,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 17; ChosenHat[playerid] = 18894;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~17/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 19) { SetPlayerAttachedObject(playerid,0,18893,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 18; ChosenHat[playerid] = 18893;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~18/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 20) { SetPlayerAttachedObject(playerid,0,18892,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 19; ChosenHat[playerid] = 18892;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~19/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 21) { SetPlayerAttachedObject(playerid,0,18925,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 20; ChosenHat[playerid] = 18925;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~20/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 22) { SetPlayerAttachedObject(playerid,0,19160,2,0.09,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 21; ChosenHat[playerid] = 19160;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~21/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 23) { SetPlayerAttachedObject(playerid,0,19161,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 22; ChosenHat[playerid] = 19161;  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~22/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 24) { SetPlayerAttachedObject(playerid,0,19162,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 23; ChosenHat[playerid] = 19162;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~23/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 25) { SetPlayerAttachedObject(playerid,0,19163,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 24; ChosenHat[playerid] = 19163;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~24/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 26) { SetPlayerAttachedObject(playerid,0,18961,2,0.15,0.03,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 25; ChosenHat[playerid] = 18961;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~25/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 27) { SetPlayerAttachedObject(playerid,0,18960,2,0.15,0.03,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 26; ChosenHat[playerid] = 18960;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~26/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 28) { SetPlayerAttachedObject(playerid,0,18959,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 27; ChosenHat[playerid] = 18959;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~27/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 29) { SetPlayerAttachedObject(playerid,0,18958,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 28; ChosenHat[playerid] = 18958;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~28/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 30) { SetPlayerAttachedObject(playerid,0,18957,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 29; ChosenHat[playerid] = 18957;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~29/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 31) { SetPlayerAttachedObject(playerid,0,18956,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 30; ChosenHat[playerid] = 18956;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~30/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 32) { SetPlayerAttachedObject(playerid,0,18955,2,0.13,0.05,0.0,0.0,90.0,90.0,1.1,1.2,1.0); choise[playerid] = 31; ChosenHat[playerid] = 18955;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~31/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 33) { SetPlayerAttachedObject(playerid,0,18954,2,0.12,0.03,0.0,0.0,0.0,0.0,1.1,1.1,1.3); choise[playerid] = 32; ChosenHat[playerid] = 18954;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~32/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 34) { SetPlayerAttachedObject(playerid,0,18953,2,0.12,0.03,0.0,0.0,0.0,0.0,1.1,1.1,1.3); choise[playerid] = 33; ChosenHat[playerid] = 18953;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~33/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 35) { SetPlayerAttachedObject(playerid,0,18943,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 34; ChosenHat[playerid] = 18943;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~34/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 36) { SetPlayerAttachedObject(playerid,0,18942,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 35; ChosenHat[playerid] = 18942;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~35/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 37) { SetPlayerAttachedObject(playerid,0,18941,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 36; ChosenHat[playerid] = 18941;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~36/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 38) { SetPlayerAttachedObject(playerid,0,18940,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 37; ChosenHat[playerid] = 18940;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~37/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 39) { SetPlayerAttachedObject(playerid,0,18939,2,0.2,0.01,0.0,180.0,180.0,180.0,1.2,1.2,1.2); choise[playerid] = 38; ChosenHat[playerid] = 18939;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~38/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 40) { SetPlayerAttachedObject(playerid,0,19102,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 39; ChosenHat[playerid] = 19102;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~39/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 41) { SetPlayerAttachedObject(playerid,0,19103,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 40; ChosenHat[playerid] = 19103;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~40/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 42) { SetPlayerAttachedObject(playerid,0,19104,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 41; ChosenHat[playerid] = 19104;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~41/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 43) { SetPlayerAttachedObject(playerid,0,19105,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 42; ChosenHat[playerid] = 19105;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~42/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 44) { SetPlayerAttachedObject(playerid,0,19106,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 43; ChosenHat[playerid] = 19106;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~43/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 45) { SetPlayerAttachedObject(playerid,0,19107,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 44; ChosenHat[playerid] = 19107;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~44/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 46) { SetPlayerAttachedObject(playerid,0,19108,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 45; ChosenHat[playerid] = 19108;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~45/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 47) { SetPlayerAttachedObject(playerid,0,19109,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 46; ChosenHat[playerid] = 19109;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~46/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 48) { SetPlayerAttachedObject(playerid,0,19110,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 47; ChosenHat[playerid] = 19110;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~47/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 49) { SetPlayerAttachedObject(playerid,0,19111,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 48; ChosenHat[playerid] = 19111;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~48/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 50) { SetPlayerAttachedObject(playerid,0,19112,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 49; ChosenHat[playerid] = 19112;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~49/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 51) { SetPlayerAttachedObject(playerid,0,19113,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 50; ChosenHat[playerid] = 19113;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~50/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 52) { SetPlayerAttachedObject(playerid,0,19114,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 51; ChosenHat[playerid] = 19114;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~51/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 53) { SetPlayerAttachedObject(playerid,0,19115,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 52; ChosenHat[playerid] = 19115;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~52/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 54) { SetPlayerAttachedObject(playerid,0,19116,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 53; ChosenHat[playerid] = 19116;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~53/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 55) { SetPlayerAttachedObject(playerid,0,19117,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 54; ChosenHat[playerid] = 19117;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~54/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 56) { SetPlayerAttachedObject(playerid,0,19118,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 55; ChosenHat[playerid] = 19118;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~55/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 57) { SetPlayerAttachedObject(playerid,0,19119,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 56; ChosenHat[playerid] = 19119;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~56/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 58) { SetPlayerAttachedObject(playerid,0,19120,2,0.15,0.04,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 57; ChosenHat[playerid] = 19120;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~57/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 59) { SetPlayerAttachedObject(playerid,0,19067,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 58; ChosenHat[playerid] = 19067;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~58/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 60) { SetPlayerAttachedObject(playerid,0,19068,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 59; ChosenHat[playerid] = 19068;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~59/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 61) { SetPlayerAttachedObject(playerid,0,19069,2,0.15,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 60; ChosenHat[playerid] = 19069;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~60/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 62) { SetPlayerAttachedObject(playerid,0,18970,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 61; ChosenHat[playerid] = 18970;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~61/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 63) { SetPlayerAttachedObject(playerid,0,18969,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 62; ChosenHat[playerid] = 18969;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~62/125 COST: ~y~5000", 2000, 3); }
  	    		else if(choise[playerid] == 64) { SetPlayerAttachedObject(playerid,0,18968,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 63; ChosenHat[playerid] = 18968;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~63/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 65) { SetPlayerAttachedObject(playerid,0,18967,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 64; ChosenHat[playerid] = 18967;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~64/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 66) { SetPlayerAttachedObject(playerid,0,18973,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 65; ChosenHat[playerid] = 18973;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~65/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 67) { SetPlayerAttachedObject(playerid,0,18972,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 66; ChosenHat[playerid] = 18972;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~66/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 68) { SetPlayerAttachedObject(playerid,0,18971,2,0.14,0.03,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 67; ChosenHat[playerid] = 18971;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~67/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 69) { SetPlayerAttachedObject(playerid,0,18951,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 68; ChosenHat[playerid] = 18951;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~68/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 70) { SetPlayerAttachedObject(playerid,0,18950,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 69; ChosenHat[playerid] = 18950;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~69/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 71) { SetPlayerAttachedObject(playerid,0,18949,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 70; ChosenHat[playerid] = 18949;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~70/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 72) { SetPlayerAttachedObject(playerid,0,18948,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 71; ChosenHat[playerid] = 18948;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~71/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 73) { SetPlayerAttachedObject(playerid,0,18947,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 72; ChosenHat[playerid] = 18947;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~72/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 74) { SetPlayerAttachedObject(playerid,0,18946,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 73; ChosenHat[playerid] = 18946;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~73/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 75) { SetPlayerAttachedObject(playerid,0,18945,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 74; ChosenHat[playerid] = 18945;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~74/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 76) { SetPlayerAttachedObject(playerid,0,18944,2,0.14,0.03,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 75; ChosenHat[playerid] = 18944;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~75/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 77) { SetPlayerAttachedObject(playerid,0,18935,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 76; ChosenHat[playerid] = 18935;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~76/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 78) { SetPlayerAttachedObject(playerid,0,18934,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 77; ChosenHat[playerid] = 18934;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~77/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 79) { SetPlayerAttachedObject(playerid,0,18933,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 78; ChosenHat[playerid] = 18933;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~78/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 80) { SetPlayerAttachedObject(playerid,0,18932,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 79; ChosenHat[playerid] = 18932;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~79/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 81) { SetPlayerAttachedObject(playerid,0,18931,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 80; ChosenHat[playerid] = 18931;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~80/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 82) { SetPlayerAttachedObject(playerid,0,18930,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 81; ChosenHat[playerid] = 18930;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~81/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 83) { SetPlayerAttachedObject(playerid,0,18929,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 82; ChosenHat[playerid] = 18929;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~82/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 84) { SetPlayerAttachedObject(playerid,0,18928,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 83; ChosenHat[playerid] = 18928;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~83/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 85) { SetPlayerAttachedObject(playerid,0,18927,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 84; ChosenHat[playerid] = 18927;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~84/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 86) { SetPlayerAttachedObject(playerid,0,18926,2,0.14,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 85; ChosenHat[playerid] = 18926;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~85/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 87) { SetPlayerAttachedObject(playerid,0,19093,2,0.09,0.0,0.01,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 86; ChosenHat[playerid] = 19093;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~86/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 88) { SetPlayerAttachedObject(playerid,0,19096,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 87; ChosenHat[playerid] = 19096;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~87/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 89) { SetPlayerAttachedObject(playerid,0,19095,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 88; ChosenHat[playerid] = 19095;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~88/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 90) { SetPlayerAttachedObject(playerid,0,19097,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 89; ChosenHat[playerid] = 19097;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~89/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 91) { SetPlayerAttachedObject(playerid,0,18962,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 90; ChosenHat[playerid] = 18962;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~90/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 92) { SetPlayerAttachedObject(playerid,0,18639,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 91; ChosenHat[playerid] = 18639;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~91/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 93) { SetPlayerAttachedObject(playerid,0,19137,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 92; ChosenHat[playerid] = 19137;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~92/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 94) { SetPlayerAttachedObject(playerid,0,19098,2,0.16,0.02,0.0,0.0,0.0,0.0,1.2,1.4,1.2); choise[playerid] = 93; ChosenHat[playerid] = 19098;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~93/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 95) { SetPlayerAttachedObject(playerid,0,19141,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 94; ChosenHat[playerid] = 19141;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~94/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 96) { SetPlayerAttachedObject(playerid,0,19200,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 95; ChosenHat[playerid] = 19200;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~95/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 97) { SetPlayerAttachedObject(playerid,0,18979,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 96; ChosenHat[playerid] = 18979;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~96/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 98) { SetPlayerAttachedObject(playerid,0,18978,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 97; ChosenHat[playerid] = 18978;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~97/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 99) { SetPlayerAttachedObject(playerid,0,18977,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 98; ChosenHat[playerid] = 18977;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~98/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 100) { SetPlayerAttachedObject(playerid,0,18976,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 99; ChosenHat[playerid] = 18976;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~99/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 101) { SetPlayerAttachedObject(playerid,0,18938,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 100; ChosenHat[playerid] = 18938;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~100/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 102) { SetPlayerAttachedObject(playerid,0,18937,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 101; ChosenHat[playerid] = 18937;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~101/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 103) { SetPlayerAttachedObject(playerid,0,18936,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 102; ChosenHat[playerid] = 18936;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~102/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 104) { SetPlayerAttachedObject(playerid,0,18952,2,0.10,0.02,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 103; ChosenHat[playerid] = 18952;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~103/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 105) { SetPlayerAttachedObject(playerid,0,18645,2,0.10,0.02,0.0,0.0,90.0,90.0,1.2,1.0,1.0); choise[playerid] = 104; ChosenHat[playerid] = 18645;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~104/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 106) { SetPlayerAttachedObject(playerid,0,18636,2,0.15,0.04,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 105; ChosenHat[playerid] = 18636;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~105/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 107) { SetPlayerAttachedObject(playerid,0,18966,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 106; ChosenHat[playerid] = 18966;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~106/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 108) { SetPlayerAttachedObject(playerid,0,18965,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 107; ChosenHat[playerid] = 18965;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~107/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 109) { SetPlayerAttachedObject(playerid,0,18964,2,0.15,0.0,0.0,0.0,90.0,90.0,1.0,1.0,1.0); choise[playerid] = 108; ChosenHat[playerid] = 18964;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~108/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 110) { SetPlayerAttachedObject(playerid,0,19066,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 109; ChosenHat[playerid] = 19066;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~109/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 111) { SetPlayerAttachedObject(playerid,0,19065,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 110; ChosenHat[playerid] = 19065;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~110/125 COST: ~y~5000", 2000, 3); }
  	    		else if(choise[playerid] == 112) { SetPlayerAttachedObject(playerid,0,19064,2,0.14,0.0,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 111; ChosenHat[playerid] = 19064;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~111/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 113) { SetPlayerAttachedObject(playerid,0,19331,2,0.15,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 112; ChosenHat[playerid] = 19331;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~112/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 114) { SetPlayerAttachedObject(playerid,0,19330,2,0.15,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 113; ChosenHat[playerid] = 19330;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~113/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 115) { SetPlayerAttachedObject(playerid,0,19487,2,0.13,0.0,0.0,90.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 114; ChosenHat[playerid] = 19487;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~114/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 116) { SetPlayerAttachedObject(playerid,0,19352,2,0.13,0.0,0.0,90.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 115; ChosenHat[playerid] = 19352;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~115/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 117) { SetPlayerAttachedObject(playerid,0,19469,2,0.05,-0.07,0.01,210.0,0.0,0.0,2.0,2.0,2.0); choise[playerid] = 116; ChosenHat[playerid] = 19469;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~116/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 118) { SetPlayerAttachedObject(playerid,0,19488,2,0.14,0.03,0.0,90.0,90.0,0.0,1.2,1.2,1.2); choise[playerid] = 117; ChosenHat[playerid] = 19488;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~117/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 119) { SetPlayerAttachedObject(playerid,0,19521,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 118; ChosenHat[playerid] = 19521;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~118/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 120) { SetPlayerAttachedObject(playerid,0,19520,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 119; ChosenHat[playerid] = 19520;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~119/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 121) { SetPlayerAttachedObject(playerid,0,19424,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 120; ChosenHat[playerid] = 19424;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~120/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 122) { SetPlayerAttachedObject(playerid,0,19423,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 121; ChosenHat[playerid] = 19423;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~121/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 123) { SetPlayerAttachedObject(playerid,0,19422,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 122; ChosenHat[playerid] = 19422;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~122/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 124) { SetPlayerAttachedObject(playerid,0,19421,2,0.05,0.0,0.0,90.0,180.0,90.0,1.12,1.1,1.0); choise[playerid] = 123; ChosenHat[playerid] = 19421;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~123/125 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 125) { SetPlayerAttachedObject(playerid,0,18910,2,0.1,0.0,0.0,90.0,320.0,270.0,1.2,1.2,1.2); choise[playerid] = 124; ChosenHat[playerid] = 19421;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~124/125 COST: ~y~5000", 2000, 3); }
			    //Очки
       			else if(choise[playerid] == 151) { SetPlayerAttachedObject(playerid,1,19140,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 185; ChosenHat[playerid] = 19140;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~35/35 COST: ~y~2000", 2000, 3); }
				else if(choise[playerid] == 152) { SetPlayerAttachedObject(playerid,1,19139,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 151; ChosenHat[playerid] = 19139;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/35 COST: ~y~2000", 2000, 3); }
    			else if(choise[playerid] == 153) { SetPlayerAttachedObject(playerid,1,19138,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 152; ChosenHat[playerid] = 19038;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 154) { SetPlayerAttachedObject(playerid,1,19035,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 153; ChosenHat[playerid] = 19035;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 155) { SetPlayerAttachedObject(playerid,1,19034,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 154; ChosenHat[playerid] = 19034;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 156) { SetPlayerAttachedObject(playerid,1,19035,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 155; ChosenHat[playerid] = 19033;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 157) { SetPlayerAttachedObject(playerid,1,19032,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 156; ChosenHat[playerid] = 19032;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 158) { SetPlayerAttachedObject(playerid,1,19031,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 157; ChosenHat[playerid] = 19031;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/35 COST: ~y~2000", 2000, 3); }
	   			else if(choise[playerid] == 159) { SetPlayerAttachedObject(playerid,1,19030,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 158; ChosenHat[playerid] = 19030;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 160) { SetPlayerAttachedObject(playerid,1,19029,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 159; ChosenHat[playerid] = 19029;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 161) { SetPlayerAttachedObject(playerid,1,19028,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 160; ChosenHat[playerid] = 19028;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 162) { SetPlayerAttachedObject(playerid,1,19027,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 161; ChosenHat[playerid] = 19027;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 163) { SetPlayerAttachedObject(playerid,1,19026,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 162; ChosenHat[playerid] = 19026;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 164) { SetPlayerAttachedObject(playerid,1,19025,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 163; ChosenHat[playerid] = 19025;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 165) { SetPlayerAttachedObject(playerid,1,19024,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 164; ChosenHat[playerid] = 19024;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 166) { SetPlayerAttachedObject(playerid,1,19023,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 165; ChosenHat[playerid] = 19023;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 167) { SetPlayerAttachedObject(playerid,1,19022,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 166; ChosenHat[playerid] = 19022;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~16/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 168) { SetPlayerAttachedObject(playerid,1,19021,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 167; ChosenHat[playerid] = 19021;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~17/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 169) { SetPlayerAttachedObject(playerid,1,19020,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 168; ChosenHat[playerid] = 19020;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~18/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 170) { SetPlayerAttachedObject(playerid,1,19019,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 169; ChosenHat[playerid] = 19019;      GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~19/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 171) { SetPlayerAttachedObject(playerid,1,19018,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 170; ChosenHat[playerid] = 19018;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~20/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 172) { SetPlayerAttachedObject(playerid,1,19017,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 171; ChosenHat[playerid] = 19017;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~21/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 173) { SetPlayerAttachedObject(playerid,1,19016,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 172; ChosenHat[playerid] = 19016;  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~22/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 174) { SetPlayerAttachedObject(playerid,1,19015,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 173; ChosenHat[playerid] = 19015;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~23/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 175) { SetPlayerAttachedObject(playerid,1,19014,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 174; ChosenHat[playerid] = 19014;     GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~24/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 176) { SetPlayerAttachedObject(playerid,1,19013,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 175; ChosenHat[playerid] = 19013;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~25/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 177) { SetPlayerAttachedObject(playerid,1,19012,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 176; ChosenHat[playerid] = 19012;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~26/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 178) { SetPlayerAttachedObject(playerid,1,19011,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 177; ChosenHat[playerid] = 19011;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~27/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 179) { SetPlayerAttachedObject(playerid,1,19010,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 178; ChosenHat[playerid] = 19010;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~28/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 180) { SetPlayerAttachedObject(playerid,1,19009,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 179; ChosenHat[playerid] = 19009;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~29/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 181) { SetPlayerAttachedObject(playerid,1,19008,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 180; ChosenHat[playerid] = 19008;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~30/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 182) { SetPlayerAttachedObject(playerid,1,19007,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 181; ChosenHat[playerid] = 19007;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~31/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 183) { SetPlayerAttachedObject(playerid,1,19006,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 182; ChosenHat[playerid] = 19006;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~32/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 184) { SetPlayerAttachedObject(playerid,1,18974,2,0.09,0.04,0.0,0.0,90.0,90.0,1.2,1.2,1.2); choise[playerid] = 183; ChosenHat[playerid] = 18974;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~33/35 COST: ~y~2000", 2000, 3); }
			    else if(choise[playerid] == 185) { SetPlayerAttachedObject(playerid,1,19006,2,0.1,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 184; ChosenHat[playerid] = 19006;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~34/35 COST: ~y~2000", 2000, 3); }
			    //Маски
    			else if(choise[playerid] == 250) { SetPlayerAttachedObject(playerid,2,18920,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 265; ChosenHat[playerid] = 18920;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~16/16 COST: ~y~1500", 2000, 3); }
				else if(choise[playerid] == 251) { SetPlayerAttachedObject(playerid,2,18919,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 250; ChosenHat[playerid] = 18919;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/16 COST: ~y~1500", 2000, 3); }
    			else if(choise[playerid] == 252) { SetPlayerAttachedObject(playerid,2,18918,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 251; ChosenHat[playerid] = 18918;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 253) { SetPlayerAttachedObject(playerid,2,18917,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 252; ChosenHat[playerid] = 18917;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 254) { SetPlayerAttachedObject(playerid,2,18916,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 253; ChosenHat[playerid] = 18916;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 255) { SetPlayerAttachedObject(playerid,2,18915,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 254; ChosenHat[playerid] = 18915;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 256) { SetPlayerAttachedObject(playerid,2,18914,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 255; ChosenHat[playerid] = 18914;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 257) { SetPlayerAttachedObject(playerid,2,18913,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 256; ChosenHat[playerid] = 18913;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/16 COST: ~y~1500", 2000, 3); }
	   			else if(choise[playerid] == 258) { SetPlayerAttachedObject(playerid,2,18912,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 257; ChosenHat[playerid] = 18912;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 259) { SetPlayerAttachedObject(playerid,2,18911,18,0.00,0.07,0.0,0.0,90.0,0.0,1.0,1.0,1.0); choise[playerid] = 258; ChosenHat[playerid] = 18911;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 260) { SetPlayerAttachedObject(playerid,2,18963,2,0.08,0.04,0.0,0.0,90.0,90.0,1.1,1.1,1.1); choise[playerid] = 259; ChosenHat[playerid] = 18963;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 261) { SetPlayerAttachedObject(playerid,2,19163,2,0.08,0.03,0.0,180.0,90.0,0.0,1.2,1.2,1.2); choise[playerid] = 260; ChosenHat[playerid] = 19163;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 262) { SetPlayerAttachedObject(playerid,2,19037,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 261; ChosenHat[playerid] = 19037;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 263) { SetPlayerAttachedObject(playerid,2,19038,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 262; ChosenHat[playerid] = 19038;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 264) { SetPlayerAttachedObject(playerid,2,19036,2,0.08,0.03,0.0,90.0,90.0,0.0,1.0,1.2,1.2); choise[playerid] = 263; ChosenHat[playerid] = 19036;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/16 COST: ~y~1500", 2000, 3); }
			    else if(choise[playerid] == 265) { SetPlayerAttachedObject(playerid,2,19472,18,0.1,-0.05,0.0,90.0,340.0,0.0,1.0,1.2,1.3); choise[playerid] = 264; ChosenHat[playerid] = 19472;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/16 COST: ~y~1500", 2000, 3); }
			    //Часы
    			else if(choise[playerid] == 201) { SetPlayerAttachedObject(playerid,5,19053,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 215; ChosenHat[playerid] = 19053;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~15/15 COST: ~y~3500", 2000, 3); }
				else if(choise[playerid] == 202) { SetPlayerAttachedObject(playerid,5,19052,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 201; ChosenHat[playerid] = 19052;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/15 COST: ~y~3500", 2000, 3); }
    			else if(choise[playerid] == 203) { SetPlayerAttachedObject(playerid,5,19051,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 202; ChosenHat[playerid] = 19051;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 204) { SetPlayerAttachedObject(playerid,5,19050,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 203; ChosenHat[playerid] = 19050;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 205) { SetPlayerAttachedObject(playerid,5,19049,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 204; ChosenHat[playerid] = 19049;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 206) { SetPlayerAttachedObject(playerid,5,19048,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 205; ChosenHat[playerid] = 19048;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 207) { SetPlayerAttachedObject(playerid,5,19047,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 206; ChosenHat[playerid] = 19047;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 208) { SetPlayerAttachedObject(playerid,5,19046,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 207; ChosenHat[playerid] = 19046;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/15 COST: ~y~3500", 2000, 3); }
	   			else if(choise[playerid] == 209) { SetPlayerAttachedObject(playerid,5,19045,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 208; ChosenHat[playerid] = 19045;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 210) { SetPlayerAttachedObject(playerid,5,19044,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 209; ChosenHat[playerid] = 19044;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 211) { SetPlayerAttachedObject(playerid,5,19043,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 210; ChosenHat[playerid] = 19043;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 212) { SetPlayerAttachedObject(playerid,5,19042,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 211; ChosenHat[playerid] = 19042;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 213) { SetPlayerAttachedObject(playerid,5,19041,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 212; ChosenHat[playerid] = 19041;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 214) { SetPlayerAttachedObject(playerid,5,19040,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 213; ChosenHat[playerid] = 19040;   	GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/15 COST: ~y~3500", 2000, 3); }
			    else if(choise[playerid] == 215) { SetPlayerAttachedObject(playerid,5,19039,5,-0.05,-0.01,0.0,10.0,90.0,180.0,1.3,1.3,1.3); choise[playerid] = 214; ChosenHat[playerid] = 19024;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~14/15 COST: ~y~3500", 2000, 3); }
			    //Другое
    			else if(choise[playerid] == 351) { SetPlayerAttachedObject(playerid,4,18640,2,0.08,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 363; ChosenHat[playerid] = 18640;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~13/13 COST: ~y~5000", 2000, 3); }
				else if(choise[playerid] == 352) { SetPlayerAttachedObject(playerid,4,19274,2,0.13,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 351; ChosenHat[playerid] = 19274;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~1/13 COST: ~y~5000", 2000, 3); }
    			else if(choise[playerid] == 353) { SetPlayerAttachedObject(playerid,4,19077,2,0.10,0.01,0.0,0.0,0.0,0.0,1.2,1.0,1.1); choise[playerid] = 352; ChosenHat[playerid] = 19077;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~2/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 354) { SetPlayerAttachedObject(playerid,4,18975,2,0.10,0.01,0.0,0.0,0.0,0.0,1.2,1.0,1.1); choise[playerid] = 353; ChosenHat[playerid] = 18975;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~3/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 355) { SetPlayerAttachedObject(playerid,4,19351,18,0.1,-0.04,0.0,180.0,0.0,20.0,1.0,1.0,1.0); choise[playerid] = 354; ChosenHat[playerid] = 19351;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~4/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 356) { SetPlayerAttachedObject(playerid,4,19350,18,0.1,-0.04,0.0,180.0,0.0,20.0,1.0,1.0,1.0); choise[playerid] = 355; ChosenHat[playerid] = 19350;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~5/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 357) { SetPlayerAttachedObject(playerid,4,19518,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 356; ChosenHat[playerid] = 19518;   GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~6/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 358) { SetPlayerAttachedObject(playerid,4,19517,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 357; ChosenHat[playerid] = 19517;   	  GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~7/13 COST: ~y~5000", 2000, 3); }
	   			else if(choise[playerid] == 359) { SetPlayerAttachedObject(playerid,4,19516,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 358; ChosenHat[playerid] = 19516;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~8/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 360) { SetPlayerAttachedObject(playerid,4,19519,2,0.10,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 359; ChosenHat[playerid] = 19519;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~9/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 361) { SetPlayerAttachedObject(playerid,4,19136,2,0.10,0.01,0.0,0.0,0.0,0.0,1.0,1.0,1.0); choise[playerid] = 360; ChosenHat[playerid] = 19136;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~10/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 362) { SetPlayerAttachedObject(playerid,4,19079,15,0.13,0.05,0.055,0.0,90.0,180.0,1.0,1.0,1.0); choise[playerid] = 361; ChosenHat[playerid] = 19079;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~11/13 COST: ~y~5000", 2000, 3); }
			    else if(choise[playerid] == 363) { SetPlayerAttachedObject(playerid,4,19347,4,0.14,0.0,-0.05,180.0,0.0,0.0,1.2,1.2,1.2); choise[playerid] = 362; ChosenHat[playerid] = 19347;       GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~12/13 COST: ~y~5000", 2000, 3); }
			    ShowMenuForPlayer(hatmenu2,playerid);
            }
            case 2:
            {
				if(choise[playerid] >= 351 && choise[playerid] <= 363 && PlayerInfo[playerid][pCash] >= 5000)
				{
				    HideMenuForPlayer(hatmenu2, playerid);
					PlayerInfo[playerid][pOther] = ChosenHat[playerid];
					PlayerInfo[playerid][pCash] -= 5000;
					EditAttachedObject(playerid,4);
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SendClientMessage(playerid,COLOR_BLUE,"Откорректируйте расположение объекта на теле(Внимание,объект нужно сохранить чтобы он остался навсегда)");
					SendClientMessage(playerid,COLOR_BLUE,"Меню одежды - /clothes");
				}
				if(choise[playerid] >= 201 && choise[playerid] <= 215 && PlayerInfo[playerid][pCash] >= 3500)
				{
				    HideMenuForPlayer(hatmenu2, playerid);
					PlayerInfo[playerid][pWatchs] = ChosenHat[playerid];
					PlayerInfo[playerid][pCash] -= 3500;
					EditAttachedObject(playerid,5);
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SendClientMessage(playerid,COLOR_BLUE,"Откорректируйте расположение объекта на теле(Внимание,объект нужно сохранить чтобы он остался навсегда)");
					SendClientMessage(playerid,COLOR_BLUE,"Меню одежды - /clothes");
				}
				if(choise[playerid] >= 250 && choise[playerid] <= 265 && PlayerInfo[playerid][pCash] >= 1500)
				{
					HideMenuForPlayer(hatmenu2, playerid);
					PlayerInfo[playerid][pMask] = ChosenHat[playerid];
					PlayerInfo[playerid][pCash] -= 1500;
					EditAttachedObject(playerid,2);
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SendClientMessage(playerid,COLOR_BLUE,"Откорректируйте расположение объекта на теле(Внимание,объект нужно сохранить чтобы он остался навсегда)");
					SendClientMessage(playerid,COLOR_BLUE,"Меню одежды - /clothes");
				}
				if(choise[playerid] >= 151 && choise[playerid] <= 185 && PlayerInfo[playerid][pCash] >= 2000)
				{
				    HideMenuForPlayer(hatmenu2, playerid);
					PlayerInfo[playerid][pGlasses] = ChosenHat[playerid];
					PlayerInfo[playerid][pCash] -= 2000;
					EditAttachedObject(playerid,1);
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SendClientMessage(playerid,COLOR_BLUE,"Откорректируйте расположение объекта на теле(Внимание,объект нужно сохранить чтобы он остался навсегда)");
					SendClientMessage(playerid,COLOR_BLUE,"Меню одежды - /clothes");
				}
				if(choise[playerid] >= 1 && choise[playerid] <= 125 && PlayerInfo[playerid][pCash] >= 5000)
				{
				    HideMenuForPlayer(hatmenu2, playerid);
					PlayerInfo[playerid][pHat] = ChosenHat[playerid];
					PlayerInfo[playerid][pCash] -= 5000;
					EditAttachedObject(playerid,0);
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SendClientMessage(playerid,COLOR_BLUE,"Откорректируйте расположение объекта на теле(Внимание,объект нужно сохранить чтобы он остался навсегда)");
					SendClientMessage(playerid,COLOR_BLUE,"Меню одежды - /clothes");
				}
			}
			case 3:
            {
                HideMenuForPlayer(hatmenu2, playerid);
                RemovePlayerAttachedObject(playerid, 0);
                if(choise[playerid] >= 1 && choise[playerid] <= 125)
                {
                    RemovePlayerAttachedObject(playerid, 0);
                }
                if(choise[playerid] >= 151 && choise[playerid] <= 185)
                {
                    RemovePlayerAttachedObject(playerid, 1);
                }
                if(choise[playerid] >= 250 && choise[playerid] <= 265)
                {
                    RemovePlayerAttachedObject(playerid, 2);
                }
                if(choise[playerid] >= 351 && choise[playerid] <= 363)
                {
                    RemovePlayerAttachedObject(playerid, 4);
                }
                if(choise[playerid] >= 201 && choise[playerid] <= 215)
                {
                    RemovePlayerAttachedObject(playerid, 5);
                }
				choise[playerid] = 0;
	            SetPlayerInterior(playerid,5);
				SetPlayerVirtualWorld(playerid, 0);
				CharPrice[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
				SetPlayerFacingAngle(playerid, 89.5070);
				SetPlayerVirtualWorld(playerid, 0);
				return true;
			}
		}
		return true;
  	}
	else if(Current == skinshopmagaz[1])
	{
		if(PlayerToPoint(3.0,playerid,222.3489,-8.5845,1002.2109))
	  	{
		 	switch(row)
		 	{
		 		case 0:
		  		{
		   			if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, Peds[45][0]);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = Peds[45][0];
						CharPrice[playerid] = 10000;
						GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3);
					}
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[45][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[45][0]; CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[46][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[46][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[47][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[47][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[48][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[48][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[49][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[49][0]; CharPrice[playerid] = 500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[50][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[50][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[51][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[51][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[52][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[52][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[53][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[53][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[54][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[54][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[55][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[55][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[56][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[56][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3); }
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
		 		case 1:
		  		{
		   			if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, Peds[56][0]);
						SelectCharPlace[playerid] = 13;
						ChosenSkin[playerid] = Peds[56][0];
						CharPrice[playerid] = 100000;
						GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);
					}
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, Peds[45][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = Peds[45][0]; CharPrice[playerid] = 10000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~10000", 2000, 3); }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, Peds[46][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = Peds[46][0]; CharPrice[playerid] = 50000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~50000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, Peds[47][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = Peds[47][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, Peds[48][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = Peds[48][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, Peds[49][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = Peds[49][0]; CharPrice[playerid] = 500000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~500000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, Peds[50][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = Peds[50][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, Peds[51][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = Peds[51][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, Peds[52][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = Peds[52][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, Peds[53][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = Peds[53][0]; CharPrice[playerid] = 2000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~2000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, Peds[54][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = Peds[54][0]; CharPrice[playerid] = 4000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~4000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, Peds[55][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = Peds[55][0]; CharPrice[playerid] = 1000000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~1000000", 2000, 3);}
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, Peds[56][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = Peds[56][0]; CharPrice[playerid] = 100000;    GameTextForPlayer(playerid, "~g~~n~~n~~n~~n~~n~~n~COST: ~y~100000", 2000, 3); }
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < CharPrice[playerid])
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
						ShowMenuForPlayer(skinshopmagaz[0],playerid);
						return true;
					}
			  		if(CharPrice[playerid] == 10000)
			  		{
			  			PlayerInfo[playerid][pCash] -= 10000;
			  		}
		  			else if(CharPrice[playerid] == 50000)
		  			{
	  					PlayerInfo[playerid][pCash] -= 50000;
		  			}
		  			else if(CharPrice[playerid] == 100000)
		  			{
			  			PlayerInfo[playerid][pCash] -= 100000;
		  			}
					else if(CharPrice[playerid] == 500000)
  					{
			  			PlayerInfo[playerid][pCash] -= 500000;
		  			}
					else if(CharPrice[playerid] == 2000000)
  					{
			  			PlayerInfo[playerid][pCash] -= 2000000;
		  			}
					else if(CharPrice[playerid] == 1000000)
  					{
			  			PlayerInfo[playerid][pCash] -= 1000000;
		  			}
					else if(CharPrice[playerid] == 4000000)
  					{
			  			PlayerInfo[playerid][pCash] -= 4000000;
		  			}
					if(zips[playerid] == 1)
  					{
						SetPlayerInterior(playerid,18);
						CharPrice[playerid] = 0;
						PlayerInfo[playerid][pCash] -= CharPrice[playerid];
						SetPlayerPos(playerid ,181.1844,-88.0599,1002);
						TogglePlayerControllable(playerid, 1);
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
						SetCameraBehindPlayer(playerid);
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						return true;
  					}
			 		CharPrice[playerid] = 0;
    				PlayerInfo[playerid][pCash] -= CharPrice[playerid];
				   	SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
       				TogglePlayerControllable(playerid,1);
          			SetPlayerVirtualWorld(playerid,0);
		     		PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SetCameraBehindPlayer(playerid);
				    SelectCharPlace[playerid] = 0;
				    SelectCharID[playerid] = 0;
				    SelectChar[playerid] = 0;
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				}
			 	case 3:
				{
					if(zips[playerid] == 1)
					{
						SetPlayerInterior(playerid,18);
						SetPlayerVirtualWorld(playerid, 0);
						CharPrice[playerid] = 0;
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
						PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
						SetPlayerPos(playerid ,181.1844,-88.0599,1002);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerSkin(playerid, OldSkin[playerid]);
						PlayerInfo[playerid][pChar] = OldSkin[playerid];
						SelectCharPlace[playerid] = 0;
						SelectCharID[playerid] = 0;
						SelectChar[playerid] = 0;
						return true;
					}
					SetPlayerVirtualWorld(playerid, 0);
					CharPrice[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
			  		PlayerInfo[playerid][pChar] = PlayerInfo[playerid][pChar];
					SetPlayerPos(playerid ,209.4333,-7.9053,1001.2109);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerSkin(playerid, OldSkin[playerid]);
					PlayerInfo[playerid][pChar] = OldSkin[playerid];
					SelectCharPlace[playerid] = 0;
					SelectCharID[playerid] = 0;
					SelectChar[playerid] = 0;
				}
			}
		}
		return true;
	}
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	new Menu:current = GetPlayerMenu(playerid);
	HideMenuForPlayer(current, playerid);
	TogglePlayerControllable(playerid, 1);
	ShowMenuForPlayer(current,playerid);
	return true;
}
public UnSurfCar(carid, playerid)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
		new model = GetVehicleModel(carid);
		if(model != 430 && model != 454 &&
		model != 478 && model != 446 &&
		model != 452 && model != 453 &&
		model != 454 && model != 472 &&
		model != 473 && model != 484 &&
		model != 493 && model != 539 &&
		model != 595 && model != 406 &&
		model != 422 && model != 433 &&
		model != 443 && model != 455 &&
		model != 472 && model != 543 &&
		model != 554 && model != 578 &&
		model != 600 && model != 449)
		if(GetPlayerSurfingVehicleID(i) == carid  && SpeedVehicle(playerid) > 15)
        {
            new Float:p[3];
            GetPlayerPos(i,p[0],p[1],p[2]);
            GetXYInBackOfPlayer(i,p[0],p[1],3.0);
            SetPlayerPos(i,p[0],p[1],p[2]);
            ApplyAnimation(i, "PED", "CAR_rollout_RHS", 4.1, 0, 1, 1, 0, 0, 1);
            return true;
        }
    }
    return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	SetPVarInt(playerid, "NoAB", 1);
	if(newstate == PLAYER_STATE_DRIVER)
	{
     	timer2[playerid] = SetTimerEx("CheckForCheater",1000,true, "i",playerid);
	    player_NoCheckTimeVeh[playerid] = 1;
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    KillTimer(timer2[playerid]);
	}
	new caridi = GetPlayerVehicleID(playerid);
	if(SeitCar[playerid] == 1)
    {
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            new string[128];
            if(FermInfo[f][fzernoseiano] >= 5001){FermInfo[f][fzernoseiano] = 5000;}
            format(string, sizeof(string), "~r~%d /5000",FermInfo[f][fzernoseiano]);
            GameTextForPlayer(playerid, string, 100, 1);
            new prod[10];
            switch(FermInfo[f][fProdukt])
            {
	            case 0: { prod = "нет"; }
	            case 1: { prod = "хлеба"; }
	            case 2: { prod = "марихуаны"; }
	            case 3: { prod = "картошки"; }
            }
            SeitCar[playerid] = 0;
            Seitferma0[playerid] = 0;
            DisablePlayerRaceCheckpoint(playerid);
            format(string, sizeof(string), "Вы не завершили посадку %s, на поле %d /5000",prod,FermInfo[f][fzernoseiano]);
            SendClientMessage(playerid, COLOR_LIGHTRED, string);
        }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		Timerkk[playerid] = SetTimerEx("UnSurfCar",1600,1, "i",GetPlayerVehicleID(playerid),playerid);
		SetPlayerArmedWeapon(playerid, 0);
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 2)
		{
			if(gcontract[playerid] == 1)
			{
				Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
				gcontract[playerid] = 0;
			}
		}
		if(PlayerRacing[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вы были дисквалифицированы");
			DisablePlayerRaceCheckpoint(playerid);
			DestroyVehicle(Veh);
			RaceCP[playerid] = 0;
			chet[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
			SetPlayerFacingAngle(playerid, 39.0413);
			SetPlayerVirtualWorld(playerid, 0);
			PlayerRacing[playerid] = 0;
			TextDrawHideForPlayer(playerid,Box);
	        TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
	        TextDrawHideForPlayer(playerid,Fuel);
	        TextDrawHideForPlayer(playerid,FuelShow[playerid]);
	        TextDrawHideForPlayer(playerid,Status);
	        TextDrawHideForPlayer(playerid,StatusShow[playerid]);
	        TextDrawHideForPlayer(playerid,KMShow[playerid]);
	        TextDrawHideForPlayer(playerid,FillShow[playerid]);
	        TextDrawHideForPlayer(playerid,MaxShow[playerid]);
	        TextDrawHideForPlayer(playerid,EngineShow[playerid]);
	        TextDrawHideForPlayer(playerid,LightsShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarnameShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarShow[playerid]);
			Arrester[playerid] = false;
			return true;
		}
		if(TalkingLive[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = 255;
			TalkingLive[playerid] = 255;
			return true;
		}
		else if(TalkingLivels[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLivels[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivels[playerid], 1);
			TalkingLivels[TalkingLivels[playerid]] = 255;
			TalkingLivels[playerid] = 255;
			return true;
		}
		else if(TalkingLivelv[playerid] == 2)
		{
			SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SendClientMessage(TalkingLivelv[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLivelv[playerid], 1);
			TalkingLivelv[TalkingLivelv[playerid]] = 255;
			TalkingLivelv[playerid] = 255;
			return true;
		}
		if(Playermoto[playerid] != 0)
		{
			JobCarTime[playerid] = 11;
			SendClientMessage(playerid, COLOR_WHITE, "У вас есть 10 секунд чтобы вернуться на мотоцикл");
		}
		if(AutoBusJob[playerid] >= 1)
		{
			Delete3DTextLabel(fare3dtext[playerid]);
			JobCarTime[playerid] = 11;
			BusStopTime[playerid] = 11;
			SendClientMessage(playerid, COLOR_WHITE, "У вас есть 10 секунд чтобы сесть в автобус");
		}
        if(AutoBusJob[playerid] == 0)
		{
			Delete3DTextLabel(fare3dtext[playerid]);
		}
		if(MusorJob[playerid] >= 1)
		{
			JobCarTime[playerid] = 11;
			BusStopTime[playerid] = 11;
			SendClientMessage(playerid, COLOR_WHITE, "У вас есть 10 секунд чтобы сесть в мусоровоз");
		}
		if(TrainJob[playerid] >= 1)
		{
			Delete3DTextLabel(fare3dtext[playerid]);
			JobCarTime[playerid] = 11;
			BusStopTime[playerid] = 11;
			SendClientMessage(playerid, COLOR_WHITE, "У вас есть 10 секунд чтобы сесть в поезд");
		}
		if(TakingLesson[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_RED, "Автосдача прекращена, вы покинули автомобиль");
			DisablePlayerRaceCheckpoint(playerid);
			CP[playerid] = 0;
			TakingLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return true;
		}
		new tacha = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if(GetPlayerVehicleID(playerid) != caridhouse[i])
            {
                GetVehicleParamsEx(tacha,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(tacha,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
		        UnLockCar(tacha);
		        IsLocked[tacha] = 0;
		    }
		}
   	}
   	new tacha = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(PlayerRacing[playerid] != 5)
	 	{
			if(IsANoBroke(tacha))
   			{
   			    TextDrawShowForPlayer(playerid,Box);
		        TextDrawShowForPlayer(playerid,SpeedShow[playerid]);
		        TextDrawShowForPlayer(playerid,KMShow[playerid]);
		        TextDrawShowForPlayer(playerid,CarnameShow[playerid]);
   			}
   			if(IsAPlane(tacha) || IsABoat(tacha))
   			{
   			    TextDrawShowForPlayer(playerid,Box);
		        TextDrawShowForPlayer(playerid,SpeedShow[playerid]);
		        TextDrawShowForPlayer(playerid,KMShow[playerid]);
		        TextDrawShowForPlayer(playerid,EngineShow[playerid]);
		        TextDrawShowForPlayer(playerid,CarnameShow[playerid]);
		        TextDrawShowForPlayer(playerid,CarShow[playerid]);
		        TextDrawShowForPlayer(playerid,StatusShow[playerid]);
		        Arrester[playerid] = false;
			}
			else if(!IsANoSpeed(tacha))
			{
		        TextDrawShowForPlayer(playerid,Box);
		        TextDrawShowForPlayer(playerid,SpeedShow[playerid]);
		        TextDrawShowForPlayer(playerid,Fuel);
		        TextDrawShowForPlayer(playerid,FuelShow[playerid]);
		        TextDrawShowForPlayer(playerid,Status);
		        TextDrawShowForPlayer(playerid,StatusShow[playerid]);
		        TextDrawShowForPlayer(playerid,KMShow[playerid]);
		        TextDrawShowForPlayer(playerid,FillShow[playerid]);
		        TextDrawShowForPlayer(playerid,MaxShow[playerid]);
		        TextDrawShowForPlayer(playerid,EngineShow[playerid]);
		        TextDrawShowForPlayer(playerid,LightsShow[playerid]);
		        TextDrawShowForPlayer(playerid,CarnameShow[playerid]);
		        TextDrawShowForPlayer(playerid,CarShow[playerid]);
		        Arrester[playerid] = false;
			}
		}
	}
    else if(newstate == PLAYER_STATE_ONFOOT)
    {
 		if(!IsAPlane(tacha)&& !IsANoSpeed(tacha))
		{
	        TextDrawHideForPlayer(playerid,Box);
	        TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
	        TextDrawHideForPlayer(playerid,Fuel);
	        TextDrawHideForPlayer(playerid,FuelShow[playerid]);
	        TextDrawHideForPlayer(playerid,Status);
	        TextDrawHideForPlayer(playerid,StatusShow[playerid]);
	        TextDrawHideForPlayer(playerid,KMShow[playerid]);
	        TextDrawHideForPlayer(playerid,FillShow[playerid]);
	        TextDrawHideForPlayer(playerid,MaxShow[playerid]);
	        TextDrawHideForPlayer(playerid,EngineShow[playerid]);
	        TextDrawHideForPlayer(playerid,LightsShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarnameShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarShow[playerid]);
	        Arrester[playerid] = false;
        }
        if(tacha == 510 || tacha == 509 || tacha == 481)
		{
		    TextDrawHideForPlayer(playerid,Box);
	        TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
	        TextDrawHideForPlayer(playerid,KMShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarnameShow[playerid]);
	        Arrester[playerid] = false;
	 	}
        else
		{
		    TextDrawHideForPlayer(playerid,Box);
	        TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
	        TextDrawHideForPlayer(playerid,KMShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarnameShow[playerid]);
	        TextDrawHideForPlayer(playerid,CarShow[playerid]);
	        Arrester[playerid] = false;
	 	}
    }
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetVehicleModel(caridi) == 481 || GetVehicleModel(caridi) == 509 || GetVehicleModel(caridi) == 510)
		{
			if(EngineState[playerid] == false)
 		    {
			    if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
			    {
				    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				    {
					    GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
					    SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
					    Arrester[playerid] = false;
					    EngineState[playerid] = true;
				    }
			    }
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		DeletePVar(playerid, "NoAB");
		new Veh = GetPlayerVehicleID(playerid);
     	if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
   			Delete3DTextLabel(taxi3d[Veh]);
			TransportDuty[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    if(PlayerInfo[playerid][pCash] < TransportCost[playerid])
			    {
					TransportCost[playerid] = 0;
					TransportTime[playerid] = 0;
					TransportDriver[playerid] = 999;
					return true;
			    }
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new name[24];
		GetPlayerName(playerid, name, sizeof(name));
		if(GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 27 || GetPlayerWeapon(playerid) == 38)
		{
			SetPlayerArmedWeapon(playerid, 0);
 		}
		new vehicleid = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
            if(IsLocked[vehicleid] == 1)
            {
				if(PlayerCuffed[playerid] != 1)
				{
                    if(PlayerRacing[playerid] == 0 && PlayerOnDerby[playerid] == 0 && Playermoto[playerid] == 0)
                    {
                        RemovePlayerFromVehicleAc(playerid);
					}
				}
			}
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] == 1)
			{
			    new string[104];
			    format(string, sizeof(string), "Пассажир %s сел(а) в ваше Такси. Довезите его и государство заплатит вам", name);
				SendClientMessage(i, 0x6495EDFF, string);
			}
			if(vehicleid == 570)
			{
			    PlayerInfo[playerid][pCash] -= 1000;
                GameTextForPlayer(playerid,"~r~- 1000", 5000, 1);
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(caridi >= busls[0] && caridi <= busls[7] || caridi >= bussf[0] && caridi <= bussf[8] || caridi >= buslv[0] && caridi <= buslv[7])
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
        		if(IsPlayerInVehicle(i,caridi) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        		{
        		    if(PlayerInfo[playerid][pCash] < AutoBusMoney[i])
					{
						new string[82];
					    SendClientMessage(playerid,COLOR_FADE5,"Вам не хватает на проезд");
						format(string,sizeof(string),"%s не хватает на проезд((/eject %d или оставить в машине))",PlayerInfo[playerid][pName],playerid);
						SendClientMessage(i,COLOR_FADE5,string);
					}
					else
					{
						PlayerInfo[playerid][pCash] -= AutoBusMoney[i];
        				FracBank[0][fKazna] += AutoBusMoney[i];
        				OnPlayerCommandText(playerid,"/me заплатил за проезд и сел на место");
                    }
        		}
    		}
		}
		if(caridi >= 1 && caridi <= 4)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
        		if(IsPlayerInVehicle(i,1) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        		{
        		    if(PlayerInfo[playerid][pCash] < AutoBusMoney[i])
					{
						new string[82];
					    SendClientMessage(playerid,COLOR_FADE5,"Вам не хватает на проезд");
						format(string,sizeof(string),"%s не хватает на проезд((/eject %d или оставить в машине))",PlayerInfo[playerid][pName],playerid);
						SendClientMessage(i,COLOR_FADE5,string);
					}
					else
					{
						PlayerInfo[playerid][pCash] -= AutoBusMoney[i];
        				FracBank[0][fKazna] += AutoBusMoney[i];
        				OnPlayerCommandText(playerid,"/me заплатил за проезд и сел на место");
                    }
        		}
    		}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "У вас нет лицензии на управлении морским транспортом");
			    RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 1) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии пилота");
			    RemovePlayerFromVehicleAc(playerid); }
			}
		}
		if(CarLic(newcar))
		{
			if(PlayerInfo[playerid][pCarLic] == 0)
			{
				if(TakingLesson[playerid] != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав");
					RemovePlayerFromVehicleAc(playerid);
				}
			}
		}
		if(IsAGunsCar(newcar))
		{
			new string[40];
			format(string, sizeof(string), "Оружия: %d/%d", MatHaul[newcar-gunscar[0]][mLoad],MatHaul[newcar-gunscar[0]][mCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			SendClientMessage(playerid, COLOR_WHITE, "(( Для загрузки/разгрузки Оружия Введите: /carm ))");
		}
		if(GetVehicleModel(caridi) != 481 || GetVehicleModel(caridi) != 509 || GetVehicleModel(caridi) != 510)
		{
            if(IsLocked[caridi] == 1 && RCController[playerid] == 0)
			{
                if(GetPlayerVehicleID(playerid) != caridhouse[playerid])
                {
					if(PlayerRacing[playerid] == 0 && PlayerOnDerby[playerid] == 0 && Playermoto[playerid] == 0)
					{
                        RemovePlayerFromVehicleAc(playerid);
                        SendClientMessage(playerid, COLOR_GREY, "Транспортное средство закрыто");
					}
					return true;
				}
            }
            else
            {
                if(Fuell[caridi] <= 0)
                {
                    if(!IsAPlane(caridi) && !IsABoat(caridi) && !IsANoSpeed(caridi))
                    {
                        SendClientMessage(playerid, COLOR_RED, "Двигатель не заводится");
                        SendClientMessage(playerid, COLOR_GREEN, "{00A86B}Используйте телефон {FFFFFF}(( /c )) {00A86B}чтобы вызвать механика / таксиста");
                    }
                }
                if(EngineState[playerid] == false)
                {
                    SendClientMessage(playerid,COLOR_GREEN, "{00AB06}Чтобы завести двигатель нажмите клавишу {FFFFFF}'2'{00AB06} или введите команду {FFFFFF}/en");
                }
			}
		}
		if(newcar >= mavlic[0] && newcar <= mavlic[1])
		{
			if(PlayerInfo[playerid][pForma] == 11 || TakingLesson[playerid] == 1 ) { }
			else
			{
			    SendClientMessage(playerid,COLOR_GREY, "Вы не состоите в инструкторах");
		        RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if(PlayerInfo[playerid][pForma] == 11 || TakingLesson[playerid] == 1 ) { }
			else
			{
			    SendClientMessage(playerid,COLOR_GREY, "Вы не состоите в инструкторах");
		        RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == 468)
		{
			if(Playermoto[playerid] != 0)
			{
                JobCarTime[playerid] = 0;
            }
			else return true;
		}
		if(newcar >= dvr[0] && newcar <= dvr[3])
        {
            if(PlayerInfo[playerid][pJob] != 11)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Вы не Мусоросборщик");
                RemovePlayerFromVehicleAc(playerid);
            }
            else
            {
				if(MusorJob[playerid] == 0)
				{
                    ShowPlayerDialog(playerid,5114,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите начать рейс?", "Да", "Нет");
                    return true;
                }
                else if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
				    if(MusorJob[playerid] == 1)
				    {
						JobCarTime[playerid] = 0;
					}
				}
			}
        }
        if(newcar == train[0])
        {
            if(PlayerInfo[playerid][pJob] == 12)
            {
				if(TrainJob[playerid] == 0)
				{
                    ShowPlayerDialog(playerid,5115,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите начать рейс?", "Да", "Нет");
                    return true;
                }
                else if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
				    if(TrainJob[playerid] == 1)
				    {
						JobCarTime[playerid] = 0;
					}
				}
			}
			else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Вы не Машинист");
                RemovePlayerFromVehicleAc(playerid);
                SetPlayerPos(playerid, 1767.9900,-1948.2570,14.1096);
                return true;
            }
            return true;
        }
        if(newcar >= FarmCar[0] && newcar <= FarmCar[0])
        {
            if(PlayerInfo[playerid][pFermajob] == 3 || PlayerInfo[playerid][pFerma] != 255 || PlayerInfo[playerid][pFermajob] == 2)
            {
                if(FarmWorks[playerid] == 1)
                {
                    for(new f = 0; f < sizeof(FermInfo); f++)
                    {
                        new carid = GetPlayerVehicleID(playerid);
                        if((!(FermInfo[f][vnutricar] >= 1000)) && WithPickup[carid] == true)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Грузовик ещё не заполнен");
                            RemovePlayerFromVehicleAc(playerid);
                            return true;
                        }
                        else if(FermInfo[f][vnutricar] >= 1000)
                        {
							new string[35];
                            Delete3DTextLabel(JobText2);
                            DestroyPickup(collection);
                            WithPickup[carid] = false;
                            SendClientMessage(playerid, COLOR_WHITE, "Грузовик полон разгрузите на склад!");
                            format(string, sizeof(string), "В грузовике %d / 1000 зёрен",FermInfo[f][vnutricar]);
                            SendClientMessage(playerid, COLOR_GREEN,string);
                            RemovePlayerAttachedObject(playerid,3);
                            if(FermInfo[f][vnutricar] > 1000){FermInfo[f][vnutricar] = 1000;}
                            DisablePlayerCheckpoint(playerid);
                            return true;
                        }
                        else
                        {
                            if(FermInfo[f][fzernoseiano] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "На поле нет урожая");
                            new rand;
                            new string[35];
                            rand = random(sizeof(Venue));
                            WithPickup[carid] = false;
                            SetPlayerCheckpoint(playerid,Venue[rand][0],Venue[rand][1],Venue[rand][2],5.0);
                            CollectionStarted[playerid] = 1;
                            format(string, sizeof(string), "В грузовике %d / 1000 зёрен",FermInfo[f][vnutricar]);
                            SendClientMessage(playerid, COLOR_GREEN,string);
                            return true;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Вы не фермер");
                    RemovePlayerFromVehicleAc(playerid);
                    return true;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Вы не фермер");
                RemovePlayerFromVehicleAc(playerid);
                return true;
            }
        }
        if(newcar >= Combine[0] && newcar <= Combine[0])
        {
            for(new f = 0; f < sizeof(FermInfo); f++)
            {
                if(FermInfo[f][fzernoseiano] <= 2000)
                {
                    if(FarmWorks[playerid] == 1)
                    {
                        if(FermInfo[f][fzernozakup] >= 5000)
                        {
                            if(PlayerInfo[playerid][pFermajob] == 2 || PlayerInfo[playerid][pFerma] != 255 || PlayerInfo[playerid][pFermajob] == 3)
                            {
                                SeitCar[playerid] = 1;
                                Seitferma0[playerid]++;
                                Seitfers[playerid] = FCHECKPOINT_0;
                                SetPlayerRaceCheckpoint(playerid,0,-324.9671,-1413.2345,15.1417,-319.7507,-1353.2788,10.4477,5.0);
                            }
                            else
                            {
                                RemovePlayerFromVehicleAc(playerid);
                                SendClientMessage(playerid, COLOR_GREY, "Вы не можете работать на комбайне");
                                return true;
                            }
                        }
                        else
                        {
                            RemovePlayerFromVehicleAc(playerid);
                            SendClientMessage(playerid, COLOR_GREY, "Чтобы засеять зерно нужно хотя бы 5000 зерна на складе");
                            return true;
                        }
                    }
                    else
                    {
                        RemovePlayerFromVehicleAc(playerid);
                        SendClientMessage(playerid, COLOR_GREY, "Вы не фермер");
                        return true;
                    }
                }
                else
                {
                    RemovePlayerFromVehicleAc(playerid);
                    SendClientMessage(playerid, COLOR_GREY, "Поле ещё засеяно. Cначала соберите остатки");
                    return true;
                }
            }
        }
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
	      	if(PlayerInfo[playerid][pCarLic] == 0 && TakingLesson[playerid] == 1)
			{
				if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
					JobCarTime[playerid] = 0;
				}
				LessonStat[playerid]++;
				pLessonCar[playerid] = CHECKPOINT_1;
				SetPlayerRaceCheckpoint(playerid,0,-2051.0344,-116.3450,35.1362,-2047.1299,-82.7046,32.9072,5.0);
				SendClientMessage(playerid, 0x6495EDFF, "Отправляйтесь по чекпоинтам");
				SendClientMessage(playerid, 0x6495EDFF, "Чтобы прервать экзамен /endlesson");
			}
		}
		if(newcar >= rentcarsf[0] && newcar <= rentcarsf[8])
		{
			if(arenda[playerid] != 1)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Сан Фиерро >>\nЦена аренды: 5000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentplane[0] && newcar <= rentplane[4])
		{
			if(arenda[playerid] != 1)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Сан Фиерро >>\nЦена аренды: 5000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentboat[0] && newcar <= rentboat[17])
		{
			if(arenda[playerid] != 1)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Сан Фиерро >>\nЦена аренды: 5000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarls[0] && newcar <= rentcarls[10])
		{
			if(arenda[playerid] != 1)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Лос Сантос >>\nЦена аренды: 5000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarlv[0] && newcar <= rentcarlv[20])
		{
			if(arenda[playerid] != 1)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Лас Вентурас >>\nЦена аренды: 5000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		new car = GetPlayerVehicleID(playerid);
		if(car >= PetrolTanker[0] && car <= PetrolTanker[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Linerunner[0] && car <= Linerunner[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(car >= Roadtrain[0] && car <= Roadtrain[1])
		{
			if(jobcar[car] == false)
			{
				if(PlayerInfo[playerid][pJob] == 10)
				{
					ShowPlayerDialog(playerid,32000,0, " ", "<< Автопарк >>\nЦена аренды: 5000\nВы хотите взять грузовик на прокат?", "Да", "Нет");
					TogglePlayerControllable(playerid, 0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
					RemovePlayerFromVehicleAc(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(newcar >= incos[0] && newcar <= incos[3])
		{
		    if(PlayerInfo[playerid][pJob] == 8 && PlayerInfo[playerid][pMember] == 0)
		    {
				if(incosjob[playerid] != 1)
				{
					ShowPlayerDialog(playerid,5117,DIALOG_STYLE_MSGBOX, " ", "Вы хотите начать работу?", "Да", "Нет");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не инкассатор");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= hotdogcar[0] && newcar <= hotdogcar[8])
		{
			if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9130,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= taxicar[0] && newcar <= taxicar[37])
		{
			if(PlayerInfo[playerid][pJob] == 4 && PlayerInfo[playerid][pMember] == 0)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9127,DIALOG_STYLE_MSGBOX, " ", "<< Таксопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не таксист");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5])
		{
			if(PlayerInfo[playerid][pForma] == 16) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LS News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lvpdcar[0] && newcar <= lvpdcar[16])
		{
			if(PlayerInfo[playerid][pForma] == 21) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LVPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= ssmccar[0] && newcar <= ssmccar[9] || newcar == matsfuraSsmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Sons of Silence MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= hamccar[0] && newcar <= hamccar[9] || newcar == matsfuraHamc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Hell's Angels MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= omccar[0] && newcar <= omccar[9] || newcar == matsfuraOmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 25 || PlayerInfo[playerid][pMember] == 25) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Outlaws MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= wmccar[0] && newcar <= wmccar[9] || newcar == matsfuraWmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pMember] == 26) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Warlocks MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= hwmccar[0] && newcar <= hwmccar[9] || newcar == matsfuraHwmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 27 || PlayerInfo[playerid][pMember] == 27) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Highwaymen MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= fsmccar[0] && newcar <= fsmccar[9] || newcar == matsfuraFsmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 28 || PlayerInfo[playerid][pMember] == 28) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Free Souls MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= pmccar[0] && newcar <= pmccar[9] || newcar == matsfuraPmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pMember] == 29) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Pagans MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= mmccar[0] && newcar <= mmccar[9] || newcar == matsfuraMmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 30 || PlayerInfo[playerid][pMember] == 30) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Mongols MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= vmccar[0] && newcar <= vmccar[9] || newcar == matsfuraVmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 31 || PlayerInfo[playerid][pMember] == 31) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Vagos MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= bmccar[0] && newcar <= bmccar[9] || newcar == matsfuraBmc[0])
		{
			if(PlayerInfo[playerid][pLeader] == 32 || PlayerInfo[playerid][pMember] == 32) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Bandidos MC");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar == ugoncar[playerid])
		{
		    GangZoneDestroy(zonapoiska[playerid]);
			SendClientMessage(playerid, 0x6495EDFF, "SMS: Это то что нам нужно, гони её на склад.");
			new rand = random(3);
	        switch(rand)
	        {
         		case 0: SetPlayerCheckpoint(playerid,2120.0693,2718.2942,10.8203,3);
           		case 1: SetPlayerCheckpoint(playerid,-1931.6606,271.5569,41.0469,3);
             	case 2: SetPlayerCheckpoint(playerid,2507.9807,-2113.6448,13.5469,3);
	        }
		}
		if(newcar >= ruscar[0] && newcar <= ruscar[11])
		{
			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Русской Мафии");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5])
		{
			if(PlayerInfo[playerid][pForma] == 20) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LV News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[11])
		{
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в La Cosa Nostra");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[11])
		{
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Yakuza");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav)
		{
			if(PlayerInfo[playerid][pForma] == 9) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в SF News");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= comptruck[0] && newcar <= comptruck[8])
		{
			if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pPBiskey] == 255)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9131,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= benzovoz[0] && newcar <= benzovoz[9])
		{
			if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pPBiskey] == 255)
			{
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9132,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не развозчик продуктов");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= govcar[0] && newcar <= govcar[5])
		{
			if(PlayerInfo[playerid][pForma] == 7) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Правительстве");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= matsfura[0] && newcar <= matsfura[0])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в The Ballas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[8])
		{
		    if(PlayerInfo[playerid][pForma] == 2) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ФБР");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
 	 	if(newcar >= sapdcar[0] && newcar <= sapdcar[25])
		{
		    if(PlayerInfo[playerid][pForma] == 1) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в LSPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= detectivcar[0] && newcar <= detectivcar[3])
		{
			if(PlayerInfo[playerid][pJob] == 9) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не детектив");
				RemovePlayerFromVehicleAc(playerid);
			}
        }
		if(newcar >= medicsls[0] && newcar <= medicsls[5])
		{
		    if(PlayerInfo[playerid][pForma] == 22) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице Los Santos");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= hitmancar[0] && newcar <= hitmancar[7])
		{
		    if(PlayerInfo[playerid][pMember] == 35) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не наёмный убийца!");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= medicslv[0] && newcar <= medicslv[7])
		{
		    if(PlayerInfo[playerid][pForma] == 33) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице Las Venturas!");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= medicssf[0] && newcar <= medicssf[7])
		{
		    if(PlayerInfo[playerid][pForma] == 4) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице San Fierro!");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= busls[0] && newcar <= busls[7])
        {
            if(PlayerInfo[playerid][pJob] == 1)
            {
				if(AutoBusJob[playerid] == 0)
				{
                    ShowPlayerDialog(playerid,5116,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите начать рейс?", "Да", "Нет");
                    return true;
                }
                else if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
				    if(AutoBusJob[playerid] == 1)
				    {
				        new string[60];
						format(string, sizeof(string), "<< Межгородской LS -> SF -> LS >>\nЦена за проезд: %d",AutoBusMoney[playerid]);
						fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
						Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
						JobCarTime[playerid] = 0;
					}
				}
			}
			else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Вы не водитель автобуса");
                RemovePlayerFromVehicleAc(playerid);
                return true;
            }
            return true;
        }
        if(newcar >= bussf[0] && newcar <= bussf[8])
        {
            if(PlayerInfo[playerid][pJob] == 1)
            {
				if(AutoBusJob[playerid] == 0)
				{
                    ShowPlayerDialog(playerid,5116,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите начать рейс?", "Да", "Нет");
                    return true;
                }
                else if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
				    if(AutoBusJob[playerid] == 2)
				    {
				        new string[60];
						format(string, sizeof(string), "<< Внутригородской SF >>\nЦена за проезд: %d",AutoBusMoney[playerid]);
						fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
						Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
						JobCarTime[playerid] = 0;
					}
				}
			}
			else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Вы не водитель автобуса");
                RemovePlayerFromVehicleAc(playerid);
                return true;
            }
            return true;
        }
        if(newcar >= buslv[0] && newcar <= buslv[7])
        {
            if(PlayerInfo[playerid][pJob] == 1)
            {
				if(AutoBusJob[playerid] == 0)
				{
                    ShowPlayerDialog(playerid,5116,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите начать рейс?", "Да", "Нет");
                    return true;
                }
                else if(JobCarTime[playerid] <= 16 && JobCarTime[playerid] >= 1)
				{
				    if(AutoBusJob[playerid] == 3)
				    {
				        new string[60];
						format(string, sizeof(string), "<< Внутригородской LV >>\nЦена за проезд: %d",AutoBusMoney[playerid]);
						fare3dtext[playerid] = Create3DTextLabel(string, COLOR_GREEN,9999.0,9999.0,9999.0,50.0,0,1);
						Attach3DTextLabelToVehicle(fare3dtext[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 2.25);
						JobCarTime[playerid] = 0;
					}
				}
			}
			else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Вы не водитель автобуса");
                RemovePlayerFromVehicleAc(playerid);
                return true;
            }
            return true;
        }
		if(newcar >= mehanik[0] && newcar <= mehanik[22])
		{
		    if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0)
		    {
				if(arenda[playerid] != 1)
				{
					ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= sfpdcar[0] && newcar <= sfpdcar[34])
		{
		    if(PlayerInfo[playerid][pForma] == 10) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в SFPD");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= matsfuragrove[0] && newcar <= matsfuragrove[0])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Grove Street Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= matsfuraactek[0] && newcar <= matsfuraactek[0])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Varios Los Aztecas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= matsfuravagos[0] && newcar <= matsfuravagos[0])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Los Santos Vagos Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= matsfurarifa[0] && newcar <= matsfurarifa[0])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в The Rifa Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в The Ballas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[9])
		{
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Grove Street Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[9])
		{
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Varios Los Aztecas Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[10])
		{
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Los Santos Vagos Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[11])
		{
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в The Rifa Gang");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= gunscar[0] && newcar <= gunscar[2])
		{
			if (PlayerInfo[playerid][pForma] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армии LVA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= ffcar[0] && newcar <= ffcar[7])
		{
            if(PlayerInfo[playerid][pForma] == 34) { }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в пожарном депо SA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
        if(newcar >= lsacar[0] && newcar <= lsacar[15])
        {
            if(PlayerInfo[playerid][pForma] == 3 || PlayerInfo[playerid][pForma] == 19 || proverkaforma[playerid] == 1) { }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Вы не состоите армии");
                RemovePlayerFromVehicleAc(playerid);
            }
        }
        if(newcar >= lsacarvert[0] && newcar <= lsacarvert[0])
        {
            if(PlayerInfo[playerid][pForma] == 3 || PlayerInfo[playerid][pForma] == 19 || proverkaforma[playerid] == 1) { }
            else
			{
				SendClientMessage(playerid, COLOR_GREY, "Вы не состоите армии");
				RemovePlayerFromVehicleAc(playerid);
			}
			if(vertmatbilsa >= 10000)
			{
				SendClientMessage(playerid, COLOR_GREY, "Вертолёт загружен");
				SendClientMessage(playerid, COLOR_WHITE, "Доставьте материалы в LSA");
				VertMatslsa[playerid] = 2;
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,-1469.0442,1489.7952,8.2578,10);
				lsacarvertexit[playerid] = 1;
				return true;
			}
			SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
			SendClientMessage(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки Оружия");
			VertMatslsa[playerid] = 1;
			lsacarvertexit[playerid] = 1;
        }
        if(newcar >= armycarsf[0] && newcar <= armycarsf[20])
		{
		    if(PlayerInfo[playerid][pForma] == 3 || proverkaforma[playerid] == 1)
			{
                if(newcar == armycarsf[1] || newcar == armycarsf[13] || newcar == armycarsf[14]
				|| newcar == armycarsf[15] || newcar == armycarsf[17] || newcar == armycarsf[20])
                {
                	if(PlayerInfo[playerid][pRank] <= 13)
                	{
                	    SendClientMessage(playerid, COLOR_GREY, "У вас ранг ниже капитан-лейтенанта");
						RemovePlayerFromVehicleAc(playerid);
					}
				}
				if(newcar == armycarsf[5] || newcar == armycarsf[16]){SendClientMessage(playerid,COLOR_WHITE,"Для развозки материалов введите: /carmat");}
				else return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армии SFA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
		if(newcar >= armcar[0] && newcar <= armcar[43])
		{
		    if(PlayerInfo[playerid][pForma] == 19 || proverkaforma[playerid] == 1)
	        {
                if(newcar >= armcar[0] && newcar <= armcar[4])
                {
                	if(PlayerInfo[playerid][pRank] <= 12)
                	{
                	    SendClientMessage(playerid, COLOR_GREY, "У вас ранг ниже капитана");
						RemovePlayerFromVehicleAc(playerid);
					}
				}
				else return true;
			}
	        else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армии LVA");
				RemovePlayerFromVehicleAc(playerid);
			}
		}
	}
	/*if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1))
		{
			SetPlayerSpawn(playerid);
		}
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}*/
	return true;
}
stock LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid, i, 0, 1);
			gCarLock[carid] = 1;
		}
	}
}
stock InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while(c < 265)
		{
			c++;
			if(gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid, 0, 1);
			}
		}
	}
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] == 1)
			{
				SendClientMessage(i, 0x6495EDFF, "Пассажир вышел из вашего Такси. Деньги и опыт будут зачислены во время зарплаты");
			    if(taxipasashir[playerid] != true)
			    {
					new taxizp = 50+Random(1, 50);
					PlayerInfo[i][pPayCheck] += taxizp*PlayerInfo[i][pTaxiLvl];
					taxipasashir[playerid] = true;
					taxiexpp[i]+= 1;
					SetPVarInt(playerid, "Taxist", i);
					ShowPlayerDialog(playerid, 11516, DIALOG_STYLE_MSGBOX, "Такси", "Как вас обслужили?", "Хорошо", "Плохо");
				}
			}
			return true;
		}
	}
	SetPVarInt(playerid, "NoAB", 1);
	ResetCarInfo(playerid);
	if(PEfir[playerid] != 255)
	{
		SendClientMessage(playerid, COLOR_WHITE,"Вы вышли из прямого эфира");
		PEfir[playerid] = 255;
	}
	if(Pefir[playerid] == 1 || Pefir[playerid] == 2)
	{
		Pefir[playerid] = 0;
		PEfir[playerid] = 255;
		SendClientMessage(playerid, COLOR_WHITE,"Вы вышли из прямого эфира");
	}
	new Veh = GetPlayerVehicleID(playerid);
	if(PlayerRacing[playerid] != 0)
	{
		SendClientMessage(playerid, COLOR_NEWS, "Вы были дисквалифицированы!");
		DisablePlayerRaceCheckpoint(playerid);
		DestroyVehicle(Veh);
		RaceCP[playerid] = 0;
		chet[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,831.9918,1.6614,1004.1797);
		SetPlayerFacingAngle(playerid, 39.0413);
		PlayerRacing[playerid] = 0;
		TextDrawHideForPlayer(playerid,Box);
		TextDrawHideForPlayer(playerid,SpeedShow[playerid]);
		TextDrawHideForPlayer(playerid,Fuel);
		TextDrawHideForPlayer(playerid,FuelShow[playerid]);
		TextDrawHideForPlayer(playerid,Status);
		TextDrawHideForPlayer(playerid,StatusShow[playerid]);
		TextDrawHideForPlayer(playerid,KMShow[playerid]);
		TextDrawHideForPlayer(playerid,FillShow[playerid]);
		TextDrawHideForPlayer(playerid,MaxShow[playerid]);
		Arrester[playerid] = false;
		return true;
	}
	if(PlayerOnDerby[playerid] != 0)
	{
	    ClearAnimations(playerid);
        PutPlayerInVehicle(playerid, vehicleid, 0);
        return true;
	}
	if(TransportDuty[playerid] > 0)
	{
		if(TransportDuty[playerid] == 1)
		{
			TaxiDrivers -= 1;
		}
		Delete3DTextLabel(taxi3d[Veh]);
		TransportDuty[playerid] = 0;
	}
	return true;
}
public OnPlayerRequestClass(playerid, classid)
{
   	SendClientMessage(playerid, 0xEAC700FF, "Добро пожаловать на NextAge Role Play");
	SetPlayerInterior(playerid, 0);
	PlayerPlaySound(playerid,1187,0,0,0);
    InterpolateCameraPos(playerid, 1495.640014, -1449.868652, 166.707748, 1482.623779, -1048.848022, 132.469314, 50000);
	InterpolateCameraLookAt(playerid, 1495.306762, -1454.247680, 164.317474, 1481.693725, -1044.009521, 131.618316, 50000);
	TogglePlayerControllable(playerid, 0);
	SetPlayerHealthAC(playerid, 255);
	PlayerInfo[playerid][pHP] = 255;
	if(gPlayerLogged[playerid] != 1)
	{
		if(NotLogin[playerid] != 1)
		{
			new bac[280];
			format(bac, sizeof(bac), "%s.ini", PlayerInfo[playerid][pName]);
			if(gPlayerAccount[playerid] == true)
			{
			    gPlayerAccount[playerid] = true;
				format(bac, sizeof(bac), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер{00BFFF} NextAgeRP{FFFAFA}\n       Этот аккаунт {FF0000}зарегистрирован{FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", PlayerInfo[playerid][pName]);
		       	ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "{FFFFFF}Авторизация",bac, "Войти", "Отмена");
				return true;
			}
			else if(gPlayerAccount[playerid] == false)
			{
		  		gPlayerAccount[playerid] = false;
				format(bac, sizeof(bac), "{FF0000}______________________________________\n\n {FFFAFA}Добро пожаловать на сервер {00BFFF}NextAgeRP{FFFAFA}\n       Этот аккаунт {00FF00}не зарегистрирован{FFFAFA}\n\nЛогин: {76EE00}%s{FFFAFA}\nВведите пароль:{FF0000}\n______________________________________", PlayerInfo[playerid][pName]);
		    	ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "{FFFFFF}Регистрация",bac, "Готово", "Отмена");
			    return true;
			}
		}
	}
	return true;
}
public OtherTimer()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerIsPhoned[i] != -1)
			{
				new called[MAX_PLAYER_NAME];
				new string[64];
				GetPlayerName(i, called, sizeof(called));
				format(string, sizeof(string), "У %s звонит мобильник", called);
				ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlaySoundNearPlayer(i, 23000);
			}
		}
	}
	return true;
}
public Fresh()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerInRangeOfPoint(i, 6, 2120.0693,2718.2942,10.8203) || IsPlayerInRangeOfPoint(i, 6, -1931.6606,271.5569,41.0469) || IsPlayerInRangeOfPoint(i, 6, 2507.9807,-2113.6448,13.5469))
		{
		    if(ugoncar[i] != 0)
		    {
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER) return SendClientMessage(i, 0x6495EDFF, "Вы не в машине");
		        if(GetPlayerVehicleID(i) != ugoncar[i]) return SendClientMessage(i, 0x6495EDFF, "Эта не та машина что мы заказывали");
                DeletePVar(i, "ugontime");
		        new zp = PlayerInfo[i][pCarRobbingExp]*2;
		        DestroyVehicle(ugoncar[i]);
		        PlayerInfo[i][pCash] += 500+zp;
		        new string[17];
		        format(string, sizeof(string), "~g~+%d$", 500+zp);
		        GameTextForPlayer(i, string, 3000, 1);
		        PlayerInfo[i][pCarRobbingExp] ++;
		    	SendClientMessage(i, 0x6495EDFF, "Отличная тачка. Будет нужна работа - приходи");
		        ugoncar[i] = 0;
			}
		}
		if(GetPVarInt(i, "ugontime") > 0)
		{
		    new string[12];
		    SetPVarInt(i, "ugontime", GetPVarInt(i, "ugontime") - 1);
	    	format(string,10,"~r~%s",Convert(GetPVarInt(i, "ugontime")));
	    	GameTextForPlayer(i, string, 2000, 6);
	    	if(GetPVarInt(i, "ugontime") == 1)
	    	{
	    	    if(PlayerInfo[i][pCarRobbingExp] != 0) { PlayerInfo[i][pCarRobbingExp] -= 1; }
	    	    SendClientMessage(i, 0x6495EDFF, "SMS: Ты меня разочаровал");
	    	    DestroyVehicle(ugoncar[i]);
	    	    DeletePVar(i, "ugontime");
	    	}
		}
		InitLockDoors(i);
		SaveWeapon(i);
		if(Tazer[i] == 1)
		{
            if(TazerTime[i] > 0) TazerTime[i] -= 1;
            if(TazerTime[i] == 0)
            {
                Tazer[i] = 0;
                TazerTime[i] = 0;
            }
		}
		if(PlayerInfo[i][pGunLvaTime] > 0) { PlayerInfo[i][pGunLvaTime] -= 1; }
		if(PlayerInfo[i][pGunLsaTime] > 0) { PlayerInfo[i][pGunLsaTime] -= 1; }
	 	if(PlayerInfo[i][pGunaSfaTime] > 0) { PlayerInfo[i][pGunaSfaTime] -= 1; }
	 	if(PlayerInfo[i][pGunFbiTime] > 0) { PlayerInfo[i][pGunFbiTime] -= 1; }
	 	if(PlayerInfo[i][pGunLspdTime] > 0) { PlayerInfo[i][pGunLspdTime] -= 1; }
	 	if(PlayerInfo[i][pAdvertTime] > 0) { PlayerInfo[i][pAdvertTime] -= 1; }
		if(PlayerInfo[i][pPHousekey] != 255) { PlayerInfo[i][pFuelCar] = Fuell[caridhouse[i]]; }
		if(PlayerInfo[i][pPissTime] > 0) { PlayerInfo[i][pPissTime] -= 1; }
		if(PlayerInfo[i][pPissTime] == 600 || PlayerInfo[i][pPissTime] == 500 || PlayerInfo[i][pPissTime] == 400
		|| PlayerInfo[i][pPissTime] == 300 || PlayerInfo[i][pPissTime] == 200 || PlayerInfo[i][pPissTime] == 150
		|| PlayerInfo[i][pPissTime] == 100 || PlayerInfo[i][pPissTime] == 60 || PlayerInfo[i][pPissTime] == 40
		|| PlayerInfo[i][pPissTime] == 20)
		{
		    SendClientMessage(i,COLOR_WHITE,"{FFFF00}- Введите: /piss - чтобы справить нужду. Чтобы закончить: Enter");
            if(GetPlayerState(i)==PLAYER_STATE_ONFOOT) ApplyAnimation(i,"PED","Turn_L",4.1,1,1,1,1,1,1);
        }
        if(PlayerInfo[i][pPissTime] == 1)
		{
		    if(IsPlayerConnected(i))
		    {
		        SendClientMessage(i,COLOR_WHITE,"{FFFF00}- Введите: /piss - чтобы справить нужду. Чтобы закончить: Enter");
                if(GetPlayerState(i)==PLAYER_STATE_ONFOOT)
                {
                    ApplyAnimation(i,"PED","Turn_L",4.1,1,1,1,1,1,1);
                    pisstimer = SetTimer("PissTime", 20000, true);
				}
            }
        }
	}
	AFKProcessor();
	CheckArmour();
	CheckHealth();
	new hour, minute, second;
	gettime(hour, minute, second);
	new tmphour;
	new tmpminute;
	new tmpsecond;
	if(war > 0) war -=1;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
	    new string[36];
		format(string, sizeof(string), "Сейчас времени %d:00 часов",tmphour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			PlayerInfo[i][pPayDay]+= 1;
		}
		if(realtime) SetWorldTime(tmphour);
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    AntiCheatCheck(i);
		if(Works[i] == true && JobCP[i] == 2)
		{
			if(WithBag[i] == 1) Bags[i] += 1;
 		}
		if(clearanim[i] > 0) clearanim[i] --;
		if(hour >= 12 && minute == 10 && second == 0) startaddiction[i] = 1;
		DeletePVar(i, "NoAB");
		if(PlayerEx[i][VarEx] == 0)
		{
			if(clearanim[i] == 0) ApplyAnimation(i, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
		}
		if(GetPlayerMoney(i) != PlayerInfo[i][pCash])
		{
		    PlayerPlaySound(i,1150,0,0,0);
			ResetPlayerMoney(i);
			GivePlayerMoney(i,PlayerInfo[i][pCash]);
		}
		if(PlayerInfo[i][pSatiety] > 100)
		{
			PlayerInfo[i][pSatiety] = 100;
		}
		if(PlayerInfo[i][pSatiety] < 0)
		{
			PlayerInfo[i][pSatiety] = 0;
		}
		if(PlayerInfo[i][pMadWant] > 6)
		{
			PlayerInfo[i][pMadWant] = 6;
		}
		if(PlayerInfo[i][pMadWant] < 0)
		{
			PlayerInfo[i][pMadWant] = 0;
		}
		if(PlayerInfo[i][pLabiding] > 100)
		{
			PlayerInfo[i][pLabiding] = 100;
		}
		if(PlayerInfo[i][pLabiding] < 0)
		{
			PlayerInfo[i][pLabiding] = 0;
		}
		if(PlayerInfo[i][pMuteTime] > 0 && PlayerInfo[i][pMuted] == 1)
		{
			PlayerInfo[i][pMuteTime] -= 1;
			if(PlayerInfo[i][pMuteTime] == 0)
			{
	           	PlayerInfo[i][pMuted] = 0;
				SendClientMessage(i, COLOR_LIGHTRED, "Вам включили чат. Пожалуйста соблюдайте правила");
   			}
		}
		if(IsPlayerConnected(i))
	    {
			if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime] -= 1;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(i, 95.0636);
					}
  	 				else if(PlayerInfo[i][pJailed] == 2)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,-1607.1873,721.3649,12.2721);
						SetPlayerFacingAngle(i, 2.3026);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,2334.8467,2454.9456,14.9688);
						SetPlayerFacingAngle(i, 115.7874);
					}
					else if(PlayerInfo[i][pJailed] == 4)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000);
					    SetPlayerInterior(i, 0);
					    SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					PlayerInfo[i][pJailTime] = 0;
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_USE, "Вы заплатили свой долг обществу, теперь вы свободны");
				   	PlayerInfo[i][pMadWant] = 0;
				   	SetPlayerWantedLevel(i, 0);
					SetPlayerVirtualWorld(i, 0);
					GameTextForPlayer(i, "~g~Freedom", 5000, 1);
				}
			}
			if(BusStopTime[i] <= 11 && BusStopTime[i] >= 1)
			{
			    new string[21];
		    	BusStopTime[i]--;
		    	format(string,sizeof(string), "~n~~n~~b~%d", BusStopTime[i] - 1);
		    	GameTextForPlayer(i, string, 2000, 6);
			}
			if(BusStopTime[i] == 1)
			{
				if(AutoBusJob[i] == 1)
				{
				    if(BusStop[i] == 1)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_3;
						SetPlayerRaceCheckpoint(i, 0,1699.7222,-1163.1721,23.6563,1826.2285,-1183.2179,23.6299, 5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 2)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_10;
						SetPlayerRaceCheckpoint(i, 0,1818.7792,-1810.9220,13.4014,1818.8003,-1905.8124,13.3966, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 3)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_17;
						SetPlayerRaceCheckpoint(i, 0,1958.7772,-2098.0173,13.3902,1975.8633,-2112.3513,13.3710, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 4)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_22;
						SetPlayerRaceCheckpoint(i, 0,2225.3228,-2197.1875,13.3153,2279.2666,-2249.0049,13.5683, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 5)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_38;
						SetPlayerRaceCheckpoint(i, 0,2645.8472,-1747.4325,10.7239,2629.5608,-1730.1902,10.9159, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 6)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_43;
						SetPlayerRaceCheckpoint(i, 0,2233.0347,-1729.6084,13.3828,2188.5439,-1733.7574,13.3750, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 7)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
     					pAutoBusLS[i] = CHECKPOINT_48;
						SetPlayerRaceCheckpoint(i, 0,1922.9449,-1749.2015,13.3828,1834.8926,-1750.2449,13.3828, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 8)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
				    	pAutoBusLS[i] = CHECKPOINT_55;
						SetPlayerRaceCheckpoint(i, 0,1454.6294,-1729.9337,13.3828,1408.9320,-1729.8221,13.3906, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 9)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_57;
						SetPlayerRaceCheckpoint(i, 0,1350.8334,-1730.2009,13.3828,1326.1938,-1729.8999,13.5369, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 10)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
   						pAutoBusLS[i] = CHECKPOINT_64;
						SetPlayerRaceCheckpoint(i, 0,1182.2383,-1759.4034,13.3984,1181.7429,-1725.9309,13.4632, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 11)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_76;
						SetPlayerRaceCheckpoint(i, 0,1207.7404,-1344.1509,13.3999,1206.4561,-1294.2214,13.3820, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 12)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_87;
						SetPlayerRaceCheckpoint(i, 0,1032.5784,-1782.5796,13.5448,1026.9589,-1796.0031,13.6907, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 13)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_93;
						SetPlayerRaceCheckpoint(i,0,487.6268,-1707.2123,11.6351,376.4385,-1699.2418,7.3431,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 14)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_103;
						SetPlayerRaceCheckpoint(i,0,-140.6316,-1421.6285,2.6953,-148.6244,-1341.1152,2.6953,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 15)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_106;
						SetPlayerRaceCheckpoint(i,0,-108.7763,-1160.4513,2.2504,-80.1806,-1089.7332,7.2398,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 16)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_146;
						SetPlayerRaceCheckpoint(i,0,-2025.3568,-73.3334,35.1719,-1991.2076,-72.1619,33.9390,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 17)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_207;
						SetPlayerRaceCheckpoint(i,0,1131.5461,-1714.0148,13.5124,1168.3724,-1714.2424,13.6931,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 18)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLS[i] = CHECKPOINT_222;
						SetPlayerRaceCheckpoint(i,0,1631.0093,-1163.5320,23.8947,1636.5211,-1139.4545,23.9063,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
    			}
    			if(AutoBusJob[i] == 2)
				{
				    if(BusStop[i] == 1)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_2;
						SetPlayerRaceCheckpoint(i, 0,-1991.6980,135.4355,27.1006,-1995.1545,183.7995,27.0891, 5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 2)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_11;
						SetPlayerRaceCheckpoint(i, 0,-1626.1046,419.1978,6.5933,-1557.3323,536.0574,6.5949, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 3)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_17;
						SetPlayerRaceCheckpoint(i, 0,-1611.6682,1231.7312,6.6094,-1737.4580,1354.6034,6.6026, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 4)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_22;
						SetPlayerRaceCheckpoint(i, 0,-2602.1038,1334.7786,6.5967,-2712.8115,1294.0096,6.6132, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 5)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_30;
						SetPlayerRaceCheckpoint(i, 0,-2643.0701,560.2437,14.0320,-2609.7512,541.7668,14.0448, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 6)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusSF[i] = CHECKPOINT_34;
						SetPlayerRaceCheckpoint(i, 0,-2752.8147,380.4068,3.6855,-2725.8572,334.0807,3.7410, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 7)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
     					pAutoBusSF[i] = CHECKPOINT_47;
						SetPlayerRaceCheckpoint(i, 0,-2109.8052,-547.9105,32.8555,-1954.4362,-583.7670,24.0175, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 8)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
				    	pAutoBusSF[i] = CHECKPOINT_55;
						SetPlayerRaceCheckpoint(i, 0,-2004.1715,-47.3372,34.7261,-2003.1067,81.8387,27.1051, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
				}
				if(AutoBusJob[i] == 3)
				{
				    if(BusStop[i] == 1)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_3;
						SetPlayerRaceCheckpoint(i, 0,2827.2673,1287.0476,10.3804,2828.8628,1380.1879,10.3639, 5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 2)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_11;
						SetPlayerRaceCheckpoint(i, 0,2204.2114,1375.5630,10.2840,2086.9465,1375.3234,10.2840, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 3)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_16;
						SetPlayerRaceCheckpoint(i, 0,2074.7043,1689.3260,10.2839,2114.3967,1792.6563,10.2840, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 4)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_22;
						SetPlayerRaceCheckpoint(i, 0,2229.6680,2434.6697,10.2840,2228.9421,2499.6650,10.2839, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 5)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_28;
						SetPlayerRaceCheckpoint(i, 0,2230.0378,2740.6116,10.2839,2197.9922,2776.2000,10.2840, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 6)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_40;
						SetPlayerRaceCheckpoint(i, 0,1444.5378,2675.7119,10.2840,1409.9070,2697.7488,10.3798, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 7)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
     					pAutoBusLV[i] = CHECKPOINT_52;
						SetPlayerRaceCheckpoint(i, 0,1654.7103,2270.6260,10.2840,1711.2433,2271.6030,10.2840, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 8)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
				    	pAutoBusLV[i] = CHECKPOINT_59;
						SetPlayerRaceCheckpoint(i, 0,1619.0281,1876.2834,10.2840,1502.9625,1875.4736,10.2840, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 9)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_66;
						SetPlayerRaceCheckpoint(i, 0,1060.8735,1730.4946,10.4324,1069.7362,1759.8049,10.4324, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 10)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
   						pAutoBusLV[i] = CHECKPOINT_74;
						SetPlayerRaceCheckpoint(i, 0,1644.7585,1852.9585,10.2878,1645.2117,1728.0068,10.2839, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 11)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_79;
						SetPlayerRaceCheckpoint(i, 0,1728.9796,1529.7086,10.2803,1710.9683,1412.2664,10.1081, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 12)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_86;
						SetPlayerRaceCheckpoint(i, 0,2039.5966,1028.4305,10.2840,2044.6298,984.1657,10.2768, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 13)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_89;
						SetPlayerRaceCheckpoint(i,0,2175.7395,970.8600,10.3244,2331.0356,970.7445,10.2840,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 14)
				    {
				    	BusStopTime[i] = 0;
				    	BusStop[i] = 0;
						pAutoBusLV[i] = CHECKPOINT_95;
						SetPlayerRaceCheckpoint(i,0,2609.3452,1207.6649,10.2839,2612.6018,1248.3743,10.3624,5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
			    }
			}
			if(TrainStopTime[i] <= 31 && TrainStopTime[i] >= 1)
			{
				new string[21];
		    	TrainStopTime[i]--;
		    	format(string,sizeof(string), "~n~~n~~b~%d", TrainStopTime[i] - 1);
		    	GameTextForPlayer(i, string, 2000, 6);
			}
			if(TrainStopTime[i] == 1)
			{
				if(TrainJob[i] == 1)
				{
				    if(BusStop[i] == 1)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_2;
						SetPlayerRaceCheckpoint(i, 1,2864.7500,1321.6504,12.1256,1746.2073,2664.7842,12.1256, 5.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
	    			if(BusStop[i] == 2)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_4;
						SetPlayerRaceCheckpoint(i, 1,1396.5754,2632.2500,12.1256,742.6328,1755.4784,7.1046, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
  					if(BusStop[i] == 3)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_6;
						SetPlayerRaceCheckpoint(i, 1,580.4129,1272.4216,13.2034,-1610.2450,505.2649,28.6208, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 4)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_8;
						SetPlayerRaceCheckpoint(i, 1,-1944.3750,99.7487,27.0006,512.1183,-1140.7336,10.5256, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 5)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_10;
						SetPlayerRaceCheckpoint(i, 1,842.1416,-1391.7030,-0.2006,1288.4905,-1882.5579,-0.8676, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
					if(BusStop[i] == 6)
				    {
				    	TrainStopTime[i] = 0;
				    	BusStop[i] = 0;
						pTrain[i] = CHECKPOINT_12;
						SetPlayerRaceCheckpoint(i, 1,1773.6536,-1953.8021,14.8756,2764.7500,879.0110,12.2506, 7.0);
						SendClientMessage(i, COLOR_GREEN, "Вы можете ехать дальше");
					}
				}
			}
			if(JobCarTime[i] <= 16 && JobCarTime[i] >= 1)
			{
			    new string[15];
		    	JobCarTime[i]--;
		    	format(string,sizeof(string), "~r~%d",JobCarTime[i]);
		    	GameTextForPlayer(i, string, 2000, 6);
			}
			if(JobCarTime[i] == 1)
			{
				if(AutoBusJob[i] >= 1)
				{
				    new string[60];
					PlayerInfo[i][pZp] += AutoBusCheck[i] *(32 + random(2));
					format(string, sizeof(string), "Вы закончили свой рабочий день. Заработано %d вирт", AutoBusCheck[i] *(32 + random(2)));
					SendClientMessage(i, 0x26BF99AA, string);
					SendClientMessage(i, COLOR_WHITE, "Деньги будут перечислены на ваш счёт во время ближайшей зарплаты");
					Delete3DTextLabel(fare3dtext[i]);
					AutoBusJob[i] = 0;
					AutoBusCheck[i] = 0;
					AutoBusMoney[i] = 0;
					DisablePlayerRaceCheckpoint(i);
				}
				if(PlayerInfo[i][pJob] == 11)
				{
				    new string[60];
					MusorCheck[i] = 0;
					DisablePlayerRaceCheckpoint(i);
					new zarplata2 = 0 + random(500);
                    format(string, sizeof(string), "Вы закончили свой рабочий день. Заработано %d вирт", zarplata2);
					SendClientMessage(i, 0x26BF99AA, string);
					SendClientMessage(i, COLOR_WHITE, "Деньги будут перечислены на ваш счёт во время ближайшей зарплаты");
                    PlayerInfo[i][pZp] += zarplata2;
                    MusorJob[i] = 0;
				}
				if(PlayerInfo[i][pJob] == 12)
				{
				    new string[60];
					PlayerInfo[i][pZp] += AutoBusCheck[i] *(32 + random(2));
					format(string, sizeof(string), "Вы закончили свой рабочий день. Заработано %d вирт", AutoBusCheck[i] *(32 + random(2)));
					SendClientMessage(i, 0x26BF99AA, string);
					SendClientMessage(i, COLOR_WHITE, "Деньги будут перечислены на ваш счёт во время зарплаты");
					Delete3DTextLabel(fare3dtext[i]);
					TrainJob[i] = 0;
					AutoBusCheck[i] = 0;
					AutoBusMoney[i] = 0;
					DisablePlayerRaceCheckpoint(i);
					SetVehicleToRespawn(train[0]);
				}
				if(Playermoto[i] != 0)
				{
					if(!IsPlayerInAnyVehicle(i))
					{
			            RaceCP[i] = 0;
			            DisablePlayerCheckpoint(i);
				    	DestroyVehicle(GetPlayerVehicleID(i));
		            	motochet[i] = 0;
		            	SendClientMessage(i, COLOR_WHITE, "Вы были дисквалифицированы за потерю транспорта");
	                	SetPlayerInterior(i, 0);
		            	SetPlayerPos(i,2690.2271,-1700.9700,10.4215);
	                	SetPlayerFacingAngle(i, 45.9013);
			        	Playermoto[i] = 0;
        	    	}
				}
			}
			if(TieTime[i] > 0)
			{
				TieTime[i]--;
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] > 0)
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			    if(PlayerCuffedTime[i] == 0)
			    {
					TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			}
			if(Playert[i] == 1)
			{
			    if(PlayertTime[i] > 0)
			    {
                    TogglePlayerControllable(i, 0);
			        PlayertTime[i] -= 1;
			    }
			    if(PlayertTime[i] == 0)
			    {
			        TogglePlayerControllable(i, 1);
			        ClearAnimations(i);
			        Playert[i] = 0;
			        PlayertTime[i] = 0;
			    }
			}
  		}
	}
	if(hour == 04 && minute == 48 && second == 00)
	{
		OOCOff(COLOR_REDD, "====Внимание! Рестарт сервера через 2 минуты!====");
	}
	else if(hour == 04 && minute == 50 && second == 00)
	{
		OOCOff(COLOR_REDD, "====Внимание! Происходит Рестарт сервера!====");
		GameModeExitFunc();
	}
	if(hour == 13 && minute == 10  || hour == 14 && minute == 10  || hour == 16 && minute == 10  || hour == 22 && minute == 10 )
	{
		if(PaintballRound == 1)
		{
			OOCOff(0xdc143cAA,"Внимание! Начало пейнтболла через 5 минут. Место проведения: Пляж Санта-Мария");
			SetTimer("StartPaintballtwo", 180000, 0);
			PaintballRound = 0;
		}
	}
	if(hour == 12 && minute == 10  || hour == 18 && minute == 10  || hour == 21 && minute == 10  || hour == 15 && minute == 10 || hour == 23 && minute == 10 )
	{
		if(EndingRaceRound == 1)
		{
			OOCOff(0xB9B900AA,"Внимание! Начало гонок через 5 минут. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
			EndingRaceRound = 0;
			SetTimer("StartRacetwo", 180000, 0);
		}
	}
	if(hour == 12 && minute == 30  || hour == 18 && minute == 30  || hour == 21 && minute == 30)
	{
		if(DerbyOpen == 0)
		{
			OOCOff(TEAM_GROVE_COLOR,"Внимание! Начало Demolition Derby через 5 минут. Регистрация: Стадион San Fierro");
			DerbyOpen = 1;
			SetTimer("DerbyTime", 120000, 0);
		}
	}
	if(hour == 12 && minute == 30  || hour == 18 && minute == 30  || hour == 21 && minute == 30  || hour == 12 && minute == 30 )
	{
		if(EndingmotoRound == 0)
		{
			OOCOff(0xc71585AA,"Внимание! Начало Мото - Гонок через 5 минут. Трасса: Стадион Лос Сантос. Регистрация на месте");
			EndingmotoRound = 0;
			SetTimer("MotoStartGonkatwo", 180000, 0);
		}
	}
	return true;
}
public SetPlayerUnjail()
{
	for(new b = 0; b < sizeof(GZInfo); b++)
	{
		if(GZSafeTime[b] > 0)
		{
			GZSafeTime[b] -= 1;
			if(GZSafeTime[b] <= 0)
			{
			    GZSafeTime[b] = 0;
			}
			if(GZSafeTime[b] == 60 || GZSafeTime[b] == 120)
			{
				new string[43];
				format(string,sizeof(string),"%d секунд | До захвата территории",GZSafeTime[b]);
				SendFamilyMessage(GZInfo[b][gNapad],COLOR_GREEN,string);
				SendFamilyMessage(GZInfo[b][gFrakVlad],COLOR_GREEN,string);
			}
		}
	}
	for(new b = 0; b < sizeof(FrakCD); b++)
	{
		if(FrakCD[b] > 0)
		{
			FrakCD[b] -= 1;
			if(FrakCD[b] <= 0)
			{
				SendFamilyMessage(b, -1, "Ваша банда снова может учавствовать в захвате зон");
				FrakCD[b] = 0;
			}
		}
	}
	for(new f = 0; f < 3; f++)
	{
		if(MZSafeTime[f] > 0)
		{
			MZSafeTime[f] -= 1;
			if(MZSafeTime[f] <= 0)
			{
			    MZSafeTime[f] = 0;
			}
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				if(MZSafeTime[f] == 600)
				{
					if(BizzInfo[h][bCapture] == 1)
					{
					    new string[128];
						format(string,sizeof(string),"У вас осталось 10 минут. Защита: %s. Бизнес: %s. Место встречи: Территория [ID 1]", GetMafiaName(BizzInfo[h][bMafia]), BizzInfo[h][bMessage]);
						SendFamilyMessage(MZInfo[f][mNapad],0x114D71AA,string);
					}
				}
				if(MZSafeTime[f] == 120)
				{
					if(BizzInfo[h][bCapture] == 1)
					{
					    new string[128];
						format(string,sizeof(string),"У вас есть ещё 2 минуты чтобы решить с %s, чей будет Бизнес: %s", GetMafiaName(BizzInfo[h][bMafia]), BizzInfo[h][bMessage]);
						SendFamilyMessage(MZInfo[f][mNapad],0x114D71AA,string);
					}
				}
			}
		}
	}
	for(new f = 0; f < sizeof(FrakCDm); f++)
	{
		if(FrakCDm[f] > 0)
		{
			FrakCDm[f] -= 1;
		    if(FrakCDm[f] <= 0)
		    {
				SendFamilyMessage(f, -1, "Ваша мафия может снова воевать за бизнесы");
				FrakCDm[f] = 0;
			}
		}
	}
}
stock ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[8];
		switch(PlayerInfo[targetid][pSex])
		{
		    case 1: atext = "Мужчина";
		    case 2: atext = "Женщина";
		}
		new ttext[20];
		switch(PlayerInfo[targetid][pMember])
		{
		    case 0: ttext = "Нет";
		    case 1: ttext = "LSPD";
		    case 2: ttext = "FBI";
		    case 3: ttext = "SF Army";
		    case 4: ttext = "МЧС SF";
		    case 5: ttext = "LCN";
		    case 6: ttext = "Yakuza";
		    case 7: ttext = "Мэрия";
		    case 8: ttext = "Casino Caligula";
		    case 9: ttext = "SF NEWS";
		    case 10: ttext = "SFPD";
		    case 11: ttext = "Инструкторы";
		    case 12: ttext = "The Ballas";
		    case 13: ttext = "Vagos Gang";
		    case 14: ttext = "Русская Мафия";
		    case 15: ttext = "Grove Street";
		    case 16: ttext = "LS NEWS";
		    case 17: ttext = "The Aztecas";
		    case 18: ttext = "The Rifa";
		    case 19: ttext = "Зона 51";
		    case 20: ttext = "LV NEWS";
		    case 21: ttext = "LVPD";
		    case 22: ttext = "МЧС LS";
		    case 23: ttext = "Sons of Silence MC";
		    case 24: ttext = "Hell's Angels MC";
		    case 25: ttext = "Outlaws MC";
		    case 26: ttext = "Warlocks MC";
		    case 27: ttext = "Highwaymen MC";
		    case 28: ttext = "Free Souls MC";
		    case 29: ttext = "Pagans MC";
		    case 30: ttext = "Mongols MC";
		    case 31: ttext = "Vagos MC";
		    case 32: ttext = "Bandidos MC";
		    case 33: ttext = "МЧС LV";
		    case 34: ttext = "Пожарное Депо SA";
		    case 35: ttext = "Наемники";
		}
        new rangz[20];
		switch(PlayerInfo[playerid][pMember])
		{
			case 0: rangz = "Нет";
		    case 1,10,21:
		    {
		        switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Кадет";
		            case 2: rangz = "Офицер";
		            case 3: rangz = "Мл.Сержант";
		            case 4: rangz = "Сержант";
		            case 5: rangz = "Ст.Сержант";
		            case 6: rangz = "Прапорщик";
		            case 7: rangz = "Ст.Прапорщик";
		            case 8: rangz = "Мл.Лейтенант";
		            case 9: rangz = "Лейтенант";
		            case 10: rangz = "Ст.Лейтенант";
		            case 11: rangz = "Капитан";
		            case 12: rangz = "Майор";
		            case 13: rangz = "Подполковник";
		            case 14: rangz = "Полковник";
		            case 15: rangz = "Шериф";
				}
			}
			case 2:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Стажёр";
		            case 2: rangz = "Агент";
		            case 3: rangz = "Старший агент";
		            case 4: rangz = "Специальный агент";
		            case 5: rangz = "Начальник секции";
		            case 6: rangz = "Инспектор";
		            case 7: rangz = "Зам.директора";
		            case 8: rangz = "Директор";
				}
			}
			case 3:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Юнга";
		            case 2: rangz = "Матрос";
		            case 3: rangz = "Ст.Матрос";
		            case 4: rangz = "Старшина";
		            case 5: rangz = "Гл.Старшина";
		            case 6: rangz = "Боцман";
		            case 7: rangz = "Прапорщик";
		            case 8: rangz = "Мичман";
		            case 9: rangz = "Ст.Мичман";
		            case 10: rangz = "Мл.Лейтенант";
		            case 11: rangz = "Лейтенант";
		            case 12: rangz = "Ст.Лейтенант";
		            case 13: rangz = "Капитан-лейтенант";
		            case 14: rangz = "Контр-адмирал";
		            case 15: rangz = "Вице-адмирал";
		            case 16: rangz = "Адмирал";
				}
			}
			case 4,22,33:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Практикант";
		            case 2: rangz = "Стажёр";
		            case 3: rangz = "Интерн";
		            case 4: rangz = "Санитар";
		            case 5: rangz = "Педиатр";
		            case 6: rangz = "Хирург";
		            case 7: rangz = "Зам.гл.врача";
		            case 8: rangz = "Глав.врач";
				}
			}
			case 5:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Новицио";
		            case 2: rangz = "Ассосиато";
		            case 3: rangz = "Сомбаттенте";
		            case 4: rangz = "Солдато";
		            case 5: rangz = "Боец";
		            case 6: rangz = "Сотто-Капо";
		            case 7: rangz = "Капо";
		            case 8: rangz = "Младший Босс";
		            case 9: rangz = "Консильери";
		            case 10: rangz = "Дон";
				}
			}
			case 6:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Вакасю";
		            case 2: rangz = "Кёдай";
		            case 3: rangz = "Сятейгасира";
		            case 4: rangz = "Вакагасира";
		            case 5: rangz = "Со-хобунтё";
		            case 6: rangz = "Камбу";
		            case 7: rangz = "Оядзи";
		            case 8: rangz = "Cайко комон";
		            case 9: rangz = "Оябун-кобун";
		            case 10: rangz = "Кумитё";
				}
			}
			case 7:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Секретарь";
		            case 2: rangz = "Водитель";
		            case 3: rangz = "Охранник";
		            case 4: rangz = "Начальник охраны";
		            case 5: rangz = "Адвокат";
		            case 6: rangz = "Прокурор";
		            case 7: rangz = "Мин.Культуры";
		            case 8: rangz = "Мин.Финансов";
		            case 9: rangz = "Зам.Губернатора";
		            case 10: rangz = "Губернатор";
				}
			}
			case 8:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Крупье";
		            case 2: rangz = "Менеджер";
				}
			}
			case 9,16,20:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Стажер";
		            case 2: rangz = "Фотограф";
		            case 3: rangz = "Папарацци";
		            case 4: rangz = "Журналист";
		            case 5: rangz = "Редактор";
		            case 6: rangz = "Главный редактор";
				}
			}
			case 11:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Стажёр";
		            case 2: rangz = "Экзаменатор";
		            case 3: rangz = "Инструктор";
		            case 4: rangz = "Кординатор";
		            case 5: rangz = "Мл.менеджер";
		            case 6: rangz = "Ст.менеджер";
		            case 7: rangz = "Директор";
		            case 8: rangz = "Управляющий";
				}
			}
			case 12:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Блайд";
		            case 2: rangz = "Смол Нига";
		            case 3: rangz = "Крэкер";
		            case 4: rangz = "Гун Брo";
		            case 5: rangz = "Ап Бро";
		            case 6: rangz = "Гангстер";
		            case 7: rangz = "Федерал Блок";
		            case 8: rangz = "Фолкс";
		            case 9: rangz = "Райч Нига";
		            case 10: rangz = "Биг Вилли";
				}
			}
			case 13:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Новато";
		            case 2: rangz = "Криминаль";
		            case 3: rangz = "Сольдадо";
		            case 4: rangz = "Эстимадо";
		            case 5: rangz = "Амиго";
		            case 6: rangz = "Асесино";
		            case 7: rangz = "Авторитарио";
		            case 8: rangz = "Асесор";
		            case 9: rangz = "Лидер V.E.G.";
		            case 10: rangz = "Падрино";
		            case 11: rangz = "Падре";
				}
			}
            case 14:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Шнырь";
		            case 2: rangz = "Фраер";
		            case 3: rangz = "Бык";
		            case 4: rangz = "Барыга";
		            case 5: rangz = "Блатной";
		            case 6: rangz = "Свояк";
		            case 7: rangz = "Браток";
		            case 8: rangz = "Вор";
		            case 9: rangz = "Вор в законе";
		            case 10: rangz = "Авторитет";
				}
			}
			case 15:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Плэйя";
		            case 2: rangz = "Хастла";
		            case 3: rangz = "Килла";
		            case 4: rangz = "Юонг";
		            case 5: rangz = "Гангста";
		            case 6: rangz = "О.Г.";
		            case 7: rangz = "Мобста";
		            case 8: rangz = "Де Кинг";
		            case 9: rangz = "Легенд";
		            case 10: rangz = "Мэд Дог";
				}
			}
			case 17:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Перро";
		            case 2: rangz = "Тирадор";
		            case 3: rangz = "Геттор";
		            case 4: rangz = "Лас Геррас";
		            case 5: rangz = "Мирандо";
		            case 6: rangz = "Сабио";
		            case 7: rangz = "Инвасор";
		            case 8: rangz = "Тесосеро";
		            case 9: rangz = "Нестро";
		            case 10: rangz = "Падре";
				}
			}
			case 18:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Новато";
		            case 2: rangz = "Ладрон";
		            case 3: rangz = "Амиго";
		            case 4: rangz = "Мачo";
		            case 5: rangz = "Джуниор";
		            case 6: rangz = "Эрмано";
		            case 7: rangz = "Бандидо";
		            case 8: rangz = "Ауторидад";
		            case 9: rangz = "Аджунто";
		            case 10: rangz = "Падре";
				}
			}
			case 19:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Рядовой";
		            case 2: rangz = "Ефрейтор";
		            case 3: rangz = "Мл.Сержант";
		            case 4: rangz = "Сержант";
		            case 5: rangz = "Ст.Сержант";
		            case 6: rangz = "Старшина";
		            case 7: rangz = "Прапорщик";
		            case 8: rangz = "Старший прапорщик";
		            case 9: rangz = "Мл.Лейтенант";
		            case 10: rangz = "Лейтенант";
		            case 11: rangz = "Ст.Лейтенант";
		            case 12: rangz = "Капитан";
		            case 13: rangz = "Майор";
		            case 14: rangz = "Подполковник";
		            case 15: rangz = "Полковник";
		            case 16: rangz = "Генерал";
				}
			}
			case 23..32:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Support";
		            case 2: rangz = "Hang Around";
		            case 3: rangz = "Prospect";
		            case 4: rangz = "Member";
		            case 5: rangz = "Road Captain";
		            case 6: rangz = "Sergeant-at-arms";
		            case 7: rangz = "Treasurer";
		            case 8: rangz = "Вице-Президент";
		            case 9: rangz = "Президент";
				}
			}
			case 34:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Стажёр";
		            case 2: rangz = "Пожарный 1 разряда";
		            case 3: rangz = "Пожарный 3 разряда";
		            case 4: rangz = "Пожарный 6 разряда";
		            case 5: rangz = "Специалист";
		            case 6: rangz = "Командир отряда";
		            case 7: rangz = "Зам.Начальника";
		            case 8: rangz = "Начальник Депо";
				}
			}
			case 35:
			{
			    switch(PlayerInfo[targetid][pRank])
		        {
		            case 1: rangz = "Помощник";
		            case 2: rangz = "Стажёр";
		            case 3: rangz = "Убийца";
		            case 4: rangz = "Киллер";
		            case 5: rangz = "Палач";
		            case 6: rangz = "Агент 47";
		            case 7: rangz = "Мл.Наставник";
		            case 8: rangz = "Наставник";
				}
			}
		}
		new jtext[20];
		switch(PlayerInfo[targetid][pJob])
		{
		    case 1: jtext = "Водитель автобуса";
		    case 2: jtext = "Механик";
		    case 3: jtext = "Продавец хотдогов";
		    case 4: jtext = "Таксист";
		    case 5: jtext = "Развозчик продуктов";
		    case 6: jtext = "Тренер";
		    case 7: jtext = "Прораб";
		    case 8: jtext = "Инкассатор";
		    case 9: jtext = "Детектив";
		    case 10: jtext = "Дальнобойщик";
		    case 11: jtext = "Мусоросборщик";
		    case 12: jtext = "Машинист";
		    default: jtext = "Безработный";
		}
  		new drank[15];
  		switch(PlayerInfo[targetid][pDonateRank])
  		{
  		    case 0: drank = "-";
  		    case 1: drank = "BRONZE VIP";
  		    case 2: drank = "SILVER VIP";
  		    case 3: drank = "GOLD VIP";
  		    case 4: drank = "PLATINUM VIP";
		}
		new status[20];
		switch(PlayerInfo[targetid][pLevel])
		{
		    case 0,1,2: status = "Новичок";
		    case 3,4: status = "Начинающий";
		    case 5..7: status = "Уверенный";
		    case 8..10: status = "Постоянный игрок";
		    case 11..19: status = "Освоившийся";
			default: status = "Дед";
		}
		new stringus[37];
 		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(targetid, sendername, sizeof(sendername));
  		format(stringus, sizeof(stringus), "%s.ini",sendername);
		new file = ini_openFile(stringus);
		if(file < 0) print("нет файла");
		else
		{
	  		ini_getString(file, "MarriedTo",stringus);
			ini_closeFile(file);
			if(PlayerInfo[targetid][pMarried] == 0)
			{
				stringus = "-";
			}
	        new cash = PlayerInfo[targetid][pCash];
			new wdeaths = PlayerInfo[targetid][pWantedDeaths];
			new drugs = PlayerInfo[targetid][pDrugs];
			new mats = PlayerInfo[targetid][pMaterials];
			new wanted = PlayerInfo[targetid][pMadWant];
			new level = PlayerInfo[targetid][pLevel];
			new exp = PlayerInfo[targetid][pExp];
			new chasov = PlayerInfo[targetid][pPayDayHad];
			new nxtlevel = PlayerInfo[targetid][pLevel]+1;
			new expamount = nxtlevel*levelexp;
			new pnumber = PlayerInfo[targetid][pPnumber];
			new warns = PlayerInfo[targetid][pWarns];
			new zakon = PlayerInfo[targetid][pLabiding];
			new addiction = PlayerInfo[targetid][pAddiction];
	 		new kills = PlayerInfo[targetid][pKills];
	 		new arrests = PlayerInfo[targetid][pArrested];
	 		new name[MAX_PLAYER_NAME];
	  		new rega[20];
	  		new string[37];
			GetPlayerName(targetid, name, sizeof(name));
			format(string,sizeof(string), "%s.ini",name);
			new File = ini_openFile(string);
			ini_getString(File, "pDataReg",rega);
			ini_closeFile(File);
			new playerip[30];
			GetPlayerIp(targetid, playerip, sizeof(playerip));
			new coordsstring[1000];
			new msg[] = "Имя:\t\t\t\t%s\n\nУровень:\t\t\t%d\nExp:\t\t\t\t%d/%d\nДеньги:\t\t\t%d\nТелефон:\t\t\t%d\nВарнов:\t\t\t%d\nЗаконопослушность:\t\t%d\nПреступлений:\t\t%d\nАрестов:\t\t\t%d\nСмертей в розыске:\t\t%d\nУровень розыска:\t\t%d\nДата регистрации:\t\t%s\nЧасов в игре:\t\t\t%d\nЗависимость:\t\t\t%d\nНаркотики:\t\t\t%d\nМатериалы:\t\t\t%d\n\nОрганизация:\t\t\t%s\nРанг:\t\t\t\t%s\nРабота:\t\t\t\t%s\nVIP:\t\t\t\t%s\nСтатус:\t\t\t\t%s\nЖена/Муж:\t\t\t%s\nПол:\t\t\t\t%s";
			format(coordsstring, 1000, msg, name,level,exp,expamount,cash,pnumber,warns,zakon,kills,arrests,wdeaths,wanted,rega,chasov,addiction,drugs,mats,ttext,rangz,jtext,drank,status,stringus,atext);
			ShowPlayerDialog(playerid,10004,DIALOG_STYLE_MSGBOX, "Статистика персонажа",coordsstring, "Готово", "");
		}
	}
}
stock SetPlayerToTeamColor(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case 0:	SetPlayerColor(playerid, TEAM_HIT_COLOR);
        case 1: SetPlayerColor(playerid, 0x110CE7FF);
       	case 2: SetPlayerColor(playerid, 0x313131AA);
       	case 3: SetPlayerColor(playerid, COLOR_GREEN);
       	case 4: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 5: SetPlayerColor(playerid, 0xDDA701FF);
       	case 6: SetPlayerColor(playerid, COLOR_REDD);
       	case 7: SetPlayerColor(playerid, 0x114D71FF);
       	case 8: SetPlayerColor(playerid, 0xB313E7FF);
       	case 9: SetPlayerColor(playerid, 0xFF830000);
       	case 10: SetPlayerColor(playerid, 0x49E789FF);
       	case 11: SetPlayerColor(playerid, 0x139BECFF);
       	case 12: SetPlayerColor(playerid, 0x8813E7FF);
       	case 13: SetPlayerColor(playerid, 0xDBD604AA);
       	case 14: SetPlayerColor(playerid, COLOR_GRAD1);
       	case 15: SetPlayerColor(playerid, 0x009F00AA);
       	case 16: SetPlayerColor(playerid, 0x40848BAA);
       	case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
       	case 18: SetPlayerColor(playerid, 0x83BFBFAA);
       	case 19: SetPlayerColor(playerid, COLOR_GREEN);
       	case 20: SetPlayerColor(playerid, 0xE6284EFF);
       	case 21: SetPlayerColor(playerid, 0x110CE7FF);
       	case 22: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 23: SetPlayerColor(playerid, 0x9ED201FF);
		case 24: SetPlayerColor(playerid, 0x56FB4EFF);
		case 25: SetPlayerColor(playerid, 0x49E789FF);
		case 26: SetPlayerColor(playerid, 0xF68F67FF);
		case 27: SetPlayerColor(playerid, 0xF45000FF);
		case 28: SetPlayerColor(playerid, 0xFFEE8AFF);
        case 29: SetPlayerColor(playerid, 0xBE8A01FF);
        case 30: SetPlayerColor(playerid, 0xE6284EFF);
        case 31: SetPlayerColor(playerid, 0xB30000FF);
        case 32: SetPlayerColor(playerid, 0xFF9DB6FF);
       	case 33: SetPlayerColor(playerid, 0xA52A2AFF);
       	case 34: SetPlayerColor(playerid, 0x571717FF);
	}
	return true;
}
stock GameModeExitFunc()
{
	KillTimer(UnJailTimer);
	KillTimer(AdvertiseTimerEx);
	KillTimer(FreshTimer);
	KillTimer(CountExTimer);
	KillTimer(OtherTimerEx);
	KillTimer(SaietyTimer);
	KillTimer(PickupTimer);
	KillTimer(ServerNameTimer);
	KillTimer(SpeedoTimer);
	KillTimer(GzCheckTimer);
	KillTimer(MzCheckTimer);
	KillTimer(timerfire);
	SaveServer();
	GameModeExit();
 	return true;
}
public OnGameModeExit()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    ConnectTimed[i] = 0;
	    IsConnected[i] = 0;
	}
	SaveServer();
    return true;
}
stock LoadBizz()
{
	new time = GetTickCount();
	new File: file = fopen("gamefiles/bizz.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
		    new arrCoords[32][64];
			new strFromFile2[256];
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			BizzInfo[idx][bVworld] = strval(arrCoords[2]);
			BizzInfo[idx][bType] = strval(arrCoords[3]);
			strmid(BizzInfo[idx][bMessage], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[6]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[7]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitPlaceX] = floatstr(arrCoords[9]);
			BizzInfo[idx][bExitPlaceY] = floatstr(arrCoords[10]);
			BizzInfo[idx][bExitPlaceZ] = floatstr(arrCoords[11]);
			BizzInfo[idx][bOutX] = floatstr(arrCoords[12]);
			BizzInfo[idx][bOutY] = floatstr(arrCoords[13]);
			BizzInfo[idx][bOutZ] = floatstr(arrCoords[14]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[15]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[16]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[17]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[18]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[19]);
 			BizzInfo[idx][bTill] = strval(arrCoords[20]);
  			BizzInfo[idx][bLocked] = strval(arrCoords[21]);
			BizzInfo[idx][bInterior] = strval(arrCoords[22]);
			BizzInfo[idx][bProducts] = strval(arrCoords[23]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[24]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[25]);
			BizzInfo[idx][b2Till] = strval(arrCoords[26]);
			BizzInfo[idx][bPrice] = strval(arrCoords[27]);
			BizzInfo[idx][bBarX] = floatstr(arrCoords[28]);
			BizzInfo[idx][bBarY] = floatstr(arrCoords[29]);
			BizzInfo[idx][bBarZ] = floatstr(arrCoords[30]);
			BizzInfo[idx][bMafia] = strval(arrCoords[31]);
			idx++;
		}
		fclose(file);
	}
	printf("[Загрузка бизнесов]: Было загружено - %d потрачено %d (ms)", sizeof(BizzInfo),GetTickCount() - time);
	return true;
}
stock LoadSBizz()
{
    new time = GetTickCount();
	new File: file = fopen("gamefiles/sbizz.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
		    new arrCoords[16][64];
			new strFromFile2[256];
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[3]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[6]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[7]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[8]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[9]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[10]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[11]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[12]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[13]);
			SBizzInfo[idx][s2bTill] = strval(arrCoords[14]);
			SBizzInfo[idx][sbMafia] = strval(arrCoords[15]);
			idx++;
		}
		fclose(file);
	}
	printf("[Загрузка бизнесов]: Было загружено - %d потрачено %d (ms)", sizeof(SBizzInfo),GetTickCount() - time);
	return true;
}
stock LoadFarm()
{
    new time = GetTickCount();
    new arrCoords[28][64];
    new strFromFile2[280];
    new File: file = fopen("gamefiles/ferm.cfg", io_read);
    if(file)
    {
        new idx;
        while (idx < sizeof(FermInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            FermInfo[idx][fOwned] = strval(arrCoords[0]);
            strmid(FermInfo[idx][fOwner], arrCoords[1], 0, strlen(arrCoords[1]), 25);
            FermInfo[idx][fProdukt] = strval(arrCoords[2]);
            FermInfo[idx][fMafia] = strval(arrCoords[3]);
            FermInfo[idx][fTill] = strval(arrCoords[4]);
            FermInfo[idx][fEntranceCost] = strval(arrCoords[5]);
            FermInfo[idx][fBuyPrice] = strval(arrCoords[6]);
            FermInfo[idx][fCenazerno] = strval(arrCoords[7]);
            FermInfo[idx][fzernoseiano] = strval(arrCoords[8]);
            FermInfo[idx][fcolichestvozerna] = strval(arrCoords[9]);
            FermInfo[idx][fcenaprod] = strval(arrCoords[10]);
            FermInfo[idx][fzernozakup] = strval(arrCoords[11]);
            strmid(FermInfo[idx][f1zams], arrCoords[12], 0, strlen(arrCoords[12]), 25);
            strmid(FermInfo[idx][f2zams], arrCoords[13], 0, strlen(arrCoords[13]), 25);
            strmid(FermInfo[idx][f3zams], arrCoords[14], 0, strlen(arrCoords[14]), 25);
            strmid(FermInfo[idx][f1fermers], arrCoords[15], 0, strlen(arrCoords[15]), 25);
            strmid(FermInfo[idx][f2fermers], arrCoords[16], 0, strlen(arrCoords[16]), 25);
            strmid(FermInfo[idx][f3fermers], arrCoords[17], 0, strlen(arrCoords[17]), 25);
            strmid(FermInfo[idx][f4fermers], arrCoords[18], 0, strlen(arrCoords[18]), 25);
            strmid(FermInfo[idx][f5fermers], arrCoords[19], 0, strlen(arrCoords[19]), 25);
            FermInfo[idx][fmestoX] = floatstr(arrCoords[20]);
            FermInfo[idx][fmestoY] = floatstr(arrCoords[21]);
            FermInfo[idx][fmestoZ] = floatstr(arrCoords[22]);
            FermInfo[idx][fidferm] = strval(arrCoords[23]);
            FermInfo[idx][frandoms] = strval(arrCoords[24]);
            FermInfo[idx][frandoms2] = strval(arrCoords[25]);
            FermInfo[idx][vnutricar] = strval(arrCoords[26]);
            FermInfo[idx][flock] = strval(arrCoords[27]);
            idx++;
        }
        fclose(file);
    }
    printf("[Загрузка ферм]: Было загружено - %d потрачено %d (ms)", sizeof(FermInfo), GetTickCount() - time);
    return true;
}
stock LoadAvto()
{
    new time = GetTickCount();
	new arrCoords[24][64];
	new strFromFile2[256];
	new File: file = fopen("gamefiles/avtomas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(AvtoInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			AvtoInfo[idx][abOwned] = strval(arrCoords[0]);
			strmid(AvtoInfo[idx][abOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(AvtoInfo[idx][abMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			AvtoInfo[idx][abEntranceX] = floatstr(arrCoords[3]);
			AvtoInfo[idx][abEntranceY] = floatstr(arrCoords[4]);
			AvtoInfo[idx][abEntranceZ] = floatstr(arrCoords[5]);
			AvtoInfo[idx][aExitX] = floatstr(arrCoords[6]);
			AvtoInfo[idx][aExitY] = floatstr(arrCoords[7]);
			AvtoInfo[idx][aExitZ] = floatstr(arrCoords[8]);
			AvtoInfo[idx][abBuyPrice] = strval(arrCoords[9]);
			AvtoInfo[idx][abWorld] = strval(arrCoords[10]);
			AvtoInfo[idx][abLocked] = strval(arrCoords[11]);
			AvtoInfo[idx][abInterior] = strval(arrCoords[12]);
			AvtoInfo[idx][abPrice] = strval(arrCoords[13]);
			AvtoInfo[idx][abArenda] = strval(arrCoords[14]);
			AvtoInfo[idx][abTill] = strval(arrCoords[15]);
			AvtoInfo[idx][picX] = floatstr(arrCoords[16]);
			AvtoInfo[idx][picY] = floatstr(arrCoords[17]);
			AvtoInfo[idx][picZ] = floatstr(arrCoords[18]);
			AvtoInfo[idx][abZp] = strval(arrCoords[19]);
			AvtoInfo[idx][Rab] = strval(arrCoords[20]);
			AvtoInfo[idx][Poset] = strval(arrCoords[21]);
			AvtoInfo[idx][Mesto] = strval(arrCoords[22]);
			idx++;
		}
		fclose(file);
	}
	printf("[Загрузка мастерских]: Было загружено - %d потрачено %d (ms)", sizeof(AvtoInfo), GetTickCount() - time);
	return true;
}
stock LoadProperty()
{
    new time = GetTickCount();
	new arrCoords[25][64];
	new strFromFile2[256];
	new File: file = fopen("gamefiles/property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			strmid(HouseInfo[idx][hOwner], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			HouseInfo[idx][hVworld] = strval(arrCoords[7]);
			HouseInfo[idx][hOint] = strval(arrCoords[8]);
			HouseInfo[idx][hValue] = strval(arrCoords[9]);
			HouseInfo[idx][hHel] = strval(arrCoords[10]);
			HouseInfo[idx][hInt] = strval(arrCoords[11]);
			HouseInfo[idx][hLock] = strval(arrCoords[12]);
			HouseInfo[idx][hOwned] = strval(arrCoords[13]);
			HouseInfo[idx][hTakings] = strval(arrCoords[14]);
			HouseInfo[idx][hVec] = strval(arrCoords[15]);
			HouseInfo[idx][hVcol1] = strval(arrCoords[16]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[17]);
			HouseInfo[idx][hKlass] = strval(arrCoords[18]);
			HouseInfo[idx][hVehSost] = strval(arrCoords[19]);
			HouseInfo[idx][hCarx] = floatstr(arrCoords[20]);
			HouseInfo[idx][hCary] = floatstr(arrCoords[21]);
			HouseInfo[idx][hCarz] = floatstr(arrCoords[22]);
			HouseInfo[idx][hCarc] = floatstr(arrCoords[23]);
			idx++;
		}
		fclose(file);
	}
	printf("[Загрузка домов]: Было загружено - %d потрачено %d (ms)", sizeof(HouseInfo), GetTickCount() - time);
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PlayerInfo[playerid][pAdmin] > 2)
	{
		if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
		{
		    marX = fX; marY = fY; marZ = fZ;
			ShowPlayerDialog(playerid,10226,DIALOG_STYLE_MSGBOX, "Телепорт по карте","Вы хотите телепортироваться на указанное расположение?", "Да", "Нет");
		}
		return true;
	}
	return true;
}
stock IsRpName(name[])
{
    new bool:allowUnderscore,bool:bigletter=true,wordsize;
    new countUnderscore,bool:bigAfterUnscr[3],bool:needUnderscore;
   	for(new i=0;i<strlen(name);i++)
    {
        if(bigletter)
        {
            switch(name[i])
            {
                 case 'A'..'Z':
                 {
                     if(countUnderscore > 0)
                     {
                         bigAfterUnscr[countUnderscore-1] = true;
                     }
                     bigletter=false; 
                     wordsize++;
                     continue;
                 }
                 case 'a'..'z': 
                 { 
                    if(countUnderscore > 0)
                    {
                        wordsize++;
                        if(wordsize == 2) { needUnderscore=true; allowUnderscore=true; bigletter=false; } 
                        //if(wordsize > 2) return 0; 
                    }
                    continue;
                 }
            }
            return false;
        }
        if(!bigletter)
        {
            switch(name[i])
            {
                case 'a'..'z':
                {
                    if(needUnderscore) return false; 
                    wordsize++;
                    if(wordsize >= 2) allowUnderscore=true; 
                    continue;
                }
				case '_':
                {
                    if(!allowUnderscore) return false; 
                    if(wordsize < 2) return false; 
                    needUnderscore=false;
                    bigletter=true;
                    countUnderscore++;
                    if(countUnderscore > 3) return false; 
                    wordsize=0;
                    continue;
               	}
				case '0'..'9':{ return false; }
            }
            return false;
        }
    }
    if(!bigAfterUnscr[0] && !bigAfterUnscr[1] && bigAfterUnscr[2]) return 1;
    if(!bigAfterUnscr[0] && bigAfterUnscr[1] && countUnderscore == 2) return 1; 
    if(bigAfterUnscr[0] && countUnderscore == 1) return 1; 
    return false;
}
stock IsPlayerAiming(playerid)
{
    new anim = GetPlayerAnimationIndex(playerid);
    if((anim == 1167) || (anim == 1365) || (anim == 1643) || (anim == 1453) || (anim == 220)) return true;
    return false;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
        if(index == 0)
        {
        	SendClientMessage(playerid, COLOR_GREEN, "Объект сохранён");
        	PlayerInfo[playerid][pHatX] = fOffsetX;
        	PlayerInfo[playerid][pHatY] = fOffsetY;
        	PlayerInfo[playerid][pHatZ] = fOffsetZ;
        	PlayerInfo[playerid][pHatRX] = fRotX;
        	PlayerInfo[playerid][pHatRY] = fRotY;
        	PlayerInfo[playerid][pHatRZ] = fRotZ;
		}
		if(index == 1)
        {
        	SendClientMessage(playerid, COLOR_GREEN, "Объект сохранён");
        	PlayerInfo[playerid][pGlassesX] = fOffsetX;
        	PlayerInfo[playerid][pGlassesY] = fOffsetY;
        	PlayerInfo[playerid][pGlassesZ] = fOffsetZ;
        	PlayerInfo[playerid][pGlassesRX] = fRotX;
        	PlayerInfo[playerid][pGlassesRY] = fRotY;
        	PlayerInfo[playerid][pGlassesRZ] = fRotZ;
		}
		if(index == 2)
        {
        	SendClientMessage(playerid, COLOR_GREEN, "Объект сохранён");
        	PlayerInfo[playerid][pMaskX] = fOffsetX;
        	PlayerInfo[playerid][pMaskY] = fOffsetY;
        	PlayerInfo[playerid][pMaskZ] = fOffsetZ;
        	PlayerInfo[playerid][pMaskRX] = fRotX;
        	PlayerInfo[playerid][pMaskRY] = fRotY;
        	PlayerInfo[playerid][pMaskRZ] = fRotZ;
		}
		if(index == 4)
        {
        	SendClientMessage(playerid, COLOR_GREEN, "Объект сохранён");
        	PlayerInfo[playerid][pOtherX] = fOffsetX;
        	PlayerInfo[playerid][pOtherY] = fOffsetY;
        	PlayerInfo[playerid][pOtherZ] = fOffsetZ;
        	PlayerInfo[playerid][pOtherRX] = fRotX;
        	PlayerInfo[playerid][pOtherRY] = fRotY;
        	PlayerInfo[playerid][pOtherRZ] = fRotZ;
		}
		if(index >= 5)
        {
        	SendClientMessage(playerid, COLOR_GREEN, "Объект сохранён");
			SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,Float:fScaleX,Float:fScaleY,Float:fScaleZ);
        	PlayerInfo[playerid][pOtherX] = fOffsetX;
        	PlayerInfo[playerid][pOtherY] = fOffsetY;
        	PlayerInfo[playerid][pOtherZ] = fOffsetZ;
        	PlayerInfo[playerid][pOtherRX] = fRotX;
        	PlayerInfo[playerid][pOtherRY] = fRotY;
        	PlayerInfo[playerid][pOtherRZ] = fRotZ;
		}
    }
    else
    {
        SendClientMessage(playerid, COLOR_RED, "Объект не сохранён.");
		SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,Float:fScaleX,Float:fScaleY,Float:fScaleZ);
    }
    return true;
}
public OnGameModeInit()
{
    for(new i=0;i<sizeof(PlayerIDs);i++){PlayerIDs[i] = -1;}
	UsePlayerPedAnims();//Анимация бега
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	LimitPlayerMarkerRadius(100.0);
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetNameTagDrawDistance(50.0);
	SetPDistance(30);
	SetGameModeText("NextAgeRP");
	AntiDeAMX2();
	AntiDeAMX();
	CreateVehicles();
	CreateLabels();
	CreateMapIcons();
	CreateObjects();
	CreatePickups();
	CreateTimers();
	CreateSpecialZone();
	LoadAvto();
	LoadBankMafia();
	LoadBankFrac();
	LoadBizz();
	LoadFarm();
	LoadProperty();
	LoadGZ();
	LoadKazino();
	LoadSBizz();
	LoadMaterials();
	timerfire = SetTimer("ActivateFire", 1200000, true);
	ManualVehicleEngineAndLights();
	Menu();
	salut[25] = -1;
	AdvertAtm = 0;
	addd[0] = 250;
	addd[1] = 250;
	addd[2] = 250;
	Furi[0][gBallas] = 0;
	Furi[0][gVagos] = 0;
	Furi[0][gGrove] = 0;
	Furi[0][gAztek] = 0;
	Furi[0][gRifa] = 0;
    Furi[0][gSsmc] = 0;
    Furi[0][gHamc] = 0;
    Furi[0][gOmc] = 0;
    Furi[0][gWmc] = 0;
    Furi[0][gHwmc] = 0;
    Furi[0][gFsmc] = 0;
    Furi[0][gPmc] = 0;
    Furi[0][gMmc] = 0;
    Furi[0][gVmc] = 0;
    Furi[0][gBmc] = 0;
    SetTimer("UpdateJailZone",5000,1);
    SetTimer("CheckCar",1000,1);
    SetTimer("Checkhpcar", 1000, true);
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	oglspd = CreateObject(19302, 246.27,72.59,1003.90,0.00,0.00,0.00);
	adplakat[0] = CreateObject(4238, 1538.5, -1609.8000488281, 26.0, 0.0000, 0.0000, 300.0, 300.0);
    adplakat[1] = CreateObject(7910,1415.30004883,-1719.90002441,33.79999924,0.00000000,0.00000000,137.50000000, 200); //object(s bank 1)  //37 ???????? ?? ??????
    adplakat[2] = CreateObject(7910,1716.40002441,-782.20001221,73.59999847,0.00000000,0.00000000,346.24707031, 200); //object(s daroga 4)
    adplakat[3] = CreateObject(7910,1623.09997559,820.70001221,27.50000000,0.00000000,0.00000000,238.00000000, 200); //object(s baza lcn)
    adplakat[4] = CreateObject(4238,1786.50000000,1476.00000000,26.10000038,0.00000000,0.00000000,32.00000000, 200); //object(b daroga)
    adplakat[5] = CreateObject(4238,356.39999390,-1718.09997559,26.60000038,0.00000000,0.00000000,300.00000000, 200); //object(b daroga)
    adplakat[6] = CreateObject(7910,1497.09997559,-945.00000000,54.09999847,0.00000000,0.00000000,112.99807739, 200); //object(s daroga)
    adplakat[7] = CreateObject(7910,1716.69995117,-778.29998779,73.59999847,0.00000000,0.00000000,180.75000000, 200); //object(s daroga 2)
    adplakat[8] = CreateObject(7910,1777.50000000,888.00000000,29.89999962,0.00000000,0.00000000,127.74780273, 200); //object(s chorraxa 2)
    adplakat[9] = CreateObject(7910,1854.59997559,-1487.69995117,25.79999924,0.00000000,0.00000000,180.00000000, 200); //object(s daroga 6)
    adplakat[10] = CreateObject(4238,1353.90002441,-1713.59997559,26.00000000,2.00000000,358.00000000,120.00000000, 200); //object(b bank)
    adplakat[11] = CreateObject(4238,734.50000000,-1102.19995117,33.39999771,0.00000000,0.00000000,180.25000000, 200); //object(b daroga)
    adplakat[12] = CreateObject(7910,1242.90002441,1089.80004883,27.60000038,0.00000000,0.00000000,159.74511719, 200); //object(vgwestbillbrd11) (14)
    adplakat[13] = CreateObject(7914,1415.50000000,-1719.69995117,34.00000000,0.00000000,0.00000000,137.96582031, 200); //object(bank black)
    adplakat[14] = CreateObject(7910,1408.90002441,-1408.09997559,33.59999847,0.00000000,0.00000000,262.25000000, 200); //object(s zig)
    adplakat[15] = CreateObject(7910,1412.59997559,-1724.19995117,33.79999924,0.00000000,0.00000000,331.99938965, 200); //object(s bank 1)
    adplakat[16] = CreateObject(7906,1412.69995117,-1724.19995117,33.50000000,0.00000000,0.00000000,331.99658203, 200); //object(bank white)
    adplakat[17] = CreateObject(7910,1863.50000000,-1450.69995117,31.70000076,0.00000000,0.00000000,38.24804688, 200); //object(s daroga 5)
    adplakat[18] = CreateObject(7910,1629.69995117,-839.00000000,76.99998474,0.00000000,0.00000000,132.25000000, 200); //object(s daroga)
    adplakat[19] = CreateObject(7909,219.80000305,-1434.30004883,31.00000000,0.00000000,0.00000000,0.25000000, 200); //object(s daroga 8)
    adplakat[20] = CreateObject(4238,704.00000000,-1115.59997559,32.20000076,0.00000000,0.00000000,5.00000000, 200); //object(billbrdlan_10) (3)
    adplakat[21] = CreateObject(7910,1673.09997559,-711.09997559,69.00000000,0.00000000,0.00000000,187.50000000, 200); //object(s daroga 3)
    adplakat[22] = CreateObject(7909,2066.80004883,-1790.30004883,28.00000000,0.00000000,0.00000000,90.50000000, 200); //object(s bandi)
    adplakat[23] = CreateObject(4238,1007.40002441,1314.59997559,30.79999924,0.00000000,0.00000000,29.25000000, 200); //object(b rm baza)
    adplakat[24] = CreateObject(7910,1240.90002441,1086.90002441,27.60000038,0.00000000,0.00000000,323.75000000, 200); //object(s daroga)
    adplakat[25] = CreateObject(7910,1493.59997559,-946.29998779,54.00000000,0.00000000,0.00000000,278.00000000, 200); //object(s 2 bank)
    adplakat[26] = CreateObject(4238,516.59997559,-1725.90002441,31.39999962,0.00000000,0.00000000,112.00000000, 200); //object(s daroga 7)
    adplakat[27] = CreateObject(4238,1786.90002441,1075.90002441,26.80000114,0.00000000,0.00000000,31.25000000, 200); //object(b daroga)
    adplakat[28] = CreateObject(4238,1805.09997559,-1691.50000000,30.79999924,0.00000000,0.00000000,175.25000000, 200); //object(b alhabra)
    adplakat[29] = CreateObject(4238,597.70001221,-1744.40002441,33.20000076,0.00000000,0.00000000,290.00000000, 200); //object(b daroga)
    adplakat[30] = CreateObject(7910,1775.00000000,885.29998779,29.90000153,0.00000000,0.00000000,324.00000000, 200); //object(s chorraxa)
    adplakat[31] = CreateObject(7909,1963.80004883,-1522.69995117,24.60000038,0.00000000,0.00000000,90.25000000, 200); //object(s daroga)
    adplakat[32] = CreateObject(7910,1628.69995117,-841.90002441,76.99998474,0.00000000,0.00000000,326.99792480, 200); //object(s daroga)
    adplakat[33] = CreateObject(7910,1861.59997559,-1448.00000000,31.70000076,0.00000000,0.00000000,233.00000000, 200); //object(s alhambra)
    adplakat[34] = CreateObject(4238,1565.30004883,-1722.50000000,31.19670486,0.00000000,0.00000000,34.75000000, 200); //object(b meria)
    adplakat[35] = CreateObject(7910,1627.09997559,819.50000000,27.50000000,0.00000000,0.00000000,73.49682617, 200); //object(s baza lcn 1)
    adplakat[36] = CreateObject(7910,1673.50000000,-714.09997559,68.99996948,0.00000000,0.00000000,22.24816895, 200); //object(s daroga 5)

    format(AdTxt[0][bAdTxt],64, "{FFA500}Здесь могла быть ваша\n{33AAFF}Р Е К Л А М А");
    format(AdTxt[1][bAdTxt],64, "{04B404}Здесь могла быть ваша\n{AA3333}Р Е К Л А М А");
    format(AdTxt[2][bAdTxt],64, "{FF0000}Здесь могла быть ваша\n{FF9900}Р Е К Л А М А");
    for (new i = 0; i < 3; i++)
    {
        adtext(AdTxt[i][bAdTxt], i);
    }
    new p = GetMaxPlayers();
	for(new i=0; i < p; i++)
    {
        SetPVarInt(i, "laser", 0);
        SetPVarInt(i, "color", 18643);
    }
	Maxis[0] = 0;
	Maxis[1] = 0;
	PlayerHaul[0][pLoad] = 0;
	PlayersHaul[0][sLoad] = 0;
	//==========================================================================
	Box = TextDrawCreate(533.000000, 393.000000, "____");
    TextDrawBackgroundColor(Box, 255);
    TextDrawFont(Box, 1);
    TextDrawLetterSize(Box, 1.309998, 4.499999);
    TextDrawColor(Box, -1);
    TextDrawSetOutline(Box, 0);
    TextDrawSetProportional(Box, 1);
    TextDrawSetShadow(Box, 1);
    TextDrawUseBox(Box, 1);
    TextDrawBoxColor(Box, COLOR_BOX);
    TextDrawTextSize(Box, 348.000000, 27.000000);
	//==========================================================================
	Clock = TextDrawCreate(32.000000,428.000000, "00:00");
    TextDrawLetterSize(Clock,0.5,1.0);
    TextDrawFont(Clock,3);
    TextDrawColor(Clock,0x28c6dbFF);
    TextDrawSetOutline(Clock,1);
    Date = TextDrawCreate(92.000000,428.000000, "26.06.2011");
    TextDrawLetterSize(Date,0.5,1.0);
    TextDrawFont(Date,3);
    TextDrawColor(Date,0x28c6dbFF);
    TextDrawSetOutline(Date,1);
    SetTimer("Inform", 10000, 1);
    SetTimer("WeatherChange", 1800000, 1);
	new File = ini_openFile("gamefiles/tax.ini");
	ini_getInteger(File,"Tax", GovTax);
	ini_closeFile(File);
	//==========================================================================
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	ghour = tmphour;
	SetWorldTime(tmphour);
	//==========================================================================
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	//==========================================================================
    for(new i = 1; i <MAX_VEHICLES;i++) VehicleHealth[i] = 1000;
	//==========================================================================
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	//==========================================================================
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],0.0000,0.0000,0.0000,0.0000,-1,-1,-1,-1,-1,-1);
	}
	//==========================================================================
	for(new v = 0; v < MAX_VEHICLES; v++)
 	{
        new Number[50];
        format(Number, sizeof(Number), "{000000}%d |SA",random(9999));
        SetVehicleNumberPlate(v, Number);
        Fuell[v] = 100;
  	}
	//==========================================================================
    for(new f = 0; f < sizeof(FermInfo); f++)
    {
        new string[65];
        new rand = 17+random(3);
        FermInfo[f][frandoms2] = rand;
        format(string, sizeof(string), "Цена зерна на продажу: {ffffff}%d", rand);
        Create3DTextLabel(string, COLOR_YELLOW,1640.7261,2318.2012,11.8203,15.0,0,0);
    }
    //==========================================================================
	for(new f = 0; f < sizeof(FermInfo); f++)
	{
	    new string[54];
		new rand2 = 3+random(2);
		FermInfo[f][frandoms] = rand2;
		format(string, sizeof(string), "Цена зерна: {ffffff}%d", rand2);
		Create3DTextLabel(string, COLOR_YELLOW,2192.3550,-2250.1377,15.0302,15.0,0,0);
	}
	//==========================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		ConnectTimed[i] = 0;
		IsConnected[i] = 0;
	}
 	//==========================================================================
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
	    new string[128];
		if(BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(19132, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
			AddStaticPickup(19132, 23, BizzInfo[h][bExitPlaceX], BizzInfo[h][bExitPlaceY], BizzInfo[h][bExitPlaceZ],BizzInfo[h][bVworld]);
			pickups ++;
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[h][bMessage], BizzInfo[h][bBuyPrice]);
			BizzInfo[h][bLabel] = Create3DTextLabel(string, 0xEAC700AA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],20.0,0,1);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(19132, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
			AddStaticPickup(19132, 23, BizzInfo[h][bExitPlaceX], BizzInfo[h][bExitPlaceY], BizzInfo[h][bExitPlaceZ],BizzInfo[h][bVworld]);
			pickups ++;
			format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[h][bMessage], BizzInfo[h][bOwner]);
			BizzInfo[h][bLabel] = Create3DTextLabel(string,0x00D900AA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],20.0,0,1);
		}
	}
	//==========================================================================
	for(new h = 0; h < sizeof(AvtoInfo); h++)
	{
		AvtoInfo[h][abLabel] = Create3DTextLabel("=================\nЗаказ\nтюнинга\n/buytune\n=================", COLOR_YELLOW,AvtoInfo[h][picX],AvtoInfo[h][picY],AvtoInfo[h][picZ],20.0,AvtoInfo[h][abWorld],1);
   		AvtoInfo[h][Rab] = 0;
   		AvtoInfo[h][Mesto] = 255;
		if(AvtoInfo[h][abOwned] == 0)
		{
			new string[135];
			AddStaticPickup(1318, 23, AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ]);
			format(string, sizeof(string), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Цена: {FFFFFF}%d\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[h][abMessage],AvtoInfo[h][abBuyPrice]);
			AvtoInfo[h][abLocked] = 1;
			AvtoInfo[h][abLabel] = Create3DTextLabel(string, 0xDDB201AA,AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ],20.0,0,1);
		}
		if(AvtoInfo[h][abOwned] == 1)
		{
		    new string[135];
			AddStaticPickup(1318, 23, AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ]);
			format(string, sizeof(string), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Владелец: {FFFFFF}%d\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[h][abMessage],AvtoInfo[h][abOwner]);
			AvtoInfo[h][abLabel] = Create3DTextLabel(string, TEAM_GROVE_COLOR,AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ],20.0,0,1);
		}
		CreateDynamicMapIcon(AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ], 27, 0);
	}
	//==========================================================================
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
	    new string[128];
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice]);
			SBizzInfo[h][sbLocked] = 1;
			SBizzInfo[h][sbLabel] = Create3DTextLabel(string, 0xEAC700AA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],20.0,0,1);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			format(string,sizeof(string), "%s\nВладелец:\n %s\nЦена бензина: %d вирт", SBizzInfo[h][sbMessage], SBizzInfo[h][sbOwner],SBizzInfo[h][sbPriceProd]);
			SBizzInfo[h][sbLabel] = Create3DTextLabel(string,0x00D900AA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],5.0,0,1);
		}
	}
	//==========================================================================
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	  	if(HouseInfo[h][hOwned] == 0)
		{
			HouseInfo[h][hPickup] = (1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
			pickups ++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hPickup] = CreatePickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
			pickups ++;
			HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
	    }
	}
	//==========================================================================
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		HelpCP[i] = CreateDynamicCP(304.1474,-194.0843,998.5016,1.5, -1, -1, i,10.0);
		HelpCP2[i] = CreateDynamicCP(1765.7438,-1909.7069,13.5695,1.5, -1, -1, i,10.0);
		CarLeasing[i] = CreateDynamicCP(-2026.6854,-114.3436,1035.1719,1.5, 1, 3, i,5.0);
	}
	return true;
}
stock SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerUpdateAc(i);
		}
	}
}
stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public PayDay()
{
	SaveBankMafia();
	LoadZp();
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(GZInfo[i][gFrakVlad] == 12) TotalGz[0]++;
		if(GZInfo[i][gFrakVlad] == 13) TotalGz[1]++;
		if(GZInfo[i][gFrakVlad] == 15) TotalGz[2]++;
		if(GZInfo[i][gFrakVlad] == 17) TotalGz[3]++;
		if(GZInfo[i][gFrakVlad] == 18) TotalGz[4]++;
	}
	FracBank[0][fBallas] += TotalGz[0]*30;
	FracBank[0][fVagos] += TotalGz[1]*30;
	FracBank[0][fGrove] += TotalGz[2]*30;
	FracBank[0][fAztek] += TotalGz[3]*30;
	FracBank[0][fRifa] += TotalGz[4]*30;
	FracBank[0][fKazna] += 200000;
	ClearTotalGz();
	SaveBankFrac();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hKlass] == 0 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid;
		}
		if(HouseInfo[h][hKlass] == 1 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid * 2;
		}
		if(HouseInfo[h][hKlass] == 2 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid * 2;
		}
		if(HouseInfo[h][hKlass] == 3 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid * 3;
		}
		if(HouseInfo[h][hKlass] == 4 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid * 3;
		}
		if(HouseInfo[h][hKlass] == 5 && HouseInfo[h][hOwned] == 1)
		{
			HouseInfo[h][hTakings] -= housepaid * 4;
		}
		if(HouseInfo[h][hTakings] <= 0 && HouseInfo[h][hOwned] == 1)
		{
			new housecash = HouseInfo[h][hValue];
			new string[37];
			format(string, sizeof(string), "%s.ini",HouseInfo[h][hOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "House", 255);
			ini_setInteger(File, "Housecash", housecash);
			ini_setInteger(File, "Text", 1);
			ini_closeFile(File);
			HouseInfo[h][hHel] = 0;
			HouseInfo[h][hLock] = 1;
			HouseInfo[h][hOwned] = 0;
			strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
		}
	}
	new NoRace[24];
	format(NoRace, 8,"Нет");
	new iniFile = ini_openFile("gamefiles/racelist.ini");
	ini_removeKey(iniFile, "1." );
	ini_setString(iniFile, "1. ",NoRace);
	ini_removeKey(iniFile, "2." );
	ini_setString(iniFile, "2. ",NoRace);
	ini_removeKey(iniFile, "3." );
	ini_setString(iniFile, "3. ",NoRace);
	ini_closeFile(iniFile);
	new NoDerby[24];
	format(NoDerby, 8,"Нет");
	new iniFilek = ini_openFile("gamefiles/derbylist.ini");
	ini_removeKey(iniFilek, "1." );
	ini_setString(iniFilek, "1. ", NoDerby);
	ini_removeKey(iniFilek, "2." );
	ini_setString(iniFilek, "2. ", NoDerby);
	ini_removeKey(iniFilek, "3." );
	ini_setString(iniFilek, "3. ", NoDerby);
	ini_removeKey(iniFilek, "4." );
	ini_setString(iniFilek, "4. ", NoDerby);
	ini_removeKey(iniFilek, "5." );
	ini_setString(iniFilek, "5. ", NoDerby);
	ini_removeKey(iniFilek, "6." );
	ini_setString(iniFilek, "6. ", NoDerby);
	ini_removeKey(iniFilek, "7." );
	ini_setString(iniFilek, "7. ", NoDerby);
	ini_removeKey(iniFilek, "8." );
	ini_setString(iniFilek, "8. ", NoDerby);
	ini_removeKey(iniFilek, "9." );
	ini_setString(iniFilek, "9. ", NoDerby);
	ini_removeKey(iniFilek, "10." );
	ini_setString(iniFilek, "10. ", NoDerby);
	ini_closeFile(iniFilek);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new house = PlayerInfo[i][pPHousekey];
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pLevel] > 0)
			{
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				new exp = PlayerInfo[i][pExp];
				new nxtlevel = PlayerInfo[i][pLevel]+1;
				new expamount = nxtlevel*levelexp;
				PlayerInfo[i][pTaxiExp] += taxiexpp[i];
				if(exp == expamount)
				{
					PlayerInfo[i][pLevel] += 1;
					PlayerInfo[i][pExp] = 0;
				}
				if(armmatbi < 0)
				{
					armmatbi = 0;
				}
				else if(armmatsf < 0)
				{
					armmatsf = 0;
				}
				if(PlayerInfo[i][pTaxiExp] == PlayerInfo[i][pTaxiLvl]+1*levelexp)
				{
					PlayerInfo[i][pTaxiLvl] += 1;
					PlayerInfo[i][pTaxiExp] = 0;
				}
				//===================[Кредиты]==================================
				if(PlayerInfo[i][pCredit] != 0)
				{
                    PlayerInfo[i][pCreditTime] += 1;
		            if(PlayerInfo[i][pCreditTime] >= PlayerInfo[i][pCreditMust])
					{
                        new taking = 0;
                        taking += PlayerInfo[i][pBank];
                        taking += PlayerInfo[i][pCash];
                        PlayerInfo[i][pBank] = 0;
                        PlayerInfo[i][pCash] = 0;
                        SetPlayerInterior(i,3);
		                SetPlayerPos(i,330.9899,154.7466,1014.1875);
		                SetPlayerFacingAngle(i, 271.2227);
		                SetPlayerCheckpoint(i,359.8466,184.7337,1008.3828,1.5);
		                SetPlayerVirtualWorld(i,0);
                        PicCP[i] = 2;
	                    SendClientMessage(i , COLOR_GREY, "Вас привели в мэрию судебные приставы");
                        SendClientMessage(i , COLOR_PURPLE, "Неизвестный_Полицейский вручил вам извещение и забрал деньги");
                        SendClientMessage(i , COLOR_LIGHTRED, "_____________________[Извещение Банка SA]_____________________");
						new sendername[MAX_PLAYER_NAME];
						new string[87];
						GetPlayerName(i,sendername, sizeof(sendername));
                        format(string, sizeof(string), "Сер(мэм) %s,мы изъяли все ваши деньги для оплаты кредита", sendername);
                        SendClientMessage(i , COLOR_LIGHTRED, string);
						if(taking < PlayerInfo[i][pCredit] && house != 255)
						{
	                		HouseInfo[house][hHel] = 0;
							HouseInfo[house][hLock] = 1;
							HouseInfo[house][hOwned] = 0;
							HouseInfo[house][hVec] = 0;
							DestroyVehicle(caridhouse[i]);
							strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
							SendClientMessage(i , COLOR_LIGHTRED, "Также мы забрали ваш дом,так как этих денег не хватило.");
							house = 255;
							if(taking < PlayerInfo[i][pCredit])
							{
                                PlayerInfo[i][pCredit] -= taking;
                                SendClientMessage(i , COLOR_LIGHTRED, "До того как кредит не будет полностью погашен,мы заморозим ваш счёт.");
                                SendClientMessage(i , COLOR_LIGHTRED, "Деньги поступающие на счёт будут погашать вашу задолжность.");
                                SendClientMessage(i , COLOR_LIGHTRED, "Желаем вам в скором времени погасить задолжность.Банк SA.");
                                PlayerInfo[i][pCreditMust] = -1;
						    }
						    else
                            {
                                format(string, sizeof(string), "В итоге ваша задолжность в размере %d вирт была погашена.", PlayerInfo[i][pCredit]);
                                SendClientMessage(i , COLOR_LIGHTRED, string);
                                taking -= PlayerInfo[i][pCredit];
                                FracBank[0][fKazna] += PlayerInfo[i][pCredit];
                                format(string, sizeof(string), "Остаток в размере %d вирт вы уже можете забрать в банке.", taking);
                                SendClientMessage(i , COLOR_LIGHTRED, string);
                                PlayerInfo[i][pCredit] = 0;
                                PlayerInfo[i][pCreditTime] = 0;
                                PlayerInfo[i][pCreditMust] = 0;
                                PlayerInfo[i][pHousecash] = taking;
							}
					    }
						if(taking < PlayerInfo[i][pCredit])
						{
                            PlayerInfo[i][pCredit] -= taking;
                            SendClientMessage(i , COLOR_LIGHTRED, "До того как кредит не будет полностью погашен,мы заморозим ваш счёт.");
                            SendClientMessage(i , COLOR_LIGHTRED, "Деньги поступающие на счёт будут погашать вашу задолжность.");
                            SendClientMessage(i , COLOR_LIGHTRED, "Желаем вам в скором времени погасить задолжность.Банк SA.");
                            PlayerInfo[i][pCreditMust] = -1;
		                }
                        else
					    {
                            format(string, sizeof(string), "В итоге ваша задолжность в размере %d вирт была погашена.", PlayerInfo[i][pCredit]);
                            SendClientMessage(i , COLOR_LIGHTRED, string);
                            taking -= PlayerInfo[i][pCredit];
                            FracBank[0][fKazna] += PlayerInfo[i][pCredit];
                            format(string, sizeof(string), "Остаток в размере %d вирт вы уже можете забрать в банке.", taking);
                            SendClientMessage(i , COLOR_LIGHTRED, string);
                            PlayerInfo[i][pCredit] = 0;
                            PlayerInfo[i][pCreditTime] = 0;
                            PlayerInfo[i][pCreditMust] = 0;
                            PlayerInfo[i][pHousecash] = taking;
						}
			        }
                }
				//===================[Вклады]===================================
				if(PlayerInfo[i][pDeposit] != 0)
				{
					PlayerInfo[i][pDepositTime] += 1;
				}
				//===================[Пенсия]===================================
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] >= 12 || PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] >= 5
				|| PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] >= 12 || PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] >= 6
				|| PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] >= 4  || PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] >= 12
				|| PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] >= 6 || PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] >= 12
				|| PlayerInfo[i][pMember] == 21 && PlayerInfo[i][pRank] >= 12 || PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] >= 6
				|| PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] >= 6 || PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] >= 4)
				{
				    PlayerInfo[i][pPension] += Pension;
				}
				//===================[Зарплата Казино Caligula]=================
				if(PlayerInfo[i][pMember] == 8)
				{
					PlayerInfo[i][pPayCheck] += PlayerInfo[i][pKazpay];
				}
				//====================[Зарплата LSNEWS]=========================
				//====================[Зарплата SFNEWS]=========================
				//====================[Зарплата LVNEWS]=========================
				//====================[Зарплата LCN]============================
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += 3500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += 4500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += 5500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += 6500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += 7500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += 8500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += 9500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += 10500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += 11500;
				}
				if(PlayerInfo[i][pMember] == 5 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += 12500;
                }
				//====================[Зарплата Yakuza]=========================
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += 3500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += 4500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += 5500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += 6500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += 7500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += 8500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += 9500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += 10500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += 11500;
				}
				if(PlayerInfo[i][pMember] == 6 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += 12500;
				}
				//=====================[Зарплата RM]============================
                if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
                if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += 3500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += 4500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += 5500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += 6500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += 7500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += 8500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += 9500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += 10500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += 11500;
				}
				if(PlayerInfo[i][pMember] == 14 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += 12500;
				}
				//==================[Зарплата LSPD]=============================
                if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 10;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 11;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 12;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 13;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 14;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 15;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 16;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 17;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 18;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 19;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 11)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 20;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 12)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 21;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 13)
				{
			 		PlayerInfo[i][pPayCheck] += fraczp[0] * 22;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 14)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 23;
				}
				if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pRank] == 15)
				{
					PlayerInfo[i][pPayCheck] += fraczp[0] * 24;
				}
				//===================[Зарплата SFPD]============================
                if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 10;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 11;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 12;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 13;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 14;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 15;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 16;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 17;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 18;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 19;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 11)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 20;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 12)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 21;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 13)
				{
			 		PlayerInfo[i][pPayCheck] += fraczp[9] * 22;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 14)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 23;
				}
				if(PlayerInfo[i][pMember] == 10 && PlayerInfo[i][pRank] == 15)
				{
					PlayerInfo[i][pPayCheck] += fraczp[9] * 24;
				}
				//=====================[Зарплата LVPD]==========================
                if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 10;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 11;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 12;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 13;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 14;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 15;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 16;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 17;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 18;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 19;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 11)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 20;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 12)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 21;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 13)
				{
			 		PlayerInfo[i][pPayCheck] += fraczp[15] * 22;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 14)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 23;
				}
				if(PlayerInfo[i][pMember] == 24 && PlayerInfo[i][pRank] == 15)
				{
					PlayerInfo[i][pPayCheck] += fraczp[15] * 24;
				}
				//=====================[Зарплата FBI]===========================
                if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 8;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 10;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 15;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 19;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 23;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 26;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 29;
				}
				if(PlayerInfo[i][pMember] == 2 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[1] * 33;
				}
				//====================[Зарплата Army SF]========================
                if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
                if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 6;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 2)
				{
 					PlayerInfo[i][pPayCheck] += fraczp[2] * 7;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 8;
                }
                if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 4)
                {
					PlayerInfo[i][pPayCheck] += fraczp[2] * 9;
                }
                if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 5)
                {
					PlayerInfo[i][pPayCheck] += fraczp[2] * 10;
                }
                if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 6)
                {
					PlayerInfo[i][pPayCheck] += fraczp[2] * 11;
                }
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 12;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 13;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 14;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 15;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 11)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 16;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 12)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 17;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 13)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 18;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 14)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 19;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 15)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 20;
				}
				if(PlayerInfo[i][pMember] == 3 && PlayerInfo[i][pRank] == 16)
				{
					PlayerInfo[i][pPayCheck] += fraczp[2] * 21;
				}
				if(PlayerInfo[i][pMember] == 3 && lsamatbi >= 15000)
				{
					PlayerInfo[i][pPayCheck] += 5000;
				}
				//====================[Зарплата LVA]============================
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] = 0;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 6;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 7;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 8;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 9;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 10;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 11;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 12;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 13;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 9)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 14;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 10)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 15;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 11)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 16;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 12)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 17;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 13)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 18;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 14)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 19;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 15)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 20;
				}
				if(PlayerInfo[i][pMember] == 19 && PlayerInfo[i][pRank] == 16)
				{
					PlayerInfo[i][pPayCheck] += fraczp[13] * 21;
				}
				if(PlayerInfo[i][pMember] == 19 && lsamatbi >= 15000)
				{
					PlayerInfo[i][pPayCheck] += 5000;
				}
				//===================[Зарплата Goverment]=======================
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += 3000;
				}
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += 8000;
				}
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += 12000;
				}
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += 23000;
				}
				if(PlayerInfo[i][pMember] == 7 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += 35000;
				}
				//=================[Зарплата Medics LS]=========================
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 7;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 8;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 11;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 12;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 15;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 16;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 19;
				}
				if(PlayerInfo[i][pMember] == 22 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[16] * 20;
				}
				//==================[Зарплата Medics SF]========================
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 7;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 8;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 11;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 12;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 15;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 16;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 19;
				}
				if(PlayerInfo[i][pMember] == 4 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[3] * 20;
				}
				//=================[Зарплата Medics LV]=========================
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 7;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 8;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 11;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 12;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 15;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 16;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 19;
				}
				if(PlayerInfo[i][pMember] == 33 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[17] * 20;
				}
				//=================[Зарплата FireFighters]=========================
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] += 0;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 1)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 7;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 2)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 8;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 3)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 11;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 4)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 12;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 5)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 15;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 6)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 16;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 7)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 19;
				}
				if(PlayerInfo[i][pMember] == 34 && PlayerInfo[i][pRank] == 8)
				{
					PlayerInfo[i][pPayCheck] += fraczp[18] * 20;
				}
				//=====================[Зарплата Licensers]=====================
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 0)
                {
                	PlayerInfo[i][pPayCheck] += 0;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 1)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 2;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 2)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 3;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 3)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 4;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 4)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 5;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 5)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 6;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 6)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 7;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 7)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 8;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 8)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 9;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 9)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 10;
                }
                if(PlayerInfo[i][pMember] == 11 && PlayerInfo[i][pRank] == 10)
                {
                	PlayerInfo[i][pPayCheck] += fraczp[10] * 11;
				}
				//==============================================================
				if(PlayerInfo[i][pMember] == 0 && PlayerInfo[i][pRank] == 0)
				{
					PlayerInfo[i][pPayCheck] = 0;
				}
				if(PlayerInfo[i][pMember] != 0)
				{
					if(FracBank[0][fKazna] <= 0)
					{
						PlayerInfo[i][pPayCheck] = 0;
						SendClientMessage(i, COLOR_GREY, "Казна государства пуста, зарплаты нет");
					}
				}
				if(PlayerInfo[i][pMember] == 3)
				{
	     			if(armmatbi <= 0)
	                {
	                	PlayerInfo[i][pPayCheck] = 0;
	                	SendClientMessage(i, COLOR_GREY, "Склад Армии LV пуст");
	                }
				}
				if(PlayerInfo[i][pMember] == 19)
				{
					if(armmatsf <= 0)
					{
						PlayerInfo[i][pPayCheck] = 0;
						SendClientMessage(i, COLOR_GREY, "Склад Армии SF пуст");
					}
				}
				PlayerInfo[i][pExp]++;
				PlayerPlayMusic(i);
				new checks = PlayerInfo[i][pPayCheck];
				new Zp = PlayerInfo[i][pZp];
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					GameTextForPlayer(i, "~h~PayDay", 5000, 1);
				}
				else
				{
					GameTextForPlayer(i, "~w~PayDay", 5000, 1);
				}
				if(PlayerInfo[i][pJob] == 1 && PlayerInfo[i][pMember] == 0)
				{
					PlayerInfo[i][pPayCheck] += AutoBusCheck[i];
					AutoBusCheck[i] = 0;
				}
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					SendClientMessage(i, COLOR_NEWS, "--------===[ VIP КЛИЕНТ БАНКА SA ]===-------");
				}
				else
				{
					SendClientMessage(i, COLOR_GRAD1, "--------===[ КЛИЕНТ БАНКА SA ]===-------");
				}
				new string[50];
				if(!NoTax(i))
				{
					format(string, sizeof(string), "***** Налог государству: -%d вирт *****", GovTax);
					SendClientMessage(i, 0xFF8C37AA, string);
					PlayerInfo[i][pBank] -= GovTax;
					PlayerInfo[i][pLabiding] += 1;
					FracBank[0][fKazna] += GovTax;
				}
				if(PlayerInfo[i][pMafiaRoof] != 0)
				{
    				if(PlayerInfo[i][pBank] > 50)
    				{
    					PlayerInfo[i][pBank] -= 50;
    					PlayerInfo[i][pDebt] += 50;
    				}
    				if(PlayerInfo[i][pCash] > 50)
    				{
	    				PlayerInfo[i][pCash] -= 50;
	    				PlayerInfo[i][pDebt] += 50;
    				}
				}
				format(string, sizeof(string), " Счёт за телефон: -%d вирт", PlayerInfo[i][pMobile]);
				SendClientMessage(i, 0xFF8C37AA, string);
				PlayerInfo[i][pBank] -= PlayerInfo[i][pMobile];
				PlayerInfo[i][pMobile] = 0;
                SendClientMessage(i, 0xFF8C37AA, " ");
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), " Зарплата: %d вирт", checks + Zp);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				else
				{
					format(string, sizeof(string), " Зарплата: %d вирт", checks + Zp);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), " Пенсия: %d вирт", PlayerInfo[i][pPension]);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				else
				{
					format(string, sizeof(string), " Пенсия: %d вирт", PlayerInfo[i][pPension]);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				PlayerInfo[i][pBank] += PlayerInfo[i][pPension];
				PlayerInfo[i][pBank] += checks;
                if(PlayerInfo[i][pCreditMust] == -1 && PlayerInfo[i][pCredit] <= PlayerInfo[i][pBank])
                {
					PlayerInfo[i][pBank] -= PlayerInfo[i][pCredit];
					PlayerInfo[i][pCreditMust] = 0;
					PlayerInfo[i][pCredit] = 0;
					PlayerInfo[i][pCreditTime] = 0;
					format(string, sizeof(string), "Погашена задолжность,остаток: %d вирт", PlayerInfo[i][pBank]);
                    SendClientMessage(i, COLOR_WHITE, string);
				}
				if(PlayerInfo[i][pCreditMust] == -1 && PlayerInfo[i][pCredit] > PlayerInfo[i][pBank])
				{
				    PlayerInfo[i][pCredit] -= PlayerInfo[i][pBank];
				    PlayerInfo[i][pBank] = 0;
				    format(string, sizeof(string), "Осталось погасить: %d вирт", PlayerInfo[i][pCredit]);
                    SendClientMessage(i, COLOR_WHITE, string);
				}
                FracBank[0][fKazna] -= checks;
                FracBank[0][fKazna] -= PlayerInfo[i][pPension];
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					format(string, sizeof(string), " Текущий баланс: %d вирт", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_NEWS, string);
				}
				else
				{
					format(string, sizeof(string), " Текущий баланс: %d вирт", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				new bouse = PlayerInfo[i][pPBiskey];
				if(PlayerInfo[i][pPBiskey] != 255)
				{
					if(bouse < 200)
					{
						BizzInfo[bouse][bTill] -= bizpaid;
						BizzInfo[bouse][bTill] += BizzInfo[bouse][b2Till];
						BizzInfo[bouse][b2Till] = 0;
						if(BizzInfo[bouse][bMafia] != 0)
						{
		              		if(BizzInfo[bouse][bTill] > 5000)
							{
	  							BizzInfo[bouse][bTill] -= 1000;
			           			if(BizzInfo[bouse][bMafia] == 6)
			           			{
			           				MafiaBank[0][nYakuza] += 500;
			           			}
			 					if(BizzInfo[bouse][bMafia] == 14)
			           			{
			           				MafiaBank[0][nRm] += 500;
			           			}
			           			if(BizzInfo[bouse][bMafia] == 5)
			           			{
			           				MafiaBank[0][nLcn] += 500;
			           			}
							}
		 				}
						if(BizzInfo[bouse][bTill] <= 0)
						{
							BizzInfo[bouse][bOwned] = 0;
							strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
							strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
							SendClientMessage(i, 0xFF8C37AA, " Ваш бизнес был продан, за неуплату электроэнергии");
							BizzInfo[bouse][bTill] = 0;
							BizzInfo[bouse][b2Till] = 0;
							PlayerInfo[i][pPBiskey] = 255;
							new str[128];
							format(str, sizeof(str), "%s\nПродаётся\nЦена: %d", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
							Update3DTextLabelText(BizzInfo[bouse][bLabel], 0xEAC700AA, str);
						}
					}
					if(bouse >= 100)
					{
						if(SBizzInfo[bouse-100][sbMafia] != 0)
						{
		              		if(SBizzInfo[bouse-100][sbTill] > 5000)
							{
	  							SBizzInfo[bouse-100][sbTill] -= 1000;
			           			if(SBizzInfo[bouse-100][sbMafia] == 6)
			           			{
			           				MafiaBank[0][nYakuza] += 500;
			           			}
			 					if(SBizzInfo[bouse-100][sbMafia] == 14)
			           			{
			           				MafiaBank[0][nRm] += 500;
			           			}
			           			if(SBizzInfo[bouse-100][sbMafia] == 5)
			           			{
			           				MafiaBank[0][nLcn] += 500;
			           			}
							}
		 				}
						SBizzInfo[bouse-100][sbTill] -= sbizpaid;
						SBizzInfo[bouse-100][sbTill] += SBizzInfo[bouse-100][s2bTill];
						SBizzInfo[bouse-100][s2bTill] = 0;
						if(SBizzInfo[bouse-100][sbTill] <= 0)
						{
		   					SBizzInfo[bouse-100][sbLocked] = 1;
							SBizzInfo[bouse-100][sbOwned] = 0;
							strmid(SBizzInfo[bouse-100][sbOwner], "The State", 0, strlen("The State"), 255);
							SendClientMessage(i, 0xFF8C37AA, " Ваша бизнес был продан, за неуплату электроэнергии");
							SBizzInfo[bouse-100][sbTill] = 0;
							SBizzInfo[bouse-100][s2bTill] = 0;
							PlayerInfo[i][pPBiskey] = 255;
							new str[128];
							format(str, sizeof(str), "%s\nПродаётся\nЦена: %d", SBizzInfo[bouse-100][sbMessage],SBizzInfo[bouse-100][sbBuyPrice]);
							Update3DTextLabelText(SBizzInfo[bouse-100][sbLabel], 0xEAC700AA, str);
						}
					}
				}
				if(PlayerInfo[i][pAutoMast] != 255)
				{
					new avtos = PlayerInfo[i][pAutoMast];
					AvtoInfo[avtos][abArenda] -= workshoppaid;
					if(AvtoInfo[avtos][abArenda] <=0)
					{
						SendClientMessage(i, 0xFF8C37AA, " Ваша мастерская была продана, за неуплату аренды помещения, деньги со счёта переведены в банк");
						AvtoInfo[avtos][abLocked] = 1;
						PlayerInfo[i][pBank] += AvtoInfo[avtos][abTill];
						AvtoInfo[avtos][abOwned] = 0;
						AvtoInfo[avtos][abTill] = 0;
						AvtoInfo[avtos][abZp] = 100;
						AvtoInfo[avtos][Rab] = 0;
						if(MehJob[i] == avtos)
						{
							MehJob[i] = 999;
						}
						strmid(AvtoInfo[avtos][abOwner], "The State", 0, strlen("The State"), 255);
						PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
						PlayerInfo[i][pAutoMast] = 255;
						PlayerInfo[i][pBank] += 255;
						PlayerInfo[i][pCash] += AvtoInfo[avtos][abArenda];
						new str[128];
						format(str, sizeof(str), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Цена: {FFFFFF}%d\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[avtos][abMessage],AvtoInfo[avtos][abBuyPrice]);
						Update3DTextLabelText(AvtoInfo[avtos][abLabel], COLOR_YELLOW, str);
						OnPropUpdate();
						OnPlayerUpdateAc(i);
					}
				}
				if(PlayerInfo[i][pPHousekey] != 255)
				{
					if(HouseInfo[house][hTakings] <= 0)
					{
						new playerid;
						PlayerInfo[i][pText] = 1;
						PlayerInfo[i][pHousecash] = HouseInfo[house][hValue];
						HouseInfo[house][hHel] = 0;
						HouseInfo[house][hLock] = 1;
						HouseInfo[house][hOwned] = 0;
						HouseInfo[house][hVec] = 0;
						HouseInfo[house][hVcol1] = -1;
						HouseInfo[house][hVcol2] = -1;
						DestroyVehicle(caridhouse[playerid]);
						strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
						SendClientMessage(i, 0xFF8C37AA, " Вы были выселены. Деньги за дом вы можете получить в банке \"/gethousemoney\"");
						HouseInfo[house][hTakings] = 0;
						PlayerInfo[i][pPHousekey] = 255;
					}
					else
					{
					    if(PlayerInfo[i][pDonateRank] >= 1)
                        {
                            if(HouseInfo[house][hKlass] == 0)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
							else if(HouseInfo[house][hKlass] == 1)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid*2);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
							else if(HouseInfo[house][hKlass] == 2)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid*3);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
							else if(HouseInfo[house][hKlass] == 3)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid*4);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
							else if(HouseInfo[house][hKlass] == 4)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid*5);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
							else if(HouseInfo[house][hKlass] == 5)
		                    {
						         format(string, sizeof(string), " С домашнего счета снято: %d",housepaid*6);
					             SendClientMessage(i, COLOR_NEWS, string);
							}
                            format(string, sizeof(string), " Остаток на домашнем счету: %d",HouseInfo[house][hTakings]);
					        SendClientMessage(i, COLOR_NEWS, string);
				        }
				        else
				        {
                            if(HouseInfo[house][hKlass] == 0)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
							else if(HouseInfo[house][hKlass] == 1)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid*2);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
							else if(HouseInfo[house][hKlass] == 2)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid*3);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
							else if(HouseInfo[house][hKlass] == 3)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid*4);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
							else if(HouseInfo[house][hKlass] == 4)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid*5);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
							else if(HouseInfo[house][hKlass] == 5)
		                    {
						         format(string, sizeof(string), "С домашнего счета снято: %d",housepaid*6);
					             SendClientMessage(i, COLOR_GRAD1, string);
							}
                            format(string, sizeof(string), "Остаток на домашнем счету: %d",HouseInfo[house][hTakings]);
					        SendClientMessage(i, COLOR_GRAD1, string);
				        }
				    }
	            }
				if(PlayerInfo[i][pDonateRank] >= 1)
				{
					SendClientMessage(i, COLOR_NEWS, "===============================");
				}
				else
				{
					SendClientMessage(i, COLOR_GRAD1, "===============================");
				}
			}
			if(PlayerInfo[i][punWarns] == 1)
			{
				new string[52];
				PlayerInfo[i][punWarnstime] += 1;
				format(string, sizeof(string), "Автоматическое снятие варна через %d часов", 10 - PlayerInfo[i][punWarnstime]);
				SendClientMessage(i,COLOR_LIGHTRED, string);
			}
			if(PlayerInfo[i][punWarns] == 1 && PlayerInfo[i][punWarnstime] >=10)
			{
				PlayerInfo[i][punWarnstime] = 0;
				PlayerInfo[i][punWarns] = 0;
				PlayerInfo[i][pWarns] -= 1;
				SendClientMessage(i,COLOR_LIGHTRED, "С Вас было снято одно предупреждение!");
			}
			if(PlayerInfo[i][pLevel] >= 2 && PlayerInfo[i][pExp] == 1)
			{
				SendClientMessage(i, COLOR_USE, "Поздравляем! Ваш лвл повысился");
			}
			if(PlayerInfo[i][pLevel] == 7 && PlayerInfo[i][pExp] == 1)
			{
			    new string[37];
			    new sendername[MAX_PLAYER_NAME];
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s.ini",sendername);
				new file = ini_openFile(string);
				if(file < 0) print("нет файла");
				else
				{
					ini_getString(file, "pDrug",string);
					format(string, sizeof(string), "%s.ini",string);
					new file2 = ini_openFile(string);
					ini_setInteger(file2, "FriendMoney",2000000);
					ini_setInteger(file2, "Text",3);
					ini_closeFile(file2);
					ini_closeFile(file);
				}
			}
			seans[i] = 0;
			robhouse[i] = false;
			PlayerInfo[i][pPayCheck] = 0;
			PlayerInfo[i][pPayDayHad] += 1;
			PlayerInfo[i][pPayDay]++;
			OnPlayerUpdateAc(i);
			PlayerInfo[i][pBank] += PlayerInfo[i][pZp];
			PlayerInfo[i][pZp] = 0;
			BuyHouse();
		}
	}
	OnPropUpdate();
	return true;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return true;
}
stock OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
        new string3[37];
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		format(string3, sizeof(string3), "%s.ini", playername);
		new File = ini_openFile(string3);
		if(!File)
		{
			ini_setString(File, "Key",MD5_Hash(password));
			PlayerInfo[playerid][pCash] = 0;
			ini_setInteger(File, "Level",PlayerInfo[playerid][pLevel]);
			ini_setInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
			ini_setInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
			ini_setInteger(File, "Ferma",PlayerInfo[playerid][pFerma]);
			ini_setInteger(File, "Fermazarobotok",PlayerInfo[playerid][pFermazarobotok]);
			ini_setInteger(File, "FermaJob",PlayerInfo[playerid][pFermajob]);
			ini_setInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
			ini_setFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
			ini_setInteger(File, "Text",PlayerInfo[playerid][pText]);
			ini_setInteger(File, "HP",PlayerInfo[playerid][pHP]);
			ini_setInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
			ini_setInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
			ini_setInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
			ini_setInteger(File, "Prez",PlayerInfo[playerid][pPrez]);
			ini_setInteger(File, "Fishrod",PlayerInfo[playerid][pFishrod]);
			ini_setInteger(File, "Nointim",PlayerInfo[playerid][pNointim]);
			ini_setInteger(File, "Worms",PlayerInfo[playerid][pWorms]);
			ini_setInteger(File, "PissTime",PlayerInfo[playerid][pPissTime]);
			ini_setInteger(File, "Beer",PlayerInfo[playerid][pBeer]);
			ini_setInteger(File, "Wine",PlayerInfo[playerid][pWine]);
			ini_setInteger(File, "Sig",PlayerInfo[playerid][pSig]);
			ini_setInteger(File, "Ap",PlayerInfo[playerid][pAp]);
			ini_setInteger(File, "Hat",PlayerInfo[playerid][pHat]);
			ini_setFloat(File, "HatX",PlayerInfo[playerid][pHatX]);
			ini_setFloat(File, "HatY",PlayerInfo[playerid][pHatY]);
			ini_setFloat(File, "HatZ",PlayerInfo[playerid][pHatZ]);
			ini_setFloat(File, "HatRX",PlayerInfo[playerid][pHatRX]);
			ini_setFloat(File, "HatRY",PlayerInfo[playerid][pHatRY]);
			ini_setFloat(File, "HatRZ",PlayerInfo[playerid][pHatRZ]);
			ini_setInteger(File, "Watchs",PlayerInfo[playerid][pWatchs]);
			ini_setInteger(File, "Glasses",PlayerInfo[playerid][pGlasses]);
			ini_setFloat(File, "GlassesX",PlayerInfo[playerid][pGlassesX]);
			ini_setFloat(File, "GlassesY",PlayerInfo[playerid][pGlassesY]);
			ini_setFloat(File, "GlassesZ",PlayerInfo[playerid][pGlassesZ]);
			ini_setFloat(File, "GlassesRX",PlayerInfo[playerid][pGlassesRX]);
			ini_setFloat(File, "GlassesRY",PlayerInfo[playerid][pGlassesRY]);
			ini_setFloat(File, "GlassesRZ",PlayerInfo[playerid][pGlassesRZ]);
			ini_setInteger(File, "Mask",PlayerInfo[playerid][pMask]);
			ini_setFloat(File, "MaskX",PlayerInfo[playerid][pMaskX]);
			ini_setFloat(File, "MaskY",PlayerInfo[playerid][pMaskY]);
			ini_setFloat(File, "MaskZ",PlayerInfo[playerid][pMaskZ]);
			ini_setFloat(File, "MaskRX",PlayerInfo[playerid][pMaskRX]);
			ini_setFloat(File, "MaskRY",PlayerInfo[playerid][pMaskRY]);
			ini_setFloat(File, "MaskRZ",PlayerInfo[playerid][pMaskRZ]);
			ini_setInteger(File, "Other",PlayerInfo[playerid][pOther]);
			ini_setFloat(File, "OtherX",PlayerInfo[playerid][pOtherX]);
			ini_setFloat(File, "OtherY",PlayerInfo[playerid][pOtherY]);
			ini_setFloat(File, "OtherZ",PlayerInfo[playerid][pOtherZ]);
			ini_setFloat(File, "OtherRX",PlayerInfo[playerid][pOtherRX]);
			ini_setFloat(File, "OtherRY",PlayerInfo[playerid][pOtherRY]);
			ini_setFloat(File, "OtherRZ",PlayerInfo[playerid][pOtherRZ]);
			ini_setInteger(File, "Sprite",PlayerInfo[playerid][pSprite]);
			ini_setString(File, "Prefix",PlayerInfo[playerid][pPrefix]);
			ini_setInteger(File, "Rope",PlayerInfo[playerid][pRope]);
			ini_setInteger(File, "Keys",PlayerInfo[playerid][pKeys]);
			ini_setInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
			ini_setInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
			ini_setInteger(File, "Car",PlayerInfo[playerid][pCar]);
			ini_setInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
			ini_setInteger(File, "Donate",PlayerInfo[playerid][pDonate]);
			ini_setInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
			ini_setInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
			ini_setInteger(File, "Registered",PlayerInfo[playerid][pReg]);
			ini_setInteger(File, "Sex",PlayerInfo[playerid][pSex]);
			ini_setInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
			ini_setInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
			ini_setInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
			ini_setInteger(File, "Respect",PlayerInfo[playerid][pExp]);
			ini_setInteger(File, "Money",PlayerInfo[playerid][pCash]);
			ini_setInteger(File, "Kills",PlayerInfo[playerid][pKills]);
			ini_setInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
			ini_setInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
			ini_setInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
			ini_setInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
			ini_setInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
			ini_setInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
			ini_setInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
			ini_setInteger(File, "Member",PlayerInfo[playerid][pMember]);
			ini_setInteger(File, "Rank",PlayerInfo[playerid][pRank]);
			ini_setInteger(File, "Job",PlayerInfo[playerid][pJob]);
			ini_setInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
			ini_setInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
			ini_setInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
			ini_setInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
			ini_setInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
			ini_setInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
			ini_setInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
			ini_setInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
			ini_setInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
			ini_setInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
			ini_setInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
			ini_setInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
			ini_setInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
			ini_setInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
			ini_setInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
			ini_setInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
			ini_setInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
			ini_setInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
			ini_setInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
			ini_setInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);
			ini_setInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);
			ini_setInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);
			ini_setInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);
			ini_setInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);
			ini_setInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);
			ini_setInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);
			ini_setInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);
			ini_setInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);
			ini_setInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);
			ini_setInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);
			ini_setInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);
			ini_setInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);
			ini_setInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
			ini_setInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
			ini_setInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
			ini_setInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
			ini_setInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
			ini_setInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
			ini_setInteger(File, "Sawnoff",PlayerInfo[playerid][pGunSkill][6]);
			ini_setInteger(File, "Pistol",PlayerInfo[playerid][pGunSkill][7]);
			ini_setInteger(File, "SPAS12",PlayerInfo[playerid][pGunSkill][8]);
			ini_setInteger(File, "UZI",PlayerInfo[playerid][pGunSkill][9]);
			ini_setInteger(File, "RIFLE",PlayerInfo[playerid][pGunSkill][10]);
			ini_setInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
			ini_setInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
			ini_setInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
			ini_setInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
			ini_setInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
			ini_setInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
			ini_setInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
			ini_setInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
			ini_setInteger(File, "Char",PlayerInfo[playerid][pChar]);
			ini_setInteger(File, "Int",PlayerInfo[playerid][pInt]);
			ini_setInteger(File, "Local",PlayerInfo[playerid][pLocal]);
			ini_setInteger(File, "Model",PlayerInfo[playerid][pModel]);
			ini_setInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
			ini_setInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
			ini_setInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
			ini_setInteger(File, "Tutorial",1);
			ini_setInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
			ini_setInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
			ini_setInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
			ini_setInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
			ini_setInteger(File, "Married",PlayerInfo[playerid][pMarried]);
			ini_setInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
			ini_setInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
			ini_setInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
			ini_setInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
			ini_setInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
			ini_setInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
			ini_setInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
			ini_setInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
			ini_setInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
			ini_setInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
			ini_setInteger(File, "Mobile",PlayerInfo[playerid][pMobile]);
			ini_setInteger(File, "Bank",PlayerInfo[playerid][pBank]);
			ini_setInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
			ini_setInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
			ini_setInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
			ini_setInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
			ini_setInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
			ini_setInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
			ini_setInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
			ini_setInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
			ini_setInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
			ini_setInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
			ini_setInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
			ini_setInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
			ini_setInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
			ini_setInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
			ini_setInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
			ini_setInteger(File, "Color",PlayerInfo[playerid][pColor]);
			ini_setInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
			ini_setInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
			ini_setInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
			ini_setInteger(File, "AutoMast",PlayerInfo[playerid][pAutoMast]);
			ini_setInteger(File, "MadWant",PlayerInfo[playerid][pMadWant]);
			ini_setInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
			ini_setInteger(File, "Balon",PlayerInfo[playerid][pBalon]);
			ini_setInteger(File, "Fireworks",PlayerInfo[playerid][pFirework]);
			ini_setInteger(File, "Pension",PlayerInfo[playerid][pPension]);
            ini_setInteger(File, "Credit",PlayerInfo[playerid][pCredit]);
            ini_setInteger(File, "CreditMust",PlayerInfo[playerid][pCreditMust]);
            ini_setInteger(File, "CreditTime",PlayerInfo[playerid][pCreditTime]);
            ini_setInteger(File, "Deposit",PlayerInfo[playerid][pDeposit]);
            ini_setInteger(File, "DepositMust",PlayerInfo[playerid][pDepositMust]);
            ini_setInteger(File, "RCVeh",PlayerInfo[playerid][pRCVeh]);
            ini_setInteger(File, "DepositTime",PlayerInfo[playerid][pDepositTime]);
            ini_setString(File,"Numbercar",playername);
            ini_setString(File,"MarriedTo","-");
			ini_closeFile(File);
		}
	}
	return true;
}
stock OnPlayerUpdateAc(playerid)
{
	new time = GetTickCount();
	new playername3[MAX_PLAYER_NAME];
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid] == 1)
		{
			new string3[32];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "%s.ini", playername3);
			new File = ini_openFile(string3);
			if(!File)
			{
			    ini_setInteger(File, "Level",PlayerInfo[playerid][pLevel]);
			    ini_setInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
				ini_setInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
				ini_setInteger(File, "Ferma",PlayerInfo[playerid][pFerma]);
				ini_setInteger(File, "Fermazarobotok",PlayerInfo[playerid][pFermazarobotok]);
				ini_setInteger(File, "FermaJob",PlayerInfo[playerid][pFermajob]);
				ini_setInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
				ini_setFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
				ini_setInteger(File, "Text",PlayerInfo[playerid][pText]);
				ini_setInteger(File, "HP",PlayerInfo[playerid][pHP]);
				ini_setInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
			    ini_setInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
			    ini_setInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
			    ini_setInteger(File, "Prez",PlayerInfo[playerid][pPrez]);
			    ini_setInteger(File, "Fishrod",PlayerInfo[playerid][pFishrod]);
			    ini_setInteger(File, "Nointim",PlayerInfo[playerid][pNointim]);
			    ini_setInteger(File, "PissTime",PlayerInfo[playerid][pPissTime]);
			    ini_setInteger(File, "Beer",PlayerInfo[playerid][pBeer]);
			    ini_setInteger(File, "Wine",PlayerInfo[playerid][pWine]);
			    ini_setInteger(File, "Sig",PlayerInfo[playerid][pSig]);
			    ini_setInteger(File, "Ap",PlayerInfo[playerid][pAp]);
    			ini_setInteger(File, "Hat",PlayerInfo[playerid][pHat]);
				ini_setFloat(File, "HatX",PlayerInfo[playerid][pHatX]);
				ini_setFloat(File, "HatY",PlayerInfo[playerid][pHatY]);
				ini_setFloat(File, "HatZ",PlayerInfo[playerid][pHatZ]);
				ini_setFloat(File, "HatRX",PlayerInfo[playerid][pHatRX]);
				ini_setFloat(File, "HatRY",PlayerInfo[playerid][pHatRY]);
				ini_setFloat(File, "HatRZ",PlayerInfo[playerid][pHatRZ]);
				ini_setInteger(File, "Watchs",PlayerInfo[playerid][pWatchs]);
				ini_setInteger(File, "Glasses",PlayerInfo[playerid][pGlasses]);
				ini_setFloat(File, "GlassesX",PlayerInfo[playerid][pGlassesX]);
				ini_setFloat(File, "GlassesY",PlayerInfo[playerid][pGlassesY]);
				ini_setFloat(File, "GlassesZ",PlayerInfo[playerid][pGlassesZ]);
				ini_setFloat(File, "GlassesRX",PlayerInfo[playerid][pGlassesRX]);
				ini_setFloat(File, "GlassesRY",PlayerInfo[playerid][pGlassesRY]);
				ini_setFloat(File, "GlassesRZ",PlayerInfo[playerid][pGlassesRZ]);
				ini_setInteger(File, "Mask",PlayerInfo[playerid][pMask]);
				ini_setFloat(File, "MaskX",PlayerInfo[playerid][pMaskX]);
				ini_setFloat(File, "MaskY",PlayerInfo[playerid][pMaskY]);
				ini_setFloat(File, "MaskZ",PlayerInfo[playerid][pMaskZ]);
				ini_setFloat(File, "MaskRX",PlayerInfo[playerid][pMaskRX]);
				ini_setFloat(File, "MaskRY",PlayerInfo[playerid][pMaskRY]);
				ini_setFloat(File, "MaskRZ",PlayerInfo[playerid][pMaskRZ]);
				ini_setInteger(File, "Other",PlayerInfo[playerid][pOther]);
				ini_setFloat(File, "OtherX",PlayerInfo[playerid][pOtherX]);
				ini_setFloat(File, "OtherY",PlayerInfo[playerid][pOtherY]);
				ini_setFloat(File, "OtherZ",PlayerInfo[playerid][pOtherZ]);
				ini_setFloat(File, "OtherRX",PlayerInfo[playerid][pOtherRX]);
				ini_setFloat(File, "OtherRY",PlayerInfo[playerid][pOtherRY]);
				ini_setFloat(File, "OtherRZ",PlayerInfo[playerid][pOtherRZ]);
			    ini_setInteger(File, "Sprite",PlayerInfo[playerid][pSprite]);
			    ini_setString(File, "Prefix",PlayerInfo[playerid][pPrefix]);
			    ini_setInteger(File, "Rope",PlayerInfo[playerid][pRope]);
			    ini_setInteger(File, "Keys",PlayerInfo[playerid][pKeys]);
   				ini_setInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
				ini_setInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
				ini_setInteger(File, "Car",PlayerInfo[playerid][pCar]);
				ini_setInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
				ini_setInteger(File, "Donate",PlayerInfo[playerid][pDonate]);
				ini_setInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
				ini_setInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
				ini_setInteger(File, "Registered",PlayerInfo[playerid][pReg]);
				ini_setInteger(File, "Sex",PlayerInfo[playerid][pSex]);
				ini_setInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
				ini_setInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
				ini_setInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
				ini_setInteger(File, "Respect",PlayerInfo[playerid][pExp]);
				ini_setInteger(File, "Money",PlayerInfo[playerid][pCash]);
				ini_setInteger(File, "Kills",PlayerInfo[playerid][pKills]);
				ini_setInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
				ini_setInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
				ini_setInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
				ini_setInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
				ini_setInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
				ini_setInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
				ini_setInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
				ini_setInteger(File, "Member",PlayerInfo[playerid][pMember]);
				ini_setInteger(File, "Rank",PlayerInfo[playerid][pRank]);
				ini_setInteger(File, "Job",PlayerInfo[playerid][pJob]);
				ini_setInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
				ini_setInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
				ini_setInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
				ini_setInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
				ini_setInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
				ini_setInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
				ini_setInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
				ini_setInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
				ini_setInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
				ini_setInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
				ini_setInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
				ini_setInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
				ini_setInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
				ini_setInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
				ini_setInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
				ini_setInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
				ini_setInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
				ini_setInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
				ini_setInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
				ini_setInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);//Кулаки
				ini_setInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);//Рукопашное Оружие
				ini_setInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);//Пистолеты
				ini_setInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);//Дробовики
				ini_setInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);//Автоматы
				ini_setInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);//Штурмовые винтовки
				ini_setInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);//Снайперские винтовки
				ini_setInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);//Тяжёлое оружие(рпг,миниган и т.п.)
				ini_setInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);//Метательное оружие
				ini_setInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);//Огнетушитель,спрэй и камера
				ini_setInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);//Подарки(цветы,вибраторы)
				ini_setInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);//Парашют и очки(тепло/ночное видение)
				ini_setInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);//Детонатор
				ini_setInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
				ini_setInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
				ini_setInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
				ini_setInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
				ini_setInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
				ini_setInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
				ini_setInteger(File, "Sawnoff",PlayerInfo[playerid][pGunSkill][6]);
				ini_setInteger(File, "Pistol",PlayerInfo[playerid][pGunSkill][7]);
				ini_setInteger(File, "SPAS12",PlayerInfo[playerid][pGunSkill][8]);
				ini_setInteger(File, "UZI",PlayerInfo[playerid][pGunSkill][9]);
				ini_setInteger(File, "RIFLE",PlayerInfo[playerid][pGunSkill][10]);
				ini_setInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
				ini_setInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
				ini_setInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
				ini_setInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
				ini_setInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
				ini_setInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
				ini_setInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
				ini_setInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
				ini_setInteger(File, "Char",PlayerInfo[playerid][pChar]);
				ini_setInteger(File, "Int",PlayerInfo[playerid][pInt]);
				ini_setInteger(File, "Local",PlayerInfo[playerid][pLocal]);
				ini_setInteger(File, "Model",PlayerInfo[playerid][pModel]);
				ini_setInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
				ini_setInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
				ini_setInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
				ini_setInteger(File, "Tutorial",1);
				ini_setInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
				ini_setInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
				ini_setInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
				ini_setInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
				ini_setInteger(File, "Married",PlayerInfo[playerid][pMarried]);
				ini_setInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
				ini_setInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
				ini_setInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
				ini_setInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
				ini_setInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
				ini_setInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
				ini_setInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
				ini_setInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
				ini_setInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
				ini_setInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
				ini_setInteger(File, "Mobile",PlayerInfo[playerid][pMobile]);
 				ini_setInteger(File, "Bank",PlayerInfo[playerid][pBank]);
				ini_setInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
				ini_setInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
				ini_setInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
				ini_setInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
				ini_setInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
				ini_setInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
				ini_setInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
				ini_setInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
				ini_setInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
				ini_setInteger(File, "Addiction",PlayerInfo[playerid][pAddiction]);
				ini_setInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
				ini_setInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
				ini_setInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
				ini_setInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
				ini_setInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
				ini_setInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
				ini_setInteger(File, "Color",PlayerInfo[playerid][pColor]);
				ini_setInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
				ini_setInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
				ini_setInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
				ini_setInteger(File, "AutoMast",PlayerInfo[playerid][pAutoMast]);
				ini_setInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
				ini_setInteger(File, "MadWant",PlayerInfo[playerid][pMadWant]);
				ini_setInteger(File, "Balon",PlayerInfo[playerid][pBalon]);
				ini_setInteger(File, "Fireworks",PlayerInfo[playerid][pFirework]);
				ini_setInteger(File, "Pension",PlayerInfo[playerid][pPension]);
                ini_setInteger(File, "Credit",PlayerInfo[playerid][pCredit]);
                ini_setInteger(File, "CreditMust",PlayerInfo[playerid][pCreditMust]);
                ini_setInteger(File, "CreditTime",PlayerInfo[playerid][pCreditTime]);
                ini_setInteger(File, "Deposit",PlayerInfo[playerid][pDeposit]);
                ini_setInteger(File, "DepositMust",PlayerInfo[playerid][pDepositMust]);
                ini_setInteger(File, "RCVeh",PlayerInfo[playerid][pRCVeh]);
                ini_setInteger(File, "DepositTime",PlayerInfo[playerid][pDepositTime]);
				new playersip[30];
				GetPlayerIp(playerid,playersip,sizeof(playersip));
				new year, month, day;
				getdate(year, month, day);
				new strstre[30];
				format(strstre,sizeof(strstre), "%d/%d/%d",day,month,year);
				ini_setString(File, "Online",strstre);
				ini_setString(File, "pvIp",playersip);
				ini_closeFile(File);
			}
		}
	}
	printf("[Сохранение аккаунта] %s - потрачено %d (ms)", playername3, GetTickCount() - time);
	return true;
}
public OnPlayerLogin(playerid, password[])
{
	new time = GetTickCount();
	new stringn[37];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(stringn, sizeof(stringn), "%s.ini", playername);
	new File = ini_openFile(stringn);
	if(!File)
	{
		new pass[128];
		ini_getString(File, "Key", pass);
		ini_getInteger(File, "Level",PlayerInfo[playerid][pLevel]);
		ini_getInteger(File, "House",PlayerInfo[playerid][pPHousekey]);
		ini_getInteger(File, "Bussines",PlayerInfo[playerid][pPBiskey]);
		ini_getInteger(File, "Ferma",PlayerInfo[playerid][pFerma]);
		ini_getInteger(File, "Fermazarobotok",PlayerInfo[playerid][pFermazarobotok]);
		ini_getInteger(File, "FermaJob",PlayerInfo[playerid][pFermajob]);
		ini_getInteger(File, "AdminLevel",PlayerInfo[playerid][pAdmin]);
		ini_getFloat(File, "Fuelcar",PlayerInfo[playerid][pFuelCar]);
		ini_getInteger(File, "Text",PlayerInfo[playerid][pText]);
		ini_getInteger(File, "HP",PlayerInfo[playerid][pHP]);
		ini_getInteger(File, "Satiety",PlayerInfo[playerid][pSatiety]);
		ini_getInteger(File, "Keyip",PlayerInfo[playerid][pKeyip]);
		ini_getInteger(File, "CheckIp",PlayerInfo[playerid][pCheckip]);
		ini_getInteger(File, "pGod",PlayerInfo[playerid][pGod]);
		ini_getInteger(File, "pMes",PlayerInfo[playerid][pMes]);
		ini_getInteger(File, "pDataReg",PlayerInfo[playerid][pDataReg]);
		ini_getInteger(File, "pVhoddata",PlayerInfo[playerid][pVhoddata]);
		ini_getInteger(File, "pVhodMes",PlayerInfo[playerid][pVhodMes]);
		ini_getInteger(File, "pVhodchas",PlayerInfo[playerid][pVhodchas]);
		ini_getInteger(File, "pVhodminute",PlayerInfo[playerid][pVhodminute]);
		ini_getInteger(File, "Phone",PlayerInfo[playerid][pPhone]);
		ini_getInteger(File, "Prez",PlayerInfo[playerid][pPrez]);
		ini_getInteger(File, "Fishrod",PlayerInfo[playerid][pFishrod]);
		ini_getInteger(File, "Nointim",PlayerInfo[playerid][pNointim]);
		ini_getInteger(File, "PissTime",PlayerInfo[playerid][pPissTime]);
		ini_getInteger(File, "Beer",PlayerInfo[playerid][pBeer]);
		ini_getInteger(File, "Wine",PlayerInfo[playerid][pWine]);
		ini_getInteger(File, "Sig",PlayerInfo[playerid][pSig]);
		ini_getInteger(File, "Ap",PlayerInfo[playerid][pAp]);
		ini_getInteger(File, "Hat",PlayerInfo[playerid][pHat]);
		ini_getFloat(File, "HatX",PlayerInfo[playerid][pHatX]);
		ini_getFloat(File, "HatY",PlayerInfo[playerid][pHatY]);
		ini_getFloat(File, "HatZ",PlayerInfo[playerid][pHatZ]);
		ini_getFloat(File, "HatRX",PlayerInfo[playerid][pHatRX]);
		ini_getFloat(File, "HatRY",PlayerInfo[playerid][pHatRY]);
		ini_getFloat(File, "HatRZ",PlayerInfo[playerid][pHatRZ]);
		ini_getInteger(File, "Watchs",PlayerInfo[playerid][pWatchs]);
		ini_getInteger(File, "Glasses",PlayerInfo[playerid][pGlasses]);
		ini_getFloat(File, "GlassesX",PlayerInfo[playerid][pGlassesX]);
		ini_getFloat(File, "GlassesY",PlayerInfo[playerid][pGlassesY]);
		ini_getFloat(File, "GlassesZ",PlayerInfo[playerid][pGlassesZ]);
		ini_getFloat(File, "GlassesRX",PlayerInfo[playerid][pGlassesRX]);
		ini_getFloat(File, "GlassesRY",PlayerInfo[playerid][pGlassesRY]);
		ini_getFloat(File, "GlassesRZ",PlayerInfo[playerid][pGlassesRZ]);
		ini_getInteger(File, "Mask",PlayerInfo[playerid][pMask]);
		ini_getFloat(File, "MaskX",PlayerInfo[playerid][pMaskX]);
		ini_getFloat(File, "MaskY",PlayerInfo[playerid][pMaskY]);
		ini_getFloat(File, "MaskZ",PlayerInfo[playerid][pMaskZ]);
		ini_getFloat(File, "MaskRX",PlayerInfo[playerid][pMaskRX]);
		ini_getFloat(File, "MaskRY",PlayerInfo[playerid][pMaskRY]);
		ini_getFloat(File, "MaskRZ",PlayerInfo[playerid][pMaskRZ]);
		ini_getInteger(File, "Other",PlayerInfo[playerid][pOther]);
		ini_getFloat(File, "OtherX",PlayerInfo[playerid][pOtherX]);
		ini_getFloat(File, "OtherY",PlayerInfo[playerid][pOtherY]);
		ini_getFloat(File, "OtherZ",PlayerInfo[playerid][pOtherZ]);
		ini_getFloat(File, "OtherRX",PlayerInfo[playerid][pOtherRX]);
		ini_getFloat(File, "OtherRY",PlayerInfo[playerid][pOtherRY]);
		ini_getFloat(File, "OtherRZ",PlayerInfo[playerid][pOtherRZ]);
		ini_getInteger(File, "Sprite",PlayerInfo[playerid][pSprite]);
		ini_getString(File, "Prefix",PlayerInfo[playerid][pPrefix]);
		ini_getInteger(File, "Rope",PlayerInfo[playerid][pRope]);
		ini_getInteger(File, "Keys",PlayerInfo[playerid][pKeys]);
		ini_getInteger(File, "PhoneBook",PlayerInfo[playerid][pPhoneBook]);
		ini_getInteger(File, "Directory",PlayerInfo[playerid][pDirectory]);
		ini_getInteger(File, "Car",PlayerInfo[playerid][pCar]);
		ini_getInteger(File, "DonateAccount",PlayerInfo[playerid][pDonateAccount]);
		ini_getInteger(File, "Donate",PlayerInfo[playerid][pDonate]);
		ini_getInteger(File, "DonateMoney",PlayerInfo[playerid][pDonateMoney]);
		ini_getInteger(File, "DonateRank",PlayerInfo[playerid][pDonateRank]);
		ini_getInteger(File, "Registered",PlayerInfo[playerid][pReg]);
		ini_getInteger(File, "Sex",PlayerInfo[playerid][pSex]);
		ini_getInteger(File, "Arrested",PlayerInfo[playerid][pArrested]);
		ini_getInteger(File, "Muted",PlayerInfo[playerid][pMuted]);
		ini_getInteger(File, "Crimes",PlayerInfo[playerid][pCrimes]);
		ini_getInteger(File, "Respect",PlayerInfo[playerid][pExp]);
		ini_getInteger(File, "Money",PlayerInfo[playerid][pCash]);
		ini_getInteger(File, "Kills",PlayerInfo[playerid][pKills]);
		ini_getInteger(File, "PayCheck",PlayerInfo[playerid][pPayCheck]);
		ini_getInteger(File, "Jailed",PlayerInfo[playerid][pJailed]);
		ini_getInteger(File, "JailTime",PlayerInfo[playerid][pJailTime]);
		ini_getInteger(File, "Materials",PlayerInfo[playerid][pMaterials]);
		ini_getInteger(File, "CDPlayer",PlayerInfo[playerid][pCDPlayer]);
		ini_getInteger(File, "Drugs",PlayerInfo[playerid][pDrugs]);
		ini_getInteger(File, "Leader",PlayerInfo[playerid][pLeader]);
		ini_getInteger(File, "Member",PlayerInfo[playerid][pMember]);
		ini_getInteger(File, "Rank",PlayerInfo[playerid][pRank]);
		ini_getInteger(File, "Job",PlayerInfo[playerid][pJob]);
		ini_getInteger(File, "CarLic",PlayerInfo[playerid][pCarLic]);
		ini_getInteger(File, "BizLic",PlayerInfo[playerid][pBisLic]);
		ini_getInteger(File, "FlyLic",PlayerInfo[playerid][pFlyLic]);
		ini_getInteger(File, "BoatLic",PlayerInfo[playerid][pBoatLic]);
		ini_getInteger(File, "FishLic",PlayerInfo[playerid][pFishLic]);
		ini_getInteger(File, "GunLic",PlayerInfo[playerid][pGunLic]);
		ini_getInteger(File, "Slot1", PlayerInfo[playerid][pSlot][0]);
		ini_getInteger(File, "Slot2", PlayerInfo[playerid][pSlot][1]);
		ini_getInteger(File, "Slot3", PlayerInfo[playerid][pSlot][2]);
		ini_getInteger(File, "Slot4", PlayerInfo[playerid][pSlot][3]);
		ini_getInteger(File, "Slot5", PlayerInfo[playerid][pSlot][4]);
		ini_getInteger(File, "Slot6", PlayerInfo[playerid][pSlot][5]);
		ini_getInteger(File, "Slot7", PlayerInfo[playerid][pSlot][6]);
		ini_getInteger(File, "Slot8", PlayerInfo[playerid][pSlot][7]);
		ini_getInteger(File, "Slot9", PlayerInfo[playerid][pSlot][8]);
		ini_getInteger(File, "Slot10", PlayerInfo[playerid][pSlot][9]);
		ini_getInteger(File, "Slot11", PlayerInfo[playerid][pSlot][10]);
		ini_getInteger(File, "Slot12", PlayerInfo[playerid][pSlot][11]);
		ini_getInteger(File, "Slot13", PlayerInfo[playerid][pSlot][12]);
		ini_getInteger(File, "Slotammo1", PlayerInfo[playerid][pSlotammo][0]);
		ini_getInteger(File, "Slotammo2", PlayerInfo[playerid][pSlotammo][1]);
		ini_getInteger(File, "Slotammo3", PlayerInfo[playerid][pSlotammo][2]);
		ini_getInteger(File, "Slotammo4", PlayerInfo[playerid][pSlotammo][3]);
		ini_getInteger(File, "Slotammo5", PlayerInfo[playerid][pSlotammo][4]);
		ini_getInteger(File, "Slotammo6", PlayerInfo[playerid][pSlotammo][5]);
		ini_getInteger(File, "Slotammo7", PlayerInfo[playerid][pSlotammo][6]);
		ini_getInteger(File, "Slotammo8", PlayerInfo[playerid][pSlotammo][7]);
		ini_getInteger(File, "Slotammo9", PlayerInfo[playerid][pSlotammo][8]);
		ini_getInteger(File, "Slotammo10", PlayerInfo[playerid][pSlotammo][9]);
		ini_getInteger(File, "Slotammo11", PlayerInfo[playerid][pSlotammo][10]);
		ini_getInteger(File, "Slotammo12", PlayerInfo[playerid][pSlotammo][11]);
		ini_getInteger(File, "Slotammo13", PlayerInfo[playerid][pSlotammo][12]);
		ini_getInteger(File, "SDPistol",PlayerInfo[playerid][pGunSkill][0]);
		ini_getInteger(File, "DesertEagle",PlayerInfo[playerid][pGunSkill][1]);
		ini_getInteger(File, "ShotGun",PlayerInfo[playerid][pGunSkill][2]);
		ini_getInteger(File, "MP5",PlayerInfo[playerid][pGunSkill][3]);
		ini_getInteger(File, "AK47",PlayerInfo[playerid][pGunSkill][4]);
		ini_getInteger(File, "M4",PlayerInfo[playerid][pGunSkill][5]);
		ini_getInteger(File, "Sawnoff",PlayerInfo[playerid][pGunSkill][6]);
		ini_getInteger(File, "Pistol",PlayerInfo[playerid][pGunSkill][7]);
		ini_getInteger(File, "SPAS12",PlayerInfo[playerid][pGunSkill][8]);
		ini_getInteger(File, "UZI",PlayerInfo[playerid][pGunSkill][9]);
		ini_getInteger(File, "RIFLE",PlayerInfo[playerid][pGunSkill][10]);
		ini_getInteger(File, "TaxiExp",PlayerInfo[playerid][pTaxiExp]);
		ini_getInteger(File, "TaxiLvl",PlayerInfo[playerid][pTaxiLvl]);
		ini_getInteger(File, "CarRobbingExp",PlayerInfo[playerid][pCarRobbingExp]);
		ini_getInteger(File, "DLevel",PlayerInfo[playerid][pDLevel]);
		ini_getInteger(File, "DExp",PlayerInfo[playerid][pDExp]);
		ini_getInteger(File, "DMgruz",PlayerInfo[playerid][pDMgruz]);
		ini_getInteger(File, "Dgruz",PlayerInfo[playerid][pDgruz]);
		ini_getInteger(File, "Kazpay",PlayerInfo[playerid][pKazpay]);
		ini_getInteger(File, "Char",PlayerInfo[playerid][pChar]);
		ini_getInteger(File, "Int",PlayerInfo[playerid][pInt]);
		ini_getInteger(File, "Local",PlayerInfo[playerid][pLocal]);
		ini_getInteger(File, "Model",PlayerInfo[playerid][pModel]);
		ini_getInteger(File, "PhoneNr",PlayerInfo[playerid][pPnumber]);
		ini_getInteger(File, "PayDay",PlayerInfo[playerid][pPayDay]);
		ini_getInteger(File, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
		ini_getInteger(File, "Tutorial",PlayerInfo[playerid][pTut]);
		ini_getInteger(File, "Warnings",PlayerInfo[playerid][pWarns]);
		ini_getInteger(File, "unWarns",PlayerInfo[playerid][punWarns]);
		ini_getInteger(File, "unWarnstime",PlayerInfo[playerid][punWarnstime]);
		ini_getInteger(File, "Fuel",PlayerInfo[playerid][pFuel]);
		ini_getInteger(File, "Married",PlayerInfo[playerid][pMarried]);
		ini_getInteger(File, "pDrug",PlayerInfo[playerid][pDrug]);
		ini_getInteger(File, "FriendMoney",PlayerInfo[playerid][pFriendMoney]);
		ini_getInteger(File, "Radio",PlayerInfo[playerid][pRadio]);
		ini_getInteger(File, "Ticket",PlayerInfo[playerid][pTicket]);
		ini_getInteger(File, "TicketWinner",PlayerInfo[playerid][pTicketWin]);
		ini_getInteger(File, "TicketNrOne",PlayerInfo[playerid][pTicketNr][0]);
		ini_getInteger(File, "TicketNrTwo",PlayerInfo[playerid][pTicketNr][1]);
		ini_getInteger(File, "TicketNrThree",PlayerInfo[playerid][pTicketNr][2]);
		ini_getInteger(File, "Mushrooms",PlayerInfo[playerid][pMushrooms]);
		ini_getInteger(File, "MuteTime",PlayerInfo[playerid][pMuteTime]);
		ini_getInteger(File, "Mobile",PlayerInfo[playerid][pMobile]);
		ini_getInteger(File, "Bank",PlayerInfo[playerid][pBank]);
		ini_getInteger(File, "Ban",PlayerInfo[playerid][pLocked]);
		ini_getInteger(File, "Debt",PlayerInfo[playerid][pDebt]);
		ini_getInteger(File, "MafiaRoof",PlayerInfo[playerid][pMafiaRoof]);
		ini_getInteger(File, "UseMafiaRoof",PlayerInfo[playerid][pUseMafiaRoof]);
		ini_getInteger(File, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
		ini_getInteger(File, "KongfuSkill",PlayerInfo[playerid][pKongfuSkill]);
		ini_getInteger(File, "KickboxSkill",PlayerInfo[playerid][pKickboxSkill]);
		ini_getInteger(File, "Dostup",PlayerInfo[playerid][pDostup]);
		ini_getInteger(File, "Fishes",PlayerInfo[playerid][pFishes]);
		ini_getInteger(File, "Labiding",PlayerInfo[playerid][pLabiding]);
		ini_getInteger(File, "Addiction",PlayerInfo[playerid][pAddiction]);
		ini_getInteger(File, "Procents",PlayerInfo[playerid][pProcents]);
		ini_getInteger(File, "Wheels",PlayerInfo[playerid][pWheels]);
		ini_getInteger(File, "PaintJob",PlayerInfo[playerid][pPaintJob]);
		ini_getInteger(File, "Spoiler",PlayerInfo[playerid][pSpoiler]);
		ini_getInteger(File, "FrontBumper",PlayerInfo[playerid][pBumper1]);
		ini_getInteger(File, "RearBumper",PlayerInfo[playerid][pBumper2]);
		ini_getInteger(File, "Color",PlayerInfo[playerid][pColor]);
		ini_getInteger(File, "Color2",PlayerInfo[playerid][pColor1]);
		ini_getInteger(File, "Nitro",PlayerInfo[playerid][pNitro]);
		ini_getInteger(File, "Hydravlic",PlayerInfo[playerid][pHydrawlic]);
		ini_getInteger(File, "AutoMast",PlayerInfo[playerid][pAutoMast]);
		ini_getInteger(File, "Housecash",PlayerInfo[playerid][pHousecash]);
		ini_getInteger(File, "MadWant",PlayerInfo[playerid][pMadWant]);
		ini_getInteger(File, "Balon",PlayerInfo[playerid][pBalon]);
		ini_getInteger(File, "Fireworks",PlayerInfo[playerid][pFirework]);
		ini_getInteger(File, "Pension",PlayerInfo[playerid][pPension]);
        ini_getInteger(File, "Credit",PlayerInfo[playerid][pCredit]);
        ini_getInteger(File, "CreditMust",PlayerInfo[playerid][pCreditMust]);
        ini_getInteger(File, "CreditTime",PlayerInfo[playerid][pCreditTime]);
		ini_getFloat(File, "pIp",PlayerInfo[playerid][pIp]);
		ini_getFloat(File, "pvIp",PlayerInfo[playerid][pvIp]);
		ini_getFloat(File, "pIpReg",PlayerInfo[playerid][pIpReg]);
        ini_getInteger(File, "Deposit",PlayerInfo[playerid][pDeposit]);
        ini_getInteger(File, "DepositMust",PlayerInfo[playerid][pDepositMust]);
        ini_getInteger(File, "RCVeh",PlayerInfo[playerid][pRCVeh]);
        ini_getInteger(File, "DepositTime",PlayerInfo[playerid][pDepositTime]);
		ini_closeFile(File);
	}
	if(PlayerInfo[playerid][pCheckip] == 1)
	{
		new filess = ini_openFile(stringn);
		if(filess < 0) print("нет файла");
		else
		{
		    new string[30];
			ini_getString(filess, "pIp",string);
			ini_closeFile(filess);
			new currentip[30];
			GetPlayerIp(playerid, currentip, sizeof(currentip));
			if(strcmp(currentip, string))
			{
				gPlayerLogged[playerid] = 0;
				SetPlayerInterior(playerid, 0);
				SetPlayerFacingAngle(playerid, 179.5547);
				SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
				SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ безопасности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
				gPlayerLogged[playerid] = 0;
				return true;
			}
		}
	}
	if(PlayerInfo[playerid][pCheckip] == 1)
	{
		gPlayerLogged[playerid] = 1;
	}
	if(PlayerInfo[playerid][pCheckip] == 0)
	{
		gPlayerLogged[playerid] = 1;
		new filess = ini_openFile(stringn);
		if(filess < 0) print("нет файла");
		else
		{
		    new playersip[30];
			GetPlayerIp(playerid, playersip, sizeof(playersip));
			ini_setString(filess, "pIp",playersip);
			ini_closeFile(filess);
		}
	}
	if(PlayerInfo[playerid][pCar] == 0)
	{
		PlayerInfo[playerid][pCar] = 462;
	}
	if(PlayerInfo[playerid][pProcents] <= 0)
	{
		PlayerInfo[playerid][pProcents] = 0;
	}
	if(PlayerInfo[playerid][pChar] == 0)
	{
		PlayerInfo[playerid][pChar] = 230;
	}
	if(PlayerInfo[playerid][pRadio] == 1)
	{
		radiosf++;
		lNews[playerid] = 1;
		gNews[playerid] = 0;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pRadio] == 2)
	{
		radiols++;
		lNews[playerid] = 0;
		gNews[playerid] = 1;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pRadio] == 3)
	{
		radiolv++;
		lNews[playerid] = 1;
		gNews[playerid] = 1;
		LvNews[playerid] = 0;
	}
	else
	{
		lNews[playerid] = 1;
		gNews[playerid] = 1;
		LvNews[playerid] = 1;
	}
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pAdmin] = 0;
		PlayerInfo[playerid][pHP] = 100;
		PlayerInfo[playerid][pSatiety] = 100;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTut] = 0;
		new randphone = 1000 + random(899999);
		PlayerInfo[playerid][pPnumber] = randphone;
		PlayerInfo[playerid][pReg] = 1;
		PlayerInfo[playerid][pCarLic] = 0;
		PlayerInfo[playerid][pBank] = 0;
		PlayerInfo[playerid][pCash] = 0;
		PlayerInfo[playerid][pMobile] = 0;
		PlayerInfo[playerid][pMarriedTo] = 0;
		PlayerInfo[playerid][pLabiding] = 0;
		PlayerInfo[playerid][pHousecash] = 0;
		PlayerInfo[playerid][pCheckip] = 0;
		PlayerInfo[playerid][pMadWant] = 0;
		PlayerInfo[playerid][pMuted] = 0;
		PlayerInfo[playerid][pMuteTime] = 0;
		PlayerInfo[playerid][pProcents] = 100;
		PlayerInfo[playerid][pDostup] = 1111;
		PlayerInfo[playerid][pText] = 0;
		SetPlayerHealthAC(playerid, 100);
		new year, month,day;
		getdate(year, month, day);
		new file = ini_openFile(stringn);
		if(file < 0) print("нет файла");
		else
		{
			new strstre[30];
			format(strstre,sizeof(strstre), "%d/%d/%d",day,month,year);
            new playersip[30];
			GetPlayerIp(playerid, playersip, sizeof(playersip));
			ini_setString(File, "pDataReg",strstre);
			ini_setString(File, "pIpReg",playersip);
			ini_closeFile(File);
		}
	}
	if(PlayerInfo[playerid][pLocked] == 1)
	{
		ShowPlayerDialog(playerid,69,DIALOG_STYLE_INPUT, "{B20000}Внимание", "{FF6347}Этот аккаунт заблокирован\nОставьте заявку на разбан\n на сайте www.nextagerp.5nx.ru/\n\nВведите '/q', чтобы выйти", "Закрыть", "");
		GKick(playerid);
	}
	if(PlayerInfo[playerid][pDonateRank] > 0)
	{
	    new tmp2[53];
		SendClientMessage(playerid, 0xFEBC41AA, "Здравствуйте VIP игрок!");
		format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~b~   %s", playername);
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	else
	{
	    new tmp2[53];
		format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~b~   %s", playername);
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	if(PlayerInfo[playerid][pText] == 5)
	{
		new tmp2[44];
		new iniFile = ini_openFile("gamefiles/log/donaters.log");
    	ini_setString(iniFile, "Nick\n",playername);
	    ini_closeFile(iniFile);
		SendClientMessage(playerid, COLOR_NEWS, "Пополнение игрового аккаунта");
		format(tmp2, sizeof(tmp2), "Аккаунт пополнен на сумму: %d вирт", PlayerInfo[playerid][pDonateMoney]);
		SendClientMessage(playerid, COLOR_WHITE,tmp2);
		PlayerInfo[playerid][pDonateAccount] += PlayerInfo[playerid][pDonateMoney];
		PlayerInfo[playerid][pDonate] += PlayerInfo[playerid][pDonateMoney];
		format(tmp2, sizeof(tmp2), "Донат счётчик: %d вирт", PlayerInfo[playerid][pDonateAccount]);
		SendClientMessage(playerid, COLOR_WHITE,tmp2);
		if(PlayerInfo[playerid][pDonateAccount] >= 1000000)
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Вы получили статус: {FFA500}BRONZE VIP");
	    	PlayerInfo[playerid][pDonateRank] = 1;
		}
		if(PlayerInfo[playerid][pDonateAccount] >= 5000000)
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Вы получили статус: {FFA500}SILVER VIP");
	    	PlayerInfo[playerid][pDonateRank] = 2;
		}
		if(PlayerInfo[playerid][pDonateAccount] >= 10000000)
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Вы получили статус: {FFA500}GOLD VIP");
  			PlayerInfo[playerid][pDonateRank] = 3;
		}
		if(PlayerInfo[playerid][pDonateAccount] >= 15000000)
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Вы получили статус: {FFA500}PLATINUM VIP");
  			PlayerInfo[playerid][pDonateRank] = 4;
		}
		PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pDonateMoney];
        PlayerInfo[playerid][pDonateMoney] = 0;
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pText] == 4)
	{
		SendClientMessage(playerid, COLOR_WHITE, "С Вас была снята лидерка организации");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pText] == 3)
	{
		PlayerInfo[playerid][pText] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "Вы получили 2 000 000 вирт, за приглашённого друга");
		PlayerInfo[playerid][pCash] += 2000000;
		PlayerInfo[playerid][pFriendMoney] = 0;
	}
	if(PlayerInfo[playerid][pCheckip] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "У Вас не включена защита по IP адресу! {FFFF1F} Введите /mm - [7] Безопасность");
		SendClientMessage(playerid, COLOR_WHITE, "Уважаемый игрок! IP привязка обезопасит Ваш аккаунт от взлома!");
	}
	if(PlayerInfo[playerid][pText] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были выселены за неуплату квартплаты");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Деньги за дом вы можете получить в банке \"/gethousemoney\"");
	}
	if(PlayerInfo[playerid][pText] == 2)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Ваш бизнес был продан государству за неуплату электроэнергии");
		PlayerInfo[playerid][pText] = 0;
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
	}
	PlayerEx[playerid][pSpawnEx] = true;
	PEfir[playerid] = 255;
	Pefir[playerid] = 999;
	GangZoneShowForPlayer(playerid, Army[0], COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army[1], COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army[2], COLOR_YELLOW2);
	ResetPlayerMoney(playerid);
	SpawnPlayer(playerid);
	SetPlayerWeapons(playerid);
	LoadTuning(playerid);
    printf("[Загрузка аккаунта] %s - потрачено %d (ms)", playername,GetTickCount() - time);
	return true;
}
stock LoadTuning(playerid)
{
	if(PlayerInfo[playerid][pPHousekey] != 255)
	{
		new string[37];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new house = PlayerInfo[playerid][pPHousekey];
		createdcar = caridhouse[playerid];
		caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc], PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
		createdcar ++;
		LockCar(caridhouse[playerid]);
		IsLocked[caridhouse[playerid]] = 1;
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
		format(string,sizeof(string),"%s.ini",sendername);
        new Filea = ini_openFile(string);
        ini_getString(Filea,"Numbercar",string);
        ini_closeFile(Filea);
        SetVehicleNumberPlate(caridhouse[playerid], string);
		AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
		AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
		AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
		if(PJ(caridhouse[playerid]))
		{
			ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
		}
	}
}
stock SaveHomeSbizz()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
  		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%f,%f,%f,%f\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hKlass],
		HouseInfo[idx][hVehSost],
		HouseInfo[idx][hCarx],
		HouseInfo[idx][hCary],
		HouseInfo[idx][hCarz],
		HouseInfo[idx][hCarc]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(AvtoInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d|%d|%d|%d\n",
		AvtoInfo[idx][abOwned],
		AvtoInfo[idx][abOwner],
		AvtoInfo[idx][abMessage],
		AvtoInfo[idx][abEntranceX],
		AvtoInfo[idx][abEntranceY],
		AvtoInfo[idx][abEntranceZ],
		AvtoInfo[idx][aExitX],
		AvtoInfo[idx][aExitY],
		AvtoInfo[idx][aExitZ],
		AvtoInfo[idx][abBuyPrice],
		AvtoInfo[idx][abWorld],
		AvtoInfo[idx][abLocked],
		AvtoInfo[idx][abInterior],
		AvtoInfo[idx][abPrice],
		AvtoInfo[idx][abArenda],
		AvtoInfo[idx][abTill],
		AvtoInfo[idx][picX],
		AvtoInfo[idx][picY],
		AvtoInfo[idx][picZ],
		AvtoInfo[idx][abZp],
		AvtoInfo[idx][Rab],
		AvtoInfo[idx][Poset],
		AvtoInfo[idx][Mesto]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/avtomas.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/avtomas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd],
		BizzInfo[idx][b2Till],
		BizzInfo[idx][bPrice],
		BizzInfo[idx][bBarX],
		BizzInfo[idx][bBarY],
		BizzInfo[idx][bBarZ],
		BizzInfo[idx][bMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbPriceProd],
		SBizzInfo[idx][s2bTill],
		SBizzInfo[idx][sbMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/reserves/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/reserves/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
    while (idx < sizeof(FermInfo))
    {
        new coordsstring[280];
        format(coordsstring, sizeof(coordsstring), "%d|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|%s|%s|%s|%s|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
        FermInfo[idx][fOwned],
        FermInfo[idx][fOwner],
        FermInfo[idx][fProdukt],
        FermInfo[idx][fMafia],
        FermInfo[idx][fTill],
        FermInfo[idx][fEntranceCost],
        FermInfo[idx][fBuyPrice],
        FermInfo[idx][fCenazerno],
        FermInfo[idx][fzernoseiano],
        FermInfo[idx][fcolichestvozerna],
        FermInfo[idx][fcenaprod],
        FermInfo[idx][fzernozakup],
        FermInfo[idx][f1zams],
        FermInfo[idx][f2zams],
        FermInfo[idx][f3zams],
        FermInfo[idx][f1fermers],
        FermInfo[idx][f2fermers],
        FermInfo[idx][f3fermers],
        FermInfo[idx][f4fermers],
        FermInfo[idx][f5fermers],
        FermInfo[idx][fmestoX],
        FermInfo[idx][fmestoY],
        FermInfo[idx][fmestoZ],
        FermInfo[idx][fidferm],
        FermInfo[idx][frandoms],
        FermInfo[idx][frandoms2],
        FermInfo[idx][vnutricar],
        FermInfo[idx][flock]
        );
        if(idx == 0)
        {
            file2 = fopen("gamefiles/reserves/ferm.cfg", io_write);
        }
        else
        {
            file2 = fopen("gamefiles/reserves/ferm.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
}
stock OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
  		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%f,%f,%f,%f\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hVworld],
		HouseInfo[idx][hOint],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hKlass],
		HouseInfo[idx][hVehSost],
		HouseInfo[idx][hCarx],
		HouseInfo[idx][hCary],
		HouseInfo[idx][hCarz],
		HouseInfo[idx][hCarc]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(AvtoInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d|%d|%d|%d\n",
		AvtoInfo[idx][abOwned],
		AvtoInfo[idx][abOwner],
		AvtoInfo[idx][abMessage],
		AvtoInfo[idx][abEntranceX],
		AvtoInfo[idx][abEntranceY],
		AvtoInfo[idx][abEntranceZ],
		AvtoInfo[idx][aExitX],
		AvtoInfo[idx][aExitY],
		AvtoInfo[idx][aExitZ],
		AvtoInfo[idx][abBuyPrice],
		AvtoInfo[idx][abWorld],
		AvtoInfo[idx][abLocked],
		AvtoInfo[idx][abInterior],
		AvtoInfo[idx][abPrice],
		AvtoInfo[idx][abArenda],
		AvtoInfo[idx][abTill],
		AvtoInfo[idx][picX],
		AvtoInfo[idx][picY],
		AvtoInfo[idx][picZ],
		AvtoInfo[idx][abZp],
		AvtoInfo[idx][Rab],
		AvtoInfo[idx][Poset],
		AvtoInfo[idx][Mesto]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/avtomas.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/avtomas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbPriceProd],
		SBizzInfo[idx][s2bTill],
		SBizzInfo[idx][sbMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
    while (idx < sizeof(FermInfo))
    {
        new coordsstring[280];
        format(coordsstring, sizeof(coordsstring), "%d|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|%s|%s|%s|%s|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
        FermInfo[idx][fOwned],
        FermInfo[idx][fOwner],
        FermInfo[idx][fProdukt],
        FermInfo[idx][fMafia],
        FermInfo[idx][fTill],
        FermInfo[idx][fEntranceCost],
        FermInfo[idx][fBuyPrice],
        FermInfo[idx][fCenazerno],
        FermInfo[idx][fzernoseiano],
        FermInfo[idx][fcolichestvozerna],
        FermInfo[idx][fcenaprod],
        FermInfo[idx][fzernozakup],
        FermInfo[idx][f1zams],
        FermInfo[idx][f2zams],
        FermInfo[idx][f3zams],
        FermInfo[idx][f1fermers],
        FermInfo[idx][f2fermers],
        FermInfo[idx][f3fermers],
        FermInfo[idx][f4fermers],
        FermInfo[idx][f5fermers],
        FermInfo[idx][fmestoX],
        FermInfo[idx][fmestoY],
        FermInfo[idx][fmestoZ],
        FermInfo[idx][fidferm],
        FermInfo[idx][frandoms],
        FermInfo[idx][frandoms2],
        FermInfo[idx][vnutricar],
        FermInfo[idx][flock]
        );
        if(idx == 0)
        {
            file2 = fopen("gamefiles/ferm.cfg", io_write);
        }
        else
        {
            file2 = fopen("gamefiles/ferm.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%d|%d|%s|%s|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%f|%f|%f|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bVworld],
		BizzInfo[idx][bType],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitPlaceX],
	    BizzInfo[idx][bExitPlaceY],
	    BizzInfo[idx][bExitPlaceZ],
	    BizzInfo[idx][bOutX],
	    BizzInfo[idx][bOutY],
	    BizzInfo[idx][bOutZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd],
		BizzInfo[idx][b2Till],
		BizzInfo[idx][bPrice],
		BizzInfo[idx][bBarX],
		BizzInfo[idx][bBarY],
		BizzInfo[idx][bBarZ],
 		BizzInfo[idx][bMafia]);
		if(idx == 0)
		{
			file2 = fopen("gamefiles/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("gamefiles/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
 	return true;
}
stock BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return true;
}
stock ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return true;
}
stock OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock LSNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!lNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock LVNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!LvNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsAArm(i) || IsAMedic(i) || IsAMayor(i) || IsACop(i) || PlayerInfo[i][pAdmin] != 0 && BigEar[i] == 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pAdmin] != 0 && BigEar[i] == 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family || PlayerInfo[i][pAdmin] != 0 && BigEar[i] == 1)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}
public SendGangMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pMember] == 17 || PlayerInfo[i][pMember] == 18 )
		    {
                if(!gFam[i])
                {
                    SendClientMessage(i, color, string);
				}
			}
		}
	}
}
stock PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}
public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}
public OnFilterScriptInit()
{
	new    string[STR], File:file;
	if((file = fopen("anticensura.cfg",io_read)))
	{
	while(fread(file,string))
	{
	for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
	Swears[num_words] = string;
	printf("%s", string);
	num_words++;
	}
	fclose(file);
	}
	return true;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
	SetPVarInt(playerid, "NoAB", 1);
	new cmd[512];
	new tmp[512];
	new vehicleid = GetPlayerVehicleID(playerid);
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, 0xFFD5BBAA, "Пожалуйста войдите/зарегистрируйтесь");
	if(GetPVarInt(playerid,"AntiFlood") > gettime()) return SendClientMessage(playerid, 0xFFD5BBAA, "Не флуди!");
    SetPVarInt(playerid,"AntiFlood", gettime()+1);
	if(strcmp(cmdtext, "/deal", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,2231.0784,1619.5814,1007.1223))
		{
			if(PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вы не крупье");
			if(PlayerInfo[playerid][pForma] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вам необходимо начать рабочий день");
			if(Barabanchik != 0.00) return SendClientMessage(playerid, COLOR_GREY,"Рулетка уже запущена");
			new bool:proverka;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RuletkaStol[i] ==1 && RuletStart[i] == true) proverka = true;
			}
			if(proverka == false) return SendClientMessage(playerid, COLOR_GREY,"Никто ещё не сделал ставку за этим столом");
			KrupieStart[0] = true;
			KrupieTime[0] = 0;
			krupiedi[0] = playerid;
			RuletTimer = SetTimer("RuletCheck", 100, 1);
			MoveObject(Braban[0],2229.5522,1619.0495,1006.1697,0.1,0.00,0.00,1.00);
			BarabanTimer[0] = SetTimer ("BarabanMovie",5,1);
			Barabanchik = 0.00;
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2242.4980,1619.5001,1006.2346))
		{
			if(PlayerInfo[playerid][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вы не крупье");
			if(PlayerInfo[playerid][pForma] != 8) return SendClientMessage(playerid, COLOR_GREY,"Вам необходимо начать рабочий день");
			if(Barabanchik2 != 0.00) return SendClientMessage(playerid, COLOR_GREY,"Рулетка уже запущена");
			new bool:proverka;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(RuletkaStol[i] == 2 && RuletStart[i] == true) proverka = true;
			}
			if(proverka == false) return SendClientMessage(playerid, COLOR_GREY,"Никто ещё не сделал ставку за этим столом");
			KrupieStart[1] = true;
			KrupieTime[1] = 0;
			krupiedi[1] = playerid;
			RuletTimer2 = SetTimer("RuletCheck2", 100, 1);
			MoveObject(Braban[1],2241.1545,1619.2888,1006.1536,0.1,0.00,0.00,1.00);
			BarabanTimer[1] = SetTimer ("BarabanMovie2",5,1);
			Barabanchik2 = 0.00;
			return true;
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Вы не возле игрального стола!");
	}
	if(strcmp(cmd, "/setmng", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] != kaligmaf1) return SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setmng [id]");
		new para1;
		para1 = ReturnUser(tmp);
		if(IsPlayerConnected(para1))
		{
			if(para1 != INVALID_PLAYER_ID)
			{
				if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
				if(PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
				if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn");
				new string[65];
				format(string, sizeof(string), "%s назначил вас менеджером казино Калигула", PlayerInfo[playerid][pName]);
				SendClientMessage(para1, 0x6495EDFF, string);
				format(string, sizeof(string), "Вы назначили %s менеджером казино Калигула", PlayerInfo[para1][pName]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				PlayerInfo[para1][pLeader] = 8;
				PlayerInfo[para1][pRank] = 2;
			}
  			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/nofire", true) == 0)
    {
         if(PlayerInfo[playerid][pMember] != 34 && PlayerInfo[playerid][pLeader] != 34) return SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не пожарный!");
         if(FireInProgress == false) return SendClientMessage(playerid, COLOR_LIGHTRED, "Сейчас нету пожаров!");
         SetPlayerCheckpoint(playerid,cf[0],cf[1],cf[2],10.0);
         gPlayerCheckpointStatus[playerid] = CHECKPOINT_FIRE;
         bypahan[playerid] = true;
         new string[66];
         format(string, sizeof(string), "Пожарный %s принял вызов, он едет на помощь",PlayerInfo[playerid][pName]);
         SendFamilyMessage(34, COLOR_LIGHTBLUE, string);
    }
   	if(strcmp(cmd, "/use call", true) == 0)
    {
         if(PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не детектив");
         if(CrInProgress == false) return SendClientMessage(playerid, COLOR_LIGHTRED, "Сейчас нет преступлений");
         SetPlayerCheckpoint(playerid,xdeadp,ydeadp,zdeadp,10.0);
         new string[54];
         format(string, sizeof(string), "Детектив %s отправился на вызов",PlayerInfo[playerid][pName]);
         SendJobMessage(9, COLOR_LIGHTBLUE, string);
    }
	if(strcmp(cmd, "/areklama", true) == 0 || strcmp(cmd, "/arek", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 5) ShowPlayerDialog(playerid, 5205, DIALOG_STYLE_LIST, "Добавить объявление в щит", "Объявление 1\nОбъявление 2\nОбъявление 3", "Дальше", "Отмена");
            else SendClientMessage(playerid, COLOR_GRAD2, "Вы не администратор");
        }
        return true;
    }
    else if(strcmp(cmd, "/clothes", true) == 0 || strcmp(cmd, "/cloth", true) == 0)
    {
        if(IsPlayerConnected(playerid)) ShowPlayerDialog(playerid, 6046, DIALOG_STYLE_LIST, "Одежда>>Выберите действие", "Голова\nТорс\nДоп.слот\nСнять всё\nОдеть всё\nУдалить одежду", "Дальше", "Отмена");
        return true;
    }
    else if(strcmp(cmd,"/fightingstyle",true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        new fightstyle;
        tmp = strtok(cmdtext, idx);
        fightstyle = strval(tmp);
        SetPlayerFightingStyle(playerid,fightstyle);
        return true;
	}
	/*else if(strcmp(cmd,"/listensounds",true) == 0)//Для звуков
    {
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        tmp = strtok(cmdtext, idx);
        lastsound = strval(tmp);
		SetTimerEx("ListenSounds", 250, true, "i", playerid);
		return true;
    }*/
    else if(strcmp(cmd,"/playerplaysound",true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
    	new giveplayaid, idsound, Float:SX,Float:SY,Float:SZ;
    	tmp = strtok(cmdtext, idx);
        giveplayaid = ReturnUser(tmp);
        if(giveplayaid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Неверный ID");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "/playerplaysound [id][soundid][x][y][z]");
		idsound = strval(tmp);
		tmp = strtok(cmdtext, idx);
		SX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		SY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		SZ = floatstr(tmp);
		PlayerPlaySound(giveplayaid,idsound,SX,SY,SZ);
		return true;
    }
    else if(strcmp(cmd,"/applyanimation",true) == 0)
    {
    	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
    	new giveplayaid, animlibn[32], animnamed[64], Float:delta, loops, xlock, ylock, freezer, atime, forsync;
    	tmp = strtok(cmdtext, idx);
        giveplayaid = ReturnUser(tmp);
        if(giveplayaid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Неверный ID");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "/applyanimation [id][lib][anim][Speed(4.1)][loop][lockx][locky][freeze][timer][forcesync]");
		format(animlibn,sizeof(animlibn),"%s",tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "/applyanimation [id][lib][anim][Speed(4.1)][loop][lockx][locky][freeze][timer][forcesync]");
		format(animnamed,sizeof(animlibn),"%s",tmp);
		tmp = strtok(cmdtext, idx);
		delta = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		delta = strval(tmp);
		tmp = strtok(cmdtext, idx);
		xlock = strval(tmp);
		tmp = strtok(cmdtext, idx);
		ylock = strval(tmp);
		tmp = strtok(cmdtext, idx);
		freezer = strval(tmp);
		tmp = strtok(cmdtext, idx);
		atime = strval(tmp);
		tmp = strtok(cmdtext, idx);
		forsync = strval(tmp);
		ApplyAnimation(giveplayaid,animlibn,animnamed,delta,loops,xlock,ylock,freezer,atime,forsync);
		return true;
    }
    if(strcmp(cmd,"/giveobject",true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        new giveplayaid, aoslot, aobjectid, boneid, Float: aoffsetX, Float: aoffsetY, Float: aoffsetZ, Float: arotX, Float: arotY, Float: arotZ, Float: ascaleX, Float: ascaleY, Float: ascaleZ;
        tmp = strtok(cmdtext, idx);
        giveplayaid = ReturnUser(tmp);
        if(giveplayaid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"Неверный ID");
        tmp = strtok(cmdtext, idx);
		aoslot = strval(tmp);
		if(aoslot >= 10) return SendClientMessage(playerid,COLOR_GREY,"Лимит слотов - 10!(0 считается слотом)");
		tmp = strtok(cmdtext, idx);
		aobjectid = strval(tmp);
        if(aobjectid < 1 || aobjectid > 21000) return SendClientMessage(playerid, COLOR_GREY,"Введите: /giveobject [id игрока][слот][id объекта(1-20000][кость]");
        tmp = strtok(cmdtext, idx);
		boneid = strval(tmp);
		if(boneid >= 19  || boneid == 0) return SendClientMessage(playerid,COLOR_GREY,"Лимит костей - 18!(0 нельзя использовать)");
		tmp = strtok(cmdtext, idx);
		aoffsetX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		aoffsetY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		aoffsetZ = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotZ = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		ascaleX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		ascaleY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		ascaleZ = floatstr(tmp);
		SetPlayerAttachedObject( giveplayaid, aoslot, aobjectid, boneid, aoffsetX, aoffsetY, aoffsetZ, arotX, arotY, arotZ, ascaleX, ascaleY, ascaleZ );
		return true;
    }
    if(strcmp(cmd,"/vehobject",true) == 0)
    {
		new aobjectid, Float: aoffsetX, Float: aoffsetY, Float: aoffsetZ, Float: arotX, Float: arotY, Float: arotZ;
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в машине");
        tmp = strtok(cmdtext, idx);
		objnum = strval(tmp);
		if(objnum < 1 || aobjectid > 5) return SendClientMessage(playerid, COLOR_GREY,"Всего 5 слотов");
		DestroyObject(obje[objnum]);
        tmp = strtok(cmdtext, idx);
		aobjectid = strval(tmp);
		if(aobjectid < 1 || aobjectid > 20000) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /vehobject [слот(1-5)] [id объекта(1-20000] [x] [y] [z] [rotx] [roty] [rotz]");
        tmp = strtok(cmdtext, idx);
		aoffsetX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		aoffsetY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		aoffsetZ = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotX = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotY = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		arotZ = floatstr(tmp);
        obje[objnum] = CreateObject(aobjectid, aoffsetX, aoffsetY, aoffsetZ, arotX, arotY, arotZ);
        AttachObjectToVehicle(obje[objnum], GetPlayerVehicleID(playerid), aoffsetX, aoffsetY, aoffsetZ, arotX, arotY, arotZ);
        new string[128];
		format(string,sizeof(string),"Объект %d установлен в слот(%f,%f,%f,%f,%f,%f)",aobjectid, objnum, aoffsetX, aoffsetY, aoffsetZ, arotX, arotY, arotZ);
		SendClientMessage(playerid,COLOR_WHITE,string);
		return true;
    }
    if(strcmp(cmd,"/addvehcomp",true) == 0)
    {
		new aobjectid;
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в машине");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /addvehcomp [id компонента]");
		aobjectid = strval(tmp);
        AddVehicleComponent(GetPlayerVehicleID(playerid), aobjectid);
		SendClientMessage(playerid, COLOR_WHITE, "Объект поставлен");
		return true;
    }
    if(strcmp(cmd,"/delvehobject",true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
        if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в машине");
		DestroyObject(obje[objnum]);
		SendClientMessage(playerid, COLOR_WHITE, "Объект удалён");
		return true;
    }
    else if(strcmp(cmdtext,"/testc",true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 2) return SetPlayerPos(playerid, 0.8604, -3.7951, 1001.2999);
		else return SendClientMessage(playerid,COLOR_GREY,"Тесты доступны только для админов от 2 лвла");
	}
	else if(strcmp(cmdtext,"/vehid",true) == 0)
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PlayerInfo[playerid][pAdmin] >= 1 || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER && PlayerInfo[playerid][pAdmin] >= 1)
        {
			new string[12];
			format(string,sizeof(string),"ID ТС - %d",GetPlayerVehicleID(playerid));
            SendClientMessage(playerid,COLOR_WHITE,string);
            return true;
        }
    }
    else if(strcmp(cmdtext,"/rcvehon",true) == 0)
    {
        if(PlayerInfo[playerid][pRCVeh] == 0) return SendClientMessage(playerid,COLOR_GREY,"У вас нет RC ТС.Купите в Zero RC!");
        if(RCController[playerid] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже контролируете RC ТС");
        if(GetPlayerState(playerid)!= PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,COLOR_GREY,"Вам негде разместить RC ТС");
        PlaySoundNearPlayer(playerid,25800);
        ApplyAnimation(playerid,"CAMERA","piccrch_take",4.1,0,0,0,1,1,1);
		SetPlayerAttachedObject(playerid,9,18875,6,0.08,0.08,0.03,100,240.0,10,1.0,1.0,1.0);
        RCControlTimer = SetTimerEx("RCControl", 1500, false,"i",playerid);
        return true;
	}
	else if(strcmp(cmdtext,"/tv",true) == 0)
    {
        if(IsATV2(playerid) || IsATV(playerid) || WatchingTV[playerid] == 1)
        {
            if(WatchingTV[playerid] != 1)
        	{
    			PlayerInt[playerid] = GetPlayerInterior(playerid);
				PlayerVirtMir[playerid] = GetPlayerVirtualWorld(playerid);
				GetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			}
			ShowPlayerDialog(playerid, 7102, DIALOG_STYLE_LIST, "TV", "[STV1]Дерби\n[STV1]Мото-гонки\n[STV1]Гонки\n[News]LS News\n[News]SF News\n[News]LV News", "Поставить", "Выключить");
            return true;
        }
    }
    if(strcmp(cmd,"/tipster",true) == 0)
    {
        new x_nr[32];
        new gcp = GetClosestPlayer(playerid);
		x_nr = strtok(cmdtext, idx);
 		if(IsPlayerConnected(playerid))
		{
			if(!strlen(x_nr)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tipster [действие] (set, get, on/off)");
			if(PlayerInfo[playerid][pMember] != 2) return SendClientMessage(playerid, COLOR_RED, "Вы не состоите в FBI");
			if(strcmp(x_nr, "set",true) == 0)
			{
			    if(SpyingType[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет жучка");
			    switch(GetPlayerState(playerid))
			    {
			        case PLAYER_STATE_ONFOOT:
			        {
            			if(GetDistanceBetweenPlayers(playerid,gcp) > 2) return SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
            			SpyingID[playerid] = gcp;
            			SpyingType[playerid] = 1;
                        ApplyAnimation(playerid, "GRENADE", "WEAPON_trowu", 4.1, 0, 0, 0, 0, 0);
            			SendClientMessage(playerid, COLOR_BLUE, "Вы успешно поставили жучок. Чтобы начать прослушку /tipster on, чтобы взять - /tipster get");
            			return true;
					}
					case PLAYER_STATE_DRIVER,PLAYER_STATE_PASSENGER:
					{
         				SpyingID[playerid] = GetPlayerVehicleID(playerid);
         				SpyingType[playerid] = 2;
          				SendClientMessage(playerid, COLOR_BLUE, "Вы успешно поставили жучок. Чтобы начать прослушку /tipster on, чтобы взять - /tipster get");
          				return true;
        			}
        		}
			}
			if(strcmp(x_nr, "get",true) == 0)
			{
			    switch(SpyingType[playerid])
			    {
			        case 1:
					{
            			if(GetDistanceBetweenPlayers(playerid,gcp) > 2) return SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
  						if(SpyingID[playerid] == gcp) return SendClientMessage(playerid, COLOR_RED, "На этом игроке нет жучка");
    					SpyingID[playerid] = -1;
    					SpyingType[playerid] = 0;
    					ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.1, 0, 0, 0, 0, 0);
    					SendClientMessage(playerid, COLOR_GREEN, "Вы взяли жучок с игрока. Теперь вы снова можете поставить жучок");
    					return true;
					}
					case 2:
					{
						if(GetPlayerVehicleID(playerid) != SpyingID[playerid]) return SendClientMessage(playerid, COLOR_RED, "Здесь нет жучка");
						SpyingID[playerid] = -1;
						SpyingType[playerid] = 0;
  						SendClientMessage(playerid, COLOR_GREEN, "Вы взяли жучок с машины. Теперь вы снова можете поставить жучок");
  						return true;
        		    }
        		}
			}
			if(strcmp(x_nr, "on",true) == 0)
			{
				switch(SpyingType[playerid])
				{
    				case 1:
					{
					    if(SpyingID[playerid] == -1) return SendClientMessage(playerid, COLOR_RED, "Жучок не установлен");
	    				SpyingType[playerid] = 3;
						SendClientMessage(playerid, COLOR_GREEN, "Шпионаж начат,выключить жучок - /tipster off");
						return true;
					}
					case 2:
					{
					    if(SpyingID[playerid] == -1) return SendClientMessage(playerid, COLOR_RED, "Жучок не установлен");
	    				SpyingType[playerid] = 4;
						SendClientMessage(playerid, COLOR_GREEN, "Шпионаж начат,выключить жучок - /tipster off");
						return true;
					}
					case 3,4: SendClientMessage(playerid, COLOR_RED, "Вы уже прослушиваете жучок!Выключить жучок - /tipster off");
					default: SendClientMessage(playerid, COLOR_RED, "Жучок не установлен");
        		}
			}
			if(strcmp(x_nr, "off",true) == 0)
			{
				switch(SpyingType[playerid])
				{
				    case 1,2: SendClientMessage(playerid, COLOR_RED, "Жучок не включен");
				    case 3:
				    {
				        SpyingType[playerid] = 1;
                		SendClientMessage(playerid, COLOR_GREEN, "Шпионаж закончен");
                		return true;
					}
					case 4:
					{
					    SpyingType[playerid] = 2;
                		SendClientMessage(playerid, COLOR_GREEN, "Шпионаж закончен");
                		return true;
					}
					default: SendClientMessage(playerid, COLOR_RED, "Жучок не установлен");
        		}
			}
		}
		return true;
    }
    else if(strcmp(cmdtext,"/setcamera",true) == 0)
    {
        switch(PlayerInfo[playerid][pMember])
        {
            case 9:
            {
                GetPlayerCameraPos(playerid,newscamx[1],newscamy[1],newscamz[1]);
                newscamw[1] = GetPlayerVirtualWorld(playerid);
                newscami[1] = GetPlayerInterior(playerid);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно установили камеру!Теперь определите,куда она будет смотреть с помощью /setcamerala");
				return true;
            }
            case 16:
            {
                GetPlayerCameraPos(playerid,newscamx[0],newscamy[0],newscamz[0]);
                newscamw[0] = GetPlayerVirtualWorld(playerid);
                newscami[0] = GetPlayerInterior(playerid);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно установили камеру!Теперь определите,куда она будет смотреть с помощью /setcamerala");
				return true;
            }
            case 20:
			{
			    GetPlayerCameraPos(playerid,newscamx[2],newscamy[2],newscamz[2]);
			    newscamw[2] = GetPlayerVirtualWorld(playerid);
                newscami[2] = GetPlayerInterior(playerid);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно установили камеру!Теперь определите,куда она будет смотреть с помощью /setcamerala");
				return true;
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
        }
		return true;
	}
	else if(strcmp(cmdtext,"/setcamerala",true) == 0)
    {
        switch(PlayerInfo[playerid][pMember])
        {
            case 9:
            {
                if(newscamx[1] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
                GetPlayerPos(playerid,newscamlax[1],newscamlay[1],newscamlaz[1]);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно направили камеру!Для просмотра изображения введите /testcamera,для включения трансляции - /stream");
				return true;
            }
            case 16:
            {
                if(newscamx[0] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
                GetPlayerPos(playerid,newscamlax[0],newscamlay[0],newscamlaz[0]);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно направили камеру!Для просмотра изображения введите /testcamera,для включения трансляции - /stream");
				return true;
            }
            case 20:
			{
			    if(newscamx[2] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
			    GetPlayerPos(playerid,newscamlax[2],newscamlay[2],newscamlaz[2]);
                SendClientMessage(playerid, COLOR_BLUE, "Вы успешно направили камеру!Для просмотра изображения введите /testcamera,для включения трансляции - /stream");
				return true;
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
        }
		return true;
	}
	else if(strcmp(cmdtext,"/testcamera",true) == 0)
    {
        if(WatchingTV[playerid] == 1)
        {
            SetPlayerInterior(playerid,PlayerInt[playerid]);
            SetPlayerVirtualWorld(playerid,PlayerVirtMir[playerid]);
            SetCameraBehindPlayer(playerid);
            TogglePlayerControllable(playerid, 1);
            WatchingTV[playerid] = 0;
            return true;
        }
        switch(PlayerInfo[playerid][pMember])
        {
            case 9:
            {
                TogglePlayerControllable(playerid, 0);
                PlayerInt[playerid] = GetPlayerInterior(playerid);
				PlayerVirtMir[playerid] = GetPlayerVirtualWorld(playerid);
                SetPlayerCameraPos(playerid,newscamx[1],newscamy[1],newscamz[1]);
                SetPlayerCameraLookAt(playerid,newscamlax[1],newscamlay[1],newscamlaz[1],2);
                SetPlayerVirtualWorld(playerid,newscamw[1]);
                SetPlayerInterior(playerid,newscami[1]);
                WatchingTV[playerid] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "Чтобы выйти ещё раз введите /testcamera");
				return true;
            }
            case 16:
            {
                TogglePlayerControllable(playerid, 0);
                PlayerInt[playerid] = GetPlayerInterior(playerid);
				PlayerVirtMir[playerid] = GetPlayerVirtualWorld(playerid);
                SetPlayerCameraPos(playerid,newscamx[0],newscamy[0],newscamz[0]);
                SetPlayerCameraLookAt(playerid,newscamlax[0],newscamlay[0],newscamlaz[0],2);
                SetPlayerVirtualWorld(playerid,newscamw[0]);
                SetPlayerInterior(playerid,newscami[0]);
                WatchingTV[playerid] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "Чтобы выйти ещё раз введите /testcamera");
				return true;
            }
            case 20:
			{
			    TogglePlayerControllable(playerid, 0);
                PlayerInt[playerid] = GetPlayerInterior(playerid);
				PlayerVirtMir[playerid] = GetPlayerVirtualWorld(playerid);
                SetPlayerCameraPos(playerid,newscamx[2],newscamy[2],newscamz[2]);
                SetPlayerCameraLookAt(playerid,newscamlax[2],newscamlay[2],newscamlaz[2],2);
                SetPlayerVirtualWorld(playerid,newscamw[2]);
                SetPlayerInterior(playerid,newscami[2]);
                WatchingTV[playerid] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "Чтобы выйти ещё раз введите /testcamera");
				return true;
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
        }
		return true;
	}
    else if(strcmp(cmdtext,"/stream",true) == 0)
    {
        switch(PlayerInfo[playerid][pMember])
        {
            case 9:
            {
                if(newscamx[1] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
        		if(newscamlax[1] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Установите направление камеры с помощью /setcamerala");
        		new string[39];
                if(newscamstream[1] == 1)
                {
                    format(string,sizeof(string),"%s закончил эфир",PlayerInfo[playerid][pName]);
                    SendFamilyMessage(9,COLOR_BLUE,string);
                    for(new i = 0; i < MAX_PLAYERS; i++)
					{
						GetPlayerCameraPos(i,newscamlax[1],newscamlay[1],newscamlaz[1]);
						if(newscamlax[1] == newscamx[1])
						{
          					SetPlayerInterior(playerid, PlayerInt[playerid]);
							SetPlayerVirtualWorld(playerid, PlayerVirtMir[playerid]);
							SetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
							WatchingTV[playerid] = 0;
						    SendClientMessage(i, COLOR_GREY, "Эфир окончен");
						}
					}
					newscamlax[1] = 0.0; newscamlay[1] = 0.0; newscamlaz[1] = 0.0; newscamx[1] = 0.0; newscamy[1] = 0.0; newscamz[1] = 0.0; newscami[1] = 0; newscamw[1] = 0; newscamstream[1] = 0;
                    return true;
                }
                newscamstream[1] = 1;
                format(string,sizeof(string),"%s начал эфир",PlayerInfo[playerid][pName]);
                SendFamilyMessage(9,COLOR_BLUE,string);
                SendClientMessage(playerid,COLOR_WHITE,"Чтобы закончить эфир введите /stream ещё раз");
				return true;
            }
            case 16:
            {
                if(newscamx[0] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
        		if(newscamlax[0] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Установите направление камеры с помощью /setcamerala");
        		new string[39];
                if(newscamstream[0] == 1)
                {
                	format(string,sizeof(string),"%s закончил эфир",PlayerInfo[playerid][pName]);
                	SendFamilyMessage(16,COLOR_BLUE,string);
                	for(new i = 0; i < MAX_PLAYERS; i++)
					{
						GetPlayerCameraPos(i,newscamlax[0],newscamlay[0],newscamlaz[0]);
						if(newscamlax[0] == newscamx[0])
						{
	    					SetPlayerInterior(playerid, PlayerInt[playerid]);
							SetPlayerVirtualWorld(playerid, PlayerVirtMir[playerid]);
							SetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
							WatchingTV[playerid] = 0;
						    SendClientMessage(i, COLOR_GREY, "Эфир окончен");
						}
					}
					newscamlax[0] = 0.0; newscamlay[0] = 0.0; newscamlaz[0] = 0.0; newscamx[0] = 0.0; newscamy[0] = 0.0; newscamz[0] = 0.0; newscami[0] = 0; newscamw[0] = 0; newscamstream[0] = 0;
     				return true;
                }
                newscamstream[0] = 1;
                format(string,sizeof(string),"%s начал эфир",PlayerInfo[playerid][pName]);
                SendFamilyMessage(16,COLOR_BLUE,string);
                SendClientMessage(playerid,COLOR_WHITE,"Чтобы закончить эфир введите /stream ещё раз");
				return true;
            }
            case 20:
			{
			    if(newscamx[2] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Сначала установите камеру с помощью /setcamera");
        		if(newscamlax[2] == 0.0) return SendClientMessage(playerid,COLOR_GREY,"Установите направление камеры с помощью /setcamerala");
        		new string[39];
			    if(newscamstream[2] == 1)
                {
                	format(string,sizeof(string),"%s закончил эфир",PlayerInfo[playerid][pName]);
                	SendFamilyMessage(20,COLOR_BLUE,string);
                	for(new i = 0; i < MAX_PLAYERS; i++)
					{
						GetPlayerCameraPos(i,newscamlax[2],newscamlay[2],newscamlaz[2]);
						if(newscamlax[2] == newscamx[2])
						{
	    					SetPlayerInterior(playerid, PlayerInt[playerid]);
							SetPlayerVirtualWorld(playerid, PlayerVirtMir[playerid]);
							SetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
							WatchingTV[playerid] = 0;
						    SendClientMessage(i, COLOR_GREY, "Эфир окончен");
						}
					}
					newscamlax[2] = 0.0; newscamlay[2] = 0.0; newscamlaz[2] = 0.0; newscamx[2] = 0.0; newscamy[2] = 0.0; newscamz[2] = 0.0; newscami[2] = 0; newscamw[2] = 0; newscamstream[2] = 0;
     				return true;
                }
                newscamstream[2] = 1;
                format(string,sizeof(string),"%s начал эфир",PlayerInfo[playerid][pName]);
                SendFamilyMessage(20,COLOR_BLUE,string);
                SendClientMessage(playerid,COLOR_WHITE,"Чтобы закончить эфир введите /stream ещё раз");
				return true;
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
        }
		return true;
	}
    else if(strcmp(cmdtext,"/sleep",true) == 0)
    {
        SetPlayerAttachedObject(playerid,9,2187,1,-0.1,0.6,4.1,90,0,90,8.5,1.1,0.7);
    	ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 1, 0, 1, 1, 0 );
    	SetPlayerChatBubble(playerid,"спит",COLOR_PURPLE,10.0,10000);
		return true;
	}
 	/*else if(strcmp(cmdtext,"/testmad",true) == 0)
    {
        ShowPlayerDialog(playerid, 3439, DIALOG_STYLE_LIST, "Начать урок по изучинию ускуства", "[1] Начать урок по Box\n[2] Начать урок по Kong-Fu\n[3] Начать урок по Kick-Box\n[4] Завершить урок по Box\n[5] Завершить урок по Kong-Fu\n[6] Завершить урок по Kick-Box", "Выбрать", "Отмена");
		return true;
	}*/
    else if(strcmp(cmdtext,"/piss",true) == 0)
    {
        if(GetPlayerState(playerid)!= PLAYER_STATE_ONFOOT) return true;
        if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        if(PlayerInfo[playerid][pSex] == 1)
        {
            if(PlayerInfo[playerid][pPissTime] <= 3600)
            {
                SetPlayerSpecialAction(playerid,68);
                SetPlayerDrunkLevel (playerid, 0);
                new string[41];
                format(string, sizeof(string), "%s справляет нужду", PlayerInfo[playerid][pName]);
                ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[playerid][pPissTime] = 7200;
                KillTimer(pisstimer);
                return true;
            }
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не хотите в туалет");
        }
        return true;
    }
    if(strcmp(cmd, "/untown", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
        {
            new vehplid=GetPlayerVehicleID(playerid);
            DetachTrailerFromVehicle(vehplid);
            SendClientMessage(playerid, COLOR_GRAD1, "Отцеплено");
            return true;
        }
    }
    if(strcmp(cmd, "/towncar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
        	if(PlayerInfo[playerid][pRope] < 1 && GetVehicleModel(vehicleid) != 525)
            {
            	SendClientMessage(playerid, COLOR_GRAD1, "У Вас нет троса. Его можно купить в магазине 24/7");
            	PlayerInfo[playerid][pRope] = 0;
            	return true;
            }
            new cartievehplid=GetPlayerVehicleID(playerid);
            new Float:cartieplAngle;
			GetVehicleZAngle(cartievehplid, cartieplAngle);
            new Float:cartiecrAngle,Float:cartieAngle,Float:cartieAngle2;
            new Float:cartieposx, Float:cartieposy, Float:cartieposz;
            new Float:cartieoldposx, Float:cartieoldposy, Float:cartieoldposz;
            new Float:cartietempposx, Float:cartietempposy, Float:cartietempposz;
            new Float:cartieRadi=6.0;
            new Float:cartieAngRange=90.0;
            for(new i = 0; i < MAX_VEHICLES; i++)
            {
            	if(i == cartievehplid) continue;
            	GetVehiclePos(cartievehplid, cartieposx, cartieposy, cartieposz);
            	GetVehiclePos(i, cartieoldposx, cartieoldposy, cartieoldposz);
            	cartietempposx = (cartieoldposx -cartieposx);
            	cartietempposy = (cartieoldposy -cartieposy);
            	cartietempposz = (cartieoldposz -cartieposz);
            	if (((cartietempposx < cartieRadi) && (cartietempposx > -cartieRadi)) && ((cartietempposy < cartieRadi) && (cartietempposy > -cartieRadi)) && ((cartietempposz < cartieRadi) && (cartietempposz > -cartieRadi)))
            	{
            		GetVehicleZAngle(i, cartiecrAngle);
                	cartieAngle = (cartieplAngle -cartiecrAngle);
                	cartieAngle2= (cartieAngle-180.0);
                	if (( ((cartieAngle < cartieAngRange) && (cartieAngle > -cartieAngRange)) || ((cartieAngle2 < cartieAngRange) && (cartieAngle2 > -cartieAngRange)) ))
                	{
                		AttachTrailerToVehicle(i, cartievehplid);
                    	SendClientMessage(playerid, COLOR_GRAD1, "Автомобиль подцеплен. Отцепить: /untown");
                    	PlayerInfo[playerid][pRope] -= 1;
                    	return true;
                 	}
       			}
        	}
            SendClientMessage(playerid, COLOR_GRAD1, "Подъедьте поближе к автомобилю");
		}
        return true;
    }
    if(strcmp(cmd, "/def", true) == 0)
	{
	    if(!IsAMedic(playerid) && PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не медик");
	    if(TazerTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Дефибриллятор ещё не зарядился!");
        for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(ProxDetectorS(3.0,playerid,i) && GetPlayerState(i) == PLAYER_STATE_WASTED)
			{
				if(i != playerid)
				{
					GetPlayerPos(i,defx,defy,defz);
					defi = GetPlayerInterior(playerid);
					defv = GetPlayerVirtualWorld(playerid);
					ApplyAnimation(playerid, "MEDIC", "CPR",4.0,0,0,0,0,0,1);
					new string[44];
					format(string, sizeof(string), "Вы вернули %s к жизни",PlayerInfo[i][pName]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "%s вернул вас к жизни",PlayerInfo[playerid][pName]);
					SendClientMessage(i, COLOR_WHITE, string);
					format(string,sizeof(string),"возвращает к жизни %s",PlayerInfo[i][pName]);
                	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,10.0,10000);
                	Tazer[playerid] = 1;
                	TazerTime[playerid] = 30;
					return true;
				}
			}
		}
    }
    if(strcmp("/wankin", cmdtext, true) == 0)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 0, 0, 0, 0, 0);
        new string[38];
        format(string, sizeof(string), "%s мастурбирует", PlayerInfo[playerid][pName]);
        ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        return true;
    }
    if(strcmp(cmd, "/kiss", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	       	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /kiss [id]");
	    	giveplayerid = ReturnUser(tmp);
	       	if(IsPlayerConnected(giveplayerid))
	    	{
                if(ProxDetectorS(5.0, playerid, giveplayerid))
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Нельзя поцеловать самого себя"); return true; }
            	    SetPosInFrontOfPlayer(playerid,giveplayerid,1);
            	    new Float:a;GetPlayerFacingAngle(playerid,a);
            	    SetPlayerFacingAngle(giveplayerid,180+a);
            	    if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
            	    ApplyAnimation(giveplayerid,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
            	    ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,1);
	        	    new string[39];
	        	    format(string, sizeof(string), "%s поцеловал(а) %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
            	    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
        	else return SendClientMessage(playerid,0xFF0000AA,"Игрок не найден");
        }
    }
    if(strcmp(cmdtext, "/sme", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] != 0)
		{
        	new currentveh;
        	new Float:angle;
        	currentveh = GetPlayerVehicleID(playerid);
        	GetVehicleZAngle(currentveh, angle);
        	SetVehicleZAngle(currentveh, angle += 180);
        	SendClientMessage(playerid,COLOR_WHITE, "Ваше транспортное средство было развернуто.");
        	return true;
        }
    }
    if(strcmp(cmd, "/nointim", true) == 0)
    {
        if(PlayerInfo[playerid][pDonateRank] >= 4)
        {
			if(PlayerInfo[playerid][pNointim] == 0)
			{
                PlayerInfo[playerid][pNointim] = 1;
                SendClientMessage(playerid,COLOR_GREY,"Вы запретили вступать с собой в сексуальные контакты");
			}
            else if(PlayerInfo[playerid][pNointim] == 1)
			{
                PlayerInfo[playerid][pNointim] = 0;
                SendClientMessage(playerid,COLOR_GREY,"Вы разрешили вступать с собой в сексуальные контакты");
			}
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не являетесь Platinum Vip пользователем");
		return true;
	}
    if(strcmp(cmd, "/killme", true) == 0)
    {
        if(PlayerInfo[playerid][pDonateRank] >= 4)
        {
            SetPlayerHealthAC(playerid, 0);
	        PlayerInfo[playerid][pHP] = 0;
	        SendClientMessage(playerid,COLOR_RED,"Вы совершили самоубийство");
	        new string[50];
	        SetPlayerChatBubble(playerid, "совершил(а) самоубийство",COLOR_PURPLE,30.0,10000);
	        format(string, sizeof(string), "%s совершил(а) самоубийство", PlayerInfo[playerid][pName]);
    	    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid,COLOR_GREY,"Вы не являетесь Platinum Vip пользователем");
		return true;
	}
    if(strcmp(cmd, "/gift", true) == 0)
	{
        tmp = strtok(cmdtext,idx);
        new otherplayer = strval(tmp);
        giveplayerid = ReturnUser(tmp);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gift [id]");
        if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_RED, "Нельзя подарить цветы самому себе");
        if(PlayerInfo[playerid][pSlot][10] == 14)
        {
			if(GetDistanceBetweenPlayers(playerid, otherplayer) > 1) return SendClientMessage(playerid,0xFF0000AA," Игрок слишком далеко");
   			if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
			PlayerInfo[playerid][pSlot][10] = 0;
			SaveWeapon(playerid);
			SetPlayerWeapons(playerid);
   			GiveWeapon(giveplayerid,14,1);
   			ApplyAnimation(otherplayer,"KISSING","GIFT_GET",4.1,0,1,1,1,5);
      		ApplyAnimation(playerid,"KISSING","GIFT_GIVE",4.1,0,1,1,1,5);
          	new string[43];
           	format(string, sizeof(string), "%s подарил(а) цветы %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
           	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid,0xFF0000AA," У вас нет цветов");
        return true;
    }
    if(strcmp(cmd, "/minet", true) == 0)
	{
        tmp = strtok(cmdtext,idx);
        new otherplayer = strval(tmp);
        giveplayerid = ReturnUser(tmp);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /minet [id]");
        if(PlayerInfo[playerid][pPrez] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет презервативов (Их можно купить в любом 24/7)");
        if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_RED, "Вы не можете сделать минет самому себе");
        if(PlayerInfo[giveplayerid][pNointim] == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок запретил сексуальные контакты с собой");
        if(GetDistanceBetweenPlayers(playerid, otherplayer) > 1) return SendClientMessage(playerid,0xFF0000AA," Игрок слишком далеко");
        ApplyAnimation(otherplayer,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,5);
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,5);
        SendClientMessage(playerid,0xFF0000AA,"Вы сделали минет");
        SendClientMessage(otherplayer,0xFF0000AA,"Вам сделали минет");
        new string[42];
        format(string, sizeof(string), "%s сделал(а) минет %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
        ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        PlayerInfo[playerid][pPrez] -= 1;
        return true;
    }
    if(strcmp(cmd, "/alarm on",true) == 0 || strcmp(cmd, "/a on", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(vid,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
        }
        return true;
    }
    if(strcmp(cmd, "/alarm off",true) == 0  || strcmp(cmd, "/a off", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
             GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
             SetVehicleParamsEx(vid,engine,lights,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
        }
		return true;
    }
    if(strcmp(cmd, "/bonnet on",true) == 0  || strcmp(cmd, "/kap on", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(vid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
        }
        return true;
    }
    if(strcmp(cmd, "/bonnet off",true) == 0 || strcmp(cmd, "/kap off", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(vid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
        }
        return true;
    }
    if(strcmp(cmd, "/boot on",true) == 0 || strcmp(cmd, "/bag on", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
             GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
             SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
        }
        return true;
    }
    if(strcmp(cmd, "/boot off",true) == 0 || strcmp(cmd, "/bag off", true) == 0)
    {
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
            GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
            SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
        }
        return true;
    }
    if(strcmp(cmd, "/rep",true) == 0 || strcmp(cmd, "/report", true) == 0)
    {
        ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT, "Отправить жалобу", "Вы собираетесь отправить администрации сообщение с жалобой\nОтпровляйте по форме [ID/ник нарушитиля] [Текст жалобы]", "Готово", "Назад");
        return true;
    }
	else if(strcmp(cmd, "/ungag", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть не ниже 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /ungag [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(gag[giveplayerid] == 0) return   SendClientMessage(playerid, COLOR_GREY, "У игрока нет кляпа во рту");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Человек не рядом с вами");
			new string[68];
			gag[giveplayerid] = 0;
			format(string, sizeof(string), "%s вытащил(а) кляп у %s", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
		return true;
	}
	else if(strcmp(cmd, "/takephone", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3)return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть не ниже 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /takephone [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Человек не рядом с вами");
   			if(PlayerInfo[giveplayerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_RED, "У игрока нет телефона");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_RED, "Нельзя забрать телефон у самого себя");
			PlayerInfo[giveplayerid][pPhone] = 0;
			new string[72];
			format(string, sizeof(string), "%s забрал(а) мобильный у %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid, COLOR_RED, "Вам не доступна данная команда");
		return true;
	}
	else if(strcmp(cmd, "/givephone", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pAdmin] > 2)
		{
			if(PlayerInfo[playerid][pRank] < 3)return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть не ниже 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /givephone [id]");
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[giveplayerid][pPhone] == 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть телефон");
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Человек не рядом с вами");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя отдать телефон самому себе");
			PlayerInfo[giveplayerid][pPhone] = 1;
			new string[69];
			format(string, sizeof(string), "%s отдал(а) мобильный %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда!");
		return true;
	}
    if (strcmp(cmdtext, "/lspdg", true) == 0  || strcmp(cmd, "/lspdgate", true) == 0)
    {
        if(PlayerToPoint(10.0,playerid,244.2700, 72.5900, 1003.9000))
        {
 			if(IsAArm(playerid)|| IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pKeys] > 0)
  			{
				MoveObject(oglspd,244.2700, 72.5900, 1003.9000,3.0,0.0000, 0.0000, 0.0000);
    			SetTimer("lspdog", 5000, 0);
    			SendClientMessage(playerid,0xFFFF00AA,"Дверь закроется в течении 5 секунд");
    		}
			else SendClientMessage(playerid,0xAA3333AA,"Вы не состоите в государственных службах");
		}
		return true;
    }
	if(strcmp(cmd, "/muninvite", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /muninvite [id]");
		new para1;
		para1 = ReturnUser(tmp);
		if(PlayerInfo[playerid][pLeader] != kaligmaf1) return SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
		{
			if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(PlayerInfo[para1][pMember] != 8) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в вашей фракции");
			if(PlayerInfo[para1][pRank] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволить крупье(только менеджер)");
			new string[46];
			format(string, sizeof(string), "%s выгнал вас из Казино", PlayerInfo[playerid][pName]);
			SendClientMessage(para1, 0x6495EDFF, string);
			format(string, sizeof(string), "Вы выгнали %s из Казино", PlayerInfo[para1][pName]);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
			PlayerInfo[para1][pLeader] = 0;
			PlayerInfo[para1][pMember] = 0;
			PlayerInfo[para1][pRank] = 0;
			SetPlayerArmourAC(para1, 0);
			DelGun(para1);
			PlayerInfo[para1][pForma] = 0;
			SetPlayerColor(para1, TEAM_HIT_COLOR);
			SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
		}
		return true;
	}
	if(strcmp(cmd, "/amusic", true) == 0 && (PlayerInfo[playerid][pAdmin] >= 6))
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /amusic [радиус] [ссылка]");
        new distance,Float:x,Float:y,Float:z;
        distance = strval(tmp);
        if(distance < 1 || distance > 500) return SendClientMessage(playerid,COLOR_WHITE,"Слишком большая дистанция");
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
        new offset = idx;
        new result[256];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /amusic [радиус] [ссылка]");
        GetPlayerPos(playerid,x,y,z);
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
                StopAudioStreamForPlayer(i);
                PlayAudioStreamForPlayer(i, (result), x,y,z, float(distance),true);
            }
        }
        return true;
    }
    if(strcmp(cmd, "/amusic", true) == 0 && (PlayerInfo[playerid][pAdmin] >= 6))
    {
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i)) StopAudioStreamForPlayer(i);
        }
        return true;
    }
	if(strcmp(cmdtext, "/cinfo", true) == 0)
	{
		if(GetPVarInt(playerid,"SHOWDIALOGID") < gettime())
		{
			if(!IsPlayerInRangeOfPoint(playerid,8.0,2190.8826,1677.7642,11.7998)) return SendClientMessage(playerid, COLOR_RED,"Вы не у казино");
			new string[48];
			format(string, sizeof(string), "Казино Калигула\nПод контролем: %s", kaligmaf);
			ShowPlayerDialog(playerid,8601,DIALOG_STYLE_MSGBOX,"Информация о Казино",string,"Скрыть","");
			SetPVarInt(playerid,"SHOWDIALOGID",gettime()+5);
		}
		return true;
	}
	if(strcmp(cmdtext, "/sellkazino", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] != kaligmaf1) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		if(!IsPlayerInRangeOfPoint(playerid,8.0,2190.8826,1677.7642,11.7998)) return SendClientMessage(playerid, COLOR_GREY,"Вы не у казино");
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
			{
				MafiaBank[0][nLcn] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
			}
			case 6:
			{
				MafiaBank[0][nYakuza] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
			}
			case 14:
			{
				MafiaBank[0][nRm] += 500000;
				SendClientMessage(playerid, COLOR_BLUE, "Вы продали Казино Калигула за 500000 вирт");
			}
			default: return SendClientMessage(playerid, COLOR_RED, "Вы не уполномочены использовать данную команду");
		}
		kaligmaf1 = 0;
		format(kaligmaf,sizeof(kaligmaf),"Нет");
		kaligmaf = "Нет";
		SaveKazino();
		return true;
	}
	if(strcmp(cmdtext, "/buykazino", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14)
		{
			if(!IsPlayerInRangeOfPoint(playerid,8.0,2190.8826,1677.7642,11.7998)) return SendClientMessage(playerid, COLOR_GREY,"Вы не у казино");
			if(kaligmaf1 != 0) return SendClientMessage(playerid, COLOR_GREY,"Казино уже куплено");
			switch(PlayerInfo[playerid][pMember])
			{
				case 5:
				{
					if(MafiaBank[0][nLcn] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nLcn] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"LCN");
					kaligmaf = "LCN";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
				case 6:
				{
					if(MafiaBank[0][nYakuza] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nYakuza] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"Yakuza");
					kaligmaf = "Yakuza";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
				case 14:
				{
					if(MafiaBank[0][nRm] <= 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					MafiaBank[0][nRm] -= 500000;
					format(kaligmaf,sizeof(kaligmaf),"Russian Mafia");
					kaligmaf = "Russian Mafia";
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Казино Калигула за 500000 вирт");
				}
				default: return SendClientMessage(playerid, COLOR_RED, "Вы не уполномочены использовать данную команду");
			}
			kaligmaf1 = PlayerInfo[playerid][pLeader];
			SaveKazino();
			return true;
		}
	}
	if(strcmp(cmd, "/tload",true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid,COLOR_GREY, "Вы не дальнобойщик");
		new maxguz = PlayerInfo[playerid][pDMgruz];
		if(Gruz[playerid] == 0)
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы уже загружены");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tload [количество]");
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 256.4736,1414.5182,10.7075))
			{
				if(PlayerInfo[playerid][pCash] < 2*Benzbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
				if(PlayerInfo[playerid][pCash] < gruz*Benzbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*Benzbuy[0];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[56];
				format(string, sizeof(string), "Вы купили %d тонн(ы) нефти за %d вирт", gruz,Benzbuy[0]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(584, 249.1628,1420.7445,11.1698,269.4982,1,1, 300);
				DriverJob[playerid] = true;
				Gruz[playerid] = 1;
				bGruz[playerid] = 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0,-1046.7723,-670.7208,32.3516))
			{
				if(PlayerInfo[playerid][pCash] < Benzbuy[0])  return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
				if(PlayerInfo[playerid][pCash] < gruz*Benzbuy[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*Benzbuy[1];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[56];
				format(string, sizeof(string), "Вы купили %d тонн(ы) нефти за %d вирт", gruz,Benzbuy[1]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(584,-1043.4102,-686.8473,32.6164,1.1470,1,1, 60);
				DriverJob[playerid] = true;
				Gruz[playerid] = 1;
				bGruz[playerid] = 2;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0,608.7718,847.8765,-43.1532))
			{
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
				if(PlayerInfo[playerid][pCash] < gruz*ugolbuy[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*ugolbuy[0];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[55];
				format(string, sizeof(string), "Вы купили %d тонн(ы) угля за %d вирт", gruz,ugolbuy[0]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(450,588.2112,844.9619,-42.8014,272.4998,1,1, 300);
				DriverJob[playerid] = true;
				Gruz[playerid] = 2;
				bGruz[playerid] = 3;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0,-1873.0896,-1720.2430,21.7500))
			{
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
				if(PlayerInfo[playerid][pCash] < gruz*ugolbuy[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*ugolbuy[1];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[55];
				format(string, sizeof(string), "Вы купили %d тонн(ы) угля за %d вирт", gruz,ugolbuy[1]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(450,-1881.3596,-1689.1852,22.3543,172.1823,1,1, 300);
				DriverJob[playerid] = true;
				Gruz[playerid] = 2;
				bGruz[playerid] = 4;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0,-449.3336,-65.9115,59.4158))
			{
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40");
				if(PlayerInfo[playerid][pCash] < gruz*Buyderevo[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*Buyderevo[0];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[57];
				format(string, sizeof(string), "Вы купили %d тонн(ы) дерева за %d вирт", gruz,Buyderevo[0]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(435,-468.4995,-88.6335,59.8888,354.5496,1,1, 300);
				DriverJob[playerid] = true;
				Gruz[playerid] = 3;
				bGruz[playerid] = 5;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0,-1978.6846,-2434.8274,30.6250))
			{
				new gruz;
				gruz = strval(tmp);
				if(gruz > maxguz) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете увезти столько груза");
				if(gruz < 1 || gruz > 40) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 больше 40 тонн");
				if(PlayerInfo[playerid][pCash] < gruz*Buyderevo[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= gruz*Buyderevo[1];
				PlayerInfo[playerid][pDgruz] += gruz;
				new string[57];
				format(string, sizeof(string), "Вы купили %d тонн(ы) дерева за %d вирт", gruz,Buyderevo[1]*gruz);
				SendClientMessage(playerid, 0x6495EDFF, string);
				CreateVehicle(435,-1970.7585,-2433.0134,30.6250,137.8556,1,1, 300);
				DriverJob[playerid] = true;
				Gruz[playerid] = 3;
				bGruz[playerid] = 6;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не на месте закупки");
		}
		return true;
	}
	else if(strcmp(cmd, "/vip", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 2 && PlayerInfo[playerid][pDonateRank] == 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/v)ip [текст]");
			new string[128];
			if(PlayerInfo[playerid][pDonateRank] == 1) format(string, sizeof(string), "{cd7f32}BRONZE VIP игрок {5da130}%s{92000a}[%d]{cd7f32}:{ffffff} %s", PlayerInfo[playerid][pName], playerid,result);
			else if(PlayerInfo[playerid][pDonateRank] == 2) format(string, sizeof(string), "{c0c0c0}SILVER VIP игрок {5da130}%s{92000a}[%d]{c0c0c0}:{ffffff} %s", PlayerInfo[playerid][pName], playerid,result);
			else if(PlayerInfo[playerid][pDonateRank] == 3) format(string, sizeof(string), "{ffd700}GOLD VIP игрок {5da130}%s{92000a}[%d]{ffd700}:{ffffff} %s", PlayerInfo[playerid][pName], playerid,result);
			else if(PlayerInfo[playerid][pDonateRank] == 4) format(string, sizeof(string), "{808080}PLATINUM VIP игрок {5da130}%s{92000a}[%d]{808080}:{ffffff} %s", PlayerInfo[playerid][pName], playerid,result);
			else if(PlayerInfo[playerid][pAdmin] >= 2) format(string, sizeof(string), "{92000a}Администратор {5da130}%s{92000a}[%d]{808080}:{ffffff} %s", PlayerInfo[playerid][pName], playerid,result);
			SendVipMessage(COLOR_YELLOW, string);
		}
		return true;
	}
	if(strcmp(cmd, "/mole", true) == 0)
	{
		new offset = idx;
		new length = strlen(cmdtext);
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    new string[128];
			format(string, sizeof(string), "NextAgeRP: %s  ",result);
			SendClientMessageToAll(COLOR_NEWS,string);
		}
		return true;
	}
	else if(strcmp(cmd, "/hackbase", true) == 0 || strcmp(cmd, "/hb", true) == 0 )
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_WHITE, "Введите: /hackbase [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Человек не найден");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Человек далеко от вас");
			switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
			{
			    case 490,596..598:
			    {
					new hackbaseusp;
					hackbaseusp = 1 + random(3);
					if(hackbaseusp != 3) return  SendClientMessage(playerid, COLOR_BLUE, "[Ошибка] Вам не удалось взломать полицейскую базу данных");
					new string[87];
					format(string, sizeof(string), "Вы взломали полицейскую базу данных и сняли уровень розыска с %s", PlayerInfo[giveplayerid][pName]);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s взломал полицейскую базу данных и снял(а) с вас уровень розыска", PlayerInfo[playerid][pName]);
					SendClientMessage(giveplayerid, COLOR_BLUE, string);
					PlayerInfo[giveplayerid][pMadWant] = 0;
					SetPlayerWantedLevel(giveplayerid, 0);
					ResetPlayerWeapons (giveplayerid);
				}
				default: SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам нужно находится в служебной машине");
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		return true;
	}
 	else if (strcmp(cmd, "/mpstart", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				ShowPlayerDialog(i, 14155, DIALOG_STYLE_MSGBOX,"{ffa500}Приглашение на мероприятие:","{FFFFFF}Желаете ли вы принять участие в мероприятии от администрации?","Согласится","Отказатся");
				playermp[i] = playerid;
			}
			SendClientMessage(playerid, COLOR_GREEN, "Вы выслали приглашение на мероприятие всем игрокам сервера");
		}
		return true;
	}
	else if(strcmp(cmd, "/jap", true) == 0 || strcmp(cmd, "/japanese", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 6)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: (/jap)anese [Текст]");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
					    new string[128];
						if(PlayerInfo[i][pMember] == 6)
						{
							format(string, sizeof(string), "%s говорит [на Японском языке] %s", PlayerInfo[playerid][pName], result);
							SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
							format(string, sizeof(string), "%s что-то говорит на японском языке", PlayerInfo[playerid][pName]);
							SendClientMessage(i, COLOR_PURPLE, string);
						}
					}
				}
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы не знаете японского языка");
		return true;
	}
	if(strcmp(cmd, "/ita", true) == 0 || strcmp(cmd, "/italian", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: (/ita)lian [Текст]");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						new string[128];
						if(PlayerInfo[i][pMember] == 5)
						{
							format(string, sizeof(string), "%s говорит на [Итальянском языке]: %s", PlayerInfo[playerid][pName], result);
							SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
							format(string, sizeof(string), "%s что-то говорит на итальянском языке", PlayerInfo[playerid][pName]);
							SendClientMessage(i, COLOR_PURPLE, string);
						}
					}
				}
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы не знаете итальянского языка");
		return true;
	}
	if(strcmp(cmd, "/rus", true) == 0 || strcmp(cmd, "/russian", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 14)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: (/rus)sian [Текст]");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						new string[128];
						if(PlayerInfo[i][pMember] == 14)
						{
							format(string, sizeof(string), "%s говорит на [Русском языке]: %s", PlayerInfo[playerid][pName], result);
							SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
							format(string, sizeof(string), "%s что-то говорит на русском языке", PlayerInfo[playerid][pName]);
							SendClientMessage(i, COLOR_PURPLE, string);
						}
					}
				}
			}
		}
		else SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы не знаете русского языка");
		return true;
	}
	else if(!strcmp(cmd, "/smoke", true))
    {
        if(PlayerInfo[playerid][pSig] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет сигарет (Их можно купить в любом 24/7)");
        if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        SetPlayerSpecialAction(playerid, 21);
        new string[71];
        format(string, sizeof(string), "%s открыл(а) пачку сигарет и закурил(а) сигарету", PlayerInfo[playerid][pName]);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetPlayerChatBubble(playerid,"закурил(а) сигарету",COLOR_PURPLE,30.0,10000);
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Вы открыли пачку сигарет и закурили сигарету");
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Чтобы выбросить Сигарету нажмите Еnter");
        PlayerInfo[playerid][pHP] += 3;
        PlayerInfo[playerid][pSig] -= 1;
        return true;
    }
    else if(!strcmp(cmd, "/Beer", true))
    {
        if(PlayerInfo[playerid][pBeer] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет пива (Его можно купить в любом 24/7)");
        if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        SetPlayerSpecialAction(playerid, 20);
		new string[63];
        format(string, sizeof(string), "%s достал(а) бутылку пива и открыл(а) её", PlayerInfo[playerid][pName]);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetPlayerChatBubble(playerid, "пьет пиво", COLOR_PURPLE, 30.0, 10000);
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Вы достали бутылку Пива и открыли её");
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Чтобы выбросить бутылку Пива нажмите Еnter");
        PlayerInfo[playerid][pHP] += 20;
        PlayerInfo[playerid][pBeer] -= 1;
        return true;
    }
    else if(!strcmp(cmd, "/wine", true))
    {
        if(PlayerInfo[playerid][pWine] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет вина (Его можно купить в любом 24/7)");
        if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        SetPlayerSpecialAction(playerid, 22);
        new string[63];
        format(string, sizeof(string), "%s достал(а) бутылку вина и открыл(а) её", PlayerInfo[playerid][pName]);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetPlayerChatBubble(playerid, "пьет вино", COLOR_PURPLE, 30.0, 10000);
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Вы достали бутылку с Вином и открыли её");
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Чтобы выбросить бутылку с Вином нажмите Еnter");
        PlayerInfo[playerid][pHP] += 50;
        PlayerInfo[playerid][pWine] -= 1;
        return true;
    }
    else if(!strcmp(cmd, "/sprite", true))
    {
        if(PlayerInfo[playerid][pSprite] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет спрайта (Его можно купить в любом 24/7)");
        if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
        SetPlayerSpecialAction(playerid, 23);
        new string[66];
        format(string, sizeof(string), "%s достал(а) бутылку спрайта и открыл(а) её", PlayerInfo[playerid][pName]);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetPlayerChatBubble(playerid, "пьет спрайт", COLOR_PURPLE, 30.0, 10000);
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Вы достали бутылку спрайта и открыли её");
        SendClientMessage(playerid, 0x00FFFFAA, "{26931c}Чтобы выбросить бутылку спрайта нажмите Еnter");
        PlayerInfo[playerid][pHP] += 10;
        PlayerInfo[playerid][pSprite] -= 1;
        return true;
   }
 	if(strcmp("/puk", cmd, true) == 0)
  	{
   		if(PlayerInfo[playerid][pAdmin] <= 0) return SendClientMessage(playerid,COLOR_GREY,"Вы не администратор");
        new Float:PX,Float:PY,Float:PZ;
        GetPlayerPos(playerid,PX,PY,PZ);
       	for(new i = 0; i < GetMaxPlayers(); i++)
       	{
       		if(IsPlayerConnected(i)&& IsPlayerInRangeOfPoint(i, 3.0, PX,PY,PZ))
        	{
        		if(playerid != i)
         		{
          			ApplyAnimation(i,"PED","GAS_CWR", 4.1, 0, 0, 0, 0, 0 ,1);
            		PlayAudioStreamForPlayer(i,"http://zvuki-mp3.com/download/26216_48671-lq.mp3");
             	}
          	}
       	}
       	SetPlayerAttachedObject( playerid, 0, 18694, 1, -0.344386, 0.290451, 1.574107, 177.343902, 359.412261, 0.000000, 1.000000, 1.000000, 1.000000 );
       	PlayAudioStreamForPlayer(playerid,"http://zvuki-mp3.com/download/26216_48671-lq.mp3");
       	SetPlayerChatBubble(playerid, "пернул(а)", COLOR_PURPLE, 30.0, 10000);
       	return true;
    }
	else if(strcmp(cmd, "/ormoney", true) == 0)
	{
	    new string[82];
		switch(random(2))
		{
		    case 0:
		    {
		        format(string, sizeof(string), "%s достал(а) из кармана монетку и подбросил её. Выпал орёл", PlayerInfo[playerid][pName]);
				ProxDetector(5.0, playerid, string, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE);
			}
		    case 1:
		    {
		        format(string, sizeof(string), "%s достал(а) из кармана монетку и подбросил её. Выпала решка", PlayerInfo[playerid][pName]);
				ProxDetector(5.0, playerid, string, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE, COLOR_BLUE);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/try", true) == 0 )
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "В данный момент Вы не можете использовать это");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /try [действие]");
		new string[128];
		switch(random(2))
		{
		    case 0:
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
			    	format(string, sizeof(string), "%s попытался %s {1CEF00}| Удачно", PlayerInfo[playerid][pName], result);
			    	ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    	format(string,sizeof(string), "попытался %s {1CEF00}| Удачно", result);
			    	SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
				}
				else if(PlayerInfo[playerid][pSex] == 2)
				{
			    	format(string, sizeof(string), "%s попыталась %s {1CEF00}| Удачно", PlayerInfo[playerid][pName], result);
			    	ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    	format(string,sizeof(string), "попыталась %s {1CEF00}| Удачно", result);
			    	SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
				}
			}
			case 1:
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
			    	format(string, sizeof(string), "%s попытался %s {FF0000}| Неудачно", PlayerInfo[playerid][pName], result);
			    	ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    	format(string,sizeof(string), "попытался %s {FF0000}| Неудачно", result);
			    	SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
		    	}
		    	if(PlayerInfo[playerid][pSex] == 2)
				{
			    	format(string, sizeof(string), "%s попыталась %s {FF0000}| Неудачно", PlayerInfo[playerid][pName], result);
			    	ProxDetector(5.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    	format(string,sizeof(string), "попыталась %s {FF0000}| Неудачно", result);
			    	SetPlayerChatBubble(playerid,string,0xDD90FFFF,30.0,10000);
				}
		    }
		}
		return true;
	}
     if(strcmp(cmd, "/do", true) == 0)
    {
            if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не вошли!");
            if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "В данный момент Вы не можете использовать это");
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /do [действие]");
            new string[128];
            format(string, sizeof(string), "[%d] - %s", playerid, result);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
            SetPlayerChatBubble(playerid,result,COLOR_PURPLE,30.0,10000);
    }
	if(strcmp(cmd, "/shield", true) == 0)
	{
		if(!PlayerToPoint(5.0,playerid,311.9774,-165.2273,999.6010) || !PlayerToPoint(5.0,playerid,302.5668,-127.6718,1004.0625) || !PlayerToPoint(5.0,playerid,326.0734,306.7083,999.1484)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на оружейном складе");
		if(shield[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть набор для специальных операций");
 		if(PlayerInfo[playerid][pGunLspdTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Брать оружие можно раз в 5 минут");
  		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
				if(lspdmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
				lspdmatbi -= 250;
			}
			case 2:
			{
			    if(fbimats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
				fbimats -= 250;
			}
			case 10:
			{
			    if(sfpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
				sfpdmats -= 250;
			}
			case 21:
			{
			    if(lvpdmats <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
				lvpdmats -= 250;
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "Вы взяли комплект для специальных операций! Чтобы выбросить введите /shieldclear");
		SetPlayerAttachedObject(playerid,6, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0,1.0,1.0,1.0);
		SetPlayerAttachedObject(playerid,3,19515,1,0.08,0.05,0.0,0.0,0.0,0.0,1.2,1.2,1.2);
		SetPlayerAttachedObject(playerid,2,19472,18,0.1,-0.05,0.0,90.0,340.0,0.0,1.0,1.2,1.3);
		SetPlayerAttachedObject(playerid,0,19514,2,0.15,0.0,0.0,0.0,0.0,0.0,1.2,1.2,1.2);
		SetPlayerArmourAC(playerid, 200);
		PlayerInfo[playerid][pGunLspdTime] = 300;
		shield[playerid] = 1;
		return true;
	}
	if(strcmp(cmd, "/shieldclear", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Вы сняли комплект для специальных операций");
			RemovePlayerAttachedObject(playerid, 0);
	    	RemovePlayerAttachedObject(playerid, 2);
	    	RemovePlayerAttachedObject(playerid, 3);
			SetPlayerArmourAC(playerid, 0);
			shield[playerid] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/tunload", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		if(DriverJob[playerid] == true)
		{
			if(!GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы не загружены");
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732) || IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
			{
			    new string[32];
				switch(bGruz[playerid])
				{
					case 1:
					{
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[0];
      					PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
           				format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellbenz[0]);
               			SendClientMessage(playerid, 0x6495EDFF, string);
                  	}
                   	case 2:
                    {
                    	PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellbenz[1];
                     	PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                      	format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellbenz[1]);
                       	SendClientMessage(playerid, 0x6495EDFF, string);
					}
     				case 3:
         			{
            			PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[0];
               			PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                  		format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellugol[0]);
                    	SendClientMessage(playerid, 0x6495EDFF, string);
					}
     				case 4:
     				{
         				PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellugol[1];
             			PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
                		format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellugol[1]);
                  		SendClientMessage(playerid, 0x6495EDFF, string);
                    }
					case 5:
					{
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[0];
						PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
						format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellderevo[0]);
						SendClientMessage(playerid, 0x6495EDFF, string);
					}
					case 6:
					{
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pDgruz]*Sellderevo[1];
						PlayerInfo[playerid][pDExp] += PlayerInfo[playerid][pDgruz]*1000;
						format(string, sizeof(string), "Вы продали груз за: %d",PlayerInfo[playerid][pDgruz]*Sellderevo[1]);
						SendClientMessage(playerid, 0x6495EDFF, string);
					}
				}
				DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
				Expirence(playerid);
				UpdateCost(playerid);
				DriverJob[playerid] = false;
				PlayerInfo[playerid][pDgruz] = 0;
				Gruz[playerid] = 0;
				return true;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не в порту");
		}
		return true;
	}
	if(strcmp(cmd, "/tskill", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		new gtext[7];
		switch(Gruz[playerid])
 		{
			case 1: gtext ="бензин";
			case 2: gtext ="уголь";
			case 3: gtext ="дерево";
			case 0: gtext ="нет";
		}
		new level = PlayerInfo[playerid][pDLevel];
		new exp = PlayerInfo[playerid][pDExp];
		new nxtlevel = PlayerInfo[playerid][pDLevel]+1;
		new expamount = nxtlevel*levelDexp;
		new gruz = PlayerInfo[playerid][pDgruz];
		new mazgruz = PlayerInfo[playerid][pDMgruz];
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "Навык:\n\t\tLVL: %d\n\t\tExp: %d/%d\nФура:\n\t\tМакс груз: %dт.\n\t\tЗагружено: %dт.\nГруз: %s", level,exp,expamount,mazgruz,gruz,gtext);
		ShowPlayerDialog(playerid,31999,0, "Статистика Дальнобойщика",coordsstring, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/tmonitor", true) == 0)
	{
		if(PlayerToPoint(1.0,playerid,-1731.5077,118.8833,3.5547) || PlayerToPoint(1.0,playerid,2768.2495,-2456.6716,13.6432))
		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не дальнобойщик");
		new strin[500];
		new msg1[] = "Цены продуктов:\n\t\tНефтезавод №1 Цена 1т: \n\t\t\t%d\n\t\tНефтезавод №2 Цена 1т: \n\t\t\t%d\n\t\tСклад угля №1 Цена 1т: \n\t\t\t%d\n\t\tСклад угля №2 Цена 1т:\n\t\t\t%d\n\t\tЛесопилка №1 Цена 1т:\n\t\t\t%d\n\t\tЛесопилка №2 Цена 1т: \n\t\t\t%d\nПорт LS, Цена 1т:\n\t\tНефть: %d\n\t\tУголь: %d\n\t\tДерево: %d\nПорт SF, Цена 1т:\n\t\tНефть: %d\n\t\tУголь: %d\n\t\tДерево: %d";
		format(strin, 500, msg1,Benzbuy[0],Benzbuy[1],ugolbuy[0],ugolbuy[1],Buyderevo[0],Buyderevo[1],Sellbenz[0],Sellugol[0],Sellderevo[0],Sellbenz[1],Sellugol[1],Sellderevo[1]);
		ShowPlayerDialog(playerid,31998,0, "Мониторинг цен:",strin, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/taxiskill", true) == 0)
	{
	    new nextlvl = PlayerInfo[playerid][pTaxiLvl]+1;
	    new expamount = nextlvl*levelexp;
	    new string[85];
	    format(string, sizeof(string), "Ваш уровень таксиста %d. До следующего осталось %d/%d exp",PlayerInfo[playerid][pTaxiLvl], PlayerInfo[playerid][pTaxiExp], expamount);
	    SendClientMessage(playerid, 0x6495EDFF, string);
	    return true;
	}
	if(strcmp(cmd, "/thefskill", true) == 0)
	{
	    new ugonlvl[MAX_PLAYERS];
		if(PlayerInfo[playerid][pCarRobbingExp] < 1000) ugonlvl[playerid] = 1000;
        else if(PlayerInfo[playerid][pCarRobbingExp] > 1000 && PlayerInfo[playerid][pCarRobbingExp] < 2000) ugonlvl[playerid] = 2000;
        else if(PlayerInfo[playerid][pCarRobbingExp] > 2000 && PlayerInfo[playerid][pCarRobbingExp] < 3000) ugonlvl[playerid] = 3000;
        else if(PlayerInfo[playerid][pCarRobbingExp] > 3000 && PlayerInfo[playerid][pCarRobbingExp] < 4000) ugonlvl[playerid] = 4000;
        else if(PlayerInfo[playerid][pCarRobbingExp] > 4000) ugonlvl[playerid] = 99999;
        new string[49];
	    format(string, sizeof(string), "Ваш уровень автоугонщика %d/%d",PlayerInfo[playerid][pCarRobbingExp], ugonlvl[playerid]);
	    SendClientMessage(playerid, 0x6495EDFF, string);
	    return true;
	}
	if(strcmp(cmd, "/atune", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(IsPlayerInAnyVehicle(playerid)) ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nArch Angel тюнинг\nЦвет\nВинилы\nНитро", "Выбрать", "Назад");
			else return SendClientMessage(playerid, COLOR_RED, "Вы должны быть в автомобиле");
		}
	}
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/switchwave", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Введите: /switchwave [номер]");
				SendClientMessage(playerid, COLOR_WHITE, " [0] Выключить");
				SendClientMessage(playerid, COLOR_WHITE, " [1] SF News");
				SendClientMessage(playerid, COLOR_WHITE, " [2] LS News");
				SendClientMessage(playerid, COLOR_WHITE, " [3] LV News");
				return true;
			}
			new item = strval(tmp);
			switch(item)
			{
				case 1:
				{
					if(gNews[playerid] == 0) radiosf--;
                    if(LvNews[playerid] == 0) radiolv--;
                    if(lNews[playerid] == 0) radiols--;
                    lNews[playerid] = 1;
                    gNews[playerid] = 0;
                    LvNews[playerid] = 1;
                    radiosf++;
                    PlayerInfo[playerid][pRadio] = 1;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на SF News");
				}
				case 2:
				{
                    if(lNews[playerid] == 0) radiols--;
                    if(LvNews[playerid] == 0) radiolv--;
                    if(gNews[playerid] == 0) radiosf--;
                    lNews[playerid] = 0;
                    gNews[playerid] = 1;
                    LvNews[playerid] = 1;
                    radiols++;
                    PlayerInfo[playerid][pRadio] = 2;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LS News");
				}
				case 3:
				{
                    if(LvNews[playerid] == 0) radiolv--;
                    if(gNews[playerid] == 0) radiosf--;
                    if(lNews[playerid] == 0) radiols--;
                    lNews[playerid] = 1;
                    gNews[playerid] = 1;
                    LvNews[playerid] = 0;
                    radiolv++;
                    PlayerInfo[playerid][pRadio] = 3;
                    SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LV News");
				}
				case 0:
				{
                    if(LvNews[playerid] == 0) radiolv--;
                    if(gNews[playerid] == 0) radiosf--;
					if(lNews[playerid] == 0) radiols--;
					lNews[playerid] = 1;
					gNews[playerid] = 1;
					LvNews[playerid] = 1;
					PlayerInfo[playerid][pRadio] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Вы выключили радио");
				}
			}
			return true;
		}
	}
	if(strcmp(cmd, "/instopen", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || TakingLesson[playerid] == 1)
		{
			if(PlayerToPoint(8.0,playerid,-2070.0000, -129.7411, 35.0000))
			{
				MoveObject(LicGate, -2070.0000, -129.7411, 35.0000, 0.5, 0.00, 0.00, 270.00);
				SetTimer("LicClose", 8000, 0);
			}
		}
	}
	if(strcmp(cmd, "/gate", true)==0)
    {
    	if(PlayerInfo[playerid][pPHousekey] == 688)
		{
			if(PlayerToPoint(15.0,playerid,1239.6416,-741.1349,95.6510))
			{
			    if(per688 == 1)
				{
				    MoveObject(Gate688, 1240.0760, -740.8105, 95.1933, 0.5, -4.0000, 0.0000, -63.3400);
					per688 = 0;
				}
				else
				{
					MoveObject(Gate688, 1240.0760, -740.8105, 93.7133, 0.5, -4.0000, 0.0000, -63.3400);
					per688 = 1;
				}
			}
		}
	}
	if(strcmp(cmd, "/lgate", true)==0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(PlayerToPoint(10.0,playerid,1588.1831,-1638.3319,13.3832))
			{
			    if(Lgate == 1)
				{
				    MoveObject(LgateGate, 1590.1759, -1638.1416, 15.0555, 0.5, 0.0000, 0.0000, 0.0000);
					Lgate = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Ворота в гараж LSPD закрыты");
				}
				else
				{
					MoveObject(LgateGate, 1590.1759, -1638.1416, 9.4155, 0.5, 0.0000, 0.0000, 0.0000);
					Lgate = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Ворота в гараж LSPD открыты");
				}
			}
		}
		if(IsAGang(playerid))
		{
            if(PlayerToPoint(10.0,playerid,1588.1831,-1638.3319,13.3832))
		    {
				if(PlayerInfo[playerid][pKeys] > 0)
				{
			    	if(Lgate == 1)
					{
				    	MoveObject(LgateGate, 1590.1759, -1638.1416, 15.0555, 0.5, 0.0000, 0.0000, 0.0000);
						Lgate = 0;
					}
					else
					{
						MoveObject(LgateGate, 1590.1759, -1638.1416, 9.4155, 0.5, 0.0000, 0.0000, 0.0000);
						Lgate = 1;
					}
				}
				else SendClientMessage(playerid, COLOR_WHITE, "У вас нет ключей от LSPD");
			}
		}
	}
	if(strcmp(cmd, "/givenewskeys", true) == 0)
    {
		tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givenewskeys [id]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 20)
		{
			if(!IsPlayerConnected(playa) || playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			PlayerInfo[playa][pNkeys] = 1;
			new string[91];
			format(string, sizeof(string), "Сотрудник %s выдал(а) пропуск в офис игроку %s", PlayerInfo[playerid][pName], PlayerInfo[playa][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
        return true;
    }
	if(strcmp(cmd, "/news", true) == 0 )
    {
		new result[64];
		new newcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /news [текст]");
		switch(PlayerInfo[playerid][pMember])
		{
	    	case 9:
			{
	  			if(newcar < cnncar[0] && newcar > cnncar[4] && newcar != cnnmav || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе");
				new string[128];
				format(string, sizeof(string), "< SF News > %s: %s", PlayerInfo[playerid][pName], result);
				OOCNews(COLOR_GREEN,string);
				gNews[playerid] = 0;
			}
			case 16:
			{
  				if(newcar < lsnewscar[0] && newcar > lsnewscar[5] || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Офисе");
				new string[128];
				format(string, sizeof(string), "< LS News > %s: %s", PlayerInfo[playerid][pName], result);
				LSNews(0x0073B7AA,string);
				lNews[playerid] = 0;
			}
			case 20:
			{
  				if(newcar < lvnewscar[0] && newcar > lvnewscar[5] || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Офисе");
				new string[128];
				format(string, sizeof(string), "< LV News > %s: %s", PlayerInfo[playerid][pName], result);
				LVNews(0xC3003AAA,string);
				LvNews[playerid] = 0;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/npanel", true) == 0 || strcmp(cmd, "/n", true) == 0)
	{
		if(GetPlayerVehicleID(playerid) == 582 || GetPlayerVehicleID(playerid) == 488 || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999))
		{
			switch(PlayerInfo[playerid][pMember])
			{
				case 9: ShowPlayerDialog(playerid, 2223, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
				case 16: ShowPlayerDialog(playerid,2224, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
				case 20: ShowPlayerDialog(playerid,2225, DIALOG_STYLE_LIST, "[ NEWS MENU ]", " [ 1 ] Прямой эфир\n [ 2 ] Выйти из прямого эфира\n [ 3 ] Начать принимать звонки / смс\n [ 4 ] Завершить принимать звонки / смс\n [ 5 ] Установить цену за звонки и смс\n [ 6 ] Установить цену за объявления\n [ 7 ] Объявления", "Enter", "Cancel");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе");
		return true;
	}
	if(strcmp(cmd, "/live", true) == 0 || strcmp(cmd, "/l", true) == 0)
    {
		new newcar = GetPlayerVehicleID(playerid);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /live [id]");
		giveplayerid = ReturnUser(tmp);
		switch(PlayerInfo[playerid][pMember])
		{
			case 9:
			{
  				if(newcar < cnncar[0] && newcar > cnncar[4] && newcar != cnnmav || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Вертолёте/Офисе");
				if(TalkingLivesfa[playerid] != 0)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        TalkingLivesfa[playerid] = 0;
			        return true;
			    }
			    if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата");
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя");
				if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				new string[55];
				format(string, sizeof(string), "Вы предложили %s снять интервью", PlayerInfo[giveplayerid][pName]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", PlayerInfo[playerid][pName]);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livesf, чтобы согласиться");
				LiveOffer[giveplayerid] = playerid;
				TalkingLivesfa[playerid] = 1;
			}
			case 16:
			{
  				if(newcar < lsnewscar[0] && newcar > lsnewscar[5] || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Офисе");
				if(TalkingLivelsa[playerid] != 0)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLivels[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLivels[playerid], 1);
		            TalkingLivels[TalkingLivels[playerid]] = 255;
			        TalkingLivels[playerid] = 255;
			        TalkingLivelsa[playerid] = 0;
			        return true;
			    }
				if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата");
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя");
				if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				new string[55];
				format(string, sizeof(string), "Вы предложили %s снять интервью", PlayerInfo[giveplayerid][pName]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", PlayerInfo[playerid][pName]);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livels, чтобы согласиться");
				LiveOfferls[giveplayerid] = playerid;
				TalkingLivelsa[playerid] = 1;
			}
			case 20:
			{
  				if(newcar < lvnewscar[0] && newcar > lvnewscar[5] || !PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине/Офисе");
				if(TalkingLivelva[playerid] != 255)
			    {
			        SendClientMessage(playerid, 0x6495EDFF, "Прямой эфир завершён");
			        SendClientMessage(TalkingLivelv[playerid], 0x6495EDFF, "Прямой эфир завершён");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLivelv[playerid], 1);
		            TalkingLivelv[TalkingLivelv[playerid]] = 255;
			        TalkingLivelv[playerid] = 255;
			        TalkingLivelva[playerid] = 0;
			        return true;
			    }
				if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата");
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у себя");
				if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				new string[55];
				format(string, sizeof(string), "Вы предложили %s снять интервью", PlayerInfo[giveplayerid][pName]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам снять интервью", PlayerInfo[playerid][pName]);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите /accept livelv, чтобы согласиться");
				LiveOfferlv[giveplayerid] = playerid;
				TalkingLivelva[playerid] = 1;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
		if(IsAGang(playerid))
		{
   			for(new i = 0; i < sizeof(GZInfo); i++)
			{
	 			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					if(PlayerInfo[playerid][pMember] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей территории");
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /selldrugs [id] [кол-во] [Цена]");
					new playa;
					new money;
					new needed;
					playa = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /selldrugs [id] [кол-во] [Цена]");
					needed = strval(tmp);
					if(needed < 1 || needed > 150) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 150 грамм");
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /selldrugs [id] [кол-во] [Цена]");
					money = strval(tmp);
					if(money < 1 || money > 5000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт(а)");
					if(needed > PlayerInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У вас не достаточно наркотиков");
					if(!IsPlayerConnected(playa) || playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
					if(!ProxDetectorS(8.0, playerid, playa)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
	    			if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе наркотики");
	    			new string[124];
	    			format(string, sizeof(string), "Вы предложили %s купить %d граммов наркотиков за %d вирт", PlayerInfo[playa][pName], needed, money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам купить %d граммов наркотиков за %d вирт. Введите /accept drugs для покупки", PlayerInfo[playerid][pName], needed, money);
					SendClientMessage(playa, 0x6495EDFF, string);
					DrugOffer[playa] = playerid;
					DrugPrice[playa] = money;
					DrugGramm[playa] = needed;
				}
			}
 		}
		return true;
	}
	if(strcmp(cmd, "/selltune", true) == 0)
	{
		if(PlayerInfo[playerid][pAutoMast] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет автомастерской");
		ShowPlayerDialog(playerid, 9830,DIALOG_STYLE_MSGBOX, "Продажа автомастерской", "Вы уверены что хотите продать автомастерскую?\nДеньги на счету аренды, перейдут в банк", "Да", "Нет");
		return true;
	}
	if(strcmp(cmd, "/buyferm", true) == 0)
    {
        if(PlayerInfo[playerid][pFerma] != 255) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть ферма");
        if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть бизнес");
        if(PlayerInfo[playerid][pAutoMast] != 255) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть автомастерская");
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            if(FermInfo[f][flock] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Ферма закрыта");
            if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266))return SendClientMessage(playerid, COLOR_WHITE, "Вы не возле фермы");
            if(FermInfo[f][fOwned] == 1) return SendClientMessage(playerid, COLOR_WHITE, "У этой фермы есть хозяин");
            if(!(PlayerInfo[playerid][pBank] > FermInfo[f][fBuyPrice]))return SendClientMessage(playerid, COLOR_WHITE, "На вашем счету в банке нет столько денег");
            {
                PlayerInfo[playerid][pJob] = 0;
                PlayerInfo[playerid][pFerma] = FermInfo[f][fidferm];
                PlayerJob[playerid] = 1;
                FermInfo[f][fOwned] = 1;
                FermInfo[f][fEntranceCost] = 35;
                FermInfo[f][fTill] = 0;
                FermInfo[f][fProdukt] = 1;
                FermInfo[f][fMafia] = 0;
                strmid(FermInfo[f][fOwner], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 25);
                PlayerInfo[playerid][pBank] -= FermInfo[f][fBuyPrice];
                FracBank[0][fKazna] += FermInfo[f][fBuyPrice];
                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Машины","/finfo\t\t\tCтатистика фермы\n/flock\t\t\tЗакрыть/Открыть ферму\n/fpanel\t\t\tПанель управления фермой\n/buyferm\t\tКупить ферму\n/sellferm\t\tПродать ферму","Ок","");
				SendClientMessage(playerid, COLOR_GREEN, "Ферма приобретена");
				SendClientMessage(playerid, COLOR_WHITE, "Помощь по ферме: /mm > Команды сервера > Фермы");
                OnPropUpdate();
                return true;
            }
        }
        return true;
    }
    if(strcmp(cmd, "/quitjob", true) == 0)
    {
        PlayerInfo[playerid][pJob] = 0;
        SendClientMessage(playerid, COLOR_GREY, "Вы уволились с работы");
        return true;
    }
    if(strcmp(cmd, "/finfo", true) == 0)
    {
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            if(FermInfo[f][flock] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ферма закрыта");
            if(!PlayerToPoint(10, playerid, -381.8794, -1440.2821, 25.7266)) return SendClientMessage(playerid, COLOR_GREY, "По близости нет ферм");
            PrintFermInfo(playerid,f);
        }
        return true;
    }
    if(strcmp(cmd, "/flock", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 6)
        {
	        for(new f = 0; f < sizeof(FermInfo); f++)
	        {
	            if(FermInfo[f][flock] == 0)
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "Ферма закрыта");
	                FermInfo[f][flock] = 1;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "Ферма открыта");
	                FermInfo[f][flock] = 0;
	            }
	        }
		}
        return true;
    }
    if(strcmp(cmd, "/fpanel", true) == 0)
    {
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            if(PlayerInfo[playerid][pFerma] == 255 && PlayerInfo[playerid][pFermajob] != 2 && PlayerInfo[playerid][pFermajob] != 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не владелец/Заместиель/Фермер");
            if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266)) return SendClientMessage(playerid, COLOR_GREY, "Поблизости нет ферм");
            ShowPlayerDialog(playerid, 10122, DIALOG_STYLE_LIST, "Панель управления фермой", "Изменить цену за куст\nУрожай\nИзменить цену покупки зерна\nИзменить цену продажи зерна\nПополнить банк фермы\nСнять деньги с банка фермы\nРазгрузится на склад\nНанять Заместителя\nНанять Фермера\nУволить Заместителя\nУволить Фермера", "Выбрать", "Отмена");
        }
        return true;
    }
	if(strcmp(cmd, "/ffixcar", true) == 0)
	{
		if(PlayerInfo[playerid][pFerma] == 255 && PlayerInfo[playerid][pFermajob] != 2 && PlayerInfo[playerid][pFermajob] != 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не владелец/Заместиель/Фермер");
        if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266)) return SendClientMessage(playerid, COLOR_GREY, "Поблизости нет ферм");
		SetVehicleToRespawn(Combine[0]);
		SetVehicleToRespawn(FarmCar[0]);
		return true;
	}
    if(strcmp(cmd, "/pmenu", true) == 0)
    {
        if(PlayerInfo[playerid][pJob] != 5) return SendClientMessage(playerid, COLOR_GREY, "Вы не развозщик продуктов");
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Вы не в автомобиле развозщика продуктов");
        ShowPlayerDialog(playerid, 1322, DIALOG_STYLE_LIST, "Загрузка/Разгрузка зерна", "Загрузить зерно\nРазгрузить зерно\nЗагрузить урожая\nРазгрузка урожая", "Выбрать", "Отмена");
    }
    if(strcmp(cmd, "/sellferm", true) == 0)
    {
        if(PlayerInfo[playerid][pFerma] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не владелец фермы");
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
        	if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266)) return SendClientMessage(playerid, COLOR_GREY, "По близости нет ферм");
            FermInfo[f][f1zams] = 0;
            FermInfo[f][f2zams] = 0;
            FermInfo[f][f3zams] = 0;
            FermInfo[f][f1fermers] = 0;
            FermInfo[f][f2fermers] = 0;
            FermInfo[f][f3fermers] = 0;
            FermInfo[f][f4fermers] = 0;
            FermInfo[f][f5fermers] = 0;
            PlayerInfo[playerid][pBank] += FermInfo[f][fTill];
            FermInfo[f][fzernozakup] = 0;
            PlayerInfo[playerid][pFerma] = 255;
            PlayerInfo[playerid][pFermajob] = 255;
            PlayerJob[playerid] = 0;
            FermInfo[f][fOwned] = 0;
            FermInfo[f][fBuyPrice] = 500000;
            FermInfo[f][fEntranceCost] = 0;
            FermInfo[f][fcolichestvozerna] = 0;
            FermInfo[f][fMafia] = 0;
            FermInfo[f][fzernoseiano] = 0;
            FermInfo[f][fcolichestvozerna] = 0;
            FermInfo[f][fProdukt] = 0;
            if(FarmWorks[playerid] != 0) SetPlayerSkin(playerid, OldSkin[playerid]);
            FarmWorks[playerid] = 0;
            PlayerInfo[playerid][pBisLic] = 0;
            strmid(FermInfo[f][fOwner], "The State", 0, strlen("The State"), 10);
            SendClientMessage(playerid, COLOR_GREEN, "Ферма успешно продана");
            new string[44];
            format(string, sizeof(string), "Прибыль с продажи бизнеса: %d вирт", FermInfo[f][fTill]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "Новый счёт в банке: %d вирт", PlayerInfo[playerid][pBank]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            FermInfo[f][fTill] = 0;
            OnPropUpdate();
        }
        return true;
    }
    if(strcmp(cmd, "/asellferm", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 6)
        {
	        for(new f = 0; f < sizeof(FermInfo); f++)
	        {
	        	if(!PlayerToPoint(10, playerid,-381.8794,-1440.2821,25.7266)) return SendClientMessage(playerid, COLOR_GREY, "По близости нет ферм");
	            FermInfo[f][f1zams] = 0;
	            FermInfo[f][f2zams] = 0;
	            FermInfo[f][f3zams] = 0;
	            FermInfo[f][f1fermers] = 0;
	            FermInfo[f][f2fermers] = 0;
	            FermInfo[f][f3fermers] = 0;
	            FermInfo[f][f4fermers] = 0;
	            FermInfo[f][f5fermers] = 0;
	            FermInfo[f][fzernozakup] = 0;
	            FermInfo[f][fOwned] = 0;
	            FermInfo[f][fBuyPrice] = 500000;
	            FermInfo[f][fEntranceCost] = 0;
	            FermInfo[f][fcolichestvozerna] = 0;
	            FermInfo[f][fMafia] = 0;
	            FermInfo[f][fzernoseiano] = 0;
	            FermInfo[f][fcolichestvozerna] = 0;
	            FermInfo[f][fProdukt] = 0;
	            strmid(FermInfo[f][fOwner], "The State", 0, strlen("The State"), 10);
	            SendClientMessage(playerid, COLOR_GREEN, "Ферма успешно продана");
	            FermInfo[f][fTill] = 0;
	            OnPropUpdate();
	        }
		}
        return true;
    }
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
  			if(PlayerInfo[playerid][pPBiskey] >= 100 && strcmp(PlayerInfo[playerid][pName], SBizzInfo[PlayerInfo[playerid][pPBiskey]-100][sbOwner], true) == 0)
			{
			    new bouse = PlayerInfo[playerid][pPBiskey]-100;
			    if(!PlayerToPoint(3, playerid,SBizzInfo[bouse][sbEntranceX], SBizzInfo[bouse][sbEntranceY], SBizzInfo[bouse][sbEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
				PlayerInfo[playerid][pBank] += SBizzInfo[bouse][sbTill];
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;
				strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
				SendClientMessage(playerid, COLOR_GREEN, "Бизнес успешно продан");
				new string[44];
				format(string, sizeof(string), "Прибыль с продажи бизнеса: %d вирт", SBizzInfo[bouse][sbTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Новый счёт в банке: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SBizzInfo[bouse][sbTill] = 0;
				PlayerInfo[playerid][pPBiskey] = 255;
				PlayerInfo[playerid][pBisLic] = 0;
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bouse][sbMessage],SBizzInfo[bouse][sbBuyPrice]);
				Update3DTextLabelText(SBizzInfo[bouse][sbLabel], 0xEAC700AA, string);
				OnPropUpdate();
				return true;
			}
			if(strcmp(PlayerInfo[playerid][pName], BizzInfo[PlayerInfo[playerid][pPBiskey]][bOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPBiskey];
				if(!PlayerToPoint(3, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
				BizzInfo[bouse][bLocked] = 0;
				BizzInfo[bouse][bOwned] = 0;
				strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerInfo[playerid][pBank] += BizzInfo[bouse][bTill]/2;
				PlayerInfo[playerid][pBank] += BizzInfo[bouse][b2Till];
  		 		SendClientMessage(playerid, COLOR_GREEN, "Бизнес успешно продан");
  		 		new string[44];
				format(string, sizeof(string), "Прибыль с продажи бизнеса: %d вирт", BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Новый счёт в банке: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				BizzInfo[bouse][bTill] = 0;
				BizzInfo[bouse][b2Till] = 0;
				PlayerInfo[playerid][pPBiskey] = 255;
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
				Update3DTextLabelText(BizzInfo[bouse][bLabel], 0xEAC700AA, string);
				OnPropUpdate();
				return true;
			}
			else SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
		}
		return true;
	}
	if(!strcmp(cmd, "/capture",true))
	{
		if(IsAGang(playerid))
		{
			if(FrakCD[PlayerInfo[playerid][pMember]] == 0)
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != PlayerInfo[playerid][pMember] && ZoneOnBattle[i] == 0)
					{
		                new faction = PlayerInfo[playerid][pMember];
		                if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendClientMessage(playerid,COLOR_GREY, "Банда на которую вы собираетесь напасть нет в Онлайне!");
					    if(FrakCD[GZInfo[i][gFrakVlad]] != 0) return SendClientMessage(playerid,COLOR_GREY,"Банда на которую вы хотите напасать уже воевала в этом часу");
						if(IsATerra(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Нельзя захватить эту территорию");
						if(!IsInAllowed(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете захватить эту территорию");
						if(PlayerInfo[playerid][pRank] < 7) return SendClientMessage(playerid, COLOR_GREY,"Функция доступная с 7 ранга и выше");
						new string[128];
						format(string,sizeof(string),"%s спровоцировал войну за территорию против банды %s", PlayerInfo[playerid][pName], GetGangName(GZInfo[i][gFrakVlad]));
						SendFamilyMessage(PlayerInfo[playerid][pMember],0x00D900C8,string);
						format(string,sizeof(string),"[Внимание]: На вашу территорию напала банда %s",GetGangName(PlayerInfo[playerid][pMember]));
						SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_GREEN,string);
						SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"Территория будет мигать 2 минуты. Победит банда, которая останется последней");
						SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_WHITE,"Территория будет мигать до тех пор, пока на ней не останется 1 банда");
						GangZoneFlashForAll(GZInfo[i][gID],GetGangZoneColor(PlayerInfo[playerid][pMember]));
						GZSafeTime[i] = 180;
						FrakCD[faction] = 3600;
						GZInfo[i][gNapad] = faction;
						ZoneTimer[i] = 720;
						ZoneOnBattle[i] = 1;
						break;
					}
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы уже воевали в этом часу");
		}
	}
	if(strcmp(cmd, "/mafiawar", true) == 0)
	{
		new factionm = 0;
		if(PlayerInfo[playerid][pLeader] != 0) factionm = PlayerInfo[playerid][pLeader];
		else if(PlayerInfo[playerid][pMember] != 0 && PlayerInfo[playerid][pLeader] == 0) factionm = PlayerInfo[playerid][pMember];
		else factionm = 0;
		if(IsAMafia(playerid))
		{
			if(startwar == 1) return SendClientMessage(playerid, COLOR_WHITE, "Война уже начата");
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				if(PlayerToPoint(3, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && BizzInfo[h][bMafia] != PlayerInfo[playerid][pMember])
				{
					if(war > 0)
					{
					    new string[44];
						format(string,sizeof(string), "Войну можно начать через %d секунд",war);
						SendClientMessage(playerid,-1,string);
						return true;
					}
					else if(BizzInfo[h][bMafia] == 0)
					{
						BizzInfo[h][bMafia] = PlayerInfo[playerid][pMember];
						SendClientMessage(playerid, COLOR_WHITE, "Бизнес взят под контроль");
						return true;
					}
					else if(BizzInfo[h][bMafia] == 5 || BizzInfo[h][bMafia] == 6 || BizzInfo[h][bMafia] == 14)
					{
						startwar = 1;
						new string[128];
						format(string,sizeof(string), "Вы набили стрелку %s. Бизнес: %s. Место встречи: Территория[ID 1]", GetMafiaName(BizzInfo[h][bMafia]), BizzInfo[h][bMessage]);
						SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA,string);
						SendFamilyMessage(PlayerInfo[playerid][pMember],0x114D71AA, "Встреча через 20 минут");
						format(string,sizeof(string), "%s набила вам стрелку. Бизнес: %s. Место встречи: Территория [ID 1]", GetMafiaName(PlayerInfo[playerid][pMember]),BizzInfo[h][bMessage]);
						SendFamilyMessage(BizzInfo[h][bMafia],COLOR_REDD,string);
						SendFamilyMessage(BizzInfo[h][bMafia],COLOR_WHITE, "Встреча через 20 минут");
						BizzInfo[h][bCapture] = 1;
						war = 3600;
						MZSafeTime[0] = 1200;
						FrakCDm[factionm] = 1800;
						MZInfo[0][mNapad] = PlayerInfo[playerid][pMember];
						ZoneTimerm[0] = 1200;
						ZoneOnBattlem[0] = 1;
						zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
						GangZoneShowForAll(zons, 0xB2B2B2AA);
						GangZoneFlashForAll(zons, COLOR_REDD);
					}
 				}
 			}
 		}
		return true;
	}
	if(strcmp(cmd, "/bizlist", true) == 0)
	{
		if(IsAMafia(playerid))
		{
		    SendClientMessage(playerid, COLOR_GREEN, "Бизнесы под контролем вашей мафии");
		    new string[50];
			for(new h = 0; h < sizeof(BizzInfo); h++)
			{
				switch(PlayerInfo[playerid][pMember])
				{
					case 5:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 5) format(string, sizeof(string), "| %s",BizzInfo[h][bMessage]);
						if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 6:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 6) format(string, sizeof(string), "| %s",BizzInfo[h][bMessage]);
	                    if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 14:
					{
						format(string, sizeof(string), "");
						if(BizzInfo[h][bMafia] == 14) format(string, sizeof(string), "| %s",BizzInfo[h][bMessage]);
						if(strlen(string) > 1) SendClientMessage(playerid, COLOR_WHITE, string);
					}
    			}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizfee", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPBiskey];
		if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /bizfee [цена]");
		if(strval(tmp) < 1 || strval(tmp) > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 вирт");
		new string[128];
		if(bouse >= 100)
		{
			SBizzInfo[bouse-100][sbPriceProd] = strval(tmp);
			format(string,sizeof(string), "%s\nВладелец:\n %s\n Цена бензина: %d", SBizzInfo[bouse-100][sbMessage], SBizzInfo[bouse-100][sbOwner],SBizzInfo[bouse-100][sbPriceProd]);
			Update3DTextLabelText(SBizzInfo[bouse-100][sbLabel], 0x00D900AA, string);
			format(string, sizeof(string), "Стоимость бензина %d вирт", SBizzInfo[bouse-100][sbPriceProd]);
			OnPropUpdate();
		}
		else
		{
			BizzInfo[bouse][bEntranceCost] = strval(tmp);
			format(string,sizeof(string), "%s\nВладелец:\n %s", BizzInfo[bouse][bMessage], BizzInfo[bouse][bOwner]);
			Update3DTextLabelText(BizzInfo[bouse][bLabel], 0x00D900AA, string);
   			format(string, sizeof(string), "Плата за вход %d вирт", BizzInfo[bouse][bEntranceCost]);
			OnPropUpdate();
		}
		SendClientMessage(playerid, COLOR_WHITE, string);
		OnPropUpdate();
		return true;
	}
	if(strcmp(cmd, "/bizwithdraw", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPBiskey];
		if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
		tmp = strtok(cmdtext, idx);
		new string[128];
		if(!strlen(tmp))
		{
			if(bouse >= 100)
			{
				format(string, sizeof(string), "На счету бизнеса %d вирт", SBizzInfo[bouse-100][sbTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
				format(string, sizeof(string), "На счету бизнеса %d вирт", BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Введите: /bizwithdraw [сумма]");
			return true;
		}
		new cashdeposit = strval(tmp);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /bizwithdraw [сумма]");
		if(bouse >= 100)
		{
			if(cashdeposit > SBizzInfo[bouse-100][sbTill] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса нет столько денег");
			if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
			else
			{
				PlayerInfo[playerid][pCash] += cashdeposit;
				SBizzInfo[bouse-100][sbTill] -= cashdeposit;
				format(string, sizeof(string), "Вы сняли %d вирт со счета вашего бизнеса. Остаток: %d вирт", cashdeposit, SBizzInfo[bouse-100][sbTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
		}
		else
		{
			if(cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса нет столько денег");
			if(!PlayerToPoint(100, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть у своего бизнеса");
			else
			{
				PlayerInfo[playerid][pCash] += cashdeposit;
				BizzInfo[bouse][bTill] -= cashdeposit;
				format(string, sizeof(string), "Вы сняли %d вирт со счета вашего бизнеса. Остаток: %d вирт", cashdeposit, BizzInfo[bouse][bTill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
		}
	}
	if(strcmp(cmd, "/tinfo", true) == 0)
	{
		for(new h = 0; h < sizeof(AvtoInfo); h++)
        {
	 		if(PlayerToPoint(10, playerid,AvtoInfo[h][abEntranceX], AvtoInfo[h][abEntranceY], AvtoInfo[h][abEntranceZ])) PrintAvtoInfo(playerid,h);
		}
	}
	if (strcmp(cmd, "/getbizstats", true) == 0)
	{
		for(new h = 0; h < sizeof(BizzInfo); h++)
		{
	 		if(PlayerToPoint(3.0, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ])) PrintBizInfo(playerid, h);
		}
		for(new s = 0; s < sizeof(SBizzInfo); s++)
		{
	 		if(PlayerToPoint(3.0, playerid,SBizzInfo[s][sbEntranceX], SBizzInfo[s][sbEntranceY], SBizzInfo[s][sbEntranceZ])) PrintSBizInfo(playerid, s);
		}
	}
	if(strcmp(cmd, "/repairdvig", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
	   			if(!PlayerToPoint(30, playerid,AvtoInfo[b][picX],AvtoInfo[b][picY],AvtoInfo[b][picZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомастерской");
			}
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /repairdvig [id]");
	    	giveplayerid = ReturnUser(tmp);
	 		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
   			if(ProxDetectorS(8.0, playerid, giveplayerid))
     		{
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				if(!IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в автомобиле");
				if(repairdvig[giveplayerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не заказывал ремонт двигателя");
				if(PlayerInfo[giveplayerid][pProcents] < 100)
				{
					PlayerInfo[giveplayerid][pProcents] += 10;
					SendClientMessage(playerid, COLOR_WHITE, "Двигатель отремонтирован на 10 процентов");
					SendClientMessage(giveplayerid, COLOR_GREEN, "Двигатель отремонтирован на 10 процентов");
					ApplyAnimation(playerid, "GANGS", "hndshkba",4.1,0,1,1,1,1,1);
					clearanim[playerid] = 7;
					repairdvig[giveplayerid] = 0;
					new s;
					s = MehJob[playerid];
					AvtoInfo[s][abTill] += 100000;
					if(AvtoInfo[s][abTill] < AvtoInfo[s][abZp]) return SendClientMessage(playerid, COLOR_GREY, "На счету автомастерской недостаточно денег");
					PlayerInfo[playerid][pCash] += AvtoInfo[s][abZp];
				}
				return true;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		return true;
	}
	if(strcmp(cmd, "/endlesson", true) == 0)
	{
		if(TakingLesson[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали урок");
		JobCarTime[playerid] = 0;
		LessonCar[playerid] = 0;
		LessonStat[playerid] = 0;
		TakingLesson[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		RemovePlayerFromVehicleAc(playerid);
	}
	if(strcmp(cmd, "/next", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
	   			if(!PlayerToPoint(30, playerid,AvtoInfo[b][picX],AvtoInfo[b][picY],AvtoInfo[b][picZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомастерской");
			}
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /next [id]");
	    	giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
	    	{
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
			      	if(ProxDetectorS(10.0, playerid, giveplayerid))
			      	{
						if(Tune[giveplayerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Тюнинг ещё небыл установлен");
						if(repairdvig[giveplayerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок заказывал ремонт двигателя");
						if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			   			if(!IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в автомобиле");
			       		SendClientMessage(playerid, COLOR_WHITE, "Тюнинг с данным клиентом завершён");
			       		SendClientMessage(giveplayerid, COLOR_GREEN, "Тюнинг завершён");
			       		SetVehicleVirtualWorld(GetPlayerVehicleID(giveplayerid), 0);
			       		Tune[giveplayerid] = 0;
						SetPlayerVirtualWorld(giveplayerid,0);
			       		if(MehJob[playerid] == 0)
			       		{
							SetVehiclePos(GetPlayerVehicleID(giveplayerid),1626.6501,2195.7644,10.8203);
							SetVehicleZAngle(GetPlayerVehicleID(giveplayerid), 180.1691);
							AvtoInfo[0][Mesto] = 255;
						}
						if(MehJob[playerid] == 1)
						{
							SetVehiclePos(GetPlayerVehicleID(giveplayerid),-1773.1368,1204.6458,25.1250);
							SetVehicleZAngle(GetPlayerVehicleID(giveplayerid), 127.5378);
							AvtoInfo[1][Mesto] = 255;
						}
						if(MehJob[playerid] == 2)
						{
							SetVehiclePos(GetPlayerVehicleID(giveplayerid),831.0037,-609.1404,16.3359);
							SetVehicleZAngle(GetPlayerVehicleID(giveplayerid), 352.5133);
							AvtoInfo[2][Mesto] = 255;
						}
						PutPlayerInVeh(giveplayerid,GetPlayerVehicleID(giveplayerid),0);
						SetCameraBehindPlayer(giveplayerid);
						SetPlayerInterior(giveplayerid,0);
						LinkVehicleToInterior(GetPlayerVehicleID(giveplayerid),0);
						SetVehicleParamsEx(GetPlayerVehicleID(giveplayerid), VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
						return true;
					}
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	else if(strcmp(cmd, "/out", true) == 0)
	{
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в транспорте");
        for(new b = 0; b < sizeof(AvtoInfo); b++)
        {
            if(!PlayerToPoint(30, playerid,AvtoInfo[b][picX],AvtoInfo[b][picY],AvtoInfo[b][picZ])) return SendClientMessage(playerid, COLOR_GRAD1, "?? ?? ? ??????????!");
        }
        if(mesto[playerid] == 0)
        {
            SetVehiclePos(GetPlayerVehicleID(playerid),1626.6501,2195.7644,10.8203);
            SetVehicleZAngle(GetPlayerVehicleID(playerid), 352.5133);
            SetPlayerInterior(giveplayerid,0);
        }
        else if(mesto[playerid] == 1)
        {
            SetVehiclePos(GetPlayerVehicleID(playerid),-1773.1368,1204.6458,25.1250);
            SetVehicleZAngle(GetPlayerVehicleID(playerid), 127.5378);
            SetPlayerInterior(giveplayerid,0);
        }
        else if(mesto[playerid] == 2)
        {
            SetVehiclePos(GetPlayerVehicleID(playerid),830.0073,-609.0463,15.9535);
	        SetVehicleZAngle(GetPlayerVehicleID(playerid), 180.1691);
	        SetPlayerInterior(giveplayerid,0);
        }
        Tune[playerid] = 0;
        SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
        PutPlayerInVeh(playerid,GetPlayerVehicleID(playerid), 0);
        SetCameraBehindPlayer(playerid);
        SetPlayerInterior(playerid, 0);
        LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
    }
	else if(strcmp(cmd, "/tupdate", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
			for(new b = 0; b < sizeof(AvtoInfo); b++)
			{
				if(!PlayerToPoint(30, playerid,AvtoInfo[b][picX],AvtoInfo[b][picY],AvtoInfo[b][picZ]))return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомастерской");
			}
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tupdate [id]");
	    	giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
  			if(ProxDetectorS(10.0, playerid, giveplayerid))
    		{
     			if(giveplayerid == playerid)return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
        		if(Order[giveplayerid] == 0)return SendClientMessage(playerid, COLOR_GREY, "Игрок ещё нечего не заказал");
		        if(!IsPlayerInAnyVehicle(giveplayerid))return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в автомобиле");
		       	ApplyAnimation(playerid, "GANGS", "hndshkba",4.1,0,1,1,1,1,1);
		       	clearanim[playerid] = 7;
		       	if(Wheels[giveplayerid] > 0)
		       	{
		       		PlayerInfo[giveplayerid][pWheels] = Wheels[giveplayerid];
			       	SendClientMessage(playerid, COLOR_WHITE, "Колёса установлены");
		       	}
		       	if(Spoiler[giveplayerid] > 0)
		       	{
		       		PlayerInfo[giveplayerid][pSpoiler] = Spoiler[giveplayerid];
		       		SendClientMessage(playerid, COLOR_WHITE, "Спойлер установлен");
		       	}
	       		if(Bumper[giveplayerid] > 0)
	       		{
					PlayerInfo[giveplayerid][pBumper1] = Bumper[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Передний бампер установлен");
				}
				if(Bumper2[giveplayerid] > 0)
				{
					PlayerInfo[giveplayerid][pBumper2] = Bumper2[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Задний бампер установлен");
				}
				if(Color[giveplayerid] < 255)
				{
					PlayerInfo[giveplayerid][pColor] = Color[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Цвет установлен");
				}
				if(Color1[giveplayerid] < 255)
				{
					PlayerInfo[giveplayerid][pColor1] = Color1[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Цвет 2 установлен");
				}
 				if(PaintJob[giveplayerid] < 255)
				{
					PlayerInfo[giveplayerid][pPaintJob] = PaintJob[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Покраска установлена");
					ChangeVehiclePaintjob(caridhouse[giveplayerid], PaintJob[giveplayerid]);
					PaintJob[giveplayerid] = 255;
				}
    			if(Nitro[giveplayerid] > 0)
				{
					PlayerInfo[giveplayerid][pNitro] = Nitro[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Азот установлен");
				}
				if(Hydraw[giveplayerid] > 0)
				{
					PlayerInfo[giveplayerid][pHydrawlic] = Hydraw[giveplayerid];
					SendClientMessage(playerid, COLOR_WHITE, "Гидравлика установлена");
				}
				if(repairdvig[giveplayerid] > 0) SendClientMessage(playerid, COLOR_WHITE, "Данный клиент еще заказывал ремонт двигателя, введите /repairdvig");
				Tune[giveplayerid] = 1;
				Color[giveplayerid] = 255;
				Color1[giveplayerid] = 255;
 				Spoiler[giveplayerid] = 0;
   				Wheels[giveplayerid] = 0;
   				Bumper[giveplayerid] = 0;
     			Bumper2[giveplayerid] = 0;
      			Nitro[giveplayerid] = 0;
       			Hydraw[giveplayerid] = 0;
				SetVehicleToRespawn(GetPlayerVehicleID(giveplayerid));
				SetVehiclePos(GetPlayerVehicleID(giveplayerid), 608.9133, -14.4088, 1000.5442);
				SetVehicleZAngle(GetPlayerVehicleID(giveplayerid), 335.0551);
				PutPlayerInVeh(giveplayerid,GetPlayerVehicleID(giveplayerid),0);
				ChangeVehicleColor(GetPlayerVehicleID(giveplayerid), PlayerInfo[giveplayerid][pColor], PlayerInfo[giveplayerid][pColor1]);
				Order[giveplayerid] = 0;
 				new s;
				s = MehJob[playerid];
				AvtoInfo[s][abTill] += 50000;
				if(AvtoInfo[s][abTill] < AvtoInfo[s][abZp]) return SendClientMessage(playerid, COLOR_GREY, "На счету автомастерской нет денег");
				PlayerInfo[playerid][pCash] += AvtoInfo[s][abZp];
				OnPropUpdate();
				OnPlayerUpdateAc(giveplayerid);
				return true;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		return true;
	}
	if(strcmp(cmd, "/tpanel", true) == 0)
	{
		if(PlayerInfo[playerid][pAutoMast] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет автомастерской");
		new bouse = PlayerInfo[playerid][pAutoMast];
		if(!PlayerToPoint(15, playerid,AvtoInfo[bouse][abEntranceX],AvtoInfo[bouse][abEntranceY],AvtoInfo[bouse][abEntranceZ])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть рядом с автомастерской");
		ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления", "[1] Перевести на счёт аренды\n[2] Пополнить счёт автомастерской\n[3] Снять деньги с мастерской\n[4] Установить зар. плату", "Выбрать", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/bizstats", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPBiskey];
		if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
		if(bouse >= 100) PrintSBizInfo(playerid, bouse-100);
		else PrintBizInfo(playerid, bouse);
		return true;
	}
	if(strcmp(cmd, "/bizlock", true) == 0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			if(PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
			{
				if(PlayerInfo[playerid][pPBiskey] == i || PlayerInfo[playerid][pPBiskey] == i+100 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 8)
				{
					if(BizzInfo[i][bLocked] == 1)
					{
						BizzInfo[i][bLocked] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "Вы открыли бизнес");
						PlaySoundNearPlayer(playerid,1145);
						return true;
					}
					if(BizzInfo[i][bLocked] == 0)
					{
						BizzInfo[i][bLocked] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "Вы закрыли бизнес");
						PlaySoundNearPlayer(playerid,1145);
						return true;
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
			}
		}
	}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0 && HouseInfo[h][hVworld] == GetPlayerVirtualWorld(playerid))
			{
				if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(PlayerInfo[playerid][pName], HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_LIGHTGREEN, "У вас уже есть дом");
				if(PlayerInfo[playerid][pCash] > HouseInfo[h][hValue])
				{
    				DestroyVehicle(caridhouse[playerid]);
					PlayerInfo[playerid][pPHousekey] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hHel] = 0;
					HouseInfo[h][hTakings] = 100;
     				strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
					PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
					FracBank[0][fKazna] += HouseInfo[h][hValue];
					SetPlayerInterior(playerid,HouseInfo[h][hInt]);
					SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
     				SetPlayerVirtualWorld(playerid, h+50);
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с покупкой!");
					SendClientMessage(playerid, 0xFFD800AA, "Внимание! Теперь каждый час со счёта вашего дома будут снимать комунальные платежи.Если на счету недостаточно денег - вас выселят");
 					SendClientMessage(playerid, 0xFFD800AA, "Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> команды)");
  					new helpstring[512]="/hm\t\t\tМеню дома\n/tv\t\t\tПосмотреть телевизор(Стоя у него)\n/buyhouse\t\tКупить дом\n/sellhouse\t\tПродать дом\n/home\t\t\tПоставить метку у дома(GPS)\n/changehouse\t\tПродать дом игроку\n/healme\t\t\tИспользовать аптечку\nAlt|/exit\t\t\tВыйти из дома";
   					ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Дома",helpstring,"Ок","");
					GameTextForPlayer(playerid, "~w~welcome home~n~press:~g~alt", 5000, 3);
					if(PlayerInfo[playerid][pCar] == 0)
					{
						PlayerInfo[playerid][pCar] = 462;
						PlayerInfo[playerid][pColor] = 0;
						PlayerInfo[playerid][pColor1] = 0;
						PlayerInfo[playerid][pProcents] = 100;
						HouseInfo[h][hVcol1] = 0;
						HouseInfo[h][hVcol2] = 0;
						Fuell[caridhouse[playerid]] = 100;
						CompVehDel(playerid);
					}
					OnPropUpdate();
					new house = PlayerInfo[playerid][pPHousekey];
					caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc], PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
					createdcar = caridhouse[playerid];
					LockCar(caridhouse[playerid]);
					IsLocked[caridhouse[playerid]] = 1;
					createdcar ++;
					HouseInfo[h][hVcol1] = PlayerInfo[playerid][pColor];
					HouseInfo[h][hVcol2] = PlayerInfo[playerid][pColor1];
					Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
					AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
					AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
					AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
					if(PJ(caridhouse[playerid]))
					{
						ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
						AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
						AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
						AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
					}
					BuyHouse();
					return true;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPBiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть бизнес");
			for(new bizz = 0; bizz < sizeof(BizzInfo); bizz++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bOwned] == 0)
				{
					ShowPlayerDialog(playerid,9828,DIALOG_STYLE_MSGBOX, "Предупреждение", "У вас могут забрать бизнес если:\n	1.Он стоит в закрытом состоянии 12 или более часов.\n	2.Продукции менее 10 процентов, 12 или более часов.\n	3.На выделеном счету задолженность на оплату электроэнергии.\n\nПри продаже бизнеса государством, вам ничего не вернется!\nВы согласны с этими условиями?", "Согласен", "Отмена");
					return true;
				}
			}
  			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(5.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pBank] > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPBiskey] = b+100;
						PlayerInfo[playerid][pJob] = 0;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						strmid(SBizzInfo[b][sbOwner], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
						PlayerInfo[playerid][pBank] -= SBizzInfo[b][sbBuyPrice];
						SendClientMessage(playerid, COLOR_GREEN, "Бизнес приобретён");
						SendClientMessage(playerid, COLOR_WHITE, "Помощь по бизнесу: /mm - Команды сервера - Бизнес");
						new string[128];
						format(string,sizeof(string), "%s\nВладелец:\n %s\nЦена бензина: %d вирт", SBizzInfo[b][sbMessage], SBizzInfo[b][sbOwner],SBizzInfo[b][sbPriceProd]);
						Update3DTextLabelText(SBizzInfo[b][sbLabel], 0x00D900AA, string);
                        OnPropUpdate();
                        new helpstring[512]="/buybiz\t\t\tКупить бизнес\n/sellbiz\t\t\tПродать бизнес\n/bizlock\t\t\tЗакрыть бизнес\n/bizfee\t\t\tУстановить цену бензина\n/bizstats\t\tСтатистика бизнеса\n/getbizstats\t\tУзнать статистику чужого бизнеса\n/bizwithdraw\t\tВзять деньги с бизнеса\n/cena\t\t\tУстановить цену продуктов\n/bizmafia\t\tУстановить крышу";
		                ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX,"Бизнесы",helpstring,"Ок","");
						return true;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "На вашем счету в банке нет столько денег");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/buytune",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerToPoint(2.0,playerid,605.2967,-17.4146,1000.8986))
			{
				if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid, COLOR_GREY, "У вас мопед");
				new listitems[] = " [1] Установка колёс\n [2] Установка спойлера\n [3] Установка бампера\n [4] Цветовые работы\n [5] Покраска\n [6] Покраска 2\n [7] Ремонт двигателя [100000]\n [8] INFO\n [9] Закись азота\n [10] Гидравлика [50000]";
				ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
	    	}
		}
		return true;
	}
	if(strcmp(cmd, "/healaddict", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /healaddict [id]");
				if(PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773))
				{
 					new plo = ReturnUser(tmp);
					if(!IsPlayerConnected(plo) || plo == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
					if(seans[plo] == 1) return SendClientMessage(playerid, COLOR_GREY, "Следущий сеанс можно провести через час");
					if(plo == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
					if(PlayerInfo[plo][pAddiction] > 500) PlayerInfo[plo][pAddiction] -= 500;
					else if(PlayerInfo[plo][pAddiction] <= 500) PlayerInfo[plo][pAddiction] = 0;
					else return SendClientMessage(playerid, COLOR_GREY, "У игрока нет зависимости");
					new string[72];
					format(string, sizeof(string), "Медик %s провёл с вами сеанс от наркозависимости", PlayerInfo[playerid][pName]);
					SendClientMessage(plo, COLOR_GREEN,string);
					format(string, sizeof(string), "Вы провели сеанс от наркозависимости с игроком %s", PlayerInfo[plo][pName]);
					SendClientMessage(playerid, COLOR_GREEN,string);
					seans[plo] = 1;
				}
			}
 			else SendClientMessage(playerid, COLOR_RED, "Вам недоступна данная команда");
		}
		return true;
	}
	if(strcmp(cmd, "/usedrugs", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_GREY, "Введите: /usedrugs [количество]");
			new moneys2 = strval(tmp);
			new Float:health;
			GetPlayerHealth(playerid, health);
			if(PlayerInfo[playerid][pDrugs] < moneys2) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно наркотиков");
			if(AddictionsTimer[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя употреблять наркотик слишком часто");
			if(PlayerInfo[playerid][pAddiction] >= 3000)
			{
				if(moneys2 < 1 || moneys2 > 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете употребить больше 8 грамм одновременно!");
				SetPlayerWeather(playerid, -68);
				PlayerStoned[playerid] += 1;
				PlayerInfo[playerid][pAddiction] += moneys2;
				SetPlayerHealthAC(playerid, health + moneys2+10*2);
				PlayerInfo[playerid][pHP] += moneys2+10*2;
				if(PlayerInfo[playerid][pHP] > 120)
				{
					SetPlayerHealthAC(playerid, 120);
					PlayerInfo[playerid][pHP] = 120;
				}
				PlayerInfo[playerid][pDrugs] -= moneys2;
				AddictionsTimer[playerid] = 1;
				SetTimerEx( "AddictionTimer", 10000, false, "i", playerid);
				new string[47];
				format(string, sizeof(string), "Здоровье пополнено до: %d", PlayerInfo[playerid][pHP]);
				SendClientMessage(playerid, COLOR_WHITE,string);
				ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
				SetPlayerChatBubble(playerid, "употребил(a) наркотик", COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s употребил(a) наркотик", PlayerInfo[playerid][pName]);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(startaddiction[playerid] == 1)
			{
				startaddiction[playerid] = 0;
				ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
				send[playerid] = 0;
			}
			else
			{
				if(moneys2 < 1 || moneys2 > 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете употребить больше 3 грамм одновременно!");
				{
					SetPlayerWeather(playerid, -68);
					PlayerStoned[playerid] += 1;
					PlayerInfo[playerid][pAddiction] += moneys2;
					SetPlayerHealthAC(playerid,health + moneys2+10*2);
					PlayerInfo[playerid][pHP] += moneys2+10*2;
					if(PlayerInfo[playerid][pHP] > 120)
					{
						SetPlayerHealthAC(playerid, 120);
						PlayerInfo[playerid][pHP] = 120;
					}
					PlayerInfo[playerid][pDrugs] -= moneys2;
					AddictionsTimer[playerid] = 1;
					SetTimerEx( "AddictionTimer", 10000, false, "i", playerid);
					new string[47];
					format(string, sizeof(string), "Здоровье пополнено до: %d", PlayerInfo[playerid][pHP]);
					SendClientMessage(playerid, COLOR_WHITE,string);
					ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
					SetPlayerChatBubble(playerid,"употребил(a) наркотик",COLOR_PURPLE,30.0,10000);
					format(string, sizeof(string), "%s употребил(a) наркотик", PlayerInfo[playerid][pName]);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(startaddiction[playerid] == 1)
				{
					startaddiction[playerid] = 0;
					ApplyAnimation(playerid, "SMOKING", "M_smk_drag",4.1,0,0,0,0,0,1);
					send[playerid] = 0;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gunlist",true)==0)
	{
		if(IsAGang(playerid) || IsABiker(playerid))
		{
			ShowPlayerDialog(playerid,9025,DIALOG_STYLE_MSGBOX, "Cписок оружия", "\tИмя\t\t материалов за патрон\t\t материалов за обойму\n__________________________________________________________________\n\n[ID: 23] Sdpistol\t\t\t1м\t\t\t\t\t15м\n[ID: 24] Deagle\t\t\t3м\t\t\t\t21м\n[ID: 25] Shotgun\t\t3м\t\t\t\t-\n[ID: 29] SMG\t\t\t2м\t\t\t\t60м\n[ID: 30] AK-47\t\t\t3м\t\t\t\t90м\n[ID: 31] M4A1\t\t\t3м\t\t\t\t150м\n[ID: 33] Rifle\t\t\t5м\t\t\t\t-", "Закрыть", "");
			return true;
		}
	 	return true;
	}
	if(strcmp(cmd, "/bsellgun", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsABiker(playerid))
            {
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp))
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "Введите: /bsellgun [id] [ID оружие] [патроны] [цена]");
	                SendClientMessage(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
	                SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 4 вирт!");
	                return true;
	            }
	            new playeridxx;
	            playeridxx = strval(tmp);
	            if(playeridxx == INVALID_PLAYER_ID) { SendClientMessage(playerid, COLOR_GREY, "Неправильный id"); return true; }
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp))
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "Введите: /bsellgun [id] [ID оружие] [патроны] [цена]");
	                SendClientMessage(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
	                SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 4 вирт!");
	                return true;
	            }
	            new gunidxx;
	            gunidxx = strval(tmp);
	            if(gunidxx == 24 || gunidxx == 25 || gunidxx == 29 || gunidxx == 23 || gunidxx == 30 || gunidxx == 31 || gunidxx == 33)
	            {
		            tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
		            {
		                SendClientMessage(playerid, COLOR_WHITE, "Введите: /bsellgun [id] [ID оружие] [патроны] [цена]");
		                SendClientMessage(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
		                SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 4 вирт!");
		                return true;
		            }
		            new ammogunxx;
		            ammogunxx = strval(tmp);
		            if(ammogunxx > 100 || ammogunxx < 0) { SendClientMessage(playerid, COLOR_GREY, "Патронов должно быть от 1 до 100"); return true; }
		            tmp = strtok(cmdtext, idx);
		            if(!strlen(tmp))
		            {
		                SendClientMessage(playerid, COLOR_WHITE, "Введите: /bsellgun [id] [ID оружие] [патроны] [цена]");
		                SendClientMessage(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
		                SendClientMessage(playerid, COLOR_GREY, "Минимальная цена 4 вирт");
		                return true;
		            }
		            if(!ProxDetectorS(5.0, playerid, playeridxx)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
		            new priceplayer;
		            priceplayer = strval(tmp);
		            if(priceplayer < 4)
					{
						SendClientMessage(playerid, COLOR_WHITE, "Введите: /bsellgun [id] [ID оружие] [цена]");
						SendClientMessage(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
						SendClientMessage(playerid, COLOR_GREY, "Пиши не меньше 4 вирт!");
						return true;
					}
		            if(PlayerInfo[playerid][pMaterials] < (2*ammogunxx)) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов");
		            sellgun4 = playerid;
		            sellgun = playeridxx;
		            sellgun1 = gunidxx;
		            sellgun2 = ammogunxx;
		            sellgun3 = priceplayer;
		            new dialogexx[128];
					if(gunidxx == 24) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nDeagle\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 25) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nShotGun\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 29) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nMP5\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 23) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nSDPistol\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 30) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nAK47\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 31) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nM4A1\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
					if(gunidxx == 33) format(dialogexx,sizeof(dialogexx), "{FFFFFF}Вам предложили купить оружие:\nRifle\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
		            ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",dialogexx, "Купить", "Отмена");
					SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
				}
        		else return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			}
		}
		return true;
	}
	else if(strcmp(cmd, "/sellgun", true) == 0)
    {
    	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не умеете собирать оружие");
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей территории");
			if(PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей территории");
			new playeridxx,gunidxx,ammogunxx,priceplayer;
   			tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/sellgun [id][ID оружия][патроны][цена],/gunlist - название оружия и расходы материалов");
           	playeridxx = strval(tmp);
           	if(playeridxx == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID");
           	if(!ProxDetectorS(5.0, playerid, playeridxx)) return SendClientMessage(playerid, COLOR_GREY, "Игрока далеко от вас");
           	tmp = strtok(cmdtext, idx);
           	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/sellgun [id][ID оружия][патроны][цена],/gunlist - название оружия и расходы материалов");
            gunidxx = strval(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/sellgun [id][ID оружия][патроны][цена],/gunlist - название оружия и расходы материалов");
      		ammogunxx = strval(tmp);
        	if(ammogunxx < 0) return SendClientMessage(playerid, COLOR_GREY, "Патронов должно быть больше 0");
         	tmp = strtok(cmdtext, idx);
       		priceplayer = strval(tmp);
       		if(priceplayer < 0) return	SendClientMessage(playerid, COLOR_GREY, "Цена должна быть больше 0");
          	if(PlayerInfo[playerid][pMaterials] < (2 * ammogunxx)) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов");
            sellgun = playeridxx;
            sellgun1 = gunidxx;
            sellgun2 = ammogunxx;
            sellgun3 = priceplayer;
            sellgun4 = playerid;
            switch(gunidxx)
            {
                case 23:
                {
                    new string[92];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nSDPistol\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 24:
				{
				    new string[90];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nDeagle\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 25:
				{
				    new string[91];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nShotGun\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 29:
				{
				    new string[87];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nMP5\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 30:
				{
				new string[89];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nAK-47\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 31:
				{
				    new string[88];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nM4A1\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
				case 33:
				{
				    new string[89];
                    format(string,sizeof(string), "{FFFFFF}Вам предложили купить оружие:\nRifle\nСтоимость %d\nПатроны %d",priceplayer,ammogunxx);
                    ShowPlayerDialog(playeridxx, 22572, DIALOG_STYLE_MSGBOX, "Покупка оружия",string, "Купить", "Отмена");
         			SendClientMessage(playerid, COLOR_WHITE, "Ожидайте одобрения игрока");
         			return true;
                }
                default: SendClientMessage(playerid, COLOR_GREY, "Вы не умеете собирать данное оружие");
            }
		}
		return true;
	}
	else if(strcmp(cmd, "/getgun", true) == 0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
					ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Склад оружия", "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])", "Выбрать", "Отмена");
				}
			}
			case 6:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
					ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Склад оружия", "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])", "Выбрать", "Отмена");
				}
			}
			case 14:
			{
				if(PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
					ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Склад оружия", "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])", "Выбрать", "Отмена");
				}
			}
			case 23:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
					ShowPlayerDialog(playerid, 2016, DIALOG_STYLE_LIST, "Склад оружия", "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])", "Выбрать", "Отмена");
				}
			}
			case 24:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2017, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 25:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2018, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 26:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2019, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 27:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 2)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга!");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2020, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 28:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2021, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 29:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2022, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 30:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2023, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 31:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2024, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
			case 32:
			{
				if(PlayerToPoint(5.0,playerid,496.7966,-75.8150,998.7578))
				{
					if(PlayerInfo[playerid][pRank] <= 4)return SendClientMessage(playerid, COLOR_GREY, "Оружие можно взять с 4 ранга");
	            	new listitems[] = "[1] Desert Eagle\t[70 материалов/50 патронов]\n[2] Shotgun\t\t[50 материалов/15 патронов]\n[3] Rifle\t\t\t[100 материалов/10 патронов]\n[4] M4\t\t\t[500 материалов/100 патронов]\n[5] AK-47\t\t[500 материалов/100 патронов]\n[6] MP5\t\t\t[400 материалов/200 патронов]\n[7] SDPistol\t\t[100 материалов/100 патронов])";
					ShowPlayerDialog(playerid, 2025, DIALOG_STYLE_LIST, "Склад оружия", listitems, "Выбрать", "Отмена");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unloading",true)==0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(tmpcar) != 482 && GetVehicleModel(tmpcar) != 459 ) return SendClientMessage(playerid,COLOR_GREY, "Вы не в фургоне");
		if(PlayerInfo[playerid][pMember] == 12)
		{
			if(Furi[tmpcar-matsfura[0]][gBallas] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			new string[62];
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
 	    		format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfura[0]][gBallas];
   				Furi[tmpcar-matsfura[0]][gBallas] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов",Furi[tmpcar-matsfura[0]][gBallas]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(ballasmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			ballasmatbi += Furi[tmpcar-matsfura[0]][gBallas];
			Furi[tmpcar-matsfura[0]][gBallas] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 13)
		{
			if(Furi[tmpcar-matsfuravagos[0]][gVagos] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			new string[62];
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
   				Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			 	Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			 	Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(vagosmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			vagosmatbi += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 15)
		{
			if(Furi[tmpcar-matsfuragrove[0]][gGrove] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
			new string[62];
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfuragrove[0]][gGrove];
   				Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			 	Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			 	Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(groovmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			groovmatbi += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 17)
		{
			if(Furi[tmpcar-matsfuraactek[0]][gAztek] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
            new string[62];
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfuraactek[0]][gAztek];
   				Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			 	Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			 	Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(aztekmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			aztekmatbi += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 18)
 		{
			if(Furi[tmpcar-matsfurarifa[0]][gRifa] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
            new string[62];
			if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
			{
				lcnmats +=  Furi[tmpcar-matsfurarifa[0]][gRifa];
   				Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад мафии LCN: %d/50000", lcnmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
			{
				rmmats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			 	Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Русской мафии: %d/50000", rmmats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
			{
				yakuzamats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			 	Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
		    	format(string, sizeof(string), "Материалы разргружены! В фургоне: %d/3000 материалов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), "Склад Якудза: %d/50000", yakuzamats);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveMaterials();
			 	return true;
			}
			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(rifamatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			rifamatbi += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 23)
		{
		    if(Furi[tmpcar-matsfuraSsmc[0]][gSsmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(ssmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			ssmcmatbi += Furi[tmpcar-matsfuraSsmc[0]][gSsmc];
			Furi[tmpcar-matsfuraSsmc[0]][gSsmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 24)
		{
		    if(Furi[tmpcar-matsfuraHamc[0]][gHamc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(hamcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			hamcmatbi += Furi[tmpcar-matsfuraHamc[0]][gHamc];
			Furi[tmpcar-matsfuraHamc[0]][gHamc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 25)
		{
		    if(Furi[tmpcar-matsfuraOmc[0]][gOmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(omcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			omcmatbi += Furi[tmpcar-matsfuraOmc[0]][gOmc];
			Furi[tmpcar-matsfuraOmc[0]][gOmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 26)
		{
		    if(Furi[tmpcar-matsfuraWmc[0]][gWmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(wmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			wmcmatbi += Furi[tmpcar-matsfuraWmc[0]][gWmc];
			Furi[tmpcar-matsfuraWmc[0]][gWmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 27)
		{
		    if(Furi[tmpcar-matsfuraHwmc[0]][gHwmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(hwmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			hwmcmatbi += Furi[tmpcar-matsfuraHwmc[0]][gHwmc];
			Furi[tmpcar-matsfuraHwmc[0]][gHwmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 28)
		{
		    if(Furi[tmpcar-matsfuraFsmc[0]][gFsmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(fsmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			fsmcmatbi += Furi[tmpcar-matsfuraFsmc[0]][gFsmc];
			Furi[tmpcar-matsfuraFsmc[0]][gFsmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 29)
		{
		    if(Furi[tmpcar-matsfuraPmc[0]][gPmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(pmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			pmcmatbi += Furi[tmpcar-matsfuraPmc[0]][gPmc];
			Furi[tmpcar-matsfuraPmc[0]][gPmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 30)
		{
		    if(Furi[tmpcar-matsfuraMmc[0]][gMmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(mmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			mmcmatbi += Furi[tmpcar-matsfuraMmc[0]][gMmc];
			Furi[tmpcar-matsfuraMmc[0]][gMmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 31)
		{
		    if(Furi[tmpcar-matsfuraVmc[0]][gVmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(vmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			vmcmatbi += Furi[tmpcar-matsfuraVmc[0]][gVmc];
			Furi[tmpcar-matsfuraVmc[0]][gVmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		else if(PlayerInfo[playerid][pMember] == 32)
		{
		    if(Furi[tmpcar-matsfuraBmc[0]][gBmc] <= 0) return SendClientMessage(playerid,COLOR_GREY, "Не достаточно материалов, для разгрузки");
   			if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
			if(bmcmatbi > 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен");
			bmcmatbi += Furi[tmpcar-matsfuraBmc[0]][gBmc];
			Furi[tmpcar-matsfuraBmc[0]][gBmc] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Материалы разгружены");
		}
		SaveMaterials();
		return true;
	}
	if(strcmp(cmd, "/advertising", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(IsPlayerConnected(playerid)) AdvertiseTimer();
		}
		return true;
	}
	if(strcmp(cmd, "/bbank",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /bbank [количество]");
	        money = strval(tmp);
	        if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			if(money > 100000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
	        switch(PlayerInfo[playerid][pMember])
	        {
				case 23: FracBank[0][fSsmc] += money;
				case 24: FracBank[0][fHamc] += money;
				case 25: FracBank[0][fOmc] += money;
				case 26: FracBank[0][fWmc] += money;
				case 27: FracBank[0][fHwmc] += money;
				case 28: FracBank[0][fFsmc] += money;
				case 29: FracBank[0][fPmc] += money;
				case 30: FracBank[0][fMmc] += money;
				case 31: FracBank[0][fVmc] += money;
				case 32: FracBank[0][fBmc] += money;
				default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
			}
			PlayerInfo[playerid][pCash] -= money;
			new string[41];
			format(string, sizeof(string), "Вы положили в банк фракции %d вирт", money);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SaveBankFrac();
		}
		return true;
	}
	else if(strcmp(cmd, "/bwithdraw",true)==0)
    {
		new money;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /bwithdraw [количество]");
		money = strval(tmp);
		if(money > 100000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
		if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		switch(PlayerInfo[playerid][pMember])
		{
		    case 23:
		    {
		        if(FracBank[0][fSsmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fSsmc] -= money;
			}
			case 24:
			{
			    if(FracBank[0][fHamc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fHamc] -= money;
			}
			case 25:
			{
			    if(FracBank[0][fOmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fOmc] -= money;
			}
			case 26:
			{
			    if(FracBank[0][fWmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fWmc] -= money;
			}
			case 27:
			{
			    if(FracBank[0][fHwmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fHwmc] -= money;
			}
			case 28:
			{
			    if(FracBank[0][fFsmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fFsmc] -= money;
			}
			case 29:
			{
			    if(FracBank[0][fPmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fPmc] -= money;
			}
			case 30:
			{
			    if(FracBank[0][fMmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fMmc] -= money;
			}
			case 31:
			{
			    if(FracBank[0][fVmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fVmc] -= money;
			}
			case 32:
			{
			    if(FracBank[0][fBmc] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
			    FracBank[0][fBmc] -= money;
			}
			default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		}
		PlayerInfo[playerid][pCash] += money;
		new string[40];
		format(string, sizeof(string), "Вы сняли с банка фракции %d вирт", money);
		SendClientMessage(playerid, 0x6495EDFF, string);
		SaveBankFrac();
		return true;
	}
	else if(strcmp(cmd, "/bbalance",true)==0)
	{
	    new string[45];
		switch(PlayerInfo[playerid][pMember])
		{
			case 23:
			{
	            format(string, sizeof(string), "В банке Sons of Silence MC: %d вирт", FracBank[0][fSsmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
  			case 24:
    		{
				format(string, sizeof(string), "В банке Hell's Angels MC: %d вирт", FracBank[0][fHamc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 25:
    		{
   				format(string, sizeof(string), "В банке Outlaws MC: %d вирт", FracBank[0][fOmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 26:
    		{
   				format(string, sizeof(string), "В банке Warlocks MC: %d вирт", FracBank[0][fWmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 27:
    		{
   				format(string, sizeof(string), "В банке Highwayman MC: %d вирт", FracBank[0][fHwmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 28:
    		{
   				format(string, sizeof(string), "В банке Free Souls MC: %d вирт", FracBank[0][fFsmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 29:
    		{
   				format(string, sizeof(string), "В банке Pagans MC: %d вирт", FracBank[0][fPmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 30:
    		{
   				format(string, sizeof(string), "В банке Mongols MC: %d вирт", FracBank[0][fMmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 31:
    		{
   				format(string, sizeof(string), "В банке Vagos MC: %d вирт", FracBank[0][fVmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 32:
    		{
   				format(string, sizeof(string), "В банке Bandidos MC: %d вирт", FracBank[0][fBmc]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			default: SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		}
		return true;
 	}
	if(strcmp(cmd, "/carmat", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == 3)
		{
 			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid,COLOR_GREY, "Вы не в загрузочном вертолёте");
			VertMats[playerid] = 1;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
			SendClientMessage(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки Оружия");
		}
		return true;
	}
	if(strcmp(cmd, "/gbank",true)==0)
	{
	    new string[33];
		switch(PlayerInfo[playerid][pMember])
		{
			case 15:
			{
				format(string, sizeof(string), "В банке Grove: %d вирт", FracBank[0][fGrove]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 12:
    		{
				format(string, sizeof(string), "В банке Ballas: %d вирт", FracBank[0][fBallas]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 13:
    		{
	   			format(string, sizeof(string), "В банке Vagos: %d вирт", FracBank[0][fVagos]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 17:
    		{
	   			format(string, sizeof(string), "В банке Aztec: %d вирт", FracBank[0][fAztek]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 18:
    		{
	   			format(string, sizeof(string), "В банке Rifa: %d вирт", FracBank[0][fRifa]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
		}
		return true;
 	}
	if(strcmp(cmd, "/gbankwithdraw",true)==0)
    {
		new money;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gbankwithdraw [количество]");
		money = strval(tmp);
		if(money > 100000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
		if(PlayerInfo[playerid][pRank] < 10) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		switch(PlayerInfo[playerid][pMember])
		{
		    case 12:
		    {
		        if(FracBank[0][fBallas] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fBallas] -= money;
			}
			case 13:
		    {
		        if(PlayerInfo[playerid][pRank] < 11) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		        if(FracBank[0][fVagos] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fVagos] -= money;
			}
			case 15:
		    {
		        if(FracBank[0][fGrove] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fGrove] -= money;
			}
			case 17:
		    {
		        if(FracBank[0][fAztek] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fAztek] -= money;
			}
			case 18:
		    {
		        if(FracBank[0][fRifa] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fRifa] -= money;
			}
			default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		}
        new string[40];
		PlayerInfo[playerid][pCash] += money;
		format(string, sizeof(string), "Вы сняли с банка фракции %d вирт", money);
		SendClientMessage(playerid, 0x6495EDFF, string);
		SaveBankFrac();
		return true;
	}
	if(strcmp(cmd, "/gbankput",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gbankput [количество]");
	        money = strval(tmp);
	        if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			if(money > 100000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
	        switch(PlayerInfo[playerid][pMember])
	        {
				case 12: FracBank[0][fBallas] += money;
				case 13: FracBank[0][fVagos] += money;
				case 15: FracBank[0][fGrove] += money;
				case 17: FracBank[0][fAztek] += money;
				case 18: FracBank[0][fRifa] += money;
				default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
			}
			PlayerInfo[playerid][pCash] -= money;
			new string[41];
			format(string, sizeof(string), "Вы положили в банк фракции %d вирт", money);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SaveBankFrac();
		}
		return true;
	}
	if(strcmp(cmd, "/newsbank",true)==0)
    {
    	switch(PlayerInfo[playerid][pMember])
		{
			case 9:
			{
			    new string[34];
	            format(string, sizeof(string), "В банке SF NEWS: %d вирт", FracBank[0][fSfnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 16:
	        {
	            new string[34];
	            format(string, sizeof(string), "В банке LS NEWS: %d вирт", FracBank[0][fLsnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 20:
	        {
	            new string[34];
	            format(string, sizeof(string), "В банке LV NEWS: %d вирт", FracBank[0][fLvnews]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
		}
		return true;
   	}
	if(strcmp(cmd, "/newswithdraw",true)==0)
    {
		new money;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /newswithdraw [количество]");
		money = strval(tmp);
		if(money > 1000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
		if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		switch(PlayerInfo[playerid][pMember])
		{
		    case 9:
		    {
		        if(FracBank[0][fSfnews] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fSfnews] -= money;
			}
			case 16:
		    {
		        if(FracBank[0][fLsnews] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fLsnews] -= money;
			}
			case 20:
		    {
		        if(FracBank[0][fLvnews] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        FracBank[0][fLvnews] -= money;
			}
			default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		}
        new string[40];
		PlayerInfo[playerid][pCash] += money;
		format(string, sizeof(string), "Вы сняли с банка фракции %d вирт", money);
		SendClientMessage(playerid, 0x6495EDFF, string);
		SaveBankFrac();
		return true;
	}
	if(strcmp(cmd, "/mafiabalance",true)==0)
	{
		switch(PlayerInfo[playerid][pMember])
		{
			case 5:
   			{
   			    new string[30];
	   			format(string, sizeof(string), "В банке LCN: %d вирт", MafiaBank[0][nLcn]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 6:
			{
			    new string[33];
				format(string, sizeof(string), "В банке Yakuza: %d вирт", MafiaBank[0][nYakuza]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 14:
			{
			    new string[29];
				format(string, sizeof(string), "В банке RМ: %d вирт", MafiaBank[0][nRm]);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mafiawithdraw",true)==0)
    {
		new money;
		if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 14)
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mafiawithdraw [количество]");
		money = strval(tmp);
		if(money > 1000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный количество денег");
		if(PlayerInfo[playerid][pRank] < 10) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		switch(PlayerInfo[playerid][pMember])
		{
		    case 5:
		    {
		        if(MafiaBank[0][nLcn] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        MafiaBank[0][nLcn] -= money;
			}
			case 6:
		    {
		        if(MafiaBank[0][nYakuza] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        MafiaBank[0][nYakuza] -= money;
			}
			case 10:
		    {
		        if(MafiaBank[0][nRm] < money) return SendClientMessage(playerid, COLOR_GREY, "В банке фракции нет столько денег");
		        MafiaBank[0][nRm] -= money;
			}
			default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
		}
        new string[40];
		PlayerInfo[playerid][pCash] += money;
		format(string, sizeof(string), "Вы сняли с банка фракции %d вирт", money);
		SendClientMessage(playerid, 0x6495EDFF, string);
		SaveBankMafia();
		return true;
	}
	if(strcmp(cmd, "/mafiabank",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	    	new money;
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mafiabank [количество]");
	        money = strval(tmp);
	        if(PlayerInfo[playerid][pCash] < money) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			if(money > 1000000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильное количество денег");
	        switch(PlayerInfo[playerid][pMember])
	        {
				case 5: MafiaBank[0][nLcn] += money;
				case 6: MafiaBank[0][nYakuza] += money;
				case 10: MafiaBank[0][nRm] += money;
				default: return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
			}
			PlayerInfo[playerid][pCash] -= money;
			new string[41];
			format(string, sizeof(string), "Вы положили в банк фракции %d вирт", money);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SaveBankMafia();
		}
		return true;
	}
	if(strcmp(cmd, "/materials", true) == 0)
	{
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /materials [значение] (buy, put, get)");
 		if(IsPlayerConnected(playerid))
		{
			if(strcmp(x_nr, "buy",true) == 0)
			{
			    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вам недоступна данная команда");
			    switch(PlayerInfo[playerid][pMember])
				{
				    case 5,6,14: return ShowPlayerDialog(playerid,9298,DIALOG_STYLE_MSGBOX, "Покупка материалов","Вы действительно хотите купить 50000 материалов за 100000?", "Да", "Нет");
 				}
 			}
			else if(strcmp(x_nr, "put",true) == 0)
			{
				new nearveh = GetNearestVehicle(playerid);
				new Float:cx,Float:cy,Float:cz;
				GetVehiclePos(nearveh, cx, cy, cz);
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
				    new string[38];
					switch(PlayerInfo[playerid][pMember])
					{
						case 12:
						{
				  			if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы в фургоне: %d/3000", Furi[nearveh-matsfura[0]][gBallas]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
					 			return true;
							}
							if(Furi[nearveh-matsfura[0]][gBallas] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
					 		Furi[nearveh-matsfura[0]][gBallas] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
					   		RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы в фургоне: %d/3000", Furi[nearveh-matsfura[0]][gBallas]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 13:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuravagos[0]][gVagos]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuravagos[0]][gVagos] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuravagos[0]][gVagos] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuravagos[0]][gVagos]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 15:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuragrove[0]][gGrove]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuragrove[0]][gGrove] >= 3000) return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
						 	SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuragrove[0]][gGrove] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
						 	RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuragrove[0]][gGrove]);
						    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			      		}
						case 17:
						{
						 	if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraactek[0]][gAztek]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
				   			if(Furi[nearveh-matsfuraactek[0]][gAztek] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
						 	SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraactek[0]][gAztek] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
						 	RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraactek[0]][gAztek]);
						    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 18:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfurarifa[0]][gRifa]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfurarifa[0]][gRifa] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfurarifa[0]][gRifa] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfurarifa[0]][gRifa]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 23:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraSsmc[0]][gSsmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraSsmc[0]][gSsmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraSsmc[0]][gSsmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraSsmc[0]][gSsmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 24:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraHamc[0]][gHamc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraHamc[0]][gHamc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraHamc[0]][gHamc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraHamc[0]][gHamc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 25:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraOmc[0]][gOmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraOmc[0]][gOmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraOmc[0]][gOmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraOmc[0]][gOmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 26:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraWmc[0]][gWmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraWmc[0]][gWmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraWmc[0]][gWmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraWmc[0]][gWmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 27:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraHwmc[0]][gHwmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraHwmc[0]][gHwmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraHwmc[0]][gHwmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraHwmc[0]][gHwmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 28:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraFsmc[0]][gFsmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraFsmc[0]][gFsmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraFsmc[0]][gFsmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraFsmc[0]][gFsmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 29:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraPmc[0]][gPmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraPmc[0]][gPmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraPmc[0]][gPmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraPmc[0]][gPmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 30:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraMmc[0]][gMmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraMmc[0]][gMmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraMmc[0]][gMmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraMmc[0]][gMmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 31:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraVmc[0]][gVmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraVmc[0]][gVmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraVmc[0]][gVmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraVmc[0]][gVmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						case 32:
						{
							if(usemats[playerid] != 1)
							{
								SendClientMessage(playerid, COLOR_GREY, "У вас нет материалов с собой");
								format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraBmc[0]][gBmc]);
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return true;
							}
							if(Furi[nearveh-matsfuraBmc[0]][gBmc] >= 3000)return SendClientMessage(playerid, COLOR_GREY, "Фургон заполнен");
							SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 материалов");
							Furi[nearveh-matsfuraBmc[0]][gBmc] += 250;
							usemats[playerid] = 0;
							usegruz[playerid] = 0;
							RemovePlayerAttachedObject(playerid, 1);
							format(string, sizeof(string), "Материалы: %d/3000", Furi[nearveh-matsfuraBmc[0]][gBmc]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						}
						
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от фургона");
			}
			else if(strcmp(x_nr, "get",true) == 0)
			{
				if(IsAGang(playerid) || IsABiker(playerid))
				{
					if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
					{
						if(armmatsf == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли материалы");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
      					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
			        	SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
			        	usegruz[playerid] = 1;
			        	usemats[playerid] = 1;
						armmatsf -= 250;
					}
					if(PlayerToPoint(7.0,playerid,2729.3267,-2451.5051,17.5937))
					{
						if(armmatsf == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять больше");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
						SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
						usemats[playerid] = 1;
						usegruz[playerid] = 1;
						lsamatbi -= 250;
					}
					if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938))
					{
						if(armmatbi == 0)return SendClientMessage(playerid, COLOR_GREY, "Склад армии пуст");
						if(usemats[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять больше");
						SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
						SendClientMessage(playerid, COLOR_WHITE, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
						SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
						usemats[playerid] = 1;
						usegruz[playerid] = 1;
						armmatbi -= 250;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/kazna", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pAdmin] > 0)
		{
		    new string[26];
			format(string, sizeof(string), "В казне: %d вирт", FracBank[0][fKazna]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/settax", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		new Moneys;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /settax [налог]");
		Moneys = strval(tmp);
		if(Moneys < 100 || Moneys > 2500) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 100 и больше 2500 вирт");
		new string[24];
		format(string, sizeof(string), "Налог: %d вирт", Moneys);
		SendClientMessage(playerid, COLOR_WHITE, string);
  		GovTax = Moneys;
		new File = ini_openFile("gamefiles/tax.ini");
		ini_setInteger(File, "Tax", GovTax);
  		ini_closeFile(File);
        return true;
    }
	if(strcmp(cmd, "/abalance", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(IsPlayerConnected(playerid))
		    {
		        new string[512];
				format(string, sizeof(string), "Казна штата: \t\t%d\nНовости:\nLS NEWS: \t\t%d\nSF NEWS: \t\t%d\nLV NEWS: \t\t%d\nБанды:\nBallas: \t\t\t%d\nVagos: \t\t%d\nGrove: \t\t\t%d\nAztekas: \t\t%d\nRifa: \t\t\t%d",FracBank[0][fKazna],FracBank[0][fLsnews],FracBank[0][fSfnews],FracBank[0][fLvnews],FracBank[0][fBallas],FracBank[0][fVagos],FracBank[0][fGrove],FracBank[0][fAztek],FracBank[0][fRifa]);
			    format(string, sizeof(string), "%s\nМафии:\nYakuza: \t\t%d\nRM: \t\t\t%d\nLCN: \t\t\t%d\nБайкеры:\nSons of Silens MC: \t%d\nHell's Angels MC: \t%d\nOutlaws MC: \t\t%d",string,MafiaBank[0][nYakuza],MafiaBank[0][nRm],MafiaBank[0][nLcn],FracBank[0][fSsmc],FracBank[0][fHamc],FracBank[0][fOmc]);
                format(string, sizeof(string), "%s\nWarlocks MC: \t\t%d\nHighwayman MC: \t%d\nFree Souls MC: \t%d\nPagans MC: \t\t%d\nMongols MC: \t\t%d\nVagos MC: \t\t%d\nBandidos MC: \t\t%d",string,FracBank[0][fWmc],FracBank[0][fHwmc],FracBank[0][fFsmc],FracBank[0][fPmc],FracBank[0][fMmc],FracBank[0][fVmc],FracBank[0][fBmc]);
                ShowPlayerDialog(playerid,8822,DIALOG_STYLE_MSGBOX,"Банки фракций",string,"Выход","");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/awarehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    new string[512];
			format(string, sizeof(string), "Армии\nЗона 51: \t\t%d\nАвианосец: \t\t%d\nЗаконники\nLSPD: \t\t\t%d\nSFPD: \t\t\t%d\nLVPD: \t\t\t%d\nFBI: \t\t\t%d\nБанды\nBallas: \t\t\t%d\nVagos: \t\t%d\nGrove: \t\t\t%d\nAztekas: \t\t%d\nRifa: \t\t\t%d\nHitmans: \t\t\t%d",armmatbi, armmatsf, lspdmatbi, sfpdmats, lvpdmats, fbimats, ballasmatbi, vagosmatbi, groovmatbi, aztekmatbi, rifamatbi, hitmanmatbi);
			format(string, sizeof(string), "%s\nМафии\nYakuza: \t\t%d\nLCN: \t\t\t%d\nRM: \t\t\t%d\nБайкеры\nSons ofSilens MC: \t%d\nHell's Angels MC: \t%d",string, yakuzamats, lcnmats, rmmats, ssmcmatbi, hamcmatbi);
            format(string, sizeof(string), "%s\nOutlaws MC: \t\t%d\nWarlocks MC: \t\t%d\nHighwaymen MC: \t%d\nFree Souls MC: \t%d\nPagans MC: \t\t%d\nMongols MC: \t\t%d\nVagos MC: \t\t%d\nBanditos MC: \t\t%d",string, omcmatbi, wmcmatbi, hwmcmatbi, fsmcmatbi, pmcmatbi, mmcmatbi, vmcmatbi, bmcmatbi);
            ShowPlayerDialog(playerid,8822,DIALOG_STYLE_MSGBOX,"Маты",string,"Выход","");
		}
		return true;
	}
	if(strcmp(cmd, "/warehouse", true) == 0)
	{
	    new string[58];
		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
		    	format(string, sizeof(string), "На складе LSPD %d/50000 материалов", lspdmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 2:
			{
				format(string, sizeof(string), "На складе FBI %d/50000 материалов", fbimats);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 3:
            {
				format(string, sizeof(string), "На складе Армии SF: %d/50000 материалов", armmatsf);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "На складе LSA: %d/50000 материалов", lsamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
            }
			case 5:
			{
		    	format(string, sizeof(string), "На складе LCN %d/50000 материалов", lcnmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 6:
			{
		    	format(string, sizeof(string), "На складе Yakuza %d/50000 материалов", yakuzamats);
				SendClientMessage(playerid, 0x6495EDFF, string);
			}
			case 10:
			{
		    	format(string, sizeof(string), "На складе SFPD %d/50000 материалов", sfpdmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 12:
			{
		    	format(string, sizeof(string), "На складе Ballas %d/50000 материалов", ballasmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 13:
			{
		    	format(string, sizeof(string), "На складе Vagos %d/50000 материалов", vagosmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 14:
			{
		    	format(string, sizeof(string), "На складе РМ %d/50000 материалов", rmmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
            case 15:
			{
		    	format(string, sizeof(string), "На складе Grove %d/50000 материалов", groovmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
	    	case 17:
			{
		    	format(string, sizeof(string), "На складе Aztec %d/50000 материалов", aztekmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 18:
			{
		    	format(string, sizeof(string), "На складе Rifa %d/50000 материалов", rifamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 19:
            {
				format(string, sizeof(string), "На главном складе: %d/100000 материалов", armmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "На складе LSA: %d/50000 материалов", lsamatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
            }
			case 21:
			{
		    	format(string, sizeof(string), "На складе LVPD %d/50000 материалов", lvpdmats);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 23:
			{
		    	format(string, sizeof(string), "На складе Sons of Silence MC %d/50000 материалов", ssmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 24:
			{
		    	format(string, sizeof(string), "На складе Hell's Angels MC %d/50000 материалов", hamcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 25:
			{
		    	format(string, sizeof(string), "На складе Outlaws MC %d/50000 материалов", omcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 26:
			{
		    	format(string, sizeof(string), "На складе Warlocks MC %d/50000 материалов", wmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 27:
			{
		    	format(string, sizeof(string), "На складе Highwayman MC %d/50000 материалов", hwmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 28:
			{
		    	format(string, sizeof(string), "На складе Free Souls MC %d/50000 материалов", fsmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 29:
			{
		    	format(string, sizeof(string), "На складе Pagans MC %d/50000 материалов", pmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 30:
			{
		    	format(string, sizeof(string), "На складе Mongols MC %d/50000 материалов", mmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 31:
			{
		    	format(string, sizeof(string), "На складе Vagos MC %d/50000 материалов", vmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
			case 32:
			{
		    	format(string, sizeof(string), "На складе Bandidos MC %d/50000 материалов", bmcmatbi);
				SendClientMessage(playerid, 0x6495EDFF, string);
		    	return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/payday", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6) PayDay();
		return true;
	}
	if(strcmp(cmd, "/gcontract",true)==0 || strcmp(cmd, "/givecontract", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] == 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не прораб");
		if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны начать рабочий день");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gcontract [id]");
		giveplayerid = strval(tmp);
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключать контракт с собой");
		if(Prorab[giveplayerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключать контракт с прорабом");
		if(Works[giveplayerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже работает");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		if(JobOffer[giveplayerid] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже предложили игроку контракт");
		JobOffer[giveplayerid] = playerid;
		new string[128];
		format(string, sizeof(string), "Вы предложили контакт %s", PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, 0x6495EDFF, string);
		format(string, sizeof(string), "%s предлагает тебе контракт. (/accept gcontract) чтобы заключить контракт (Преимущество: 50 вирт за мешок)", PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, 0x6495EDFF, string);
		return true;
	}
	if(strcmp(cmd, "/gpayday",true)==0 || strcmp(cmd, "/givepayday", true) == 0)
	{
	    if(PlayerInfo[playerid][pJob] == 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не прораб");
		if(Prorab[playerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы должны начать рабочий день");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gpayday [id игрока].");
		giveplayerid = strval(tmp);
		if(Employer[giveplayerid] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок не работает на вас");
		if(Works[giveplayerid] == false) return SendClientMessage(playerid, COLOR_GREY, "Игрок не работает");
		if(JobAmmount[giveplayerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок перенес не одного мешка");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		PlayerInfo[playerid][pCash] += JobAmmount[playerid]*50;
		PlayerInfo[giveplayerid][pCash] += JobAmmount[giveplayerid]*25;
		new string[76];
		format(string,sizeof(string), "Вы получили %d вирт, за работу на прораба %s",JobAmmount[playerid]*50, PlayerInfo[giveplayerid][pName]);
		SendClientMessage(giveplayerid, COLOR_GREEN,string);
		JobAmmount[playerid] = 0;
		return true;
	}
	if(strcmp(cmd, "/repaydebt", true) == 0)
	{
		if(PlayerInfo[playerid][pMafiaRoof] == 5)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточная сумма, для возврата долга");\
			new string[64];
		 	SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён LCN");
		 	format(string, sizeof(string), "%s вернул долг в размере %s вирт", PlayerInfo[playerid][pName],PlayerInfo[playerid][pDebt]);
		 	SendFamilyMessage(5, TEAM_AZTECAS_COLOR, string);
			MafiaBank[0][nLcn] += PlayerInfo[playerid][pDebt];
			PlayerInfo[playerid][pDebt] = 0;
		}
		if(PlayerInfo[playerid][pMafiaRoof] == 6)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточная сумма, для возврата долга");
			SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён Yakuza");
			new string[64];
			format(string, sizeof(string), "%s вернул долг в размере %s вирт", PlayerInfo[playerid][pName],PlayerInfo[playerid][pDebt]);
			SendFamilyMessage(6, TEAM_AZTECAS_COLOR, string);
			MafiaBank[0][nYakuza] += PlayerInfo[playerid][pDebt];
			PlayerInfo[playerid][pDebt] = 0;
		}
		if(PlayerInfo[playerid][pMafiaRoof] == 14)
		{
			if(PlayerInfo[playerid][pDebt] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточная сумма, для возврата долга");
		 	SendClientMessage(playerid, COLOR_GREEN, "Долг был возвращён РМ");
		 	new string[64];
		 	format(string, sizeof(string), "%s вернул долг в размере %s вирт", PlayerInfo[playerid][pName],PlayerInfo[playerid][pDebt]);
		 	SendFamilyMessage(14, TEAM_AZTECAS_COLOR, string);
		 	MafiaBank[0][nRm] += PlayerInfo[playerid][pDebt];
		 	PlayerInfo[playerid][pDebt] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/mydebts", true) == 0 || strcmp(cmd, "/md", true) == 0)
	{
		new mafiatext[20];
		new form[99];
		switch(PlayerInfo[playerid][pMafiaRoof])
		{
		    case 0: mafiatext = "Нет";
			case 5: mafiatext = "LCN";
		    case 6: mafiatext = "Yakuza";
		    case 14: mafiatext = "RM";
		}
		format(form,sizeof(form), "Крыша: %s\nДолг: %d вирт",mafiatext,PlayerInfo[playerid][pDebt]);
   		ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Информация о себе",form, "Готово", "");
   		return true;
	}
	if(strcmp(cmd, "/mystyle", true) == 0 || strcmp(cmd, "/ms", true) == 0)
	{
		new style[512];
		new box;
		new kongfu;
		new kickbox;
		if(PlayerInfo[playerid][pBoxSkill] >= 1999) PlayerInfo[playerid][pBoxSkill] = 2000;
		if(PlayerInfo[playerid][pKickboxSkill] >= 1999) PlayerInfo[playerid][pKickboxSkill] = 2000;
		if(PlayerInfo[playerid][pKongfuSkill] >= 1999) PlayerInfo[playerid][pKongfuSkill] = 2000;
		box = 2000 - PlayerInfo[playerid][pBoxSkill];
		kongfu = 2000 - PlayerInfo[playerid][pKongfuSkill];
		kickbox = 2000 - PlayerInfo[playerid][pKickboxSkill];
		format(style,sizeof(style), "{33CCFF}Box:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /box\nВсего набито: %d\n==============================\n{33CCFF}Kong-Fu:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /kongfu\nВсего набито: %d\n==============================\n{33CCFF}Kick-Box:\n{FFFFFF}До преобладания стиля осталось %d ударов\nДля включения стиля: /kickbox\nВсего набито: %d\n==============================",
		box,PlayerInfo[playerid][pBoxSkill],kongfu, PlayerInfo[playerid][pKongfuSkill],kickbox,PlayerInfo[playerid][pKickboxSkill]);
		ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Навыки владения стилями боя",style, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/box", true) == 0)
	{
		if(PlayerInfo[playerid][pBoxSkill] >= 2000)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			SendClientMessage(playerid, COLOR_GREY, "Теперь вы используете стиль Бокс");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ваш навык владения данным видом боегого искусства слишком низок");
		return true;
	}
	if(strcmp(cmd, "/kongfu", true) == 0)
	{
		if(PlayerInfo[playerid][pKongfuSkill] >= 2000)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			SendClientMessage(playerid, COLOR_GREY, "Теперь вы используете стиль Кунг-фу");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ваш навык владения данным видом боегого искусства слишком низок");
		return true;
	}
	if(strcmp(cmd, "/kickbox", true) == 0)
	{
		if(PlayerInfo[playerid][pKickboxSkill] >= 2000)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			SendClientMessage(playerid, COLOR_GREY, "Теперь вы используете стиль Кикбокс");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ваш навык владения данным видом боегого искусства слишком низок");
		return true;
	}
	if(strcmp(cmd, "/fgstyle", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] == 6 && PlayerInfo[playerid][pMember] == 0)
 			{
 				if(!PlayerToPoint(30.0,playerid,768.1588,6.5715,1000.7144)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в спорт зале!");
				ShowPlayerDialog(playerid, 3439, DIALOG_STYLE_LIST, "Начать урок по изучинию ускуства", "[1] Начать урок по Box\n[2] Начать урок по Kong-Fu\n[3] Начать урок по Kick-Box\n[4] Завершить урок по Box\n[5] Завершить урок по Kong-Fu\n[6] Завершить урок по Kick-Box", "Выбрать", "Отмена");
				return true;
			}
       	}
		return true;
	}
	if(strcmp(cmd, "/sp", true) == 0 || strcmp(cmd, "/spawn", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			SpawnPlayer(playerid);
			SetPlayerWeapons(playerid);
		}
        return true;
    }
	if(strcmp(cmd, "/ratingnews",true)==0)
    {
		new points[6],percent[2] = "%";
		points[0] = 100 - radiols;
		points[1] = 100 - radiosf;
		points[2] = 100 - radiolv;
		new radiolist[1024];
		format(radiolist, sizeof(radiolist), "LS News [%s]%d%s %d человек\nSF News [%s]%d%s %d человек\nLV News [%s]%d%s %d человек",
		ToDevelopRating(radiols,points[0]),radiols,percent,radiols,
		ToDevelopRating(radiosf,points[1]),radiosf,percent,radiosf,
		ToDevelopRating(radiolv,points[2]),radiolv,percent,radiolv);
		ShowPlayerDialog(playerid, 69, DIALOG_STYLE_MSGBOX, "Рейтинг радиостанций:", radiolist, "Готово", "");
        return true;
    }
	if(strcmp(cmd, "/spcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		return true;
	}
	if(strcmp(cmd, "/spcars", true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
	        if(IsPlayerConnected(playerid))
	        {
	            for(new c = 0; c < MAX_VEHICLES; c++)
	            {
	                if(!IsVehicleOccupied(c)) SetVehicleToRespawn(c);
	            }
				new string[48];
				format(string,sizeof(string), "%s обновил весь транспорт", PlayerInfo[playerid][pName]);
	            ABroadCast(COLOR_LIGHTRED, string, 1);
			}
        }
        return true;
    }
     else if(strcmp(cmd, "/clearchat", true) == 0 || strcmp(cmd, "/cc", true) == 0 )
    {
        if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
        if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не уполномочены использовать эту команду");
        for(new i = 0; i < sizeof(faggio); i++)
        {
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_WHITE, "");
            SendClientMessageToAll(COLOR_RED, "Игровой чат был очищен администрацией");
        }
        return true;
  }
	if(strcmp(cmd, "/hotdog", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /hotdog [id] [цена]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 5000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 588) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине для продажи Хот Догов");
			if(!IsPlayerConnected(playa) ||  playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			if(ProxDetectorS(8.0, playerid, playa))
			{
				new string[122];
				format(string, sizeof(string), "Вы предложили %s купить Хот Дог за %d вирт", PlayerInfo[playa][pName],money);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает вам ХотДог за %d вирт. Введите: (/accept eat) для покупки Хот Дога",PlayerInfo[playerid][pName],money);
				SendClientMessage(playa, 0x6495EDFF, string);
				HotdogOffer[playa] = playerid;
				HotdogPrice[playa] = money;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
 		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
		return true;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /free [id] [цена]");
			new playa = ReturnUser(tmp);
			if(PlayerInfo[playa][pJailed] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в тюрьме");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /free [id] [цена]");
			new money = strval(tmp);
			if(money < 1 || money > 50000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 50000 вирт");
			if(playa == playerid)  return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			new string[105];
			format(string, sizeof(string), "Вы предложили выпустить %s за %d вирт", PlayerInfo[playa][pName], money);
			SendClientMessage(playerid, 0x6495EDFF, string);
			format(string, sizeof(string), "Адвокат %s предлагает вам свободу. Цена: %d вирт. Способ оплаты: наличные", PlayerInfo[playerid][pName], money);
			SendClientMessage(playa, 0x6495EDFF, string);
			SendClientMessage(playa, 0x6495EDFF, "Что бы принять введите /accept free");
			FreeOffer[playa] = playerid;
			FreePrice[playa] = money;
			SposobOffer[playa] = 0;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не адвокат");
		return true;
	}
	if(strcmp(cmd, "/selleat", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 3 && PlayerInfo[playerid][pMember] == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /selleat [id] [цена]");
			new playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new money = strval(tmp);
			if(money < 1 || money > 5000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5000 вирт");
			if(!IsAHotDog(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у киоска для продажи Хот Догов");
			if(!IsPlayerConnected(playa) ||  playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			if(ProxDetectorS(8.0, playerid, playa))
			{
			    new string[103];
				format(string, sizeof(string), "Вы предложили %s Хот Дог за %d вирт", PlayerInfo[playa][pName],money);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s предлагает Вам Хот Дог за %d вирт. Введите: (/accept eat) для покупки Хот Дога", PlayerInfo[playerid][pName],money);
				SendClientMessage(playa, 0x6495EDFF, string);
				HotdogOffer[playa] = playerid;
				HotdogPrice[playa] = money;
				if(PlayerToPoint(2.0,playerid,1144.8342,-1756.9113,13.6446))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[0], TEAM_GROVE_COLOR, string);
				}
				else if(PlayerToPoint(2.0,playerid,1145.2543,-1754.4446,13.6446))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[1], TEAM_GROVE_COLOR, string);
				}
				else if(PlayerToPoint(2.0,playerid,1414.2671,-1717.9924,13.5469))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[2], TEAM_GROVE_COLOR, string);
				}
				else if(PlayerToPoint(2.0,playerid,1470.9401,-1675.2782,13.5469))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[3], TEAM_GROVE_COLOR, string);
				}
				else if(PlayerToPoint(2.0,playerid,1476.6941,-1675.3403,13.5469))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[4], TEAM_GROVE_COLOR, string);
				}
				else if(PlayerToPoint(2.0,playerid,2182.4678,-2269.3660,14.3718))
				{
					format(string, sizeof(string), "Цена ХотДога: %d вирт",money);
					Update3DTextLabelText(foods[5], TEAM_GROVE_COLOR, string);
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не продавец Хот Догов");
		return true;
	}
	if(strcmp(cmd, "/changename", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			new newname[128];
			new stringo[29];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changename [id]");
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
				{
					format(stringo,sizeof(stringo), "%s.ini",newname);
				    if(fexist(stringo)) return SendClientMessage(playerid,COLOR_GREY, "Ник занят");
					nick[giveplayerid] = 1;
				    format(changenam,sizeof(changenam), "%s",WantNickChange[giveplayerid]);
					format(stringo,sizeof(stringo), "%s.ini",WantNickChange[giveplayerid]);
					dini_Create(stringo);
					SendClientMessage(giveplayerid,COLOR_GREEN, "Ваш ник был изменён");
					ChangeName(giveplayerid);
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /forceskin [id]");
			new para1 = ReturnUser(tmp);
			if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			if(PlayerInfo[para1][pMember] < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит во фракции");
			SendClientMessage(para1, 0x6495EDFF, "Вы были допущены к изменению скина администратором сервера");
			new string[56];
			format(string, sizeof(string), "Вы допустили %s к изменению скина", PlayerInfo[para1][pName]);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SendClientMessage(para1, COLOR_REDD, "Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			ShowMenuForPlayer(ChoseSkin,para1);
			SetPlayerInterior(para1,5);
			OldSkin[para1] = GetPlayerSkin(para1);
			ChosenSkin[para1] = OldSkin[para1];
			new skin =2 + random(100);
			SetPlayerVirtualWorld(para1,skin);
			new rand = random(sizeof(gInviteSpawns));
			SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
			SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
			TogglePlayerControllable(para1, 0);
			SelectChar[para1] = 255;
			SelectCharID[para1] = PlayerInfo[para1][pMember];
			SelectCharPlace[para1] = 1;
			PlayerInfo[para1][pChar] = ChosenSkin[para1];
		}
		return true;
	}
	if(strcmp(cmd, "/skin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skin [skin]");
			new level;
			level = strval(tmp);
			if(level > 299 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID скина");
			if(IsPlayerConnected(playerid))
			{
				PlayerInfo[playerid][pModel] = level;
				PlayerInfo[playerid][pChar] = level;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskin [id] [skin]");
			new para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level = strval(tmp);
			if(level > 299 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID скина");
			if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			PlayerInfo[para1][pChar] = level;
			SendClientMessage(para1, 0x6495EDFF, "Ваш скин был изменен администратором");
			new string[64];
			format(string, sizeof(string), "Вы изменили скин %s на номер: %d", PlayerInfo[para1][pName], level);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
		}
		return true;
	}
	if(strcmp(cmd, "/prizeticket", true) == 0)
	{
		if(PlayerInfo[playerid][pTicket] <= 1) return SendClientMessage(playerid, COLOR_GREY,"У вас нет билета удачи");
		new string[49];
		if(PlayerInfo[playerid][pTicketNr][0] & PlayerInfo[playerid][pTicketNr][1] & PlayerInfo[playerid][pTicketNr][2])
		{
			format(string,sizeof(string), "На карточке:[%d][%d][%d]",PlayerInfo[playerid][pTicketNr][0],PlayerInfo[playerid][pTicketNr][1],PlayerInfo[playerid][pTicketNr][2]);
			SendClientMessage(playerid,COLOR_GREEN,string);
			SendClientMessage(playerid,COLOR_WHITE,"Поздравляем у вас выпало 3 одинаковых числа");
			PlayerInfo[playerid][pTicket] = 0;
			PlayerInfo[playerid][pTicketWin] = 1;
			PlayerInfo[playerid][pTicketNr][0] = 0;
			PlayerInfo[playerid][pTicketNr][1] = 0;
			PlayerInfo[playerid][pTicketNr][2] = 0;
			return true;
		}
		else
		{
			format(string,sizeof(string), "На карточке:[%d][%d][%d]",PlayerInfo[playerid][pTicketNr][0],PlayerInfo[playerid][pTicketNr][1],PlayerInfo[playerid][pTicketNr][2]);
			SendClientMessage(playerid,COLOR_GREEN,string);
			SendClientMessage(playerid,COLOR_WHITE,"Может в следущий раз повезёт");
			PlayerInfo[playerid][pTicket] = 0;
			PlayerInfo[playerid][pTicketNr][0] = 0;
			PlayerInfo[playerid][pTicketNr][1] = 0;
			PlayerInfo[playerid][pTicketNr][2] = 0;
			return true;
		}
	}
	if(strcmp(cmd, "/giveticket", true) == 0)
	{
		if(PlayerInfo[playerid][pTicketWin] == 1)
		{
			SendClientMessage(playerid,COLOR_WHITE,"Вы забрали свои 10000 вирт. Спасибо за покупку билета удачи");
			PlayerInfo[playerid][pCash] += 10000;
			PlayerInfo[playerid][pTicketWin] = 0;
		}
		else SendClientMessage(playerid,COLOR_WHITE,"Вы не чего не выиграли");
		return true;
	}
	if(strcmp(cmd, "/pay", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /pay [id] [сумма]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /pay [id] [сумма]");
		moneys = strval(tmp);
		if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 3 уровня, чтобы передать 100000 вирт!");
		if(moneys < 1 || moneys > 100000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передать меньше 1 вирта и больше 100000 вирт");
		if(PlayerEx[giveplayerid][VarEx] > 1 && PlayerInfo[playerid][pLevel] < 7) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги человеку в АФК");
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		if(ProxDetectorS(5.0, playerid, giveplayerid))
		{
			new playermoney = PlayerInfo[playerid][pCash];
			if(moneys > 0 && playermoney >= moneys)
			{
				PlayerInfo[giveplayerid][pCash] += moneys;
				PlayerInfo[playerid][pCash] -= moneys;
				new string[110];
				format(string, sizeof(string), "Вы передали %s[%d], %d вирт.", PlayerInfo[giveplayerid][pName],giveplayerid, moneys);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "Вы получили %d вирт от %s[%d].", moneys, PlayerInfo[playerid][pName], playerid);
				SendClientMessage(giveplayerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "%s handed = %d wirt's to %s received = %d wirt's\n", PlayerInfo[playerid][pName], moneys, PlayerInfo[giveplayerid][pName],moneys);
    			Pay(string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "%s достал(а) бумажник и передал(а) деньги %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		return true;
	}
	if(strcmp(cmd, "/setmats", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Введите: /setmats [номер] [количество]");
				SendClientMessage(playerid, COLOR_WHITE, "[1]LVA,[2]SFA,[4]FBI,[5]LSPD,[6]SFPD,[7]LVPD,[8]Yakuza,[9]LCN,[10]RM,[11]Наёмники");
				return true;
			}
			new stat = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Введите: /setmats [номер] [количество]");
				SendClientMessage(playerid, COLOR_WHITE, "[1]LVA,[2]SFA,[4]FBI,[5]LSPD,[6]SFPD,[7]LVPD,[8]Yakuza,[9]LCN,[10]RM,[11]Наёмники");
				return true;
			}
			new amount = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
			    new string[45];
				switch(stat)
				{
					case 1:
					{
						armmatbi = amount;
						format(string, sizeof(string), "Материалы LVA изменены на: %d", amount);
					}
					case 2:
					{
						armmatsf = amount;
						format(string, sizeof(string), "Материалы SFA изменены на: %d", amount);
					}
					case 4:
					{
						fbimats = amount;
						format(string, sizeof(string), "Материалы FBI изменены на: %d", amount);
					}
					case 5:
					{
						lspdmatbi = amount;
						format(string, sizeof(string), "Материалы LSPD изменены на: %d", amount);
					}
					case 6:
					{
						sfpdmats = amount;
						format(string, sizeof(string), "Материалы SFPD изменены на: %d", amount);
					}
					case 7:
					{
        				lvpdmats = amount;
						format(string, sizeof(string), "Материалы LVPD изменены на: %d", amount);
					}
					case 8:
					{
						yakuzamats = amount;
						format(string, sizeof(string), "Материалы Yakuza изменены на: %d", amount);
					}
					case 9:
					{
						lcnmats = amount;
						format(string, sizeof(string), "Материалы LCN изменены на: %d", amount);
					}
					case 10:
					{
						rmmats = amount;
						format(string, sizeof(string), "Материалы RM изменены на: %d", amount);
					}
                    case 11:
					{
						hitmanmatbi = amount;
						format(string, sizeof(string), "Материалы наёмников изменены на: %d", amount);
					}
					default: format(string, sizeof(string), "Неверное значение", amount);
				}
				SendClientMessage(playerid, COLOR_GREY, string);
				SaveMaterials();
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setstat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Введите: /setstat [id] [номер] [количество]");
				SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Убийств");
				SendClientMessage(playerid, COLOR_GRAD2, "[6] Номер телефона|[7] Exp|[8] Ключ от дома |[9] Номер бизнеса");
				SendClientMessage(playerid, COLOR_GRAD3, "[10] VIP [1-4]|[11] Работа игрока|[12] Сытость|[13] Деньги в банке");
				SendClientMessage(playerid, COLOR_GRAD4, "[14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
				SendClientMessage(playerid, COLOR_GRAD5, "[18] Член орг|[19] Донат счётчик");
				SendClientMessage(playerid, COLOR_GRAD6, "[20] Box|[21] Kong Fu|[22] Kick Box");
				SendClientMessage(playerid, COLOR_GRAD5, "[23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость");
				SendClientMessage(playerid, COLOR_GRAD4, "[27] Модель игрока|[28] Помолвлен на|[29] Проценты Авто|[30] Мастерская");
				return true;
			}
 			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Введите: /setstat [id] [номер] [количество]");
						SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Убийств");
						SendClientMessage(playerid, COLOR_GRAD2, "[6] Номер телефона|[7] Exp|[8] Ключ от дома |[9] Номер бизнеса");
						SendClientMessage(playerid, COLOR_GRAD3, "[10] VIP [1-4]|[11] Работа игрока|[12] Сытость|[13] Деньги в банке");
						SendClientMessage(playerid, COLOR_GRAD4, "[14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
						SendClientMessage(playerid, COLOR_GRAD5, "[18] Член орг|[19] Донат счётчик");
						SendClientMessage(playerid, COLOR_GRAD6, "[20] Box|[21] Kong Fu|[22] Kick Box");
						SendClientMessage(playerid, COLOR_GRAD5, "[23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость");
						SendClientMessage(playerid, COLOR_GRAD4, "[27] Модель игрока|[28] Помолвлен на|[29] Проценты Авто|[30] Мастерская");
						return true;
					}
    				new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Введите: /setstat [id] [номер] [количество]");
						SendClientMessage(playerid, COLOR_GRAD1, "[1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Убийств");
						SendClientMessage(playerid, COLOR_GRAD2, "[6] Номер телефона|[7] Exp|[8] Ключ от дома |[9] Номер бизнеса");
						SendClientMessage(playerid, COLOR_GRAD3, "[10] VIP [1-4]|[11] Работа игрока|[12] Сытость|[13] Деньги в банке");
						SendClientMessage(playerid, COLOR_GRAD4, "[14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
						SendClientMessage(playerid, COLOR_GRAD5, "[18] Член орг|[19] Донат счётчик");
						SendClientMessage(playerid, COLOR_GRAD6, "[20] Box|[21] Kong Fu|[22] Kick Box");
						SendClientMessage(playerid, COLOR_GRAD4, "[23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость");
						SendClientMessage(playerid, COLOR_GRAD3, "[27] Модель игрока|[28] Помолвлен на|[29] Проценты Авто|[30] Мастерская");
						return true;
					}
					new amount;
					amount = strval(tmp);
					if(PlayerInfo[playerid][pAdmin] >= 6)
					{
					    new string[55];
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "LVL игрока изменён на: %d", amount);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pLabiding] = amount;
								format(string, sizeof(string), "Законопослушность: %d", amount);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][pMaterials] = amount;
								format(string, sizeof(string), "Материалы: %d", amount);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pChar] = amount;
								format(string, sizeof(string), "Скин игрока установлен на: %d", amount);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pKills] = amount;
								format(string, sizeof(string), "Убийства: %d", amount);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = amount;
								format(string, sizeof(string), "Номер телефона игрока изменён на: %d", amount);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "EXP игрока изменены на: %d", amount);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPHousekey] = amount;
								format(string, sizeof(string), "Дом: %d", amount);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPBiskey] = amount;
								format(string, sizeof(string), "Бизнес: %d", amount);
							}
      						case 10:
							{
								PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "VIP аккаунт уровня: %d", amount);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pJob] = amount;
								format(string, sizeof(string), "Работа: %d", amount);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pSatiety] = amount;
								format(string, sizeof(string), "Сытость игрока: %d", amount);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pBank] = amount;
								format(string, sizeof(string), "Деньги в банке изменены на: %d вирт", amount);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMobile] = amount;
								format(string, sizeof(string), "Снятие со счета мобильного(в payday): %d вирт", amount);
							}
            				case 15:
							{
								PlayerInfo[giveplayerid][pCash] = amount;
								format(string, sizeof(string), "Деньги изменены на: %d вирт", amount);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pWarns] = amount;
								format(string, sizeof(string), "Количество варнов изменено на: %d", amount);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrugs] = amount;
								format(string, sizeof(string), "Количество наркотиков изменено на: %d", amount);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pMember] = amount;
								PlayerInfo[giveplayerid][pRank] = 1;
								format(string, sizeof(string), "Организация: %d", amount);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pDonateAccount] = amount;
								PlayerInfo[giveplayerid][pDonate] = amount;
								format(string, sizeof(string), "Донат счётчик изменён на: %d вирт", amount);
							}
     						case 20:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = amount;
								format(string, sizeof(string), "Уровень боевых искусств Box: %d", amount);
							}
							case 21:
							{
								PlayerInfo[giveplayerid][pKongfuSkill] = amount;
								format(string, sizeof(string), "Уровень боевых искусств Kong Fu: %d", amount);
							}
							case 22:
							{
								PlayerInfo[giveplayerid][pKickboxSkill] = amount;
								format(string, sizeof(string), "Уровень боевых искусств Kick Box: %d", amount);
							}
							case 23:
							{
								PlayerInfo[giveplayerid][pCar] = amount;
								format(string, sizeof(string), "Машина: %d", amount);
							}
							case 24:
							{
								new house = PlayerInfo[giveplayerid][pPHousekey];
								HouseInfo[house][hVcol1] = amount;
								PlayerInfo[giveplayerid][pColor] = amount;
  								format(string, sizeof(string), "Цвет 1: %d", amount);
							}
							case 25:
							{
								new house = PlayerInfo[giveplayerid][pPHousekey];
								HouseInfo[house][hVcol2] = amount;
								PlayerInfo[giveplayerid][pColor1] = amount;
								format(string, sizeof(string), "Цвет 2: %d", amount);
							}
							case 26:
							{
								PlayerInfo[giveplayerid][pAddiction] = amount;
  								format(string, sizeof(string), "Зависимость %d", amount);
							}
							case 27:
							{
								PlayerInfo[giveplayerid][pModel] = amount;
  								format(string, sizeof(string), "Модель игрока: %d", amount);
							}
							case 28:
							{
								PlayerInfo[giveplayerid][pMarriedTo] = amount;
  								format(string, sizeof(string), "Помолвлен на: %d", amount);
							}
							case 29:
							{
								PlayerInfo[giveplayerid][pProcents] = amount;
   								format(string, sizeof(string), "Проценты Автмобиля: %d", amount);
							}
							case 30:
							{
								PlayerInfo[giveplayerid][pAutoMast] = amount;
   								format(string, sizeof(string), "Мастерская игрока: %d", amount);
							}
         					default:
							{
								format(string, sizeof(string), "Неверное значение", amount);
							}
						}
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setklass", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setklass [дом] [класс]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setklass [дом] [класс]");
			new klass = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setklass [дом] [класс]");
			HouseInfo[house][hKlass] = klass;
			new string[24];
			format(string, sizeof(string), "Класс дома: %d", klass);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/getschet", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /getschet [дом]");
			new house = strval(tmp);
			new string[27];
			format(string, sizeof(string), "Домашний счет: %d",HouseInfo[house][hTakings]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setschet", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setchet [дом] [cчет дома]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setchet [дом] [счет дома]");
			new cena = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setchet [дом] [счет дома]");
			HouseInfo[house][hTakings] = cena;
			new string[27];
			format(string, sizeof(string), "Домашний счет: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setcena [дом] [цена]");
			new house = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setcena [дом] [цена]");
			new cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setcena [дом] [цена]");
			HouseInfo[house][hValue] = cena;
			new string[23];
			format(string, sizeof(string), "Цена дома: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/makeobject", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 4)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /makeobject [id объекта(1-19521]");
			new obj = strval(tmp);
			new Float: ox, Float:oy, Float:oz;
			if(obj < 1 || obj > 19521) return SendClientMessage(playerid, COLOR_GREY,"Введите: /makeobject [id объекта(1-19521]");
			GetPlayerPos(playerid, ox, oy, oz);
			newobject = CreateObject(obj, ox + 2, oy + 2, oz + 2, 0, 0, 0);
			EditObject(playerid, newobject);
			SendClientMessage(playerid, COLOR_WHITE, "Объект создан");
		}
		return true;
	}
	if(strcmp(cmd, "/deleteobject", true) == 0)
    {
		DestroyObject(newobject);
		SendClientMessage(playerid, COLOR_WHITE, "Объект(ы) удалены");
        return true;
    }
    if(strcmp(cmd, "/mydocs", true) == 0)
    {
		if(IsPlayerConnected(playerid))
		{
			new string[76];
            format(string, sizeof(string), "%s.ini", PlayerInfo[playerid][pName]);
            new File = ini_openFile(string);
            ini_getString(File, "Docs",string);
            ini_closeFile(File);
            SendClientMessage(playerid,COLOR_WHITE,string);
			format(string,sizeof(string),"Заключение детектива %s: Вина подозреваемого доказана", PlayerInfo[playerid][pName]);
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
    }
    if(strcmp(cmd, "/showdocs", true) == 0)
    {
		if(IsPlayerConnected(playerid))
		{
			new string[76];
            format(string, sizeof(string), "%s.ini", PlayerInfo[playerid][pName]);
            new File = ini_openFile(string);
            ini_getString(File, "Docs",string);
            ini_closeFile(File);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pMember] == 1 ||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 10 ||PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pMember] == 2 ||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pLeader] == 19 || PlayerInfo[i][pMember] == 21 || PlayerInfo[i][pLeader] == 21 || PlayerInfo[i][pJob] == 9)
			        {
                        SendClientMessage(i,COLOR_WHITE,string);
			            format(string,sizeof(string),"Заключение детектива %s: Вина подозреваемого доказана",PlayerInfo[playerid][pName]);
			            SendClientMessage(i,COLOR_WHITE,string);
			        }
                }
			}
		}
    }
	if(strcmp(cmd, "/setpos", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setpos [дом]");
			new Float: lwx, Float:lwy, Float:lwz;
			GetPlayerPos(playerid, lwx, lwy, lwz);
			new house = strval(tmp);
			HouseInfo[house][hEntrancex] = lwx;
			HouseInfo[house][hEntrancey] = lwy;
			HouseInfo[house][hEntrancez] = lwz;
			HouseInfo[house][hVworld] = GetPlayerVirtualWorld(playerid);
			HouseInfo[house][hOint] = GetPlayerInterior(playerid);
			BuyHouse();
			SendClientMessage(playerid, COLOR_WHITE, "Кординаты дома установлены");
		}
		return true;
	}
	if(strcmp(cmd, "/setposcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setposcar [дом]");
			new Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
			new house = strval(tmp);
			HouseInfo[house][hCarx] = X;
			HouseInfo[house][hCary] = Y;
			HouseInfo[house][hCarz] = Z;
			HouseInfo[house][hCarc] = Angle;
			SendClientMessage(playerid, COLOR_GREY, "Координаты машины установлены");
		}
		return true;
	}
	else if(strcmp(cmd,"/wallet",true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return   	SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /wallet [id]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
  		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы ввели свой id");
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(PlayerInfo[playerid][pCash] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ваш кошелёк пуст");
			if(PlayerInfo[playerid][pLevel] < 3)return SendClientMessage(playerid, COLOR_GRAD1, "Вы должны быть 3 уровня, чтобы передать кошелёк");
			if(PlayerEx[giveplayerid][VarEx] > 1 && PlayerInfo[playerid][pLevel] < 7) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги человеку в АФК");
			new string[80];
			format(string,sizeof(string), "отдал(а) свой бумажник игроку %s", PlayerInfo[giveplayerid][pName]);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			format(string, sizeof(string), "%s отдал(a) свой бумажник игроку %s", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[giveplayerid][pCash] += PlayerInfo[playerid][pCash];
			PlayerInfo[playerid][pCash] = 0;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
		return true;
	}
	if(strcmp(cmd, "/setbizcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizcena [бизнес] [цена]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizcena [бизнес] [цена]");
			new cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizcena [бизнес] [цена]");
			BizzInfo[bizz][bBuyPrice] = cena;
			OnPropUpdate();
			new string[128];
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[bizz][bMessage],BizzInfo[bizz][bBuyPrice]);
			Update3DTextLabelText(SBizzInfo[bizz][sbLabel], 0xEAC700AA, string);
			format(string, sizeof(string), "Цена бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/setsbizcena", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsbizcena [бизнес] [цена]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsbizcena [бизнес] [цена]");
			new cena = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsbizcena [бизнес] [цена]");
			SBizzInfo[bizz][sbBuyPrice] = cena;
			new string[128];
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[bizz][sbMessage],SBizzInfo[bizz][sbBuyPrice]);
			Update3DTextLabelText(SBizzInfo[bizz][sbLabel], 0xEAC700AA, string);
			format(string, sizeof(string), "Цена бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/setbizprod", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprod [биз] [прод]");
			new bizz = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprod [биз] [прод]");
			new cena = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprod [биз] [прод]");
			BizzInfo[bizz][bProducts] = cena;
			new string[30];
			format(string, sizeof(string), "Продукты бизнеса: %d", cena);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/setbizbar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizbar [ biz ]");
			new Float:X,Float:Y,Float:Z; GetPlayerPos(playerid,X,Y,Z);
			new biz = strval(tmp);
			BizzInfo[biz][bBarX] = X;
			BizzInfo[biz][bBarY] = Y;
			BizzInfo[biz][bBarZ] = Z;
			SendClientMessage(playerid, COLOR_WHITE, "Координаты бара установлены");
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6) ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "Выберите действие", " [1] Продать все дома\n [2] Продать все бизнесы\n [3] Установить дому интерьер\n [4] Востанновить цены, домов и классы(если все дома проданы)", "Выбрать", "Закрыть");
		return true;
	}
	if(strcmp(cmd, "/object", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_BLUE, "Введите: /object [id]");
		objectplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(!IsPlayerConnected(objectplayerid) || objectplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			ShowPlayerDialog(playerid,8000,DIALOG_STYLE_LIST,"Выдать объект игроку","[1] - Шляпа курицы\n[2] - Огонек на голову\n[3] - Мигалка на голову\n[4] - Черная маска\n[5] - Бандана №1\n[6] - Бандана №2\n[7] - Бандана №3\n[8] - Бандана №4\n[9] - Бандана №5\n[10] - Маска дракона\n[11] - Лазер на голову\n[12] - Комплект всемогущий\n[13] - Попугай на плечо\n[14] - Яркий свет\n[15] - Большой М4 в руку\n[16] - Пенис\n[17] - Костюм попугая\n[18] - Удалить все объекты","Выбрать","Закрыть");
		}
	}
	else if(strcmp(cmd, "/adminkey", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >=4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /adminkey [ключ]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT,"Доступ администратора","Введите пароль от административной панели","Ок","Отмена");
			PlayerInfo[playerid][pDostup] = strval(tmp);
			new string[40];
			format(string,sizeof(string),"%s.ini",PlayerInfo[playerid][pName]);
			new File=ini_openFile(string);
			ini_setString(File,"pDostup",PlayerInfo[playerid][pDostup]);
			ini_closeFile(File);
			format(string, sizeof(string), "Новый пароль: {FFFFFF}%d{FFA500}", PlayerInfo[playerid][pDostup]);
			SendClientMessage(playerid, COLOR_GREEN, string);
		}
		return true;
	}
	if(strcmp(cmd, "/cmd", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
 		{
			tmp = strtok(cmdtext, idx);
  			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cmd [id] [команда]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cmd [id] [команда]");
			OnPlayerCommandText(giveplayerid,result);
		}
		return true;
	}
    if(strcmp(cmd, "/boto", true) == 0 || strcmp(cmd, "/botooc", true) == 0)
    {
  		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /(boto)oc [id] [текст]");
	        giveplayerid = ReturnUser(tmp);
		    if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
   				result[idx - offset] = cmdtext[idx];
			    idx++;
			}
			result[idx - offset] = EOS;
			new string[128];
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /(boto)oc [id] [текст]");
			format(string, sizeof(string), "<< %s[%d]: %s >>", PlayerInfo[giveplayerid][pName], giveplayerid, result);
   			OOCOff(COLOR_OOC,string);
		}
	}
	if(strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/text", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /(t)ext [id] [текст]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			new string[128];
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /text [id] [текст]");
			ApplyAnimation(giveplayerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
			clearanim[giveplayerid] = 7;
			format(string, sizeof(string), "- %s: %s", PlayerInfo[giveplayerid][pName],(result));
			SetPlayerChatBubble(giveplayerid, (result), 0x6495EDFF, 20.0, 10000);
			ProxDetector(20.0, giveplayerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		return true;
	}
	if(strcmp(cmd, "/getip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext,idx);
			new playersip[20];
			if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "Введите: /getip [id]");
			giveplayerid = ReturnUser(tmp);
			GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
			new string[52];
			format(string, sizeof(string), "[%s] IP: %s",PlayerInfo[giveplayerid][pName],playersip);
			SendClientMessage(playerid, COLOR_GREEN,string);
		}
		return true;
	}
	if(strcmp(cmd, "/getstats", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /getstats [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
	        giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			ShowStats(playerid, giveplayerid);
		}
		return true;
	}
	if(strcmp(cmd, "/number", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pPhoneBook] != 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефонной книги (Её можно купить в любом 24/7)");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /number [id]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
		new string[57];
		format(string, sizeof(string), "Владелец: %s. Телефон: %d", PlayerInfo[giveplayerid][pName] ,PlayerInfo[giveplayerid][pPnumber]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return true;
	}
	if(strcmp(cmd, "/cena", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPBiskey];
			if(bouse == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет бизнеса");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cena [цена]");
			if(strval(tmp) < 1 || strval(tmp) > 1000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 1000 вирт");
			BizzInfo[bouse][bPrice] = strval(tmp);
			new string[46];
			format(string, sizeof(string), "Цена за товар установлена на %d вирт", BizzInfo[bouse][bPrice]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/eat", true) == 0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
	    {
			new bizinfo[400];
			new cena = BizzInfo[i][bPrice];
			new cena2 = BizzInfo[i][bPrice]*5;
			new cena3 = BizzInfo[i][bPrice]*10;
			new cena4 = BizzInfo[i][bPrice]*15;
			new cena5 = BizzInfo[i][bPrice]*20;
			new cena6 = BizzInfo[i][bPrice]*25;
		    if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bVworld] == GetPlayerVirtualWorld(playerid))
		    {
			    if(BizzInfo[i][bType] == 1)
			 	{
					format(bizinfo,sizeof(bizinfo), "Бургер\t\t\t[%d вирт]\nРыбный суп\t\t[%d вирт]\nБольшой бургер\t[%d вирт]\nКотлеты\t\t[%d вирт]\nПельмени\t\t[%d вирт]\nГамбургер\t\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
	        		ShowPlayerDialog(playerid, 3389, DIALOG_STYLE_LIST, "Ресторан", bizinfo, "Выбрать", "Отмена");
	 			}
		 		else if(BizzInfo[i][bType] == 2)
				{
					format(bizinfo,sizeof(bizinfo), "Пицца маленькая\t\t[%d вирт]\nПицца с грибами\t\t[%d вирт]\nПицца с сыром\t\t[%d вирт]\nПицца большая\t\t[%d вирт]\nПицца с ветчиной\t\t[%d вирт]\nПицца с куринным мясом\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
        			ShowPlayerDialog(playerid, 4489, DIALOG_STYLE_LIST, "Пицеррия", bizinfo, "Выбрать", "Отмена");
 				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/buy", true) == 0)
	{
        for(new i = 0; i < sizeof(BizzInfo); i++)
        {
	        new bizinfo[400];
            if(PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bVworld] == GetPlayerVirtualWorld(playerid))
            {
                if(BizzInfo[i][bType] == 3)
                {
	                format(bizinfo,sizeof(bizinfo), " [1] Техника и дополнительное\n [2] Продукты\n [3] Интим\n [4] Подарки и развлечения\n [5] Рыбалка\n [6] Для дома");
       	            ShowPlayerDialog(playerid, 5500, DIALOG_STYLE_LIST, "Магазин 24/7", bizinfo, "Выбрать", "Отмена");
   	            }
	        }
	    }
        return true;
	}
	if(strcmp(cmd, "/drink", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    for(new i = 0; i < sizeof(BizzInfo); i++)
		    {
	 			new bizinfo[400];
				new cena = BizzInfo[i][bPrice]*5;
				new cena2 = BizzInfo[i][bPrice]*10;
				new cena3 = BizzInfo[i][bPrice]*15;
				new cena4 = BizzInfo[i][bPrice]*20;
				new cena5 = BizzInfo[i][bPrice]*25;
				new cena6 = BizzInfo[i][bPrice]*30;
		    	if (PlayerToPoint(3, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 0 && BizzInfo[i][bVworld] == GetPlayerVirtualWorld(playerid))
				{
					format(bizinfo,sizeof(bizinfo), "Вода\t\t[%d вирт]\nСода\t\t[%d вирт]\nКока-кола\t[%d вирт]\nПиво\t\t[%d вирт]\nВино\t\t[%d вирт]\nАбсент\t\t[%d вирт]",cena,cena2,cena3,cena4,cena5,cena6);
	  				ShowPlayerDialog(playerid, 2289, DIALOG_STYLE_LIST, "Бар", bizinfo, "Выбрать", "Отмена");
				}
	   		}
	   	}
    	return true;
	}
	if(strcmp(cmd, "/buygun", true) == 0)
	{
		if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на оружие");
		if(PlayerInfo[playerid][pCash] < 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег для покупки");
		if(PlayerToPoint(23.0,playerid,286.9145,-38.6596,1001.5156) || PlayerToPoint(23.0,playerid,285.9187,-86.7644,1001.5229) || PlayerToPoint(23.0,playerid,313.7110,-140.3784,999.6016))
		{
			ShowPlayerDialog(playerid, 7925, DIALOG_STYLE_LIST, "Магазин оружия", " [1] Автоматы\n [2] Пистолеты\n [3] Дробовики\n [4] Винтовки\n [5] Бронежилеты\n [6] Улучшения оружия", "Выбрать", "Закрыть");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не в магазине оружия");
		return true;
	}
	if(strcmp(cmd, "/gps", true) == 0) return ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST, "{2641FE}-===GPS===-", "[1] Важные места\n[2] По работе\n[3] Развлечения\n[4] Автосалоны\n[5] Базы организаций\n[6] Дальнобойщики\n[7] Фермы\n[8] Выключить GPS", "Выбрать", "Отмена");
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
		if((noooc) && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "Общий чат отключен администратором");
		new string[128];
		if(PlayerInfo[playerid][pMuted] == 1)
		{
            if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить");
			format(string, sizeof(string), "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return true;
		}
		new is1 = 0;
		new r = 0;
		while(strlen(cmdtext[is1]))
		{
			if('0' <= cmdtext[is1] <= '9')
			{
				new is2 = is1+1;
				new p = 0;
				while(p==0)
				{
					if('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
					else
					{
						strmid(strR[r],cmdtext,is1,is2,255);
						if(strval(strR[r]) < 255) r++;
						is1 = is2;
						p = 1;
					}
				}
			}
			is1++;
		}
		if(r >= 4)
		{
			format(string, sizeof(string), "В /o | Игрок: %s | ID: %d | Текст: %s", PlayerInfo[playerid][pName],playerid,cmdtext);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			for(new z = 0; z < r; z++)
			{
				new pr2;
				while((pr2 = strfind(cmdtext, strR[z], true)) != -1) for(new i = pr2,j = pr2+strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
			}
			return true;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/o)oc [текст]");
		if(Rekl[playerid] == 1 && strfind(cmdtext, "www",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru",true)!=-1
		|| Rekl[playerid] == 1 && strfind(cmdtext, ".net",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com",true)!=-1
		|| Rekl[playerid] == 1 && strfind(cmdtext, "http",true)!=-1)
		{
			format(string, sizeof(string), "В /o | Игрок %s| ID: %d | Текст: %s", PlayerInfo[playerid][pName], playerid, cmdtext);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return true;
		}
		format(string, sizeof(string), "<< %s[%d]: %s >>", PlayerInfo[playerid][pName], playerid, result);
		OOCOff(COLOR_OOC,string);
		return true;
	}
	if(strcmp(cmd, "/noooc", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(noooc == 0)
			{
				noooc = 1;
				BroadCast(COLOR_WHITE, "Общий чат отключен администратором");
			}
			else if(noooc == 1)
			{
				noooc = 0;
				BroadCast(COLOR_WHITE, "Общий чат включен администратором");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/goverment", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
		if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || IsALicenser(playerid))
		{
		    new string[128];
			if(PlayerInfo[playerid][pMuted] == 1)
			{
   				if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить");
				format(string, sizeof(string), "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return true;
			}
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				if(IsIP(cmdtext) || CheckString(cmdtext))
				{
					new ip[16];
					PlayerInfo[playerid][pMuteTime] = 10800;
					PlayerInfo[playerid][pMuted] = 1;
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string, sizeof(string), "%s[%d]: %s",PlayerInfo[playerid][pName],playerid,cmdtext);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					format(string,sizeof(string), "Вы получили бан чата на 3 часа /mm - репорт");
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					return true;
				}
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/gov)ernment [текст]");
			new rtext[64];
			new is1 = 0;
			new r = 0;
			while(strlen(cmdtext[is1]))
			{
  				if('0' <= cmdtext[is1] <= '9')
	    		{
	    			new is2 = is1+1;
		    		new p = 0;
		    		while(p == 0)
		    		{
  	   					if('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
						else
						{
							strmid(strR[r],cmdtext,is1,is2,255);
							if(strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
    				}
	    		}
		    	is1++;
			}
			if(r >= 4)
			{
				format(string, sizeof(string), "В /gov| Игрок %s | ID %d | Текст: %s",PlayerInfo[playerid][pName],playerid,cmdtext);
				ABroadCast(COLOR_LIGHTRED, string, 1);
				for(new z = 0; z < r; z++)
				{
					new pr2;
					while((pr2 = strfind(cmdtext,strR[z],true)) != -1) for(new i = pr2, j = pr2+strlen(strR[z]); i < j; i++) cmdtext[i]='*';
				}
				return true;
			}
			switch(PlayerInfo[playerid][pMember])
			{
			    case 1:
			    {
			        if(PlayerInfo[playerid][pRank] == 14) rtext = "Полковник LSPD:";
			        else if(PlayerInfo[playerid][pRank] == 15) rtext = "Шериф LSPD";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 2:
				{
			        if(PlayerInfo[playerid][pRank] == 7) rtext = "Новости:";
			        else if(PlayerInfo[playerid][pRank] == 8) rtext = "Директор FBI:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 3:
				{
			        if(PlayerInfo[playerid][pRank] == 15) rtext = "Вице-Адмирал:";
			        else if(PlayerInfo[playerid][pRank] == 16) rtext = "Адмирал:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
                case 4:
				{
			        if(PlayerInfo[playerid][pRank] == 15) rtext = "Глав. врач SF:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 7:
				{
			        if(PlayerInfo[playerid][pRank] == 5) rtext = "Адвокат:";
				    else if(PlayerInfo[playerid][pRank] == 6) rtext = "Прокурор:";
				    else if(PlayerInfo[playerid][pRank] == 7) rtext = "Минкультуры:";
				    else if(PlayerInfo[playerid][pRank] == 8) rtext = "Минфинансов:";
					else if(PlayerInfo[playerid][pRank] == 9) rtext = "Зам.Губернатора:";
					else if(PlayerInfo[playerid][pRank] == 10) rtext = "Губернатор:";
					else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 10:
				{
			        if(PlayerInfo[playerid][pRank] == 14) rtext = "Полковник SFPD:";
			        else if(PlayerInfo[playerid][pRank] == 15) rtext = "Шериф SFPD:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 11:
				{
			        if(PlayerInfo[playerid][pRank] == 7) rtext = "Новости:";
			        else if(PlayerInfo[playerid][pRank] == 8) rtext = "Инструктор:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 19:
				{
			        if(PlayerInfo[playerid][pRank] == 15) rtext = "Полковник LVa:";
			        else if(PlayerInfo[playerid][pRank] == 16) rtext = "Генерал:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 21:
				{
			        if(PlayerInfo[playerid][pRank] == 14) rtext = "Полковник LVPD:";
			        else if(PlayerInfo[playerid][pRank] == 15) rtext = "Шериф LVPD:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 22:
				{
			        if(PlayerInfo[playerid][pRank] == 7) rtext = "Новости:";
			        else if(PlayerInfo[playerid][pRank] == 8) rtext = "Глав. врач LS:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				case 33:
				{
			        if(PlayerInfo[playerid][pRank] == 7) rtext = "Новости:";
			        else if(PlayerInfo[playerid][pRank] == 8) rtext = "Глав. врач LV:";
			        else return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
				}
				default: return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
			}
			if(Rekl[playerid] == 1 && strfind(cmdtext, "www",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru",true)!=-1
	 		|| Rekl[playerid] == 1 && strfind(cmdtext, ".net",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com",true)!=-1
			|| Rekl[playerid] == 1 && strfind(cmdtext, "http",true)!=-1)
			{
				format(string, sizeof(string), "В /gov | Игрок %s | ID %d | Текст: %s", PlayerInfo[playerid][pName], playerid, cmdtext);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return true;
			}
			SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости ==========---");
			format(string, sizeof(string), "%s %s: %s", rtext, PlayerInfo[playerid][pName], result);
			SendClientMessageToAll(0x2079c7FF, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/balance",true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerToPoint(10.0,playerid,2308.8201,-13.2660,26.7422))
			{
				new string[26];
				format(string, sizeof(string), "В банке: %d вирт", PlayerInfo[playerid][pBank]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
		}
	}
	if(!strcmp(cmdtext, "/startbank", true))
	{
		new newcar = GetPlayerVehicleID(playerid);
		if(IsPlayerConnected(playerid))
		{
			if(newcar >= incos[0] && newcar  <= incos[3])
			{
			    if(PlayerInfo[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_RED, "Вы не работаете Инкассатором");
			    if(PlayerIsInkasator[playerid] == 2) return SendClientMessage(playerid, COLOR_RED, "Вы уже работаете");
		    	new carid = GetPlayerVehicleID(playerid);
			    if(carid >= incos[0] && carid  <= incos[3])
			    {
				    TogglePlayerControllable(playerid, 1);
				    new randomize;
				    randomize = random(sizeof(gInkasatorPoints));
				    SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);
			    	SendClientMessage(playerid, COLOR_BLUE, "Загрузитесь деньгами у банка");
			    	SetPlayerCheckpoint(playerid,1413.3165,-1700.8553,13.5395,4);
				    PlayerIsInkasator[playerid] = 1;
				    incosjob[playerid] = 1;
			    }
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине");
		}
		return true;
	}
	if(strcmp(cmd, "/transfer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "У вас должен быть 3 уровень");
			if(!PlayerToPoint(10.0,playerid,2308.8201,-13.2660,26.7422)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в банке");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /transfer [id] [Сумма]");
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /transfer [id] [Сумма]");
			moneys = strval(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			new playerpcash = PlayerInfo[playerid][pBank];
			if(moneys > 0 && playerpcash >= moneys)
			{
   				if(moneys > PlayerInfo[playerid][pBank]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				PlayerInfo[playerid][pBank] -= moneys;
				PlayerInfo[giveplayerid][pBank] += moneys;
				new string[128];
				format(string, sizeof(string), "Вы перевели игроку %s сумму %d вирт", PlayerInfo[giveplayerid][pName], moneys);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "SMS: %s перевёл вам сумму %d вирт на ваш банковский счёт. Отправитель: Банк Штата", PlayerInfo[playerid][pName], moneys);
				SendClientMessage(giveplayerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "%s transfered = %d wirt's and %s handed = %d wirt's | ", PlayerInfo[playerid][pName], moneys, PlayerInfo[giveplayerid][pName],moneys);
				Pay(string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			}
			else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на банковском счету");
		}
		return true;
	}
	if(strcmp(cmd, "/fight", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(InRing > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли бой");
            if(PlayerBoxing[playerid] > 0)return SendClientMessage(playerid, COLOR_GREY, "Вы уже боритесь");
            if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в спортзале");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fight [id]");
            giveplayerid = ReturnUser(tmp);
            if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вызвать на бой самого себя");
            if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
            if(ProxDetectorS(8.0, playerid, giveplayerid))
            {
                new string[75];
              	format(string, sizeof(string), "Вы предложили бой %s", PlayerInfo[giveplayerid][pName]);
               	SendClientMessage(playerid, 0x6495EDFF, string);
               	format(string, sizeof(string), "%s предлагает вам бой. (/accept fight) чтобы принять", PlayerInfo[playerid][pName]);
                SendClientMessage(giveplayerid, 0x6495EDFF, string);
                BoxOffer[giveplayerid] = playerid;
 			}
    		else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
        }
        return true;
    }
    if(strcmp(cmd,"/slimit",true) == 0)
	{
		new tacha = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsAPlane(tacha) && !IsABoat(tacha) && !IsANoSpeed(tacha))
		{
  			switch(Arrester[playerid])
     		{
       			case 0: return Arrester[playerid] = true;
          		case 1: return Arrester[playerid] = false;
	        }
	    }
	}
	if(strcmp(cmd, "/en", true) == 0)
    {
		if(EngineState[playerid] == false)
 		{
			if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
					Arrester[playerid] = false;
					EngineState[playerid] = true;
				}
			}
		}
		else if(EngineState[playerid] == true)
		{
			if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
					EngineState[playerid] = false;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hi", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	       	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			tmp = strtok(cmdtext, idx);
			if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /hi [id]");
	    	giveplayerid = ReturnUser(tmp);
	    	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	       	if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
     		if(ProxDetectorS(2.0, playerid, giveplayerid))
      		{
				new Float:angle;
				new string[71];
   				GetPlayerFacingAngle(playerid, angle);
      			SetPlayerFacingAngle(giveplayerid, angle + 180);
	       		format(string, sizeof(string), "%s пожал(а) руку игроку %s", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
		       	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(giveplayerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
   				return true;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		return true;
	}
	if(strcmp(cmd, "/iznas", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:health;
			GetPlayerHealth(playerid, health);
			if(PlayerInfo[playerid][pPrez] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет презервативов(Их можно купить в любом 24/7)");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			if(PlayerCuffed[playerid] > 0 ) return SendClientMessage(playerid, COLOR_WHITE, "Вы в наручниках");
			tmp = strtok(cmdtext, idx);
	    	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /iznas [id]");
	    	giveplayerid = ReturnUser(tmp);
	    	if(PlayerInfo[giveplayerid][pNointim] == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок запретил сексуальные контакты с собой");
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pBalon] >= 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "В вас брызнули газовым балончиком {FFFFFF}(( - 30 хп ))");
					SendClientMessage(giveplayerid, COLOR_WHITE, "Вы брызнули газовым балончиком в маньяка {FFFFFF}(( - 30 хп,-1 заряд балона ))");
					SetPlayerHealthAC(playerid, health - 30);
					PlayerInfo[playerid][pHP] -= 30;
					PlayerInfo[giveplayerid][pBalon] -= 1;
					PlayerInfo[playerid][pPrez] -= 1;
					return true;
				}
				if(PlayerInfo[playerid][pHP] <= 20) return SendClientMessage(playerid, COLOR_GREY, "Жертва сопротивляется. Вы на грани смерти");
   				SetPVarInt(playerid, "NoAB", 1);
				SetPVarInt(giveplayerid, "NoAB", 1);
   				new Float:angle;
				SetPlayerHealthAC(playerid, health-25);
				PlayerInfo[playerid][pHP] -= 25;
				PlayerInfo[playerid][pPrez] -= 1;
				GetPlayerFacingAngle(playerid, angle);
				SetPlayerFacingAngle(giveplayerid, angle+180);
				SendClientMessage(playerid, COLOR_GREEN, "Вы изнасиловали прохожего. Жертва сильно ударила вас {FFFFFF}(( - 25 хп ))");
				SendClientMessage(giveplayerid, COLOR_RED, "Вас изнасиловал маньяк");
				new string[65];
				format(string, sizeof(string), "%s изнасиловал(а) %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(giveplayerid, "SNM", "SPANKINGW",4.1,0,1,1,1,1,1);
				ApplyAnimation(playerid, "SNM", "SPANKEDW",4.1,0,1,1,1,1,1);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/viphelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] >= 1)
	        {
	            new string[61];
      			format(string, sizeof(string), "Донат счётчик: %d/10000000 вирт", PlayerInfo[playerid][pDonateAccount]);
       			SendClientMessage(playerid, COLOR_NEWS, string);
       			format(string, sizeof(string), "Кол-во очков доната для использования (/donate): %d", PlayerInfo[playerid][pDonate]);
	            SendClientMessage(playerid, COLOR_NEWS, string);
	            SendClientMessage(playerid, COLOR_NEWS, "BRONZE: /admins - администрация Online");
       			SendClientMessage(playerid, COLOR_NEWS, "SILVER: /togphone - вкл/выкл. телефон.");
       			SendClientMessage(playerid, COLOR_NEWS, "SILVER: /v(ip) - чат VIP игроков.");
				SendClientMessage(playerid, COLOR_NEWS, "GOLD: /vipuninvite - уволиться из организации");
				SendClientMessage(playerid, COLOR_NEWS, "PLATINUM: /nointim - запрететить/разрешить с собой сексуальные контакты");
				SendClientMessage(playerid, COLOR_NEWS, "PLATINUM: /killme - совершить самоубийство");
     		}
		}
		return true;
	}
	if(strcmp(cmd, "/vipuninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pDonateRank] >= 3)
		    {
				if(PlayerInfo[playerid][pDonateRank] >= 3) return SendClientMessage(playerid, COLOR_GREY, "У вас нет статуса {FFA500}VIP GOLD");
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pRank] = 0;
				PlayerInfo[playerid][pLeader] = 0;
				PlayerInfo[playerid][pJob] = 0;
				SetPlayerArmourAC(playerid,0);
				PlayerInfo[playerid][pForma] = 0;
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				SendClientMessage(playerid, COLOR_BLUE, "Вы были уволены по собственному желанию");
				SendClientMessage(playerid, 0x6495EDFF, "Теперь вы снова гражданский");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
		}
		return true;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pLeader] >= 1)
		{
		    new string[42];
			if(!PhoneOnline[playerid])
			{
				PhoneOnline[playerid] = 1;
				format(string, sizeof(string), "%s выключил телефон", PlayerInfo[playerid][pName]);
				SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(PhoneOnline[playerid])
			{
				PhoneOnline[playerid] = 0;
				format(string, sizeof(string), "%s включил телефон", PlayerInfo[playerid][pName]);
				SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не VIP/Администратор/Лидер");
		return true;
	}
	if(strcmp(cmd, "/me", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас бан чата");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return 	SendClientMessage(playerid, COLOR_WHITE, "Введите: /me [действие]");
		new string[128];
		format(string, sizeof(string), "%s %s", PlayerInfo[playerid][pName], result);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid,result,COLOR_PURPLE,30.0,10000);
	}
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас бан чата");
		if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете кричать");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/s)hout [текст]");
		new string[128];
		format(string, sizeof(string), "%s кричит: %s!", PlayerInfo[playerid][pName], result);
		ProxDetector(60.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
		SetPlayerChatBubble(playerid,result,COLOR_YELLOW,60.0,10000);
	}
	if(strcmp(cmd,"/fish",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new string[128];
	        if((IsAtFishPlace(playerid)) || IsABoat(vehicleid))
	        {
	            if(PlayerInfo[playerid][pWorms] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет червей.(Их можно купить в любом 24/7)");
	            if(IsABoat(vehicleid))
				{
                    if(PlayerInfo[playerid][pFishrod] == 0) return SendClientMessage(playerid, COLOR_GREY, "Для того, чтобы рыбачить на лодке вам нужна удочка.(Её можно купить в любом 24/7)");
				}
		        if(PlayerInfo[playerid][pFishLic] < 1)
				{
				    if(PlayerInfo[playerid][pMadWant] >= 5) PlayerInfo[playerid][pMadWant] = 6;
					else
					{
						PlayerInfo[playerid][pMadWant] += 1;
						format(string, sizeof(string), "Ваша узнаваемость повысилась до %d. Причина: Нелегальный вылов рьбы", PlayerInfo[playerid][pMadWant]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
					format(string, sizeof(string), "Рация: Подозреваемый: %s. Преступление: Нелегальный вылов рыбы. Уровень розыска: %d", PlayerInfo[playerid][pName], PlayerInfo[playerid][pMadWant]);
					SendRadioMessage(1, COLOR_LIGHTRED, string);
					SendRadioMessage(2, COLOR_LIGHTRED, string);
					SendRadioMessage(10, COLOR_LIGHTRED, string);
					SendRadioMessage(21, COLOR_LIGHTRED, string);
				}
				PlayerInfo[playerid][pWorms] -= 1;
				new fishkg = random(3000);
	            switch(random(16))
	            {
	                case 0: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали куртку и выкунули её");
	                case 1: format(string, sizeof(string), "Вы поймали Скумбрию на %dг", fishkg);
	                case 2: format(string, sizeof(string), "Вы поймали Кефаль на %dг", fishkg);
                 	case 3: format(string, sizeof(string), "Вы поймали Барракуду на %dг", fishkg);
                 	case 4: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали штаны и выбросили их");
                 	case 5: format(string, sizeof(string), "Вы поймали Хека на %dг", fishkg);
                  	case 6: format(string, sizeof(string), "Вы поймали Щуку на %dг", fishkg);
                  	case 7: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали моток лески и выбросили его");
                  	case 8: format(string, sizeof(string), "Вы поймали Треску на %dг", fishkg);
                  	case 9: format(string, sizeof(string), "Вы поймали Хамсу на %dг", fishkg);
                  	case 10: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали ботинок и выбросили его");
                  	case 11: format(string, sizeof(string), "Вы поймали Мойву на %dг", fishkg);
                  	case 12: format(string, sizeof(string), "Вы поймали Окуня на %dг", fishkg);
                  	case 13: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали Вы поймали ржавую банку и выбросили её  и выбросили её");
                  	case 14: format(string, sizeof(string), "Вы поймали Сома на %dг", fishkg);
                  	case 15: format(string, sizeof(string), "Вы поймали Форель на %dг", fishkg);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFishes] += fishkg;
				return true;
	        }
	        new Float:car0_x,Float:car0_y,Float:car0_z;
	        GetVehiclePos(rentboat[0],car0_x,car0_y,car0_z);
	        new Float:car1_x,Float:car1_y,Float:car1_z;
	        GetVehiclePos(rentboat[1],car1_x,car1_y,car1_z);
            new Float:car2_x,Float:car2_y,Float:car2_z;
	        GetVehiclePos(rentboat[2],car2_x,car2_y,car2_z);
            new Float:car3_x,Float:car3_y,Float:car3_z;
	        GetVehiclePos(rentboat[3],car3_x,car3_y,car3_z);
	        new Float:car4_x,Float:car4_y,Float:car4_z;
	        GetVehiclePos(rentboat[4],car4_x,car4_y,car4_z);
	        new Float:car5_x,Float:car5_y,Float:car5_z;
	        GetVehiclePos(rentboat[5],car5_x,car5_y,car5_z);
	        new Float:car6_x,Float:car6_y,Float:car6_z;
	        GetVehiclePos(rentboat[6],car6_x,car6_y,car6_z);
	        new Float:car7_x,Float:car7_y,Float:car7_z;
	        GetVehiclePos(rentboat[7],car7_x,car7_y,car7_z);
	        new Float:car8_x,Float:car8_y,Float:car8_z;
	        GetVehiclePos(rentboat[8],car8_x,car8_y,car8_z);
	        new Float:car9_x,Float:car9_y,Float:car9_z;
	        GetVehiclePos(rentboat[9],car9_x,car9_y,car9_z);
	        new Float:car10_x,Float:car10_y,Float:car10_z;
	        GetVehiclePos(rentboat[10],car10_x,car10_y,car10_z);
	        new Float:car11_x,Float:car11_y,Float:car11_z;
	        GetVehiclePos(rentboat[11],car11_x,car11_y,car11_z);
	        new Float:car12_x,Float:car12_y,Float:car12_z;
	        GetVehiclePos(rentboat[12],car12_x,car12_y,car12_z);
	        new Float:car13_x,Float:car13_y,Float:car13_z;
	        GetVehiclePos(rentboat[13],car13_x,car13_y,car13_z);
	        new Float:car14_x,Float:car14_y,Float:car14_z;
	        GetVehiclePos(rentboat[14],car14_x,car14_y,car14_z);
	        new Float:car15_x,Float:car15_y,Float:car15_z;
	        GetVehiclePos(rentboat[15],car15_x,car15_y,car15_z);
	        new Float:car16_x,Float:car16_y,Float:car16_z;
	        GetVehiclePos(rentboat[16],car16_x,car16_y,car16_z);
	        new Float:car17_x,Float:car17_y,Float:car17_z;
	        GetVehiclePos(rentboat[17],car17_x,car17_y,car17_z);
	        new caren = 430;
	        new Float:caren_x,Float:caren_y,Float:caren_z;
	        GetVehiclePos(caren,caren_x,caren_y,caren_z);
            if(IsPlayerInRangeOfPoint(playerid,7.0,car0_x,car0_y,car0_z) || IsPlayerInRangeOfPoint(playerid,7.0,car1_x,car1_y,car1_z)
            ||IsPlayerInRangeOfPoint(playerid,7.0,car2_x,car2_y,car2_z) || IsPlayerInRangeOfPoint(playerid,7.0,car3_x,car3_y,car3_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car4_x,car4_y,car4_z) || IsPlayerInRangeOfPoint(playerid,7.0,car5_x,car5_y,car5_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car6_x,car6_y,car6_z) || IsPlayerInRangeOfPoint(playerid,7.0,car7_x,car7_y,car7_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car8_x,car8_y,car8_z) || IsPlayerInRangeOfPoint(playerid,7.0,car9_x,car9_y,car9_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car10_x,car10_y,car10_z) || IsPlayerInRangeOfPoint(playerid,7.0,car11_x,car11_y,car11_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car12_x,car12_y,car12_z) || IsPlayerInRangeOfPoint(playerid,7.0,car13_x,car13_y,car13_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car14_x,car14_y,car14_z) || IsPlayerInRangeOfPoint(playerid,7.0,car15_x,car15_y,car15_z)
            || IsPlayerInRangeOfPoint(playerid,7.0,car16_x,car16_y,car16_z) || IsPlayerInRangeOfPoint(playerid,7.0,car17_x,car17_y,car17_z)
			|| IsPlayerInRangeOfPoint(playerid,7.0,caren_x,caren_y,caren_z))
            {
                if(PlayerInfo[playerid][pFishrod] == 0) return SendClientMessage(playerid, COLOR_GREY, "Для того, чтобы рыбачить на лодке вам нужна удочка.(Её можно купить в любом 24/7)");
	            if(PlayerInfo[playerid][pWorms] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет червей.(Их можно купить в любом 24/7)");
                PlayerInfo[playerid][pWorms] -= 1;
	            if(PlayerInfo[playerid][pFishLic] < 1)
				{
					if(PlayerInfo[playerid][pMadWant] >= 5) PlayerInfo[playerid][pMadWant] = 6;
					else
					{
						PlayerInfo[playerid][pMadWant] += 1;
						format(string, sizeof(string), "Ваша узнаваемость повысилась до %d. Причина: Нелегальный вылов рьбы", PlayerInfo[playerid][pMadWant]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
					format(string, sizeof(string), "Ваша узнаваемость повысилась до %d. Причина: Нелегальный вылов рьбы", PlayerInfo[playerid][pMadWant]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "Рация: Подозреваемый: %s. Преступление: Нелегальный вылов рыбы. Уровень розыска: %d", PlayerInfo[playerid][pName], PlayerInfo[playerid][pMadWant]);
					SendRadioMessage(1, COLOR_LIGHTRED, string);
					SendRadioMessage(2, COLOR_LIGHTRED, string);
					SendRadioMessage(10, COLOR_LIGHTRED, string);
					SendRadioMessage(21, COLOR_LIGHTRED, string);
				}
				new fishkg = random(3000);
	            switch(random(16))
	            {
	                case 0: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали куртку и выкунули её");
	                case 1: format(string, sizeof(string), "Вы поймали Скумбрию на %dг", fishkg);
	                case 2: format(string, sizeof(string), "Вы поймали Кефаль на %dг", fishkg);
                 	case 3: format(string, sizeof(string), "Вы поймали Барракуду на %dг", fishkg);
                 	case 4: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали штаны и выбросили их");
                 	case 5: format(string, sizeof(string), "Вы поймали Хека на %dг", fishkg);
                  	case 6: format(string, sizeof(string), "Вы поймали Щуку на %dг", fishkg);
                  	case 7: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали моток лески и выбросили его");
                  	case 8: format(string, sizeof(string), "Вы поймали Треску на %dг", fishkg);
                  	case 9: format(string, sizeof(string), "Вы поймали Хамсу на %dг", fishkg);
                  	case 10: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали ботинок и выбросили его");
                  	case 11: format(string, sizeof(string), "Вы поймали Мойву на %dг", fishkg);
                  	case 12: format(string, sizeof(string), "Вы поймали Окуня на %dг", fishkg);
                  	case 13: return SendClientMessage(playerid, COLOR_GREY, "Вы поймали Вы поймали ржавую банку и выбросили её  и выбросили её");
                  	case 14: format(string, sizeof(string), "Вы поймали Сома на %dг", fishkg);
                  	case 15: format(string, sizeof(string), "Вы поймали Форель на %dг", fishkg);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFishes] += fishkg;
            }
	        else SendClientMessage(playerid, COLOR_RED, "Тут нельзя рыбачить");
	    }
	    return true;
 	}
 	else if(strcmp(cmd, "/showlicenses",true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				new text1[20];
	        	new string[42];
	        	SendClientMessage(playerid, 0x059BD3AA, "-----------===[ LICENSES ]===-----------");
	        	if(PlayerInfo[playerid][pCarLic]) text1 = "Есть";
				else text1 = "Отсутствует";
	        	format(string, sizeof(string), " Водительские права:  %s", text1);
				SendClientMessage(playerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pFlyLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия пилота:  %s", text1);
				SendClientMessage(playerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pBoatLic]) text1 = "Есть";
		 		else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия на катера:  %s", text1);
				SendClientMessage(playerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pFishLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия рыболова:  %s", text1);
				SendClientMessage(playerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pGunLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия на оружие:  %s", text1);
				SendClientMessage(playerid, 0xC5EEFEAA, string);
				SendClientMessage(playerid, 0x059BD3AA, "=============================");
				return true;
			}
			giveplayerid = strval(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
   			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
 				new text1[20];
				new string[79];
      			format(string, sizeof(string), "-----------===[ LICENSES %s ]===-----------", PlayerInfo[playerid][pName]);
      			SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
	        	if(PlayerInfo[playerid][pCarLic]) text1 = "Есть";
				else text1 = "Отсутствует";
	        	format(string, sizeof(string), " Водительские права:  %s", text1);
				SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pFlyLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия пилота:  %s", text1);
				SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pBoatLic]) text1 = "Есть";
		 		else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия на катера:  %s", text1);
				SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pFishLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия рыболова:  %s", text1);
				SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
				if(PlayerInfo[playerid][pGunLic]) text1 = "Есть";
				else text1 = "Отсутствует";
				format(string, sizeof(string), " Лицензия на оружие:  %s", text1);
				SendClientMessage(giveplayerid, 0xC5EEFEAA, string);
				SendClientMessage(giveplayerid, 0x059BD3AA, "=============================");
				format(string,sizeof(string), "%s показал свои лицензии мгроку %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			format(string,sizeof(string), "показал свои лицензии игроку %s",PlayerInfo[giveplayerid][pName]);
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
	    return true;
 	}
	if(strcmp(cmd, "/divorce",true) == 0)
	{
		if(IsPlayerConnected(playerid) && IsPlayerInRangeOfPoint(playerid, 4, -2032.0339,1119.2062,26.0531))
		{
			if(PlayerInfo[playerid][pMarried] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не женаты(замужем)");
			ClearMarriage(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Вы развелись");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не в церкви");
		return true;
	}
	if(strcmp(cmd, "/propose",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCash] < 100000) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно 100000 вирт на свадьбу");
	        if(PlayerInfo[playerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже женаты/замужем");
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /propose [id]");
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
		    if(IsPlayerConnected(giveplayerid) && IsPlayerInRangeOfPoint(playerid, 8.0, -2032.0339,1119.2062,26.0531) && IsPlayerInRangeOfPoint(giveplayerid, 8.0, -2032.0339,1119.2062,26.0531))
		    {
      			if(PlayerInfo[giveplayerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в браке");
        		if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    new string[88];
					format(string, sizeof(string), "Вы предложили руку и сердце %s", PlayerInfo[giveplayerid][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам руку и сердце. (/accept marriage) чтобы принять", PlayerInfo[playerid][pName]);
					SendClientMessage(giveplayerid, COLOR_BLUE, string);
    				ProposeOffer[giveplayerid] = playerid;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не в церкви СФ");
	    }
	    return true;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
		if(IsACop(playerid)|| IsAArm(playerid))
 		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if(PlayerToPoint(3.0,playerid,1481.1272,-1771.6830,18.7958))//Штурм мэрии с основного входа
				{
				    SetPlayerChatBubble(playerid, "выламывает дверь",COLOR_PURPLE,10.0,10000);
					PlaySoundNearPlayer(playerid,17200);
				    chlocked = 0;
					SetPlayerInterior(playerid,3);
					SetPlayerPos(playerid,385.9440,173.6978,1008.3828);
					SetPlayerFacingAngle(playerid, 90.0);
					SetPlayerCheckpoint(playerid,359.8466,184.7337,1008.3828,1.5);
					PicCP[playerid] = 2;
				}
                else if(PlayerToPoint(3.0,playerid,1413.2067,-1790.5966,15.4356))//Штурм мэрии с заднего входа
				{
				    SetPlayerChatBubble(playerid, "выламывает дверь",COLOR_PURPLE,10.0,10000);
					PlaySoundNearPlayer(playerid,17200);
				    chbacklocked = 0;
				    SetPlayerInterior(playerid,3);
					SetPlayerPos(playerid,366.4958,193.5977,1008.3828);
					SetPlayerFacingAngle(playerid, 90.0);
					SetPlayerCheckpoint(playerid,359.8466,184.7337,1008.3828,1.5);
					PlaySoundNearPlayer(playerid,17200);
					PicCP[playerid] = 2;
				}
				else if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
				    PlaySoundNearPlayer(playerid,17200);
					SetPlayerVirtualWorld(playerid,i+50);
					SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
					SetPlayerChatBubble(playerid, "выламывает дверь",COLOR_PURPLE,10.0,10000);
					PlaySoundNearPlayer(playerid,17200);
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "[Ошибка]Вам недоступна данная команда");
		return true;
	}
	if(strcmp(cmd, "/take", true) == 0)
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pAdmin] >= 6)
		{
			ShowPlayerDialog(playerid, 7779, DIALOG_STYLE_LIST, "Отобрать лицензии", " Отобрать водительские права\n Отобрать лицензию на полёты \n Отобрать лицензию на рыболовлю\n Отобрать лицензию на вождение водного транспорта\n Отобрать лицензию на оружие\n Наркотики\n Оружие\n Материалы", "Готово", "Отмена");
		}
		else SendClientMessage(playerid, COLOR_GREY, "[Ошибка]Вам недоступна данная команда");
		return true;
	}
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/su)spect [id] [уровень розыска] [преступление]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/su)spect [id] [уровень розыска] [преступление]");
		new Madpoint = strval(tmp);
		switch(PlayerInfo[playerid][pMember])
		{
		    case 1,2,7,10,21:
			{
			    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			    if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете давать розыск");
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pJailed] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в тюрьме");
					if(PlayerInfo[giveplayerid][pMadWant] >= 6) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже 6 уровней розыска");
					if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете давать розыск законникам");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return 	SendClientMessage(playerid, COLOR_WHITE, "Введите: (/su)spect [id] [уровень розыска] [преступление]");
					PlayerInfo[giveplayerid][pMadWant] += Madpoint;
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pMadWant]);
					new string[128];
					format(string, sizeof(string), "Вам повысили уровень розыска до %d. Причина: %s",PlayerInfo[giveplayerid][pMadWant],result);
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					if(PlayerInfo[playerid][pMember] == 7)
					{
						format(string, sizeof(string), "Вы сообщили в полицию о преступлении: %s. Подозреваемый: %s. Уровень розыска: %d" ,result,PlayerInfo[giveplayerid][pName],PlayerInfo[giveplayerid][pMadWant]);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
					}
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
    						if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pMember] == 19 || PlayerInfo[i][pMember] == 21)
					    	{
								format(string, sizeof(string), "Рация: Cообщает: %s. Преступление: %s. Подозреваемый: %s. Уровень розыска: %d",PlayerInfo[playerid][pName],result,PlayerInfo[giveplayerid][pName],Madpoint);
								SendClientMessage(i, COLOR_LIGHTRED, string);
							}
						}
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/spawnchange", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			if(SpawnChange[playerid])
			{
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться в обычном месте");
				SpawnChange[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы будете возраждаться дома");
				SpawnChange[playerid] = 1;
			}
		}
	}
	if(strcmp(cmd, "/home", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Ваш дом обозначен на карте красной меткой");
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
		}
		return true;
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
		if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 2)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596) return SendClientMessage(playerid, COLOR_GREY, "Вы не в патрульной машине");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /clear [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять себе розыск");
   			if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
   			new string[61];
			format(string, sizeof(string), "Вы сняли уровни розыска у %s", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, 0x6495EDFF, string);
			format(string, sizeof(string), "Офицер %s снял(а) с вас уровни розыска", PlayerInfo[playerid][pName]);
			SendClientMessage(giveplayerid, 0x6495EDFF, string);
			PlayerInfo[giveplayerid][pMadWant] = 0;
			SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pMadWant]);
			SendClientMessage(giveplayerid, COLOR_WHITE, "Ваша узнаваемость понизилась");
 		}
		return true;
	}
	else if(strcmp(cmd, "/ticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid) && PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выписывать штрафы");
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /ticket [id] [цена] [причина]");
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /ticket [id] [цена] [причина]");
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 вирт"); return true; }
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
   			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
   				if(PlayerInfo[giveplayerid][pCash] < moneys) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно денег");
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ticket [id] [цена] [причина]");
				new string[128];
				format(string, sizeof(string), "Вы выписали штраф в размере %d вирт %s. Причина: %s",moneys, PlayerInfo[giveplayerid][pName], (result));
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "Офицер %s выписал вам штраф в размере %d вирт. Причина: %s", PlayerInfo[playerid][pName], moneys, (result));
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "((Введите: /accept ticket, чтобы оплатить штраф))");
				TicketOffer[giveplayerid] = playerid;
				TicketMoney[giveplayerid] = moneys;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		return true;
	}
	if(strcmp(cmd, "/spveh",true) == 0 || strcmp(cmd, "/spcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /spveh [радиус]");
		    new Float:pos = floatstr(tmp),Float:car_x,Float:car_y,Float:car_z;
		    for(new cars = 0; cars < MAX_VEHICLES; cars++)
		    {
		        if(GetVehicleModel(cars) > 399)
		        {
		            GetVehiclePos(cars,car_x,car_y,car_z);
		            if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z))
		            {
						if(!IsVehicleOccupied(cars)) SetVehicleToRespawn(cars);
		            }
		        }
		    }
		}
    	return true;
	}
	if(strcmp(cmd, "/arrest", true) == 0)
	{
		if(IsACop(playerid))
		{
			if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391) || PlayerToPoint(6.0, playerid, 227.7436,114.5075,999.0156) || PlayerToPoint(6.0, playerid, 188.7124,157.6917,1003.0234)|| PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156) || PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [время]");
				new time = strvalEx(tmp);
				if(time < 1 || time > 60) return SendClientMessage(playerid, COLOR_GREY, "От 1 минуты до 60");
				tmp = strtok(cmdtext, idx);
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(ProxDetectorS(4.0, playerid, suspect))
					{
					    new string[82];
						if(PlayerInfo[suspect][pMadWant] < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы один уровень розыска");
						format(string, sizeof(string), "Вы арестовали %s", PlayerInfo[suspect][pName]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pZp] += 50;
						GameTextForPlayer(suspect, "~r~-5", 5000, 5);
						DelGun(suspect);
						switch(PlayerInfo[playerid][pMember])
						{
						    case 1,10,21,2:
						    {
						        format(string, sizeof(string), "<< Офицер %s арестовал(а) %s >>", PlayerInfo[playerid][pName], PlayerInfo[suspect][pName]);
								SendClientMessageToAll(COLOR_LIGHTRED, string);
							}
						}
						if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391))
						{
						    SetPlayerInterior(suspect, 6);
							SetPlayerPos(suspect,264.1425,77.4712,1001.0391);
							SetPlayerFacingAngle(suspect, 263.0160);
							PlayerInfo[suspect][pJailed] = 1;
							PlayerInfo[suspect][pMadWant] = 0;
							PlayerInfo[suspect][pJailTime] = time *60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pMadWant]);
							TogglePlayerControllable(suspect, 1);
							SetPlayerSpecialAction(giveplayerid,0);
							RemovePlayerAttachedObject(giveplayerid,0);
						}
						else if(PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156))
						{
		    				SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,219.5400,109.9767,999.0156);
							SetPlayerFacingAngle(suspect, 1.0000);
							PlayerInfo[suspect][pJailed] = 2;
							PlayerInfo[suspect][pJailTime] = time * 60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							PlayerInfo[suspect][pMadWant] = 0;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pMadWant]);
							TogglePlayerControllable(suspect, 1);
							SetPlayerSpecialAction(giveplayerid,0);
							RemovePlayerAttachedObject(giveplayerid,0);
						}
						else if(PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
						{
		    				SetPlayerInterior(suspect, 3);
							SetPlayerPos(suspect,198.3642,161.8103,1003.0300);
							SetPlayerFacingAngle(suspect, 1.0000);
							PlayerInfo[suspect][pJailed] = 3;
							PlayerInfo[suspect][pJailTime] = time * 60;
   				        	PlayerInfo[suspect][pArrested] += 1;
							PlayerInfo[suspect][pMadWant] = 0;
							SetPlayerWantedLevel(suspect, PlayerInfo[suspect][pMadWant]);
							TogglePlayerControllable(suspect, 1);
							SetPlayerSpecialAction(giveplayerid,0);
							RemovePlayerAttachedObject(giveplayerid,0);
						}
					}
					else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы должны быть около тюрьмы");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/route",true)==0)
	{
		new Veh = GetPlayerVehicleID(playerid);
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 1)
			{
				if(AutoBusJob[playerid] > 0)
				{
				    new string[60];
					format(string, sizeof(string), "Вы закончили свой рабочий день. Заработано %d вирт", AutoBusCheck[playerid] *(32 + random(2)));
					SendClientMessage(playerid, 0x26BF99AA, string);
					SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на ваш счёт во время ближайшей зарплаты");
					PlayerInfo[playerid][pZp] += AutoBusCheck[playerid] *(32 + random(2));
					TransportDuty[playerid] = 0;
					AutoBusJob[playerid] = 0;
					AutoBusCheck[playerid] = 0;
					AutoBusMoney[playerid] = 0;
					JobCarTime[playerid] = 0;
					Delete3DTextLabel(fare3dtext[playerid]);
					DisablePlayerRaceCheckpoint(playerid);
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					return true;
				}
				if(Veh >= busls[0] && Veh <= busls[7]) ShowPlayerDialog(playerid, 20000, DIALOG_STYLE_LIST, "Выберите маршрут", "Межгородской LS -> SF -> LS", "Принять", "Отмена");
				else if(Veh >= bussf[0] && Veh <= bussf[8]) ShowPlayerDialog(playerid, 20001, DIALOG_STYLE_LIST, "Выберите маршрут", "Внутригородской SF", "Принять", "Отмена");
				else if(Veh >= buslv[0] && Veh <= buslv[7]) ShowPlayerDialog(playerid, 20002, DIALOG_STYLE_LIST, "Выберите маршрут", "Внутригородской LV", "Принять", "Отмена");
				else SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в служебном транспорте");
			}
			else SendClientMessage(playerid,COLOR_GREY, "Вы неуполномочены использовать данную команду");
	    }
	    return true;
 	}
	if(strcmp(cmd, "/fare",true) == 0)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 4)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
				Delete3DTextLabel(taxi3d[Veh]);
				TransportDuty[playerid] = 0;
				SendClientMessage(playerid, 0x6495EDFF, "Вы закончили рабочий день");
				return true;
			}
			if(Veh >= taxicar[0] && Veh <= taxicar[37])
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					Delete3DTextLabel(taxi3d[Veh]);
					TaxiDrivers += 1;
					TransportDuty[playerid] = 1;
					taxi3d[Veh] = Create3DTextLabel("<< Бесплатное такси >>", COLOR_YELLOW, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(taxi3d[Veh], Veh, 0, 0, 1.5);
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Вы не таксист / не в машине");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не на службе");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmdtext, "/trash",true) == 0)
    {
        if(PlayerInfo[playerid][pJob] == 11)
        {
            if(GetPlayerVehicleID(playerid) == train[0])
            {
                SetPlayerRaceCheckpoint(playerid, 0,1868.2554,-1624.6204,13.4633,1536.0526,-1844.1660,13.5469, 7.0);
                pMusor[playerid] = CHECKPOINT_1;
                MusorJob[playerid] = 1;
                SendClientMessage(playerid,COLOR_YELLOW, "Заберите мусор из {F30F40}Клуба Альхамбра");
                return true;
            }
        }
    }
    if(strcmp(cmdtext, "/train",true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 12)
			{
				if(TrainJob[playerid] > 0)
				{
					new zptrain = AutoBusCheck[playerid] *(32 + random(500)+500);
					new string[60];
					format(string, sizeof(string), "Вы закончили свой рабочий день. Заработано %d вирт", zptrain);
					SendClientMessage(playerid, 0x26BF99AA, string);
					SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на ваш счёт во время ближайшей зарплаты");
					PlayerInfo[playerid][pZp] += zptrain;
					TransportDuty[playerid] = 0;
					TrainJob[playerid] = 0;
					AutoBusCheck[playerid] = 0;
					AutoBusMoney[playerid] = 0;
					Delete3DTextLabel(fare3dtext[playerid]);
					DisablePlayerRaceCheckpoint(playerid);
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					return true;
				}
				else
				{
                    TrainJob[playerid] = 1;
                    ShowPlayerDialog(playerid, 5549, DIALOG_STYLE_INPUT, "Проезд", "Введите цену за проезд:", "Принять", "Отмена");
				}
			}
			else SendClientMessage(playerid,COLOR_GREY, "Вы неуполномочены использовать данную команду");
	    }
	    return true;
 	}
	if(strcmp(cmd, "/load", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машины развозщика продуктов");
			SendClientMessage(playerid, COLOR_GREEN, "Езжайте на склад, чтобы загрузиться продуктами");
			SetPlayerCheckpoint(playerid,-56.7245,-224.1406,5.4297,5);
			MatsArmyCar[playerid] = 1000;
			PicCP[playerid] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/loadgas", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid,COLOR_GREY, "Вы не в бензовозе");
			SendClientMessage(playerid, COLOR_GREEN, "Загрузите бензин, и цепляйте прицеп");
			SetPlayerCheckpoint(playerid,-1053.1475,-649.7113,32.0078,5);
			MatsArmyCar[playerid] = 2525;
			PicCP[playerid] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/cityhall", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 7)
		{
  			switch(PlayerInfo[playerid][pRank])
			{
   				case 3,4,6,9,10:
	    		{
     				if(PlayerToPoint(3.0,playerid,390.1618,173.8988,1008.3828) || PlayerToPoint(3.0,playerid,1481.1272,-1771.6830,18.7958))
       				{
               			if(chlocked == 0)
       				    {
							chlocked = 1;
							SendClientMessage(playerid, COLOR_GREEN, "Вы закрыли основной вход");
							return true;
						}
						else
						{
						    chlocked = 0;
						    SendClientMessage(playerid, COLOR_GREEN, "Вы открыли основной вход");
							return true;
						}
					}
   					if(PlayerToPoint(3.0,playerid,368.4229,194.0837,1008.3828) || PlayerToPoint(3.0,playerid,1413.2067,-1790.5966,15.4356))
      				{
      				    if(chbacklocked == 0)
       				    {
							chbacklocked = 1;
							SendClientMessage(playerid, COLOR_GREEN, "Вы закрыли чёрный вход");
							return true;
						}
						else
						{
						    chbacklocked = 0;
						    SendClientMessage(playerid, COLOR_GREEN, "Вы открыли чёрный вход");
							return true;
						}
		    		}
					else SendClientMessage(playerid, COLOR_GREY, "Вы не у входа мэрии");
				}
		    }
		}
		else SendClientMessage(playerid, COLOR_GREEN, "У вас нет ключей от мэрии");
		return true;
	}
	else if(strcmp(cmd, "/frisk",true)==0)
    {
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /frisk [id]");
			friskid[playerid] = ReturnUser(tmp);
			if(!IsPlayerConnected(friskid[playerid]) || friskid[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
            if(friskid[playerid] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обыскать себя");
			if(ProxDetectorS(5.0, playerid, friskid[playerid]))
			{
			    new string[512];
				format(string, sizeof(string), "Оружие\nЛицензии\nМатериалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %d\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
         		PlayerInfo[friskid[playerid]][pMaterials],PlayerInfo[friskid[playerid]][pDrugs],PlayerInfo[friskid[playerid]][pKeys],PlayerInfo[friskid[playerid]][pNkeys],PlayerInfo[friskid[playerid]][pFishes],PlayerInfo[friskid[playerid]][pMushrooms],
           		PlayerInfo[friskid[playerid]][pWorms],PlayerInfo[friskid[playerid]][pBalon], PlayerInfo[friskid[playerid]][pPrez],PlayerInfo[friskid[playerid]][pWine],PlayerInfo[friskid[playerid]][pBeer],PlayerInfo[friskid[playerid]][pSig],
				PlayerInfo[friskid[playerid]][pSprite],PlayerInfo[friskid[playerid]][pFirework],PlayerInfo[friskid[playerid]][pFishrod],PlayerInfo[friskid[playerid]][pPhone],PlayerInfo[friskid[playerid]][pDirectory],PlayerInfo[friskid[playerid]][pCDPlayer],PlayerInfo[friskid[playerid]][pTicket],PlayerInfo[friskid[playerid]][pRope]);
				ShowPlayerDialog(playerid, 9202, DIALOG_STYLE_LIST, "Обыск/Изъятие>>Выберите чтобы изъять", string, "Взять", "Отмена");
				format(string, sizeof(string), "%s обыскал %s", PlayerInfo[playerid][pName], PlayerInfo[friskid[playerid]][pName]);
				SetPlayerSpecialAction(friskid[playerid],SPECIAL_ACTION_HANDSUP);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
 	}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
		if(IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_RED, "Внимание, розыскиваются:");
			new string[128];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMadWant] >= 1)
					{
						format(string, sizeof(string), "{05FF00}[%d]%s {FAFAFA}- {8200FF}%d ур. розыска", i, PlayerInfo[i][pName], PlayerInfo[i][pMadWant]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
    if(strcmp(cmd, "/mdc", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsACop(playerid) && !IsAMayor(playerid) && !IsAArm(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mdc [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "---======== MOBILE BASE COMPUTER ========---");
			new string[128];
			format(string, sizeof(string), "Имя: %s", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, COLOR_WHITE,string);
			format(string, sizeof(string), "Преступление: %s", PlayerCrime[giveplayerid][pAccusedof]);
			SendClientMessage(playerid, COLOR_GRAD2,string);
			format(string, sizeof(string), "Сообщил: %s", PlayerCrime[giveplayerid][pVictim]);
			SendClientMessage(playerid, COLOR_GRAD3,string);
			format(string, sizeof(string), "Уровень розыска: %s", PlayerInfo[giveplayerid][pMadWant]);
			SendClientMessage(playerid, COLOR_GRAD4,string);
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "---============================================---");
		}
		return true;
	}
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить в мегафон!");
	    {
  			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 21  || PlayerInfo[playerid][pMember] == 10)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/m)egaphone [текст ]");
				switch(PlayerInfo[playerid][pMember])
				{
					case 1,10,21:
                    {
                        new string[128];
	   					if(IsACopCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
					    format(string, sizeof(string), "{{ Офицер %s: %s }}", PlayerInfo[playerid][pName], result);
					    ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
					case 2:
					{
					    new string[128];
						if(IsACopCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине ФБР");
						format(string, sizeof(string), "{{ Агент ФБР %s: %s }}", PlayerInfo[playerid][pName], result);
						ProxDetector(80.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас бан чата!");
		if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/f)amily [текст]");
		new string[128];
		switch(PlayerInfo[playerid][pMember])
		{
		    case 5:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Новицио %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Ассосиатоёр %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Сомбаттенте %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Солдато %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Боец %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Сотто-Капо %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Капо %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[F] Младший Босс %s: %s", PlayerInfo[playerid][pName], result);
			        case 9: format(string, sizeof(string), "[F] Консильери %s: %s", PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[F] Дон %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 6:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Вакасю %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Кёдай %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Сятейгасира %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Вакагасира %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Со-хобунтё %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Камбу %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Оядзи %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[F] Cайко комон %s: %s", PlayerInfo[playerid][pName], result);
			        case 9: format(string, sizeof(string), "[F] Оябун-кобун %s: %s", PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[F] Кумитё %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 8:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Крупье %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Менеджер %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 9,16,20:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Стажер %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Фотограф %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Папарацци %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Журналист %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Редактор %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Главный редактор %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 11:
			{
			    if(duty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно начать рабочий день в автошколе");
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Стажёр %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Экзаменатор %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Инструктор %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Кординатор %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Мл.менеджер %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Ст.менеджер %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Директор %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[F] Управляющий %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 12:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Блайд %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Смол Нига %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Крэкер  %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Гун брo %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Ап Бро %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Гангстер %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Федерал Блок %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Фолкс %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Райч Нига %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Биг Вилли %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 13:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Новато %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Криминаль %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Сольдадо %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Эстимадо %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Амиго %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Асесино %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Авторитарио %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Асесор %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Лидер V.E.G. %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Падрино %s: %s", PlayerInfo[playerid][pName], result);
            		case 11: format(string, sizeof(string), "[F] Падре %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 14:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Шнырь %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Фраер %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Бык %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Барыга %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Блатной %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Свояк %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Браток %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Вор %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Вор в законе %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Авторитет %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
   			case 15:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Плэйя %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Хастла %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Килла %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Юонг %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Гангста %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] О.Г. %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Мобста %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Де Кинг %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Легенд %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Мэд Дог %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 17:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Перро %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Тирадор %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Геттор %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Лас Геррас %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Мирандо %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Сабио %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Инвасор %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Тесосеро %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Нестро %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Падре %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 18:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Новато %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Ладрон %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Амиго  %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Мачo %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Джуниор %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Эрмано %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Бандидо %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Ауторидад %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Аджунто %s: %s", PlayerInfo[playerid][pName], result);
            		case 10: format(string, sizeof(string), "[F] Падре %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 23..32:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Support %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Hang Around %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Prospect %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Member %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Road Captain %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Sergeant-at-arms %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Treasurer %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Вице-Президент %s: %s", PlayerInfo[playerid][pName], result);
            		case 9: format(string, sizeof(string), "[F] Президент %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
			case 35:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 1: format(string, sizeof(string), "[F] Помощник %s: %s", PlayerInfo[playerid][pName], result);
			        case 2: format(string, sizeof(string), "[F] Стажер %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[F] Убийца %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[F] Киллер %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[F] Палач %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[F] Агент 47 %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[F] Мл.Наставник %s: %s", PlayerInfo[playerid][pName], result);
		         	case 8: format(string, sizeof(string), "[F] Наставник %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendFamilyMessage(PlayerInfo[playerid][pMember], TEAM_AZTECAS_COLOR, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/r", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: (/r)adio [текст]");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет кляпа во рту");
		new prefi[64];
		new string[128];
		format(string,sizeof(string),"%s.ini",	PlayerInfo[playerid][pName]);
		new File = ini_openFile(string);
		ini_getString(File,"Prefix",prefi);
		ini_closeFile(File);
		switch(PlayerInfo[playerid][pMember])
		{
		    case 1,10,21:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R]%s Кадет %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R]%s Офицер %s: %s",prefi, PlayerInfo[playerid][pName],result);
		            case 3: format(string, sizeof(string), "[R]%s Мл.Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R]%s Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R]%s Ст.Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
		            case 7: format(string, sizeof(string), "[R]%s Ст.Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
		            case 8: format(string, sizeof(string), "[R]%s Мл.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName],result);
		            case 9: format(string, sizeof(string), "[R]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 10: format(string, sizeof(string), "[R]%s Ст.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 11: format(string, sizeof(string), "[R]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 12: format(string, sizeof(string), "[R]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 13: format(string, sizeof(string), "[R]%s Подполковник %s: %s.",prefi, PlayerInfo[playerid][pName], result);
		            case 14: format(string, sizeof(string), "[R]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 15: format(string, sizeof(string), "[R]%s Шериф %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
			case 2:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R]%s Стажёр %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R]%s Агент %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R]%s Ст.Агент %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R]%s Спец.Агент %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R]%s Начальник секции %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R]%s Инспектор %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R]%s Зам.директора %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R]%s Директор %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
            case 3:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R]%s Юнга %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R]%s Матрос %s: %s",prefi,   PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R]%s Ст.Матрос %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R]%s Старшина %s: %s",prefi,   PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R]%s Гл.Старшина %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R]%s Боцман %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R]%s Мичман %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 9: format(string, sizeof(string), "[R]%s Ст.Мичман %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 10: format(string, sizeof(string), "[R]%s Мл.Лейтенант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 11: format(string, sizeof(string), "[R]%s Лейтенант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 12: format(string, sizeof(string), "[R]%s Ст.Лейтенант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 13: format(string, sizeof(string), "[R]%s Капитан-лейтенант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 14: format(string, sizeof(string), "[R]%s Контр-адмирал %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 15: format(string, sizeof(string), "[R]%s Вице-адмирал %s: %s",prefi,  PlayerInfo[playerid][pName], result);
					case 16: format(string, sizeof(string), "[R]%s Адмирал %s: %s",prefi,  PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
			case 4,22,33:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R] Практикант %s: %s", PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R] Стажёр %s: %s. ", PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R] Интерн %s: %s. ", PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R] Санитар %s: %s", PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R] Педиатр %s: %s", PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R] Хирург %s: %s", PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R] Терапевт %s: %s", PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R] Глав.Врач %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
			case 7:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R] Секретарь %s: %s", PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R] Водитель %s: %s", PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R] Охранник %s: %s", PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R] Начальник охраны %s: %s", PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R] Адвокат %s: %s", PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R] Прокурор %s: %s", PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R] Мин.Культуры %s: %s", PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R] Мин.Финансов %s: %s", PlayerInfo[playerid][pName], result);
		            case 9: format(string, sizeof(string), "[R] Зам.Губернатора %s: %s", PlayerInfo[playerid][pName], result);
		            case 10: format(string, sizeof(string), "[R] Губернатор %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
			case 19:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R]%s Рядовой %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R]%s Ефрейтор %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R]%s Младший сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R]%s Сержант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R]%s Ст.Cержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R]%s Старшина %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R]%s Ст.Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 9: format(string, sizeof(string), "[R]%s Мл.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 10: format(string, sizeof(string), "[R]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 11: format(string, sizeof(string), "[R]%s Ст.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 12: format(string, sizeof(string), "[R]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 13: format(string, sizeof(string), "[R]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 14: format(string, sizeof(string), "[R]%s Подполковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
		            case 15: format(string, sizeof(string), "[R]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 16: format(string, sizeof(string), "[R]%s Генерал %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
			case 34:
		    {
		        switch(PlayerInfo[playerid][pRank])
		        {
		            case 1: format(string, sizeof(string), "[R] Стажёр %s: %s", PlayerInfo[playerid][pName], result);
		            case 2: format(string, sizeof(string), "[R] Пожарный 1 разряда %s: %s. ", PlayerInfo[playerid][pName], result);
		            case 3: format(string, sizeof(string), "[R] Пожарный 3 разряда %s: %s. ", PlayerInfo[playerid][pName], result);
		            case 4: format(string, sizeof(string), "[R] Пожарный 6 разряда %s: %s", PlayerInfo[playerid][pName], result);
		            case 5: format(string, sizeof(string), "[R] Специалист %s: %s", PlayerInfo[playerid][pName], result);
		            case 6: format(string, sizeof(string), "[R] Командир отряда %s: %s", PlayerInfo[playerid][pName], result);
		            case 7: format(string, sizeof(string), "[R] Зам.Начальника %s: %s", PlayerInfo[playerid][pName], result);
		            case 8: format(string, sizeof(string), "[R] Начальник Депо %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_BLUE_COLOR, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
		new length = strlen(cmdtext);
		while((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/d)epartments [текст]");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены писать в депортамент");
		new prefi[64];
		new string[128];
		format(string,sizeof(string),"%s.ini", PlayerInfo[playerid][pName]);
		new File = ini_openFile(string);
		ini_getString(File,"Prefix",prefi);
		ini_closeFile(File);
		switch(PlayerInfo[playerid][pMember])
		{
			case 1:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[LSPD]%s Офицер %s: %s",prefi,PlayerInfo[playerid][pName],result);
			        case 3: format(string, sizeof(string), "[LSPD]%s Мл.Сержант %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[LSPD]%s Сержант %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[LSPD]%s Ст.Сержант %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[LSPD]%s Прапорщик %s: %s",prefi,PlayerInfo[playerid][pName],result);
			        case 7: format(string, sizeof(string), "[LSPD]%s Ст.Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 8: format(string, sizeof(string), "[LSPD]%s Мл. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 9: format(string, sizeof(string), "[LSPD]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[LSPD]%s Ст. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 11: format(string, sizeof(string), "[LSPD]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 12: format(string, sizeof(string), "[LSPD]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 13: format(string, sizeof(string), "[LSPD]%s Подполковник %s: %s.",prefi, PlayerInfo[playerid][pName], result);
			        case 14: format(string, sizeof(string), "[LSPD]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 15: format(string, sizeof(string), "[LSPD]%s Шериф %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 2:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[FBI]%s Агент %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[FBI]%s Старший агент %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[FBI]%s Специальный агент %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[FBI]%s Начальник секции %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[FBI]%s Инспектор %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[FBI]%s Зам. директора %s: %s",prefi,PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[FBI]%s Директор %s: %s",prefi,PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 3:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[SFa]%s Матрос %s: %s",prefi,  PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[SFa]%s Ст.Матрос %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[SFa]%s Старшина %s: %s",prefi,  PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[SFa]%s Гл.Старшина %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[SFa]%s Боцман %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[SFa]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[SFa]%s Мичман %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 9: format(string, sizeof(string), "[SFa]%s Ст.Мичман %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[SFa]%s Мл. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 11: format(string, sizeof(string), "[SFa]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 12: format(string, sizeof(string), "[SFa]%s Ст. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 13: format(string, sizeof(string), "[SFa]%s Капитан-лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 14: format(string, sizeof(string), "[SFa]%s Контр-адмирал %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 15: format(string, sizeof(string), "[SFa]%s Вице-адмирал %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 16: format(string, sizeof(string), "[SFa]%s Адмирал %s: %s",prefi,PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 4:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[МЧС SF] Стажёр %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[МЧС SF] Интерн %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[МЧС SF] Санитар %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[МЧС SF] Педиатр %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[МЧС SF] Хирург %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[МЧС SF] Терапевт %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[МЧС SF] Глав.врач %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 7:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[Мэрия] Водитель %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[Мэрия] Охранник %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[Мэрия] Начальник Охраны %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[Мэрия] Адвокат %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[Мэрия] Прокурор %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[Мэрия] Минкультуры %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[Мэрия] Минфинансов %s: %s", PlayerInfo[playerid][pName], result);
			        case 9: format(string, sizeof(string), "[Мэрия] Зам.Губернатора %s: %s", PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[Мэрия] Губернатор %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 10:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[SFPD]%s Офицер %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 3: format(string, sizeof(string), "[SFPD]%s Мл. Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[SFPD]%s Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[SFPD]%s Ст. Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[SFPD]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 7: format(string, sizeof(string), "[SFPD]%s Ст. Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 8: format(string, sizeof(string), "[SFPD]%s Мл. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 9: format(string, sizeof(string), "[SFPD]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[SFPD]%s Ст. Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 11: format(string, sizeof(string), "[SFPD]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 12: format(string, sizeof(string), "[SFPD]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 13: format(string, sizeof(string), "[SFPD]%s Подполковник %s: %s.",prefi, PlayerInfo[playerid][pName], result);
			        case 14: format(string, sizeof(string), "[SFPD]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 15: format(string, sizeof(string), "[SFPD]%s Шериф %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 19:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[Зона 51]%s Ефрейтор %s: %s",prefi,  PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[Зона 51]%s Мл.Cержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[Зона 51]%s Сержант %s: %s",prefi,  PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[Зона 51]%s Ст.Cержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[Зона 51]%s Старшина %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[Зона 51]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[Зона 51]%s Ст.Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 9: format(string, sizeof(string), "[Зона 51]%s Мл.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 10: format(string, sizeof(string), "[Зона 51]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 11: format(string, sizeof(string), "[Зона 51]%s Ст.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 12: format(string, sizeof(string), "[Зона 51]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 13: format(string, sizeof(string), "[Зона 51]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 14: format(string, sizeof(string), "[Зона 51]%s Подполковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 15: format(string, sizeof(string), "[Зона 51]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
					case 16: format(string, sizeof(string), "[Зона 51]%s Генерал %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 21:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[LVPD]%s Офицер %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 3: format(string, sizeof(string), "[LVPD]%s Мл. Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[LVPD]%s Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[LVPD]%s Ст.Сержант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[LVPD]%s Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 7: format(string, sizeof(string), "[LVPD]%s Ст.Прапорщик %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 8: format(string, sizeof(string), "[LVPD]%s Мл.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName],result);
			        case 9: format(string, sizeof(string), "[LVPD]%s Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 10: format(string, sizeof(string), "[LVPD]%s Ст.Лейтенант %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 11: format(string, sizeof(string), "[LVPD]%s Капитан %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 12: format(string, sizeof(string), "[LVPD]%s Майор %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 13: format(string, sizeof(string), "[LVPD]%s Подполковник %s: %s.",prefi, PlayerInfo[playerid][pName], result);
			        case 14: format(string, sizeof(string), "[LVPD]%s Полковник %s: %s",prefi, PlayerInfo[playerid][pName], result);
			        case 15: format(string, sizeof(string), "[LVPD]%s Шериф %s: %s",prefi, PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 22:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[МЧС LS] Стажёр %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[МЧС LS] Интерн %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[МЧС LS] Санитар %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[МЧС LS] Педиатр %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[МЧС LS] Хирург %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[МЧС LS] Терапевт %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[МЧС LS] Глав.Врач %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 33:
			{

			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[МЧС LV] Стажёр %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[МЧС LV] Интерн %s: %s. ", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[МЧС LV] Санитар %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[МЧС LV] Педиатр %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[МЧС LV] Хирург %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[МЧС LV] Терапевт %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[МЧС LV] Глав. врач %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
			case 34:
			{
			    switch(PlayerInfo[playerid][pRank])
			    {
			        case 2: format(string, sizeof(string), "[FFigters] Пожарный 1 разряда %s: %s", PlayerInfo[playerid][pName], result);
			        case 3: format(string, sizeof(string), "[FFigters] Пожарный 3 разряда %s: %s", PlayerInfo[playerid][pName], result);
			        case 4: format(string, sizeof(string), "[FFigters] Пожарный 6 разряда %s: %s", PlayerInfo[playerid][pName], result);
			        case 5: format(string, sizeof(string), "[FFigters] Специалист %s: %s", PlayerInfo[playerid][pName], result);
			        case 6: format(string, sizeof(string), "[FFigters] Командир отряда %s: %s", PlayerInfo[playerid][pName], result);
			        case 7: format(string, sizeof(string), "[FFigters] Зам.Начальника %s: %s", PlayerInfo[playerid][pName], result);
			        case 8: format(string, sizeof(string), "[FFigters] Начальник депо %s: %s", PlayerInfo[playerid][pName], result);
				}
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bizmafia",true) == 0)
 	{
		if(PlayerInfo[playerid][pPBiskey] == 255) return SendClientMessage(playerid, COLOR_GREY, "Вы не бизнесмен");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Введите: /bizmafia [номер]");
			SendClientMessage(playerid, COLOR_WHITE, "0: Yakuza, 1: Русская Мафия, 2: LCN, 3: Нет");
			return true;
		}
		new item = strval(tmp);
		new bizz = PlayerInfo[playerid][pPBiskey];
		switch (item)
		{
			case 0:
			{
				SBizzInfo[bizz-100][sbMafia] = 6;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена Yakuza");
			}
			case 1:
			{
				SBizzInfo[bizz-100][sbMafia] = 14;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена РМ");
			}
			case 2:
			{
				SBizzInfo[bizz-100][sbMafia] = 5;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса установлена LCN");
			}
 			case 3:
			{
				SBizzInfo[bizz-100][sbMafia] = 0;
				SendClientMessage(playerid,  COLOR_YELLOW, "Крыша бизнеса убрана");
			}
		}
 		return true;
	}
	if(strcmp(cmd, "/botsms", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			new sendplayerid;
        	tmp = strtok(cmdtext, idx);
        	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /botsms [id] [id получателя] [текст]");
        	giveplayerid = ReturnUser(tmp);
        	tmp = strtok(cmdtext, idx);
        	sendplayerid = ReturnUser(tmp);
	    	new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
  			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /botsms [id] [id получателя] [текст]");
			if(!IsPlayerConnected(sendplayerid) || sendplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "Игрок не найден");
  			if(PlayerInfo[sendplayerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет телефона");
			if(PhoneOnline[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен");
			new string[128];
			format(string, sizeof(string), "{FFFF00}SMS:{1b8a11} %s.{FFFF00} Отправитель:{ff0000} %s[%d]",(result),PlayerInfo[giveplayerid][pName], giveplayerid);
			SendClientMessage(sendplayerid, COLOR_YELLOW, string);
			PlaySoundNearPlayer(sendplayerid,21001);
		}
	}
	if(strcmp(cmd, "/sms", true) == 0 || strcmp(cmd, "/txt", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
		if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефона (Его можно купить в любом 24/7)");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sms [id] [текст]");
 		giveplayerid = ReturnUser(tmp);
		new string[128];
		new is1 = 0;
		new r = 0;
		while(strlen(cmdtext[is1]))
		{
			if('0' <= cmdtext[is1] <= '9')
			{
				new is2 = is1+1;
				new p = 0;
				while(p == 0)
				{
					if('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
					else
					{
						strmid(strR[r],cmdtext,is1,is2,255);
						if(strval(strR[r]) < 255) r++;
						is1 = is2;
						p = 1;
					}
				}
			}
			is1++;
		}
		if(r >= 4)
		{
			format(string, sizeof(string), "[SMS]: %s[%d]: %s",PlayerInfo[playerid][pName],playerid,cmdtext);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[Security] Пожайлуйста, не разводите спам");
			for(new z = 0; z < r; z++)
			{
				new pr2;
				while((pr2=strfind(cmdtext,strR[z],true))!=-1) for(new i = pr2,j = pr2+strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
			}
			return true;
		}
		if(Rekl[playerid] == 1 && strfind(cmdtext, "www",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru",true)!=-1
		|| Rekl[playerid] == 1 && strfind(cmdtext, ".net",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com",true)!=-1
		|| Rekl[playerid] == 1 && strfind(cmdtext, "http",true)!=-1)
		{
			format(string, sizeof(string), "[БЧ][SMS]: %s[%d]: %s",PlayerInfo[playerid][pName],playerid,cmdtext);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы получили бан чата на 3 часа. /mm - репорт");
			PlayerInfo[playerid][pMuteTime] = 10800000;
			PlayerInfo[playerid][pMuted] = 1;
			return true;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sms [id] [текст]");
		new item = strval(tmp);
		switch(item)
		{
			case 11888:
			{
				if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: LS NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_RED, "Сообщение не доставлено, недостаточно средств");
					format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
					SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(16, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: LS NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
			}
			case 11555:
			{
				if(smssf == 0) return SendClientMessage(playerid, COLOR_RED, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: SF NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_RED, "Сообщение не доставлено, недостаточно средств");
					format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
					SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
				    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(9, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: SF NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				PlayerInfo[playerid][pBank] -= smspricesf;
				FracBank[0][fSfnews] += smspricesf;
			}
			case 11666:
			{
 				if(smslv == 0) return SendClientMessage(playerid, COLOR_GREY, "Приём SMS отключен");
				if(PlayerInfo[playerid][pBank] <= 0)
				{
	 				format(string, sizeof(string), "SMS: %s. Получатель: LV NEWS",(result));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_RED, "Сообщение не доставлено, не достаточно средств");
					format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
					SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
				SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
    			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				format(string, sizeof(string), "[Эфир] %s. Отправитель: %s[%d]",(result),PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(20, COLOR_YELLOW, string);
				format(string, sizeof(string), "SMS: %s. Получатель: LV NEWS",(result));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pBank] -= smspricelv;
				FracBank[0][fLvnews] += smspricelv;
			}
		}
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
  		if(PlayerInfo[giveplayerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет телефона");
		if(PhoneOnline[giveplayerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен.");
			format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
			ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		format(string, sizeof(string), "{FFFF00}SMS:{1b8a11} %s.{FFFF00} Отправитель:{ff0000} %s[%d]",(result),PlayerInfo[playerid][pName], playerid);
		SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		for(new admin = 0; admin < MAX_PLAYERS; admin ++)
		{
  			if(adminreadsms[admin] ==1 && PlayerInfo[admin][pAdmin] != 0)
	    	{
      			format(string,sizeof(string),"{ff0000} %s (id:%i){FFFF00} отправил SMS для{ff0000} %s (id:%i){FFFF00}:{1b8a11} %s",PlayerInfo[playerid][pName],playerid,PlayerInfo[giveplayerid][pName],giveplayerid,result);
	    		SendClientMessage(admin,COLOR_YELLOW,string);
			}
		}
		PlaySoundNearPlayer(giveplayerid, 21001);
		PlaySoundNearPlayer(playerid, 41603);
		format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
		SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		format(string, sizeof(string), "{FFFF00}SMS:{1b8a11} %s.{FFFF00} Получатель:{ff0000} %s[%d]",(result), PlayerInfo[giveplayerid][pName], giveplayerid);
		SendClientMessage(playerid,  COLOR_YELLOW, string);
		SendClientMessage(playerid,  COLOR_GREEN, "Сообщение доставлено");
		PlayerInfo[playerid][pMobile] += 2;
		return true;
	}
	if(strcmp(cmd, "/pm", true) == 0 || strcmp(cmd, "/ot", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pm [id] [текст]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			new string[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pm [id] [текст]");
			format(string, sizeof(string), "Ответ от %s: %s", PlayerInfo[playerid][pName], (result));
			SendClientMessage(giveplayerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Ответ администратора %s к %s[%d]: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], giveplayerid, (result));
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/int", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			new zmd[150];
			zmd = strtok(cmdtext, idx);
			if(!strlen(zmd)) { SendClientMessage(playerid, COLOR_WHITE, "Введите: /int [1-135]"); return true; }
			if(strcmp(zmd, "1",true) == 0) { SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988); SetPlayerInterior(playerid,17); return true; }
			if(strcmp(zmd, "2",true) == 0) { SetPlayerPos(playerid,6.091180,-29.271898,1003.549988); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "3",true) == 0) { SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988); SetPlayerInterior(playerid,18); return true; }
			if(strcmp(zmd, "4",true) == 0) { SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988); SetPlayerInterior(playerid,16); return true; }
			if(strcmp(zmd, "5",true) == 0) { SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "6",true) == 0) { SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "7",true) == 0) { SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554); SetPlayerInterior(playerid,14); return true; }
			if(strcmp(zmd, "8",true) == 0) { SetPlayerPos(playerid,2.384830,33.103397,1199.849976); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "9",true) == 0) { SetPlayerPos(playerid,315.856170,1024.496459,1949.797363); SetPlayerInterior(playerid,9); return true; }
			if(strcmp(zmd, "10",true) == 0) { SetPlayerPos(playerid,286.148987,-40.644398,1001.569946); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "11",true) == 0) { SetPlayerPos(playerid,286.800995,-82.547600,1001.539978); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "12",true) == 0) { SetPlayerPos(playerid,296.919983,-108.071999,1001.569946); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "13",true) == 0) { SetPlayerPos(playerid,314.820984,-141.431992,999.661987); SetPlayerInterior(playerid,7); return true; }
			if(strcmp(zmd, "14",true) == 0) { SetPlayerPos(playerid,316.524994,-167.706985,999.661987); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "15",true) == 0) { SetPlayerPos(playerid,302.292877,-143.139099,1004.062500); SetPlayerInterior(playerid,7); return true; }
			if(strcmp(zmd, "16",true) == 0) { SetPlayerPos(playerid,235.508994,1189.169897,1080.339966); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "17",true) == 0) { SetPlayerPos(playerid,225.756989,1240.000000,1082.149902); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "18",true) == 0) { SetPlayerPos(playerid,223.043991,1289.259888,1082.199951); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "19",true) == 0) { SetPlayerPos(playerid,225.630997,1022.479980,1084.069946); SetPlayerInterior(playerid,7); return true; }
			if(strcmp(zmd, "20",true) == 0) { SetPlayerPos(playerid,295.138977,1474.469971,1080.519897); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "21",true) == 0) { SetPlayerPos(playerid,328.493988,1480.589966,1084.449951); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "22",true) == 0) { SetPlayerPos(playerid,385.803986,1471.769897,1080.209961); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "23",true) == 0) { SetPlayerPos(playerid,375.971985,1417.269897,1081.409912); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "24",true) == 0) { SetPlayerPos(playerid,490.810974,1401.489990,1080.339966); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "25",true) == 0) { SetPlayerPos(playerid,447.734985,1400.439941,1084.339966); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "26",true) == 0) { SetPlayerPos(playerid,227.722992,1114.389893,1081.189941); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "27",true) == 0) { SetPlayerPos(playerid,260.983978,1286.549927,1080.299927); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "28",true) == 0) { SetPlayerPos(playerid,221.666992,1143.389893,1082.679932); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "29",true) == 0) { SetPlayerPos(playerid,27.132700,1341.149902,1084.449951); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "30",true) == 0) { SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "31",true) == 0) { SetPlayerPos(playerid,22.778299,1404.959961,1084.449951); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "32",true) == 0) { SetPlayerPos(playerid,140.278000,1368.979980,1083.969971); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "33",true) == 0) { SetPlayerPos(playerid,234.045990,1064.879883,1084.309937); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "34",true) == 0) { SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "35",true) == 0) { SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "36",true) == 0) { SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951); SetPlayerInterior(playerid,8); return true; }
			if(strcmp(zmd, "37",true) == 0) { SetPlayerPos(playerid,83.345093,1324.439941,1083.889893); SetPlayerInterior(playerid,9); return true; }
			if(strcmp(zmd, "38",true) == 0) { SetPlayerPos(playerid,260.941986,1238.509888,1084.259888); SetPlayerInterior(playerid,9); return true; }
			if(strcmp(zmd, "39",true) == 0) { SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "40",true) == 0) { SetPlayerPos(playerid,446.622986,509.318970,1001.419983); SetPlayerInterior(playerid,12); return true; }
			if(strcmp(zmd, "41",true) == 0) { SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "42",true) == 0) { SetPlayerPos(playerid,833.818970,7.418000,1004.179993); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "43",true) == 0) { SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "44",true) == 0) { SetPlayerPos(playerid,964.376953,2157.329834,1011.019958); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "45",true) == 0) { SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "46",true) == 0) { SetPlayerPos(playerid,662.641601,-571.398803,16.343263); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "47",true) == 0) { SetPlayerPos(playerid,614.581420,-23.066856,1004.781250); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "48",true) == 0) { SetPlayerPos(playerid,612.508605,-129.236114,1001.992187); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "49",true) == 0) { SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "50",true) == 0) { SetPlayerPos(playerid,-2048.605957,162.093444,28.835937); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "51",true) == 0) { SetPlayerPos(playerid,2170.284,1618.629,999.9766); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "52",true) == 0) { SetPlayerPos(playerid,1889.975,1018.055,31.88281); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "53",true) == 0) { SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "54",true) == 0) { SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000); SetPlayerInterior(playerid,12); return true; }
			if(strcmp(zmd, "55",true) == 0) { SetPlayerPos(playerid,207.737991,-109.019997,1005.269958); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "56",true) == 0) { SetPlayerPos(playerid,204.332993,-166.694992,1000.578979); SetPlayerInterior(playerid,14); return true; }
			if(strcmp(zmd, "57",true) == 0) { SetPlayerPos(playerid,207.054993,-138.804993,1003.519958); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "58",true) == 0) { SetPlayerPos(playerid,203.778000,-48.492397,1001.799988); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "59",true) == 0) { SetPlayerPos(playerid,226.293991,-7.431530,1002.259949); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "60",true) == 0) { SetPlayerPos(playerid,161.391006,-93.159156,1001.804687); SetPlayerInterior(playerid,18); return true; }
			if(strcmp(zmd, "61",true) == 0) { SetPlayerPos(playerid,493.390991,-22.722799,1000.686951); SetPlayerInterior(playerid,17); return true; }
			if(strcmp(zmd, "62",true) == 0) { SetPlayerPos(playerid,501.980988,-69.150200,998.834961); SetPlayerInterior(playerid,11); return true; }
			if(strcmp(zmd, "63",true) == 0) { SetPlayerPos(playerid,-227.028000,1401.229980,27.769798); SetPlayerInterior(playerid,18); return true; }
			if(strcmp(zmd, "64",true) == 0) { SetPlayerPos(playerid,460.099976,-88.428497,999.621948); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "65",true) == 0) { SetPlayerPos(playerid,454.973950,-110.104996,999.717957); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "66",true) == 0) { SetPlayerPos(playerid,452.489990,-18.179699,1001.179993); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "67",true) == 0) { SetPlayerPos(playerid,681.474976,-451.150970,-25.616798); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "68",true) == 0) { SetPlayerPos(playerid,366.923980,-72.929359,1001.507812); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "69",true) == 0) { SetPlayerPos(playerid,365.672974,-10.713200,1001.869995); SetPlayerInterior(playerid,9); return true; }
			if(strcmp(zmd, "70",true) == 0) { SetPlayerPos(playerid,372.351990,-131.650986,1001.449951); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "71",true) == 0) { SetPlayerPos(playerid,377.098999,-192.439987,1000.643982); SetPlayerInterior(playerid,17); return true; }
			if(strcmp(zmd, "72",true) == 0) { SetPlayerPos(playerid,244.411987,305.032990,999.231995); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "73",true) == 0) { SetPlayerPos(playerid,271.884979,306.631989,999.325989); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "74",true) == 0) { SetPlayerPos(playerid,291.282990,310.031982,999.154968); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "75",true) == 0) { SetPlayerPos(playerid,302.181000,300.722992,999.231995); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "76",true) == 0) { SetPlayerPos(playerid,322.197998,302.497986,999.231995); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "77",true) == 0) { SetPlayerPos(playerid,346.870025,309.259033,999.155700); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "78",true) == 0) { SetPlayerPos(playerid,-959.873962,1952.000000,9.044310); SetPlayerInterior(playerid,17); return true; }
			if(strcmp(zmd, "79",true) == 0) { SetPlayerPos(playerid,388.871979,173.804993,1008.389954); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "80",true) == 0) { SetPlayerPos(playerid,220.4109,1862.277,13.147); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "81",true) == 0) { SetPlayerPos(playerid,772.112000,-3.898650,1000.687988); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "82",true) == 0) { SetPlayerPos(playerid,774.213989,-48.924297,1000.687988); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "83",true) == 0) { SetPlayerPos(playerid,773.579956,-77.096695,1000.687988); SetPlayerInterior(playerid,7); return true; }
			if(strcmp(zmd, "84",true) == 0) { SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "85",true) == 0) { SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "86",true) == 0) { SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "87",true) == 0) { SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "88",true) == 0) { SetPlayerPos(playerid,1291.725341,-788.319885,96.460937); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "89",true) == 0) { SetPlayerPos(playerid,516.650,-18.611898,1001.459961); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "90",true) == 0) { SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "91",true) == 0) { SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "92",true) == 0) { SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "93",true) == 0) { SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "94",true) == 0) { SetPlayerPos(playerid,744.542969,1437.669922,1102.739990); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "95",true) == 0) { SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "96",true) == 0) { SetPlayerPos(playerid,1204.809937,13.586800,1001.089966); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "97",true) == 0) { SetPlayerPos(playerid,940.921997,-17.007000,1001.179993); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "98",true) == 0) { SetPlayerPos(playerid,964.106995,-53.205498,1001.179993); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "99",true) == 0) { SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "100",true) == 0) { SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "101",true) == 0) { SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "102",true) == 0) { SetPlayerPos(playerid,-794.8064,491.6866,1376.195); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "103",true) == 0) { SetPlayerPos(playerid,-835.2504,500.9161,1358.305); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "104",true) == 0) { SetPlayerPos(playerid,-813.431518,533.231079,1390.782958); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "105",true) == 0) { SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "106",true) == 0) { SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956); SetPlayerInterior(playerid,8); return true; }
			if(strcmp(zmd, "107",true) == 0) { SetPlayerPos(playerid,318.564972,1118.209961,1083.979980); SetPlayerInterior(playerid,5); return true; }
			if(strcmp(zmd, "108",true) == 0) { SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "109",true) == 0) { SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946); SetPlayerInterior(playerid,18); return true; }
			if(strcmp(zmd, "110",true) == 0) { SetPlayerPos(playerid,2522.0,-1673.383911,14.8); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "111",true) == 0) { SetPlayerPos(playerid,-219.322601,1410.444824,27.773437); SetPlayerInterior(playerid,18); return true; }
			if(strcmp(zmd, "112",true) == 0) { SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971); SetPlayerInterior(playerid,12); return true; }
			if(strcmp(zmd, "113",true) == 0) { SetPlayerPos(playerid,-972.4957,1060.983,1358.914); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "114",true) == 0) { SetPlayerPos(playerid,411.625977,-21.433298,1001.799988); SetPlayerInterior(playerid,2); return true; }
			if(strcmp(zmd, "115",true) == 0) { SetPlayerPos(playerid,418.652985,-82.639793,1001.959961); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "116",true) == 0) { SetPlayerPos(playerid,412.021973,-52.649899,1001.959961); SetPlayerInterior(playerid,12); return true; }
			if(strcmp(zmd, "117",true) == 0) { SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988); SetPlayerInterior(playerid,16); return true; }
			if(strcmp(zmd, "118",true) == 0) { SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988); SetPlayerInterior(playerid,17); return true; }
			if(strcmp(zmd, "119",true) == 0) { SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "120",true) == 0) { SetPlayerPos(playerid,246.783997,63.900200,1003.639954); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "121",true) == 0) { SetPlayerPos(playerid,246.375992,109.245995,1003.279968); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "122",true) == 0) { SetPlayerPos(playerid,288.745972,169.350998,1007.179993); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "123",true) == 0) { SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "124",true) == 0) { SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922); SetPlayerInterior(playerid,3); return true; }
			if(strcmp(zmd, "125",true) == 0) { SetPlayerPos(playerid,420.484985,2535.589844,10.020289); SetPlayerInterior(playerid,10); return true; }
			if(strcmp(zmd, "126",true) == 0) { SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "127",true) == 0) { SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801); SetPlayerInterior(playerid,7);  return true; }
			if(strcmp(zmd, "128",true) == 0) { SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250); SetPlayerInterior(playerid,15); return true; }
			if(strcmp(zmd, "129",true) == 0) { SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "130",true) == 0) { SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875); SetPlayerInterior(playerid,14); return true; }
			if(strcmp(zmd, "131",true) == 0) { SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000); SetPlayerInterior(playerid,1); return true; }
			if(strcmp(zmd, "132",true) == 0) { SetPlayerPos(playerid,1382.615600,2184.345703,11.023437); SetPlayerInterior(playerid,0); return true; }
			if(strcmp(zmd, "133",true) == 0) { SetPlayerPos(playerid,297.9414,-64.3876,1001.5156); SetPlayerInterior(playerid,4); return true; }
			if(strcmp(zmd, "134",true) == 0) { SetPlayerPos(playerid,302.1602,-164.7588,999.6105); SetPlayerInterior(playerid,6); return true; }
			if(strcmp(zmd, "135",true) == 0) { SetPlayerPos(playerid,614.31,-125.22,997.99); SetPlayerInterior(playerid,3); return true; }
		}
		return true;
	}
	if(strcmp(cmd, "/yes", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20)
 		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /yes [id]");
			giveplayerid = ReturnUser(tmp);
            if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
			if(zvonok[giveplayerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не звонил в студию");
			new string[46];
			format(string, sizeof(string), "Вы приняли звонок от %s", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			RingTone[giveplayerid] = 0;
			SendClientMessage(giveplayerid, COLOR_YELLOW, "Вы попали в студию, говорите.");
			if(PlayerInfo[playerid][pMember] == 9)
			{
				TalkingLive[giveplayerid] = 1;
				PlayerInfo[giveplayerid][pBank] -= smspricesf;
				FracBank[0][fSfnews] += smspricesf;
			}
			else if(PlayerInfo[playerid][pMember] == 16)
			{
				TalkingLivels[giveplayerid] = 1;
				PlayerInfo[giveplayerid][pBank] -= smspricesf;
				FracBank[0][fLsnews] += smspricesf;
			}
			else if(PlayerInfo[playerid][pMember] == 20)
			{
				TalkingLivelv[giveplayerid] = 1;
				PlayerInfo[giveplayerid][pBank] -= smspricesf;
				FracBank[0][fLvnews] += smspricesf;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/off", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 20)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /off [id]");
			giveplayerid = ReturnUser(tmp);
            if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "[Ошибка]Игрок не найден");
           	if(zvonok[giveplayerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не звонил в студию");
           	new string[48];
			format(string, sizeof(string), "Вы завершили звонок от %s", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, COLOR_BLUE, string);
			SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			SendClientMessage(giveplayerid, COLOR_YELLOW, "Звонок завершён");
			zvonok[giveplayerid] = 0;
			if(PlayerInfo[playerid][pMember] == 9) TalkingLive[giveplayerid] = 255;
			if(PlayerInfo[playerid][pMember] == 16) TalkingLivels[giveplayerid] = 255;
			if(PlayerInfo[playerid][pMember] == 20) TalkingLivelv[giveplayerid] = 255;
		}
		return true;
	}
	if(strcmp(cmd, "/call", true) == 0)
	{
		if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефона (Его можно купить в любом 24/7)");
		if(PlayerTalkingWith[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону");
		if(PlayerIsPhoned[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вам кто-то уже звонит");
		new string[128];
  		format(string, sizeof(string), "%s достаёт телефон", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,11);
		SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
		PlaySoundNearPlayer(playerid, 3600);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return ShowPlayerDialog(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", " Вызвать Таксиста\n Вызвать Медицинскую помощь\n Вызвать Механика\n Вызвать Полицию\n Заказать игрока наёмникам", "Выбор", "Отмена");
 		new phonenumb = strval(tmp);
 		if(phonenumb == PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid, COLOR_RED, "Вы набрали свой номер");
		switch(phonenumb)
		{
			case 11888:
			{
				if(smsls == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(16, COLOR_YELLOW, string);
				PlayerTalkingWith[playerid] = 11888;
				zvonok[playerid] = 1;
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				return true;
			}
			case 11555:
			{
				if(smssf == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(9, COLOR_YELLOW, string);
				PlayerTalkingWith[playerid] = 11555;
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				zvonok[playerid] = 1;
				return true;
			}
			case 11666:
			{
				if(smslv == 0) return SendClientMessage(playerid, COLOR_GREY, "Прямой эфир отключен.");
				format(string, sizeof(string), "В студию звонит: %s. Введите /yes [%d], чтобы ответить",PlayerInfo[playerid][pName], playerid);
				SendFamilyMessage(20, COLOR_YELLOW, string);
				PlayerTalkingWith[playerid] = 11666;
				PlayerInfo[playerid][pBank] -= smspricels;
				FracBank[0][fLsnews] += smspricels;
				zvonok[playerid] = 1;
				return true;
			}
			default:
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(i != INVALID_PLAYER_ID)
					    {
							if(PlayerInfo[i][pPnumber] == phonenumb)
							{
								if(PhoneOnline[i] > 0) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен.");
								if(PlayerInfo[i][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет телефона");
								if(PlayerTalkingWith[i] != -1) return SendClientMessage(playerid, COLOR_GREY, "Абонент разговаривает");
								format(string, sizeof(string), "{ffffff}Вам звонит:{de9009} %s{ffffff}. Введите{1b8a11} (/p){ffffff}, чтобы поднять или{ff0000} (/h){ffffff}, чтобы бросить трубку.", PlayerInfo[playerid][pName]);
								SendClientMessage(i, COLOR_WHITE, string);
								PlayerTalkingWith[playerid] = i;
								PlayerIsPhoned[i] = playerid;
								format(string, sizeof(string), "У %s звонит мобильник", PlayerInfo[i][pName]);
								ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								PlaySoundNearPlayer(i, 23000);
								return true;
							}
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Данный номер не обслуживается");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid,9);
		return true;
	}
	if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
  		if(PlayerTalkingWith[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете");
		if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефона (Его можно купить в любом 24/7)");
		if(PlayerIsPhoned[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вам никто не звонит");
		PlayerTalkingWith[playerid] = PlayerIsPhoned[playerid];
		SendClientMessage(PlayerIsPhoned[playerid], COLOR_GREY, "Поднял(а) трубку телефона");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
		new string[46];
		format(string, sizeof(string), "%s ответил(а) на звонок", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
		PlayerIsPhoned[playerid] = -1;
		return true;
	}
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
	    if(PlayerTalkingWith[playerid] == -1 && PlayerIsPhoned[playerid] == -1) return SendClientMessage(playerid, COLOR_RED, "У вас не звонит телефон");
		if(PlayerTalkingWith[playerid] < 1000 && PlayerTalkingWith[playerid] != -1)
		{
			SendClientMessage(PlayerTalkingWith[playerid], COLOR_GREY, "Абонент положил(a) трубку");
			SetPlayerSpecialAction(PlayerTalkingWith[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(PlayerTalkingWith[playerid],9);
			SendClientMessage(playerid, COLOR_GREY, "Вы повесили трубку");
		}
		PlayerTalkingWith[playerid] = -1;
		PlayerTalkingWith[PlayerTalkingWith[playerid]] = -1;
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid,9);
		TalkingLive[playerid] = 255;
		TalkingLivels[playerid] = 255;
		TalkingLivelv[playerid] = 255;
		zvonok[playerid] = 0;
		return true;
	}
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new is1 = 0;
			new r = 0;
			while(strlen(cmdtext[is1]))
			{
				if('0' <= cmdtext[is1] <= '9')
				{
					new is2 = is1+1;
					new p = 0;
					while(p == 0)
					{
						if('0' <= cmdtext[is2] <= '9'&&strlen(cmdtext[is2])) is2++;
						else
						{
							strmid(strR[r],cmdtext,is1,is2,255);
							if(strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			new length = strlen(cmdtext);
			while((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/ad)vertise [текст]");
			if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата");
			new string[128];
	        if(Rekl[playerid] == 1 && strfind(cmdtext,"www",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext,".ru",true)!=-1
	 		|| Rekl[playerid] == 1 && strfind(cmdtext,".net",true)!=-1 || Rekl[playerid] == 1 && strfind(cmdtext,".com",true)!=-1
	 		|| Rekl[playerid] == 1 && strfind(cmdtext,"//htpp",true)!=-1
			|| Rekl[playerid] == 1 && strfind(cmdtext,"http",true)!=-1)
			{
   				format(string, sizeof(string),"В /ad | Игрок %s| ID %d| Текст: %s", PlayerInfo[playerid][pName], playerid, cmdtext);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return true;
			}
			if(PlayerInfo[playerid][pAdvertTime] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Сообщение можно отправить через 60 секунд");
	        if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Подать обьявление можно с 3 левела");
			if(gNews[playerid] == 1 && lNews[playerid] == 1 && LvNews[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Сначало включите радио");
			if(lNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LS NEWS",(result),addd[0]);
				ShowPlayerDialog(playerid,8454,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
			else if(gNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами SF NEWS",(result),addd[1]);
				ShowPlayerDialog(playerid,8455,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
			else if(LvNews[playerid] == 0)
			{
				ReportQ[playerid] = result;
				format(string,sizeof(string),"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %d вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LV NEWS",(result),addd[2]);
				ShowPlayerDialog(playerid,8456,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка",string,"Отправить","Отмена");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/duty", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 11)
		{
			if(!IsPlayerInRangeOfPoint(playerid,10,-2029.7878,-116.4905,1035.1719)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автошколе");
			new string[58];
			if(duty[playerid] == 0)
			{
				format(string, sizeof(string), "Инструктор %s приступил(а) к работе", PlayerInfo[playerid][pName]);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				duty[playerid] = 1;
			}
			else
			{
				format(string, sizeof(string), "Инструктор %s завершил(а) рабочий день", PlayerInfo[playerid][pName]);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				duty[playerid] = 0;
			}
		}
	}
	if(strcmp(cmd, "/time", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,0,0,0,0);
			new string[128];
            format(string, sizeof(string), "%s взглянул(а) на часы", PlayerInfo[playerid][pName]);
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            new mtext[20];
            new year, month,day;
            getdate(year, month, day);
            switch(month)
            {
				case 1: mtext = "Января";
				case 2: mtext = "Февраля";
				case 3: mtext = "Марта";
				case 4: mtext = "Апреля";
				case 5: mtext = "Мая";
				case 6: mtext = "Июня";
				case 7: mtext = "Июля";
				case 8: mtext = "Августа";
				case 9: mtext = "Сентября";
				case 10: mtext = "Октября";
				case 11: mtext = "Ноября";
				case 12: mtext = "Декабря";
			}
            new hour,minuite,second;
            gettime(hour,minuite,second);
            FixHour(hour);
            hour = shifthour;
            if(minuite < 10)
            {
                if(PlayerInfo[playerid][pJailTime] > 0)
                {
                    format(string, sizeof(string), "{33AA33}Дата:{FFFFFF} %d %s {33AA33}Время: {FFFFFF}%d:0%d {AA3333}Осталось времени в заключении:{FFFFFF} %d секунд(ы)", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
                    SendClientMessage(playerid,COLOR_WHITE, string);
                }
                else
                {
                    format(string, sizeof(string), "{33AA33}Дата:{FFFFFF} %d %s {33AA33}Время: {FFFFFF}%d:0%d", day, mtext, hour, minuite);
                    SendClientMessage(playerid,COLOR_WHITE, string);
                }
            }
            else
            {
                if(PlayerInfo[playerid][pJailTime] > 0)
				{
                    format(string, sizeof(string), "{33AA33}Дата:{FFFFFF} %d %s {33AA33}Время: {FFFFFF}%d:%d {AA3333}Осталось времени в заключении:{FFFFFF} %d секунд(ы)", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
                    SendClientMessage(playerid,COLOR_WHITE, string);
				}
                else
                {
                    format(string, sizeof(string), "{33AA33}Дата:{FFFFFF} %d %s {33AA33}Время: {FFFFFF}%d:%d", day, mtext, hour, minuite);
                    SendClientMessage(playerid,COLOR_WHITE, string);
                }
            }
        }
        return true;
    }
    if(strcmp(cmd, "/godmode", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 7) return true;
		switch(godmode[playerid])
		{
		    case 0:
			{
				SendClientMessage(playerid,COLOR_WHITE,"Режим бога включён");
				godmode[playerid] = 1;
				return true;
			}
			case 1:
			{
			    SendClientMessage(playerid,COLOR_WHITE,"Режим бога отключён");
				godmode[playerid] = 0;
				return true;
			}
  		}
	}
	if(strcmp(cmd, "/house", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /house [housenumber]");
			new housenum = strval(tmp);
			SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
			SetPlayerInterior(playerid,HouseInfo[housenum][hOint]);
            SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hVworld]);
			GameTextForPlayer(playerid, "~r~house teleport", 5000, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/chat", true) == 0 || strcmp(cmd, "/readchat", true) == 0 || strcmp(cmd, "/bigear", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 2)
	    {
			if(BigEar[playerid] == 0)
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы видите весь чат");
			}
			else if(BigEar[playerid] == 1)
			{
				BigEar[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Теперь вы не видите весь чат");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, " Использовать: /asellhouse [id дома]");
			new house = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				SendClientMessage(playerid, COLOR_WHITE, "Вы продали дом");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				return true;
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Вам недоступна данная команда");
		}
		return true;
	}
	else if(strcmp(cmd, "/gag", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY,"Вы должны быть 3 рангом");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "::: Введите: /gag [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
			if(gag[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже вставлен кляп");
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
			    new string[72];
				format(string, sizeof(string), "%s вставил(а) вам кляп в рот", PlayerInfo[playerid][pName]);
				SendClientMessage(giveplayerid, 0x6495EDFF, string);
				gag[giveplayerid] = 1;
				format(string, sizeof(string), "%s вставил(а) кляп в рот %s", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Человек не рядом с вами");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
		return true;
	}
	if(strcmp(cmd, "/gunoff", true) == 0 || strcmp(cmd, "/offgun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Введите: /gunoff [id]");
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Игрок не найден");
				new string[53];
				printf("AdmCmd:%s разоружил %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
				format(string, sizeof(string), "Вас разоружил администратор %s", PlayerInfo[playerid][pName]);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вы разоружили %s", PlayerInfo[giveplayerid][pName]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ResetPlayerWeapons(giveplayerid);
			}
			else SendClientMessage(playerid, COLOR_GRAD1, "У Вас нет прав для использования этой команды");
		}
		return true;
	}
	if(strcmp(cmd, "/recon", true) == 0 || strcmp(cmd, "/re", true) == 0)
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(IsPlayerConnected(playerid))
		    {
		    	new specid;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /re(con) [id]");
				specid = ReturnUser(tmp);
				if(specid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя наблюдать за самим собой");
				if(PlayerInfo[specid][pAdmin] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Наблюдение за администрацией запрещено");
				if(!IsPlayerConnected(specid) || specid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(GetPlayerState(specid) == PLAYER_STATE_SPECTATING && gSpectateID[specid] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Администратор в режиме наблюдения");
				if(GetPlayerState(specid) != 1 && GetPlayerState(specid) != 2 && GetPlayerState(specid) != 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не вступил в игру");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
     					if(PlayerInfo[i][pAdmin] >= 1) StartSpectate(playerid, specid);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/reoff", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
			StopSpectate(playerid);
			SpawnPlayer(playerid);
			SetPlayerWeapons(playerid);
		}
		return true;
	}
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: (/a)dmin [текст]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new string[128];
			format(string, sizeof(string), "[Администратор] %s[%d]: %s", PlayerInfo[playerid][pName], playerid,result);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/cnn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cnn [текст] (Формат текста ~n~ = новая строка ~r~ = красный ~g~ = зеленый ~b~ = синий ~w~ = белый ~y~ = желтый - цвета)");
			new string[256];
			format(string, sizeof(string), "~b~%s: ~w~%s", PlayerInfo[playerid][pName], result);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) GameTextForPlayer(i, string, 5000, 6);
			}
			return true;
		}
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			new txtid;
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cnnn [текст] [тип] (Формат текста ~n~ = новая строка ~r~ = красный ~g~ = зеленый ~b~ = синий ~w~ = белый ~y~ = желтый - цвета)");
			txtid = strval(tmp);
			if(txtid == 2) return SendClientMessage(playerid, COLOR_GREY, "Вы неможете выбрать 2");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cnnn [текст] [тип] (Формат текста ~n~ = новая строка ~r~ = красный ~g~ = зеленый ~b~ = синий ~w~ = белый ~y~ = желтый - цвета)");
			new string[256];
			format(string, sizeof(string), "~w~%s",result);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) == 1) GameTextForPlayer(i, string, 5000, txtid);
			}
			return true;
		}
	}
	if(strcmp(cmd, "/prison", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /prison [id] [минуты], /prison [id] 0 - вытащить из тюрьмы");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(!IsPlayerConnected(playa) || playa == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			new string[66];
			format(string, sizeof(string), "Вы посадили %s в тюрьму", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			DelGun(playa);
			SetPlayerInterior(playa, 6);
			SetPlayerPos(playa,264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(playa, 263.0160);
			PlayerInfo[playa][pMadWant] = 0;
			SetPlayerWantedLevel(playa, PlayerInfo[playa][pMadWant]);
			PlayerInfo[playa][pJailed] = 1;
			PlayerInfo[playa][pJailTime] = money*60;
			format(string, sizeof(string), "Вы были посажены в тюрьму администратором на %d минут(ы)", money);
			SendClientMessage(playa, COLOR_LIGHTRED, string);
		}
		return true;
	}
 if(strcmp(cmd, "/reklama", true) == 0 )
{
	if(IsPlayerConnected(playerid))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Введите{FFFFFF}: /reklama [ид]");
		giveplayerid = ReturnUser(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "Администратор не может быть забанен");
			new string[100];
			format(string, sizeof(string), "Администратор %s забанил(а) игрока %s. Причина: Реклама", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
			BanEx(giveplayerid, string);
		}
	}
	return true;
	}
	else if(strcmp(cmd, "/prefix", true) == 0)
    {
		if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14
		|| PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 15
		|| PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 15 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7)
		{
		    tmp = strtok(cmdtext, idx);
        	giveplayerid = ReturnUser(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /prefix [id] [Префикс]");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /prefix [id] [Префикс]");
            if(PlayerInfo[giveplayerid][pMember] == PlayerInfo[playerid][pMember])
			{
				tmp = strtok(cmdtext, idx);
				//format(string,sizeof(string),"[%s]",tmp);
				//PlayerInfo[giveplayerid][pPrefix] = string;
				new res[64];
				new string[128];
				format(res, sizeof(res), "[%s]", result);
				format(string, sizeof(string), "%s.ini", PlayerInfo[giveplayerid][pName]);
				new File = ini_openFile(string);
				ini_setString(File,"Prefix",res);
				ini_closeFile(File);
				format(string,sizeof(string),"Вы дали игроку %s префикс: %s",PlayerInfo[giveplayerid][pName],result);
				SendClientMessage(playerid,COLOR_BLUE,string);
				format(string,sizeof(string),"%s дал вам префикс: %s",PlayerInfo[playerid][pName],result);
				SendClientMessage(playerid,COLOR_BLUE,string);
			}
			else SendClientMessage(playerid,COLOR_WHITE,"Этот игрок не в вашей фракции");
		}

	}
    else if(strcmp(cmd, "/fire", true) == 0)
    {
      	if(PlayerInfo[playerid][pFirework] <= 0) { SendClientMessage(playerid, COLOR_GREY, "У вас нету фейерверка,купите в 24/7!"); return true; }
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
        GetPlayerPos(playerid,xsalut,ysalut,zsalut);
        salut[26] = CreateObject(964,xsalut,ysalut,zsalut,0.0,0.0,0.0)  ;
        salutik();
        PlayerInfo[playerid][pFirework] -=1;
        SetPlayerChatBubble(playerid, "запустил(а) фейерверк",COLOR_PURPLE,30.0,10000);
        return true;
    }
	if(strcmp(cmd, "/cheat", true) == 0 )
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Введите{FFFFFF}: /cheat [id]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "Администратор не может быть заварнен");
				new string[100];
				format(string, sizeof(string), "Администратор %s выдал(а) варн игроку %s. Причина: Читы",PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
				SendClientMessageToAll(COLOR_LIGHTRED,string);
				PlayerInfo[giveplayerid][pWarns] += 1;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/demorgan",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /demorgan [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			new string[90];
			format(string, sizeof(string), "Вы были посажены в тюрьму администратором %s", PlayerInfo[playerid][pName]);
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
			PlayerInfo[giveplayerid][pJailed] = 4;
			PlayerInfo[giveplayerid][pMadWant] = 0;
			SetPlayerWantedLevel(giveplayerid, 0);
			PlayerInfo[giveplayerid][pJailTime] = 3600;
			SetPlayerInterior(giveplayerid, 0);
			SetPlayerPos(giveplayerid,5508.3706,1244.7594,23.1886);
			DelGun(giveplayerid);
		}
	    return true;
	}
	if(strcmp(cmd, "/settime", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /settime [час] (0-23)");
			new hour;
			hour = strval(tmp);
			SetWorldTime(hour);
			new string[39];
			format(string, sizeof(string), "Время установлено на %d часов", hour);
			BroadCast(COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/invite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /invite [id]");
   			if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 13 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7
      		|| PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7
      		|| PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 9
        	|| PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2
         	|| PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 13
         	|| PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9
         	|| PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9
         	|| PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 5
         	|| PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9
         	|| PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5
         	|| PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 13 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7
       	 	|| IsABiker(playerid) && PlayerInfo[playerid][pRank] >= 8|| PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] >= 7
			|| PlayerInfo[playerid][pMember] == 34 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 35 && PlayerInfo[playerid][pRank] >= 7)
			{
				new para1 = ReturnUser(tmp);
				if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Неверный id игрока");
				if(GetDistanceBetweenPlayers(playerid, para1) > 5.0) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				if(IsPlayerInAnyVehicle(para1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
				if(PlayerInfo[para1][pWarns] > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока Warn");
				if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 7 && PlayerInfo[para1][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже где то состоит");
				new ftext[32];
				switch(PlayerInfo[playerid][pMember])
				{
				    case 1:
					{
						if(!IsAArm(para1) || IsAArm(para1) && PlayerInfo[para1][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не дослужился до перевода");
					 	ftext = "LSPD";
					}
				    case 2:
					{
                        if(!IsACop(para1) || IsACop(para1) && PlayerInfo[para1][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не дослужился до перевода");
				 		ftext = "FBI";
					}
				    case 3: ftext = "SFa";
				    case 4: ftext = "МЧС SF";
				    case 5: ftext = "La Coza Nostra";
				    case 6: ftext = "Yakuza";
				    case 7: ftext = "Мэрию";
				    case 8: ftext = "Casino Caligula";
				    case 9: ftext = "SF News";
				    case 10:
					{
                        if(!IsAArm(para1) || IsAArm(para1) && PlayerInfo[para1][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не дослужился до перевода");
					 	ftext = "SFPD";
					}
				    case 11: ftext = "Инструкторы";
				    case 12: ftext = "The Ballas Gang";
				    case 13: ftext = "Los Santos Vagos Gang";
				    case 14: ftext = "Russian Mafia";
				    case 15: ftext = "The Grove Street Gang";
				    case 16: ftext = "LS NEWS";
				    case 17: ftext = "Varios Los Aztecas Gang";
				    case 18: ftext = "The Rifa Gang";
				    case 19: ftext = "LVa";
				    case 20: ftext = "LV News";
				    case 21:
					{
                        if(!IsAArm(para1) || IsAArm(para1) && PlayerInfo[para1][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не дослужился до перевода");
					 	ftext = "LVPD";
					}
				    case 22: ftext = "МЧС LS";
				    case 23: ftext = "Sons of Silence MC";
				    case 24: ftext = "Hell's Angels MC";
				    case 25: ftext = "Outlaws MC";
				    case 26: ftext = "Warlocks MC";
				    case 27: ftext = "Highwaymen MC";
				    case 28: ftext = "Free Souls MC";
				    case 29: ftext = "Pagans MC";
				    case 30: ftext = "Mongols MC";
				    case 31: ftext = "Vagos MC";
				    case 32: ftext = "Bandidos MC";
				    case 33: ftext = "МЧС LV";
				    case 34: ftext = "Пожарное Депо";
				    case 35: ftext = "Наемники";
				}
				PlayerInfo[para1][pMember] = PlayerInfo[playerid][pMember];
				new string[128];
				format(string, sizeof(string), "Вы пригласили %s вступить в %s", PlayerInfo[para1][pName],ftext);
				SendClientMessage(playerid, COLOR_BLUE, string);
				format(string, sizeof(string), "{0080FF}Вас пригласил(а){ffffff} %s\n{0080FF}Вы согласны вступить в {ffffff}%s ",PlayerInfo[playerid][pName],ftext);
    			ShowPlayerDialog(para1,9901,DIALOG_STYLE_MSGBOX,"Приглашение",string,"Вступить","Отмена");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вы не уполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
		new para1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uninvite [id]");
		para1 = ReturnUser(tmp);
		if(para1 == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
    	new res[64];
    	new string[51];
		format(res, sizeof(res), "");
		format(string, sizeof(string), "%s.ini", PlayerInfo[playerid][pName]);
		new File = ini_openFile(string);
		ini_setString(File,"Prefix",res);
		ini_closeFile(File);
		if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7
		|| PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 15 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7
		|| PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 9
		|| PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2
		|| PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14
		|| PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9
		|| PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 10 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9
		|| PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 5
		|| PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9
		|| PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 15 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5
		|| PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7
		|| PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 8 || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] >= 8
		|| PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 8 || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] >= 8
		|| PlayerInfo[playerid][pMember] == 27 && PlayerInfo[playerid][pRank] >= 8 || PlayerInfo[playerid][pMember] == 28 && PlayerInfo[playerid][pRank] >= 8
		|| PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] >= 8 || PlayerInfo[playerid][pMember] == 30 && PlayerInfo[playerid][pRank] >= 8
		|| PlayerInfo[playerid][pMember] == 31 && PlayerInfo[playerid][pRank] >= 8 || PlayerInfo[playerid][pMember] == 32 && PlayerInfo[playerid][pRank] >= 8
		|| PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 34 && PlayerInfo[playerid][pRank] >= 7)
		{
		    if(PlayerInfo[playerid][pMember] != PlayerInfo[para1][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей фракции");
		    if(PlayerInfo[para1][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера");
			format(string, sizeof(string), "%s выгнал вас из организации", PlayerInfo[playerid][pName]);
			SendClientMessage(para1, 0x6495EDFF, string);
			format(string, sizeof(string), "Вы выгнали %s из организации", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SendClientMessage(para1, 0x6495EDFF, "Теперь вы снова гражданский");
			PlayerInfo[para1][pMember] = 0;
			PlayerInfo[para1][pLeader] = 0;
			PlayerInfo[para1][pRank] = 0;
			SetPlayerArmourAC(para1,0);
			DelGun(para1);
			PlayerInfo[para1][pForma] = 0;
			SetPlayerColor(para1, TEAM_HIT_COLOR);
			SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
			SpawnPlayer(para1);
		}
		return true;
	}
	if(strcmp(cmd, "/uval", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uval [id]");
			new para1;
			para1 = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[para1][pMember] > 0)
					{
					    new string[51];
						format(string, sizeof(string), "Вы выгнали %s из организации", PlayerInfo[para1][pName]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						SendClientMessage(para1, 0x6495EDFF, "Вас выгнали из организации. Теперь вы снова гражданский");
						if(PlayerInfo[playerid][pLeader] != 0)
						{
						    new iniFile = ini_openFile("gamefiles/log/leaders.ini");
						    switch(PlayerInfo[para1][pLeader])
						    {
						        case 1: ini_removeKey(iniFile, "LSPD");
						        case 2: ini_removeKey(iniFile, "FBI");
						        case 3: ini_removeKey(iniFile, "ARMY SF");
						        case 4: ini_removeKey(iniFile, "MEDICS SF");
						        case 5: ini_removeKey(iniFile, "LCN");
						        case 6: ini_removeKey(iniFile, "YAKUZA");
						        case 7: ini_removeKey(iniFile, "MARYA");
						        case 8: ini_removeKey(iniFile, "KAZINO");
						        case 9: ini_removeKey(iniFile, "SFN");
						        case 10: ini_removeKey(iniFile, "SFPD");
						        case 11: ini_removeKey(iniFile, "LICENSERS");
						        case 12: ini_removeKey(iniFile, "BALLAS");
						        case 13: ini_removeKey(iniFile, "VAGOS");
						        case 14: ini_removeKey(iniFile, "RM");
						        case 15: ini_removeKey(iniFile, "GROVE");
						        case 16: ini_removeKey(iniFile, "LSNEWS");
						        case 17: ini_removeKey(iniFile, "AZTEC");
						        case 18: ini_removeKey(iniFile, "RIFA");
						        case 19: ini_removeKey(iniFile, "ARMY LV");
						        case 20: ini_removeKey(iniFile, "LVNEWS");
						        case 21: ini_removeKey(iniFile, "LVPD");
						        case 22: ini_removeKey(iniFile, "LOS SANTOS MCHS");
						        case 23: ini_removeKey(iniFile, "SSMCBAYKER");
						        case 24: ini_removeKey(iniFile, "HAMCBAYKER");
						        case 25: ini_removeKey(iniFile, "OMCBAYKER");
						        case 26: ini_removeKey(iniFile, "WMCBAYKER");
						        case 27: ini_removeKey(iniFile, "HWMCBAYKER");
						        case 28: ini_removeKey(iniFile, "FSMCBAYKER");
						        case 29: ini_removeKey(iniFile, "PMCBAYKER");
						        case 30: ini_removeKey(iniFile, "MMCBAYKER");
						        case 31: ini_removeKey(iniFile, "VMCBAYKER");
						        case 32: ini_removeKey(iniFile, "BMCBAYKER");
						        case 33: ini_removeKey(iniFile, "MEDICS LV");
						        case 34: ini_removeKey(iniFile, "FFIGHTERS");
						        case 35: ini_removeKey(iniFile, "HITMANS");
							}
				    	    ini_closeFile(iniFile);
    						PlayerInfo[para1][pLeader] = 0;
					    }
						PlayerInfo[para1][pMember] = 0;
						PlayerInfo[para1][pRank] = 0;
						PlayerInfo[para1][pLeader] = 0;
						SetPlayerArmourAC(para1, 0);
						DelGun(para1);
						PlayerInfo[para1][pForma] = 0;
						SetPlayerColor(para1, TEAM_HIT_COLOR);
						SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						new res[64];
						format(res, sizeof(res), "");
						format(string, sizeof(string), "%s.ini", PlayerInfo[para1][pName]);
						new File = ini_openFile(string);
						ini_setString(File,"Prefix",res);
						ini_closeFile(File);
					}
				}
			}
  			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
		    if(IsPlayerConnected(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /makeadmin [playerid] [уровень(1-6)]");
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(level > 6 || level < 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 0 и больше 6");
						new string[82];
						format(string, sizeof(string), "Вы были продвинуты на уровень %d администратором %s", level, PlayerInfo[playerid][pName]);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы назначили %s администратором уровня %d", PlayerInfo[para1][pName],level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[para1][pAdmin] = level;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/geton", true) == 0||strcmp(cmd, "/online", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    new akk[24];
			akk = strtok(cmdtext, idx);
			if(!strlen(akk)) return SendClientMessage(playerid,COLOR_GREY, "Введите: /geton [аккаунт]");
			new string[71];
			format(string,sizeof(string), "%s.ini",akk);
			if(!fexist(string)) return SendClientMessage(playerid,COLOR_GREY, "Аккаунт не найден");
			else
			{
			    new stringi[20];
				new File = ini_openFile(string);
				ini_getString(File, "Online",stringi);
				ini_closeFile(File);
				format(string,sizeof(string), "Последний раз %s заходил(а) %s",akk, stringi);
				SendClientMessage(playerid,COLOR_GREEN,string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setpay", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов!");
		LoadZp();
		tmp = strtok(cmdtext, idx);
		new idf;
		idf = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new zp;
		zp = strval(tmp);
		switch(idf)
		{
		    case 1:
		    {
		        fraczp[0] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты ЛСПД изменено");
				SaveZp();
				return true;
		    }
		    case 2:
		    {
		        fraczp[1] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты FBI изменено");
				SaveZp();
				return true;
		    }
		    case 3:
		    {
		        fraczp[2] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты SFA изменено");
				SaveZp();
				return true;
		    }
		    case 4:
		    {
		        fraczp[3] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты MEDSF изменено");
				SaveZp();
				return true;
		    }
		    case 10:
		    {
                fraczp[9] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты СФПД изменено");
				SaveZp();
				return true;
		    }
		    case 11:
		    {
		        fraczp[10] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты инструкторов изменено");
				SaveZp();
				return true;
		    }
		    case 19:
		    {
		        fraczp[13] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты LVa изменено");
				SaveZp();
				return true;
		    }
		    case 21:
		    {
		    	fraczp[15] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты ЛВПД изменено");
				SaveZp();
				return true;
		    }
		    case 22:
		    {
		        fraczp[16] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты MEDLS изменено");
				SaveZp();
				return true;
		    }
		    case 33:
		    {
		        fraczp[17] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты MEDLV изменено");
				SaveZp();
				return true;
		    }
		    case 34:
		    {
		        fraczp[18] = zp;
		        SendClientMessage(playerid, COLOR_WHITE, "Наименьшее общее кратное зарплаты пожарной части изменено");
				SaveZp();
				return true;
		    }
		}
	}
	if(strcmp(cmd, "/getkaznamoney", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов!");
	    if(PlayerToPoint(3.0, playerid, 355.0265,197.2815,1008.3828))
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /getkaznamoney [кол-во денег]");
			new cena = strval(tmp);
			if(cena > 100000 || cena < 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять больше 100000");
			if(FracBank[0][fKazna] <= 10000000) return SendClientMessage(playerid, COLOR_GREY, "В штате кризис!");
			PlayerInfo[playerid][pCash] += cena;
			FracBank[0][fKazna] -= cena;
			new string[75];
			format(string,sizeof(string),"%s взял %d из казны штата,остаток %d",PlayerInfo[playerid][pName],cena,FracBank[0][fKazna]);
			SendRadioMessage(7, TEAM_CYAN_COLOR, string);
			return true;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Вы не у хранилища в мэрии");
	}
	if(strcmp(cmd, "/sethouseprice", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов!");
	    for(new b = 0; b < sizeof(HouseInfo); b++)
		{
			if(PlayerToPoint(3.0, playerid, HouseInfo[b][hEntrancex], HouseInfo[b][hEntrancey], HouseInfo[b][hEntrancey]) && HouseInfo[b][hVworld] == GetPlayerVirtualWorld(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethouseprice [цена]");
				new cena = strval(tmp);
				HouseInfo[b][hValue] = cena;
				new string[36];
				format(string, sizeof(string), "Цена дома %d: %d",b, cena);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			else SendClientMessage(playerid, COLOR_RED, "Рядом нет домов");
		}
		return true;
	}
	if(strcmp(cmd, "/setbizprice", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов!");
	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
			if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizprice [цена]");
				new cena = strval(tmp);
				BizzInfo[b][bBuyPrice] = cena;
				OnPropUpdate();
				new string[128];
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[b][bMessage],BizzInfo[b][bBuyPrice]);
				Update3DTextLabelText(SBizzInfo[b][sbLabel], 0xEAC700AA, string);
				format(string, sizeof(string), "Цена бизнеса: %d", cena);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Рядом нет бизнесов");
		}
		return true;
	}
	if(strcmp(cmd, "/setpension", true) == 0)
	{
  		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		LoadZp();
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setpension [значение] для установки пенсии,начисляемой раз в час сотрудникам с высоким рангом");
		new zp;
		zp = strval(tmp);
		Pension = zp;
		SendClientMessage(playerid, COLOR_WHITE, "Пенсия,причисляемая каждый час сотрудникам с высоким рангом,изменена");
		SaveZp();
		return true;
	}
	if(strcmp(cmd, "/sethousepaid", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		LoadZp();
		tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethousepaid [значение] для установки налога на дома");
		new zp;
		zp = strval(tmp);
		housepaid = zp;
		SendClientMessage(playerid, COLOR_WHITE, "Налог,берущийся у домовладельцев каждый час,изменён");
		SaveZp();
		return true;
	}
	if(strcmp(cmd, "/setbizpaid", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		LoadZp();
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbizpaid [значение] для установки налога на бизнес");
		new zp;
		zp = strval(tmp);
		bizpaid = zp;
		SendClientMessage(playerid, COLOR_WHITE, "Налог,берущийся у бизнесменов каждый час,изменён");
		SaveZp();
		return true;
	}
 	if(strcmp(cmd, "/setsbizpaid", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		LoadZp();
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsbizpaid [значение] для установки налога на заправки");
		new zp;
		zp = strval(tmp);
		sbizpaid = zp;
		SendClientMessage(playerid, COLOR_WHITE, "Налог,берущийся у владельцев заправок каждый час,изменён");
		SaveZp();
		return true;
	}
	if(strcmp(cmd, "/setworkshoppaid", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в мэрии");
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_WHITE, "Вы не губернатор и не мин.финансов");
		LoadZp();
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setworkshoppaid [значение] для установки налога на мастерские");
		new zp;
		zp = strval(tmp);
		workshoppaid = zp;
		SendClientMessage(playerid, COLOR_WHITE, "Налог,берущийся у владельцев автомастерских каждый час,изменён");
		SaveZp();
		return true;
	}
	if(strcmp(cmd, "/getleader", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /getleader [номер фракции]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new stat;
			stat = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				new string[60];
				switch (stat)
				{
					case 1:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LSPD",string);
						format(string, sizeof(string), "LSPD - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
						ini_closeFile(file);
					}
					case 2:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "FBI",string);
						format(string, sizeof(string), "FBI - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
						ini_closeFile(file);
					}
					case 3:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "ARMY SF",string);
						format(string, sizeof(string), "ARMY SF - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 4:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "MEDICS",string);
						format(string, sizeof(string), "SAN FIERRO MCHS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 5:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LCN",string);
						format(string, sizeof(string), "LCN - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 6:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "YAKUZA",string);
						format(string, sizeof(string), "YAKUZA - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 7:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
					    ini_getString(file, "MARYA",string);
					    format(string, sizeof(string), "GOVERMENT - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 8:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "KAZINO",string);
						format(string, sizeof(string), "CASINO CALIGULA - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 9:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "SFN",string);
						format(string, sizeof(string), "SFNEWS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 10:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "SFPD",string);
						format(string, sizeof(string), "SFPD - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 11:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LICENSERS",string);
						format(string, sizeof(string), "LICENSERS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 12:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "BALLAS",string);
						format(string, sizeof(string), "BALLAS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 13:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "VAGOS",string);
						format(string, sizeof(string), "VAGOS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 14:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "RM",string);
						format(string, sizeof(string), "RM - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 15:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "GROVE",string);
						format(string, sizeof(string), "GROVE - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 16:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LSNEWS",string);
						format(string, sizeof(string), "LSNEWS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 17:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "AZTEC",string);
						format(string, sizeof(string), "AZTEC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 18:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "RIFA",string);
						format(string, sizeof(string), "RIFA - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 19:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "ARMY LV",string);
						format(string, sizeof(string), "ARMY LV - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 20:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LVNEWS",string);
						format(string, sizeof(string), "LVNEWS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 21:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LVPD",string);
						format(string, sizeof(string), "LVPD - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 22:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "LOS SANTOS MCHS",string);
						format(string, sizeof(string), "LOS SANTOS MCHS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 23:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "SSMCBAYKER",string);
						format(string, sizeof(string), "Sons of Silence MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 24:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "HAMCBAYKER",string);
						format(string, sizeof(string), "Hell's Angels MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 25:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "OMCBAYKER",string);
						format(string, sizeof(string), "Outlaws MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 26:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "WMCBAYKER",string);
						format(string, sizeof(string), "Warlocks MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 27:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "HWMCBAYKER",string);
						format(string, sizeof(string), "Highwaymen MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 28:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "FSMCBAYKER",string);
						format(string, sizeof(string), "Free Souls MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 29:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "PMCBAYKER",string);
						format(string, sizeof(string), "Pagans MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 30:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "MMCBAYKER",string);
						format(string, sizeof(string), "Mongols MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 31:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "VMCBAYKER",string);
						format(string, sizeof(string), "Vagos MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 32:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "BMCBAYKER",string);
						format(string, sizeof(string), "Bandidos MC - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 33:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "MEDICS",string);
						format(string, sizeof(string), "LAS VENTURAS MCHS - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					case 34:
					{
						new file = ini_openFile("gamefiles/log/leaders.ini");
						ini_getString(file, "FFIGHTERS",string);
						format(string, sizeof(string), "Пожарное Депо - %s", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
			   			ini_closeFile(file);
					}
					default: SendClientMessage(playerid, COLOR_WHITE, "Ошибка");
				}
			}
		}
		return true;
	}
	else if(strcmp(cmd, "/offleaders", true) == 0)
    {
		new stri[1024];
        new file = ini_openFile("gamefiles/log/leaders.ini");
        ini_getString(file,"MARYA",pLeaders[0]);
        ini_getString(file,"FBI",pLeaders[1]);
        ini_getString(file,"LSPD",pLeaders[2]);
        ini_getString(file,"SFPD",pLeaders[3]);
        ini_getString(file,"LVPD",pLeaders[4]);
        ini_getString(file,"ARMY LV",pLeaders[5]);
        ini_getString(file,"ARMY SF",pLeaders[6]);
        ini_getString(file,"LOS SANTOS MCHS",pLeaders[7]);
        ini_getString(file,"MEDICS SF",pLeaders[8]);
        ini_getString(file,"MEDICS LV",pLeaders[9]);
        ini_getString(file,"FFIGHTERS",pLeaders[10]);
        ini_getString(file,"LICENSERS",pLeaders[11]);
        ini_getString(file,"LSNEWS",pLeaders[12]);
        ini_getString(file,"SFN",pLeaders[13]);
        ini_getString(file,"LVNEWS",pLeaders[14]);
        ini_getString(file,"RIFA",pLeaders[15]);
        ini_getString(file,"GROVE",pLeaders[16]);
        ini_getString(file,"AZTEC",pLeaders[17]);
        ini_getString(file,"VAGOS",pLeaders[18]);
        ini_getString(file,"BALLAS",pLeaders[19]);
        ini_getString(file,"YAKUZA",pLeaders[20]);
        ini_getString(file,"LCN",pLeaders[21]);
        ini_getString(file,"RM",pLeaders[22]);
        ini_getString(file,"SSMCBAYKER",pLeaders[23]);
        ini_getString(file,"HAMCBAYKER",pLeaders[24]);
        ini_getString(file,"OMCBAYKER",pLeaders[25]);
        ini_getString(file,"WMCBAYKER",pLeaders[26]);
        ini_getString(file,"HWMCBAYKER",pLeaders[27]);
        ini_getString(file,"FSMCBAYKER",pLeaders[28]);
        ini_getString(file,"PMCBAYKER",pLeaders[29]);
        ini_getString(file,"MMCBAYKER",pLeaders[30]);
        ini_getString(file,"VMCBAYKER",pLeaders[31]);
        ini_getString(file,"BMCBAYKER",pLeaders[32]);
        format(stri, sizeof(stri), "Мэрия: \t\t%s\nFBI: \t\t\t%s\nLSPD: \t\t\t%s\nSFPD: \t\t\t%s\nLVPD: \t\t\t%s\nЗона 51: \t\t%s\nАвианосец: \t\t%s\nМЧС LS: \t\t%s\nМЧС SF: \t\t%s\nМЧС LV: \t\t%s\nПожарное Депо: \t%s\nИнструкторы: \t\t%s\nLS News: \t\t%s\nSF News: \t\t%s", pLeaders[0], pLeaders[1], pLeaders[2], pLeaders[3], pLeaders[4], pLeaders[5], pLeaders[6], pLeaders[7], pLeaders[8], pLeaders[9], pLeaders[10], pLeaders[11], pLeaders[12], pLeaders[13]);
        format(stri, sizeof(stri), "%s\nLV News: \t\t%s\nThe Rifa: \t\t%s\nThe Grove: \t\t%s\nAztekas: \t\t%s\nThe Vagos: \t\t%s\nThe Ballas: \t\t%s\nYakuza: \t\t%s\nLCN: \t\t\t%s\nRussian Mafia: \t%s\nSons of Silence MC: \t%s\nHell's Angels MC: \t%s",stri, pLeaders[14], pLeaders[15], pLeaders[16], pLeaders[17], pLeaders[18], pLeaders[19],pLeaders[20],pLeaders[21],pLeaders[22], pLeaders[23], pLeaders[24]);
        format(stri, sizeof(stri), "%s\nOutlaws MC: \t\t%s\nWarlocks MC: \t\t%s\nHighwaymen MC: \t%s\nFree Souls MC: \t%s\nPagans MC: \t\t%s\nMongols MC: \t\t%s\nVagos MC: \t\t%s\nBanditos MC: \t\t%s\n",stri, pLeaders[25], pLeaders[26], pLeaders[27], pLeaders[28], pLeaders[29], pLeaders[30],pLeaders[31],pLeaders[32]);
        ShowPlayerDialog(playerid,8822,DIALOG_STYLE_MSGBOX,"Лидеры",stri,"Выход","");
        ini_closeFile(file);
        return true;
    }
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /makeleader [id] [Номер(1 - 35)]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level < 1 || level > 35) return SendClientMessage(playerid, COLOR_RED, "Нельзя меньше 1 и больше 35");
			if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Неверный id игрока");
			if(PlayerInfo[para1][pWarns] >= 1) return SendClientMessage(playerid, COLOR_RED, "У игрока Warn");
			PlayerInfo[para1][pLeader] = level;
			PlayerInfo[para1][pMember] = level;
			PlayerInfo[para1][pJob] = 0;
			new string[128];
			format(string, sizeof(string), "Администратор: %s назначил вас контролировать данную фракцию", PlayerInfo[playerid][pName]);
			SendClientMessage(para1, 0x6495EDFF, string);
			format(string, sizeof(string), "Вы назначили %s контролировать фракцию номер %d", PlayerInfo[para1][pName],level);
			SendClientMessage(playerid, 0x6495EDFF, string);
			SendClientMessage(para1, COLOR_REDD, "Для просмотра всех команд зайдите в /mm=>Команды сервера=>Мои команды и команды лидера");
			OldSkin[playerid] = GetPlayerSkin(playerid);
			new iniFile = ini_openFile("gamefiles/log/leaders.ini");
			switch(level)
			{
				case 1:
				{
				    PlayerInfo[para1][pRank] = 15;
				    if(PlayerInfo[para1][pAdmin] ==0)
				    {
						ini_removeKey(iniFile, "LSPD");
						ini_setString(iniFile, "LSPD",PlayerInfo[para1][pName]);
					}
				}
				case 2:
				{
				    PlayerInfo[para1][pRank] = 8;
				    if(PlayerInfo[para1][pAdmin] ==0)
				    {
						ini_removeKey(iniFile, "FBI");
						ini_setString(iniFile, "FBI",PlayerInfo[para1][pName]);
					}
				}
				case 3:
				{
				    PlayerInfo[para1][pRank] = 16;
				    if(PlayerInfo[para1][pAdmin] ==0)
				    {
						ini_removeKey(iniFile, "ARMY SF");
						ini_setString(iniFile, "ARMY SF",PlayerInfo[para1][pName]);
					}
				}
				case 4:
				{
				    PlayerInfo[para1][pRank] = 8;
				    if(PlayerInfo[para1][pAdmin] ==0)
				    {
						ini_removeKey(iniFile, "MEDICS SF");
						ini_setString(iniFile, "MEDICS SF",PlayerInfo[para1][pName]);
					}
				}
				case 5:
				{
				    PlayerInfo[para1][pRank] = 10;
				    if(PlayerInfo[para1][pAdmin] ==0)
				    {
						ini_removeKey(iniFile, "LCN");
						ini_setString(iniFile, "LCN",PlayerInfo[para1][pName]);
					}
				}
				case 6:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "YAKUZA");
						ini_setString(iniFile, "YAKUZA",PlayerInfo[para1][pName]);
					}
				}
				case 7:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "MARYA");
						ini_setString(iniFile, "MARYA",PlayerInfo[para1][pName]);
					}
				}
				case 8:
				{
				    PlayerInfo[para1][pRank] = 2;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "KAZINO");
						ini_setString(iniFile, "KAZINO",PlayerInfo[para1][pName]);
					}
				}
				case 9:
				{
				    PlayerInfo[para1][pRank] = 6;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "SFN");
						ini_setString(iniFile, "SFN",PlayerInfo[para1][pName]);
					}
				}
				case 10:
				{
				    PlayerInfo[para1][pRank] = 15;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "SFPD");
						ini_setString(iniFile, "SFPD",PlayerInfo[para1][pName]);
					}
				}
				case 11:
				{
				    PlayerInfo[para1][pRank] = 8;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "LICENSERS");
						ini_setString(iniFile, "LICENSERS",PlayerInfo[para1][pName]);
					}
				}
				case 12:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "BALLAS");
						ini_setString(iniFile, "BALLAS",PlayerInfo[para1][pName]);
					}
				}
				case 13:
				{
				    PlayerInfo[para1][pRank] = 11;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "VAGOS");
						ini_setString(iniFile, "VAGOS",PlayerInfo[para1][pName]);
					}
				}
				case 14:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "RM");
						ini_setString(iniFile, "RM",PlayerInfo[para1][pName]);
					}
				}
				case 15:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "GROVE");
						ini_setString(iniFile, "GROVE",PlayerInfo[para1][pName]);
					}
				}
				case 16:
				{
                    PlayerInfo[para1][pRank] = 6;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "LSNEWS");
						ini_setString(iniFile, "LSNEWS",PlayerInfo[para1][pName]);
					}
				}
				case 17:
				{
				    PlayerInfo[para1][pRank] = 10;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "AZTEC");
						ini_setString(iniFile, "AZTEC",PlayerInfo[para1][pName]);
					}
				}
				case 18:
				{
				    PlayerInfo[para1][pRank] = 10;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "RIFA");
						ini_setString(iniFile, "RIFA",PlayerInfo[para1][pName]);
					}
				}
				case 19:
				{
				    PlayerInfo[para1][pRank] = 16;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "ARMY LV");
						ini_setString(iniFile, "ARMY LV",PlayerInfo[para1][pName]);
					}
				}
				case 20:
				{
				    PlayerInfo[para1][pRank] = 6;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "LVNEWS");
						ini_setString(iniFile, "LVNEWS",PlayerInfo[para1][pName]);
					}
				}
				case 21:
				{
				    PlayerInfo[para1][pRank] = 15;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "LVPD");
						ini_setString(iniFile, "LVPD",PlayerInfo[para1][pName]);
					}
				}
				case 22:
				{
				    PlayerInfo[para1][pRank] = 8;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "LOS SANTOS MCHS");
						ini_setString(iniFile, "LOS SANTOS MCHS",PlayerInfo[para1][pName]);
					}
				}
				case 23:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "SSMCBAYKER");
						ini_setString(iniFile, "SSMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 24:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "HAMCBAYKER");
						ini_setString(iniFile, "HAMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 25:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "OMCBAYKER");
						ini_setString(iniFile, "OMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 26:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "WMCBAYKER");
						ini_setString(iniFile, "WMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 27:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "HWMCBAYKER");
						ini_setString(iniFile, "HWMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 28:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "FSMCBAYKER");
						ini_setString(iniFile, "FSMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 29:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "PMCBAYKER");
						ini_setString(iniFile, "PMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 30:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "MMCBAYKER");
						ini_setString(iniFile, "MMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 31:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "VMCBAYKER");
						ini_setString(iniFile, "VMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 32:
				{
				    PlayerInfo[para1][pRank] = 9;
					PlayerInfo[para1][pBisIn] = -1;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "BMCBAYKER");
						ini_setString(iniFile, "BMCBAYKER",PlayerInfo[para1][pName]);
					}
				}
				case 33:
				{
				    PlayerInfo[para1][pRank] = 8;
					if(PlayerInfo[para1][pAdmin] ==0)
					{
						ini_removeKey(iniFile, "MEDICS LV");
						ini_setString(iniFile, "MEDICS LV",PlayerInfo[para1][pName]);
					}
				}
				case 34:
				{
				    PlayerInfo[para1][pRank] = 8;
				 	if(PlayerInfo[para1][pAdmin] ==0)
				 	{
				 		ini_removeKey(iniFile, "FFIGHTERS");
			 			ini_setString(iniFile, "FFIGHTERS",PlayerInfo[para1][pName]);
					}
				}
				case 35:
				{
				    PlayerInfo[para1][pRank] = 8;
					if(PlayerInfo[para1][pAdmin] == 0)
					{
						ini_removeKey(iniFile, "HITMANS");
						ini_setString(iniFile, "HITMANS",PlayerInfo[para1][pName]);
					}
				}
			}
			ini_closeFile(iniFile);
			PlayerInfo[para1][pForma] = level;
			InviteMan[para1] = 1;
			ShowMenuToPlayer(1, para1);
			SetPlayerArmourAC(para1, 0);
			SetPlayerHealthAC(para1, 100);
			PlayerInfo[para1][pHP] = 100;
			format(string, 128, "%s make %s to leader fract %d | ", PlayerInfo[playerid][pName], PlayerInfo[para1][pName], level);
			AdmLog(string);
			DelGun(para1);
		}
		return true;
	}
	if(strcmp(cmd, "/giverank", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return    SendClientMessage(playerid, COLOR_WHITE, "Введите: /giverank [id] [ранг]");
        new para1;
        new level;
        para1 = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        level = strval(tmp);
        if(!IsPlayerConnected(para1) || para1 == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Неверный id игрока");
        if(para1 == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
        if(PlayerInfo[playerid][pMember] != 7 && PlayerInfo[playerid][pRank] <= 9 || PlayerInfo[playerid][pMember] != 7 && PlayerInfo[playerid][pRank] != 6)
        {
        	if(PlayerInfo[playerid][pMember] != PlayerInfo[para1][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в вашей фракции");
		}
        if(PlayerInfo[para1][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы указали ID лидера");
		switch(PlayerInfo[playerid][pMember])
		{
		    case 3,19: if(level > 15 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 15");
		    case 1,10,21: if(level > 14 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 14");
		    case 13: if(level > 10 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10");
		    case 5,7,12,15,17,18: if(level > 9 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9");
		    case 23..32: if(level > 8 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 8");
		    case 2,4,11,14,22,33..35: if(level > 7 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 7");
		    case 9,16,20: if(level > 5 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 5");
		    case 8: if(level > 2 || level < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 2");
		}
		if(PlayerInfo[para1][pRank] == level) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже на этом ранге");
        if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 15 || PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >= 9
        || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 6
        || PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >= 2 || PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >= 5
        || PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >= 14 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >= 10
        || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] >= 9
        || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] >= 9
        || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] >= 9 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] >= 15
        || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 14
        || PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 23 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 24 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 25 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 26 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 27 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 28 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 29 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 30 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 21 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 32 && PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] >= 7
        || PlayerInfo[playerid][pMember] == 34 &&PlayerInfo[playerid][pRank] >= 7 || PlayerInfo[playerid][pMember] == 35 &&PlayerInfo[playerid][pRank] >= 7)
        {
            if(PlayerInfo[para1][pRank] > 5 && PlayerInfo[para1][pMember] == 7 && PlayerInfo[playerid][pRank] == 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете повышать/понижать министров и прокурора");
            new string[62];
			if(PlayerInfo[para1][pRank] < level)
   			{
   			    if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 6) return SendClientMessage(playerid, COLOR_RED, "Вы не можете повышать");
      			PlayerInfo[para1][pRank] = level;
        		format(string, sizeof(string), "Вы были повышены до %d ранга %s",level, PlayerInfo[playerid][pName]);
        		SendClientMessage(para1, 0x6495EDFF, string);
        		format(string, sizeof(string), "Вы повысили %s до %d ранга.", PlayerInfo[para1][pName],level);
        		SendClientMessage(playerid, 0x6495EDFF, string);
          	}
          	else
           	{
           	    if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 6 && PlayerInfo[para1][pMember] == 7) return SendClientMessage(playerid, COLOR_RED, "Вы не можете понижать сотрудников мэрии");
            	PlayerInfo[para1][pRank] = level;
             	format(string, sizeof(string), "Вы были понижены до %d ранга %s",level, PlayerInfo[playerid][pName]);
            	SendClientMessage(para1, 0x6495EDFF, string);
            	format(string, sizeof(string), "Вы понизили %s до %d ранга.", PlayerInfo[para1][pName],level);
            	SendClientMessage(playerid, 0x6495EDFF, string);
            }
        }
        return true;
    }
	if(strcmp(cmd, "/agiverank", true) == 0 || strcmp(cmd, "/setrank", true) == 0)
    {
 		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /agiverank [id игрока] [уровень (0 - 21)]");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 21 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 0 и больше 21"); return true; }
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
				    new string[66];
					PlayerInfo[para1][pRank] = level;
					format(string, sizeof(string), "Вы были повышены в ранге администратором %s", PlayerInfo[playerid][pName]);
					SendClientMessage(para1, COLOR_LIGHTRED, string);
 					format(string, sizeof(string), "Вы повысили %s до %d ранга", PlayerInfo[para1][pName],level);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
			}
		}
        return true;
    }
	if(strcmp(cmd, "/teleport", true) == 0 || strcmp(cmd, "/tp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new listitems[] = "Автовокзал LS\nАвтовокзал SF\nАвтовокзал LV\nАвтошкола\nAdmin деревня\nАэропорт LS\nАэропорт SF\nАэропорт LV\nAmmo LS\nVinewood\nНебоскрёб\nГетто\nМэрия\nБанк LS\nБанк SF\nCasino Bellagio\nТюрьма\nАвтомастерская LS\nАвтомастерская SF\nАвтомастерская LV\nPaintball\nМотогонки\nDerby\nГонки\nАвтопарк\nРабота грузчика";
			ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Teleport List", listitems, "Выбрать", "Закрыть");
		}
		return true;
	}
	if(strcmp(cmd, "/setmypos", true) == 0 || strcmp(cmd, "/smp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, " /setmypos [ координата x ] [ координата y ] [ координата z ]");
		new Float:X = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmypos [ координата x ] [ координата y ] [ координата z ]");
		new Float:Y = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmypos [ координата x ] [ координата y ] [ координата z ]");
		new Float:Z = floatstr(tmp);
		SetPlayerPos(playerid, X, Y, Z);
		return true;
	}
	if(strcmp(cmd, "/getmypos", true) == 0 || strcmp(cmd, "/gmp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		new string[50];
		format(string,sizeof(string),"Вы находитесь на %f, %f, %f",X,Y,Z);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return true;
	}
	if(strcmp(cmd, "/fme", true) == 0 || strcmp(cmd, "/freezeme", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		TogglePlayerControllable(playerid, 0);
		SendClientMessage(playerid, COLOR_WHITE, "Вы были заморожены");
		return true;
	}
	if(strcmp(cmd, "/unfme", true) == 0 || strcmp(cmd, "/unfreezeme", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_WHITE, "Вы были разморожены");
		return true;
	}
	if(strcmp(cmd, "/moveme", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		new Float:MMX, Float:MMY, Float:MMZ;
        GetPlayerPos(playerid, MMX, MMY, MMZ);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, " /moveme [ смещение x ] [ смещение y ] [ смещение z ]");
		new Float:X = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmypos [ смещение x ] [ смещение y ] [ смещение z ]");
		new Float:Y = floatstr(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmypos [ смещение x ] [ смещение y ] [ смещение z ]");
		new Float:Z = floatstr(tmp);
		SetPlayerPos(playerid,MMX += X,MMY += Y,MMZ += Z);
		return true;
	}
	if(strcmp(cmd, "/setgravity", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, " /setgravity [ Гравитация,стандарт 0.08 ]");
		new Float:G = floatstr(tmp);
  		SetGravity(G);
		return true;
	}
	if(strcmp(cmd, "/teleportf", true) == 0 || strcmp(cmd, "/tpf", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
			new listitems[] = "[1]\tLSPD\n[2]\tFBI\n[3]\tАрмия SFa\n[4]\tМЧС SF\n[5]\tLa Cosa Nostra\n[6]\tYakuza\n[7]\tМэрия\n[8]\tCasino Bellagio\n[9]\tSF News\n[10]\tSFPD\n[11]\tИнструкторы\n[12]\tThe Ballas Gang\n[13]\tLos Santos Vagos\n[14]\tRussian Mafia\n[15]\tThe Grove Street Gang\n[16]\tLS News\n[17]\tVarious Los Aztekas Gang\n[18]\tThe Rifa Gang\n[19]\tАрмия LVa\n[20]\tLV News\n[21]\tLVPD(S.W.A.T)\n[22]\tМЧС LS\n[33]\tМЧС ЛВ\n[34]\tПожарное депо\n[35]\tНаёмники";
			ShowPlayerDialog(playerid, 19000, DIALOG_STYLE_LIST, "Teleport List", listitems, "Выбрать", "Закрыть");
		}
		return true;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_WHITE, "Точка телепортирования установлена");
		}
		return true;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
			SetPlayerInterior(playerid, 0);
		}
		return true;
	}
	if(strcmp(cmd, "/goto", true) == 0 || strcmp(cmd, "/g", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new specid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /g(oto) [id]");
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(specid != 255) specid = 256;
					if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не вступил в игру");
					if(GetPlayerState(plo) == PLAYER_STATE_SPECTATING && gSpectateID[plo] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Админ в режиме наблюдения");
					GetPlayerPos(plo, plocx, plocy, plocz);
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						SetPlayerPos(playerid,plocx,plocy+2, plocz);
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
						SetPlayerInterior(playerid, GetPlayerInterior(plo));
					}
					SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/get",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[30];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /get [значение] Доступные значения: guns, drugs, fuel");
			if(strcmp(x_job, "weather",true) == 0)
			{
				switch(PlayerInfo[playerid][pMember])
				{
				    case 9,16,20:
				    {
						new Float:wx,Float:wy,Float:wz,windcourse[32],tweather[32];
						if(synopticend == 0)
						{
						 	pressure = random(80)+700;
					 		tc = random(20)+15; wind = random(6);
					 		humidity = random(50)+20;
					 		synopticend = 1;
						}
						switch(wind)
						{
						    case 0: windcourse = "северный";
						    case 1: windcourse = "северо-восточный";
						    case 2: windcourse = "юго-восточный";
						    case 3: windcourse = "южный";
						    case 4: windcourse = "юго-западный";
						    case 5: windcourse = "северо-западный";
						}
						switch(nextweather)
						{
						    case 0: tweather = "солнечно";
						    case 1: tweather = "дождь";
						    case 2: tweather = "туман";
						    case 3: tweather = "буря";
						    case 4: tweather = "облачно";
						}
						GetPlayerPos(playerid,wx,wy,wz);
						if(wz < 80) return SendClientMessage(playerid, COLOR_GREY, "Метеозонд нужно запускать снаружи на высоте 80 и более метров");
						if(GetPlayerVirtualWorld(playerid) > 0 || GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Метеозонд нужно запускать снаружи на высоте 80 и более метров");
      					ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,0,1,0,0);
						SetPlayerAttachedObject(playerid,9,18875,6,0.08,0.08,0.03,100,240.0,10,1.0,1.0,1.0);
						SetPlayerChatBubble(playerid, "запускает метеозонд",COLOR_PURPLE,10.0,10000);
						new string[128];
						format(string,sizeof(string),"Информация с метеозонда: 'Будет %s,давление:%dмм рт.ст.,температура:%d,ветер %s,влажность:%d процентов'",tweather,pressure,tc,windcourse,humidity);
						SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_BLUE, string);
						return true;
				    }
				}
			}
			else if(strcmp(x_job, "fuel",true) == 0)
			{
 				for(new b = 0; b < sizeof(SBizzInfo); b++)
				{
					if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
					{
						if(SBizzInfo[b][sbLocked] == 2) return SendClientMessage(playerid, COLOR_GREY, "Заправка закрыта");
						if(PlayerInfo[playerid][pFuel] != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть канистра");
						if(PlayerInfo[playerid][pCash] < SBizzInfo[b][sbPriceProd]) return SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег!");
	    				SBizzInfo[b][sbTill] += SBizzInfo[b][sbPriceProd]/2;
						PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd]/2;
						SBizzInfo[b][sbProducts] -= 20;
						new string[48];
					    format(string, sizeof(string), "Вы купили 20 литров бензина за %d вирт",SBizzInfo[b][sbPriceProd]/2);
					    SendClientMessage(playerid, 0x6495EDFF, string);
					    PlayerInfo[playerid][pFuel] = 1;
			 	        PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd]/2;
			 	        return true;
					}
				}
				return true;
			}
			else if(strcmp(x_job, "drugs",true) == 0)
			{
				if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит!");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /get drugs [количество]");
				if(PlayerToPoint(3.0,playerid,322.1280,1118.8314,1083.8828))//Бандиты могут покупать из личного дома!
				{
					if(PlayerInfo[playerid][pCash] < 150) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
					new ammo;
					ammo = strval(tmp);
					if(PlayerInfo[playerid][pDrugs] >= 150) return SendClientMessage(playerid, COLOR_GREY, "Нельзя купить больше");
					if(ammo > 150 || ammo < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 150!");
					if(PlayerInfo[playerid][pCash] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					PlayerInfo[playerid][pCash] -= ammo*20;
					PlayerInfo[playerid][pDrugs] += ammo;
					new string[128];
					format(string, sizeof(string), "Вы купили %d грамм наркотиков за %d вирт (У вас есть %d грамм)", ammo, ammo*20, PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, 0x6495EDFF, string);
				}
				else SendClientMessage(playerid, COLOR_GREY, "Вы не в притоне");
				return true;
			}
			else if(strcmp(x_job,"guns",true) == 0 || strcmp(x_job,"mats",true) == 0 || strcmp(x_job,"materials",true) == 0 )
			{
				if(IsAGang(playerid) || IsABiker(playerid))
				{
					new numberof;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /get guns [кол-во]");
					numberof = strval(tmp);
					if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
					if((PlayerInfo[playerid][pMaterials] + numberof) > 500) return SendClientMessage(playerid, COLOR_GREY,"Нельзя взять больше");
					if(numberof < 1 || numberof > 500) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять меньше 1 и больше 500 материалов");
					if(IsAGang(playerid) || IsABiker(playerid))
					{
						PlayerInfo[playerid][pMaterials] += numberof;
						if(PlayerInfo[playerid][pMember] == 12)
						{
							if(ballasmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); ballasmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 13)
						{
							if(vagosmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); vagosmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 15)
						{
							if(groovmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); groovmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 17)
						{
							if(aztekmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); aztekmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 18)
						{
							if(rifamatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); rifamatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 23)
						{
							if(ssmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); ssmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 24)
						{
							if(hamcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); hamcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 25)
						{
							if(omcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); omcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 26)
						{
							if(wmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); wmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 27)
						{
							if(hwmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); hwmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 28)
						{
							if(fsmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); fsmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 29)
						{
							if(pmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); pmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 30)
						{
							if(mmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); mmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 31)
						{
							if(vmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); vmcmatbi -= numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 32)
						{
							if(bmcmatbi <= 0) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов"); bmcmatbi -= numberof;
						}
						new string[41];
						format(string, sizeof(string), "У вас %d/500 материалов с собой", PlayerInfo[playerid][pMaterials]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SaveMaterials();
						return true;
					}
					else SendClientMessage(playerid,COLOR_GREY,"Вы не бандит");
				}
				else SendClientMessage(playerid,COLOR_GREY,"Вы не бандит");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/put",true)==0)
	{
        if(IsPlayerConnected(playerid))
	    {
			new x_job[30];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /put guns [кол-во]");
            if(strcmp(x_job,"guns",true) == 0)
			{
				if(IsAGang(playerid) || IsABiker(playerid))
				{
					new numberof;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /put guns [кол-во]");
					numberof = strval(tmp);
					if(!IsATerra(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей базе");
					if((PlayerInfo[playerid][pMaterials] - numberof) < 0) return SendClientMessage(playerid, COLOR_GREY,"У вас нет столько материалов!");
					if(numberof < 1 || numberof > 500) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете положить меньше 1 и больше 500 материалов");
					if(IsAGang(playerid) || IsABiker(playerid))
					{
						PlayerInfo[playerid][pMaterials] -= numberof;
						if(PlayerInfo[playerid][pMember] == 12)
						{
							if(ballasmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); ballasmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 13)
						{
							if(vagosmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); vagosmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 15)
						{
							if(groovmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); groovmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 17)
						{
							if(aztekmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); aztekmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 18)
						{
							if(rifamatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); rifamatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 23)
						{
							if(ssmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); ssmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 24)
						{
							if(hamcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); hamcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 25)
						{
							if(omcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); omcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 26)
						{
							if(wmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); wmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 27)
						{
							if(hwmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); hwmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 28)
						{
							if(fsmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); fsmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 29)
						{
							if(pmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); pmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 30)
						{
							if(mmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); mmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 31)
						{
							if(vmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); vmcmatbi += numberof;
						}
						else if(PlayerInfo[playerid][pMember] == 32)
						{
							if(bmcmatbi <= 50000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон"); bmcmatbi += numberof;
						}
						new string[48];
						format(string, sizeof(string), "Теперь у вас %d/500 материалов с собой", PlayerInfo[playerid][pMaterials]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SaveMaterials();
						return true;
					}
					else SendClientMessage(playerid,COLOR_GREY,"Вы не бандит и не байкер");
				}
				else SendClientMessage(playerid,COLOR_GREY,"Вы не бандит и не байкер");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/fillcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pFuel] != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет канистры");
     		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
     		if(Fuell[vehicleid] >= 85) return SendClientMessage(playerid,COLOR_GREY, "У вас полный бак");
			SendClientMessage(playerid, 0x6495EDFF, "Вы заправили ваш автомобиль 20 литрами бензина");
			Fuell[vehicleid] += 20;
			PlayerInfo[playerid][pFuel] = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/gethere", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gethere [id]");
	  		new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			new inter = GetPlayerInterior(playerid);
			new worldd = GetPlayerVirtualWorld(playerid);
			plo = ReturnUser(tmp);
			if(IsPlayerConnected(plo))
			{
				if(plo != INVALID_PLAYER_ID)
				{
					if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return	SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизирован");
					GetPlayerPos(playerid, plocx, plocy, plocz);
					if(PlayerInfo[playerid][pInt] > 0)
					{
						SetPlayerInterior(plo,inter);
						PlayerInfo[plo][pInt] = inter;
						PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerVirtualWorld(plo,worldd);
					}
					if(PlayerInfo[playerid][pInt] == 0)
					{
						SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
						SetPlayerInterior(plo,inter);
						SetPlayerVirtualWorld(plo,worldd);
					}
					if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0)
					{
						SetPlayerInterior(plo,inter);
						PlayerInfo[plo][pInt] = inter;
					}
					if(GetPlayerState(plo) == 2)
					{
						TelePos[plo][0] = 0.0;
						TelePos[plo][1] = 0.0;
						SetPlayerInterior(plo,inter);
						new tmpcar = GetPlayerVehicleID(plo);
						SetPlayerVirtualWorld(plo,worldd);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					}
					else
					{
						SetPlayerPos(plo,plocx,plocy+2, plocz);
						SetPlayerInterior(plo,inter);
						SetPlayerVirtualWorld(plo,worldd);
					}
					SendClientMessage(plo, COLOR_WHITE, "Вас телепортировал к себе администратор NextAgeRP");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/givegun", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givegun [id] [id оружия] [патроны]");
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /givegun [id] [id оружия] [патроны]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo < 1 ||ammo > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000 патронов");
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					GiveWeapon(playa, gun, ammo);
					SendClientMessage(playerid, COLOR_GREEN, "Оружие Выдано");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/hp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				AnRepairVehicle(GetPlayerVehicleID(playerid));
			    Fuell[GetPlayerVehicleID(playerid)] = 100;
			    SendClientMessage(playerid, COLOR_WHITE, "Машина отремонтирована");
			}
			SetPlayerHealthAC(playerid, 100);
			PlayerInfo[playerid][pHP] = 100;
			SendClientMessage(playerid, COLOR_WHITE, "Здоровье пополнено");
		}
		return true;
	}
	if(strcmp(cmd, "/satiety", true) == 0)
	{
	    new string[32];
		format(string,sizeof(string), "Ваша «Сытость»: %d/100",PlayerInfo[playerid][pSatiety]);
		SendClientMessage(playerid, 0x6495EDFF,string);
	    return true;
	}
	if(strcmp(cmd, "/sethealcost", true) == 0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20");
				healpricsf = moneys;
				new string[52];
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpricsf);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
			else if(PlayerInfo[playerid][pMember] == 22 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20");
				healpricls = moneys;
				new string[52];
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpricls);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
	        else if(PlayerInfo[playerid][pMember] == 33 && PlayerInfo[playerid][pRank] == 8)
	        {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethealcost [сумма]");
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 20) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете поставить меньше 1 и больше 20");
				healpriclv = moneys;
				new string[52];
				format(string, sizeof(string), "Цена лечения установлена в размере %d вирт", healpriclv);
				SendClientMessage(playerid, 0xA52A2AFF, string);
				return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/escape", true) == 0)
	{
		if(IsAGang(playerid))
		{
			if(PlayerInfo[playerid][pJailed] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не в тюрьме");
	 		if(PlayerInfo[playerid][pKeys] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ключа от тюрьмы!");
            PlayerInfo[playerid][pJailed] = 0;
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
			SetPlayerFacingAngle(playerid, 90.0);
			SendClientMessage(playerid, COLOR_YELLOW, "Вы совершили побег из тюрьмы");
		}
		return true;
	}
	if(strcmp(cmd, "/givecopkeys", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givecopkeys [id]");
		new playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21 )
		{
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					PlayerInfo[playa][pKeys] += 1;
					new string[96];
					format(string, sizeof(string), "Офицер %s выдал(а) ключи от полицейского участка %s", PlayerInfo[playerid][pName],PlayerInfo[playa][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/heal", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
		{
 			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /heal [id]");
  			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				new giveambu = GetPlayerVehicleID(giveplayerid);
				new playambu = GetPlayerVehicleID(playerid);
				if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pMember] == 33)
				{
					if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773))
					{
						switch(PlayerInfo[playerid][pMember])
						{
						    case 4:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[128];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpricsf;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						    case 22:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[128];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpricls;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						    case 33:
						    {
						        if(PlayerInfo[giveplayerid][pHP] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуеться лечение");
								new healdialog[128];
								new hp = 100-PlayerInfo[giveplayerid][pHP];
								new hpprice = hp*healpriclv;
								format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %d вирт\nВы согласны?", hpprice);
								ShowPlayerDialog(giveplayerid,5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
								HealOffer[giveplayerid] = playerid;
								HealPrice[giveplayerid] = hpprice;
							}
						}
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		}
		return true;
	}
	if(strcmp(cmd, "/sethp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethp [id] [Уровень HP]");
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					SetPlayerHealthAC(playa, health);
					PlayerInfo[playa][pHP] = health;
					SendClientMessage(playerid, COLOR_WHITE, "Уровень HP игроку установлен");
					if(PlayerInfo[playa][pAdmin] >= 5)
					{
					    new string[63];
					    format(string, sizeof(string), "%s установил вам уровень хп: %d",PlayerInfo[playerid][pName],health);
	                    SendClientMessage(playa, COLOR_WHITE, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/fillpcar",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fillpcar [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(IsPlayerInAnyVehicle(giveplayerid))
					{
					    new string[65];
						format(string, sizeof(string), "Вы заправили транспортное средство игрока %s", PlayerInfo[giveplayerid][pName]);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						Fuell[GetPlayerVehicleID(giveplayerid)] = 100;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Игрок не в транспорте");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setarmor", true) == 0 || strcmp(cmd, "/sar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setarmor [id] [Уровень брони]");
			new playa;
			new armor;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			armor = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
				    SetPlayerArmourAC(playa, armor);
					SendClientMessage(playerid, COLOR_WHITE, "Уровень брони игроку установлен");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/veh", true) == 0 || strcmp(cmd, "/car", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) return SendClientMessage(playerid, COLOR_GREY, "Номер машины не может быть меньше 400 и больше чем 611");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) return SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 255");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
			new color2;
			new intt = GetPlayerInterior(playerid);
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_GREY, "Номер цвета не может быть меньше 0 и больше 255");
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			createdvehs ++;
			new string[50];
			if(car != 538 && car != 537 && car != 570 && car != 590 && car != 569)
			{
   				createdvehicles[createdvehs] = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, -1);
				CreatedCars[CreatedCar] = createdvehicles[createdvehs];
				UnLockCar(createdvehicles[createdvehs]);
				IsLocked[createdvehicles[createdvehs]] = 0;
				LinkVehicleToInterior(createdvehicles[createdvehs], intt);
				SetVehicleVirtualWorld(createdvehicles[createdvehs], GetPlayerVirtualWorld(playerid));
				format(string, sizeof(string), "Автомобиль ID: %d создан, для удаления /delcar", car);
				SendClientMessage(playerid, COLOR_WHITE, string);
				PutPlayerInVeh(playerid, createdvehicles[createdvehs], 0);
				Fuell[GetPlayerVehicleID(playerid)] = 100;
				SetVehicleNumberPlate(GetPlayerVehicleID(playerid),"АТС");
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
				EngineState[playerid] = true;
			}
			else
			{
                createdvehicles[createdvehs] = AddStaticVehicleEx(car,X,Y,Z, 0.0,color1,color2,600000);
				CreatedCars[CreatedCar] = createdvehicles[createdvehs];
				UnLockCar(createdvehicles[createdvehs]);
				IsLocked[createdvehicles[createdvehs]] = 0;
				LinkVehicleToInterior(createdvehicles[createdvehs], intt);
				SetVehicleVirtualWorld(createdvehicles[createdvehs], GetPlayerVirtualWorld(playerid));
				format(string, sizeof(string), "Автомобиль ID: %d создан, для удаления /delcar", car);
				SendClientMessage(playerid, COLOR_WHITE, string);
				PutPlayerInVeh(playerid, createdvehicles[createdvehs], 0);
				Fuell[GetPlayerVehicleID(playerid)] = 100;
				SetVehicleNumberPlate(GetPlayerVehicleID(playerid),"АТС");
				GetVehicleParamsEx(GetPlayerVehicleID(playerid) ,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
				EngineState[playerid] = true;
			}
			return true;
		}
	}
	else if(strcmp(cmd, "/carmenu", true) == 0 || strcmp(cmd, "/cm", true) == 0)
    {
    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем");
     	ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "Car menu", "[1]Открыть капот\n[2]Закрыть капот\n[3]Открыть багажник\n[4]Закрыть багажник\n[5]Открыть двери(ключ)\n[6]Закрыть двери(ключ)\n[7]Включить фары\n[8]Выключить фары\n[9]Включить сигнализацию\n[10]Выключить сигнализацию", "Выбрать", "Закрыть");
        return true;
    }
	if(strcmp(cmd, "/delcar", true) == 0 || strcmp(cmd, "/delveh", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
				    if(GetPlayerVehicleID(playerid) >= 706)
				    {
				        for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerInVehicle(playerid,caridhouse[i])) return SendClientMessage(playerid, COLOR_RED, "Нельзя удалять личный транспорт");
						}
	    				DestroyVehicle(GetPlayerVehicleID(playerid));
			    		SendClientMessage(playerid, COLOR_GREEN, "Автомобиль успешно удален");
					    createdvehs --;
					}
				}
				else SendClientMessage(playerid, COLOR_RED, "Вы должны быть в автомобиле");
			}
 		}
		return true;
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /weather [id погоды]");
			new weather;
			weather = strval(tmp);
			if(weather < 0 || weather > 45) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 45 погоды");
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_WHITE, "Погода изменена");
		}
	}
	if(strcmp(cmd, "/givedonate", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /givedonate [id] [сумма]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
		            new string[71];
					format(string, sizeof(string), "%d вирт переведены на счёт игроку", money);
       				SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(playa, COLOR_NEWS, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					format(string, sizeof(string), "Вам было зачисленно вознаграждение за помощь серверу: %d вирт", money);
					SendClientMessage(playa, COLOR_NEWS, string);
					format(string, sizeof(string), "Старый баланс: %d вирт", PlayerInfo[playerid][pBank]);
					SendClientMessage(playa, COLOR_YELLOW, string);
					PlayerInfo[playa][pBank] += money;
					PlayerInfo[playa][pDonateAccount] += money;
					PlayerInfo[playa][pDonate] += money;
					format(string, sizeof(string), "Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
					SendClientMessage(playa, COLOR_YELLOW, string);
					SendClientMessage(playa, COLOR_NEWS, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					if(PlayerInfo[playa][pDonateAccount] >= 1000000 && PlayerInfo[playa][pDonateRank] == 0)
					{
						SendClientMessage(playa, COLOR_YELLOW, "Поздравляем! Вы достигли 1 уровня VIP (BRONZE VIP)");
						SendClientMessage(playa, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playa][pDonateRank] = 1;
					}
					else if(PlayerInfo[playa][pDonateAccount] >= 5000000 && PlayerInfo[playa][pDonateRank] == 1)
					{
						SendClientMessage(playa, COLOR_YELLOW, "Поздравляем! Вы достигли 2 уровня VIP (SILVER VIP)");
						SendClientMessage(playa, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playa][pDonateRank] = 2;
					}
					else if(PlayerInfo[playa][pDonateAccount] >= 10000000 && PlayerInfo[playa][pDonateRank] == 2)
					{
						SendClientMessage(playa, COLOR_YELLOW, "Поздравляем! Вы достигли 3 уровня VIP (GOLD VIP)");
						SendClientMessage(playa, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playa][pDonateRank] = 3;
					}
					else if(PlayerInfo[playa][pDonateAccount] >= 15000000 && PlayerInfo[playa][pDonateRank] == 3)
					{
						SendClientMessage(playa, COLOR_YELLOW, "Поздравляем! Вы достигли 4 уровня VIP (PLATINUM VIP)");
						SendClientMessage(playa, COLOR_YELLOW, "Используйте /viphelp для просмотра функций VIP аккаунта");
						PlayerInfo[playa][pDonateRank] = 4;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/offdonate", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offdonate [Ник] [кол-во]");
			new reason[128];
   			reason = bigstr(cmdtext, idx);
    		if (!strlen(reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offdonate [Ник] [кол-во]");
    		new string[61];
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
                new File = ini_openFile(string);
				ini_setString(File, "DonateMoney",reason);
				ini_setInteger(File, "Text",5);
				ini_closeFile(File);
				format(string, sizeof(string), "Вы выдали %d доната игроку: %s",reason,tmp);
   				SendClientMessage(playerid, COLOR_NEWS, string);
			}
   			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/givemoney", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /givemoney [id] [сумма]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					new string[67];
					format(string, sizeof(string), "%d вирт переведены на счёт игроку %s", money,PlayerInfo[playa][pName]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playa][pBank] += money;
					format(string, sizeof(string), "Пополнение счёта на сумму: %d вирт", money);
					SendClientMessage(playa, COLOR_WHITE, string);
					format(string, sizeof(string), "Новый баланс в банке: %d вирт", PlayerInfo[playa][pBank]);
					SendClientMessage(playa, COLOR_WHITE, string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/givehmoney", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /givehmoney [id] [сумма]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					new string[67];
					format(string, sizeof(string), "%d вирт переведены на счёт игроку %s", money,PlayerInfo[playa][pName]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playa][pCash] += money;
					format(string, sizeof(string), "Вам на руки выдано %d вирт", money);
					SendClientMessage(playa, COLOR_WHITE, string);
				}
			}
		}
		return true;
	}
	if (strcmp(cmdtext, "/autogm", true)==0 || strcmp(cmd, "/agm", true) == 0 )
	{
		new VehicleID, Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		VehicleID = GetPlayerVehicleID(playerid);
		SetVehiclePos(VehicleID, X, Y, Z);
		SetVehicleZAngle(VehicleID, 0);
		return true;
	}
	if(strcmp(cmd, "/gm", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 2)
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gm [id]");
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy, boomz, 5, 0.1);
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/slap", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /slap [id]");
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					GetPlayerHealth(playa, shealth);
					SetPlayerHealthAC(playa, shealth - 5);
					GetPlayerPos(playa, slx, sly, slz);
					SetPlayerPos(playa, slx, sly, slz+5);
					PlaySoundNearPlayer(playa, 1190);
					new string[81];
					format(string, sizeof(string), "Администратор %s дал пинка игроку %s",PlayerInfo[playerid][pName], PlayerInfo[playa][pName]);
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/agivelicense", true) == 0 || strcmp(cmd, "/agl", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST, "Выдача лицензий", "Водительские права\nЛицензия на полёты\nЛицензия на рыболовлю\nЛицензия на вождение водного транспорта\nЛицензия на оружие\nЛицензия на бизнес\nКомплект лицензий\nАвтомобильные номера", "Продолжить", "Отмена");
			return true;
        }
    }
	if(strcmp(cmd, "/mute", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /mute [id] [минуты]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new playa = ReturnUser(tmp);
   			tmp = strtok(cmdtext, idx);
   			new string[90];
      		if(!strlen(tmp))
	  		{
		  		if(PlayerInfo[playa][pMuted] == 1)
				{
					PlayerInfo[playa][pMuted] = 0;
					PlayerInfo[playa][pMuteTime] = 0;
					format(string, sizeof(string), "Администратор %s снял(а) бан чата с игрока %s",PlayerInfo[playerid][pName], PlayerInfo[playa][pName]);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
	  			return true;
	  		}
      		new mins = strval(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[playa][pMuted] == 0)
					{
						PlayerInfo[playa][pMuteTime] = mins*60;
						PlayerInfo[playa][pMuted] = 1;
						format(string, sizeof(string), "%s получил(а) бан чата от администратора %s",PlayerInfo[playa][pName], PlayerInfo[playerid][pName]);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Вам дали бан чата на %d минут", mins);
						SendClientMessage(playa, COLOR_WHITE, string);
					}
					else
					{
						PlayerInfo[playa][pMuted] = 0;
						PlayerInfo[playa][pMuteTime] = 0;
						format(string, sizeof(string), "Администратор %s снял(а) бан чата c игрока %s", PlayerInfo[playerid][pName], PlayerInfo[playa][pName]);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /id [ник]");
		new target;
		target = ReturnUser(tmp);
		if(IsPlayerConnected(target))
		{
			if(target != INVALID_PLAYER_ID)
			{
				new string[36];
				format(string, sizeof(string), "%s [%d]",PlayerInfo[target][pName],target);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/aad", true) == 0 || strcmp(cmd, "/ффв", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /aad [текст]");
			new string[128];
			format(string, sizeof(string), "Администратор %s: %s", PlayerInfo[playerid][pName], result);
			OOCOff(COLOR_LIGHTRED,string);
			return true;
		}
	}
	if(strcmp(cmd, "/b", true) == 0 || strcmp(cmd, "/и", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас бан чата");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new succ;
		for(new i; i < strlen(result); i++)
		{
			if(PText[playerid][i] == result[i]) succ++;
		}
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /b [сообщение]");
		new string[128];
		format(string, sizeof(string), "%s: (( %s ))", PlayerInfo[playerid][pName], result);
		ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
		return true;
	}
	if(strcmp(cmd, "/whisper", true ) == 0 || strcmp(cmd, "/w", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У вас бан чата!");
		if(gag[playerid] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new succ;
		for(new i; i < strlen(result); i++)
		{
			if(PText[playerid][i] == result[i]) succ++;
		}
		new string[128];
		for(new admin = 0; admin < MAX_PLAYERS; admin ++)
		{
            if(adminreadpm[admin] ==1)
		    {
                 format(string,sizeof(string)," %s (id:%i)шепнул(а)%s (id:%i): %s",PlayerInfo[playerid][pName],playerid,PlayerInfo[giveplayerid][pName],giveplayerid,result);
                 //ShowAdminsPM(admin, sendername, giveplayerid, giveplayer, result,3);
		         SendClientMessage(admin,COLOR_YELLOW,string);//Отсылаем уведомление админам
            }
		}
		if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /w [сообщение]");
		format(string, sizeof(string), "{6E6E6E}%s шепнул(а): %s", PlayerInfo[playerid][pName], result);
		ProxDetector(1.0, playerid, string, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA, 0x6E6E6EAA);
		return true;
	}
	if(strcmp(cmd, "/kick", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /kick [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    	if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть кикнут");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /kick [id] [reason]");
					new string[128];
					format(string, sizeof(string), "Администратор: %s кикнул(а) %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName], (result));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
 					SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
					GKick(giveplayerid);
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skick [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть кикнут!");
					GKick(giveplayerid);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "Игрок кикнут");
				return true;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/del", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			new akk[256];
			akk = strtok(cmdtext, idx);
			if(!strlen(akk)) return SendClientMessage(playerid,COLOR_GREY, "Введите: /del [аккаунт]");
			new string[52];
			format(string,sizeof(string), "%s.ini",akk);
			if(!fexist(string)) return SendClientMessage(playerid,COLOR_RED, "Аккаунт не найден");
			fremove(string);
			format(string,sizeof(string), "Аккаунт %s был успешно удален",akk);
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
		return true;
	}
	if(strcmp(cmd, "/readw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
 				if(adminreadpm[playerid] == 0)
				{
				    adminreadpm[playerid] = 1;
				    SendClientMessage(playerid, COLOR_GRAD2, "Теперь вы будете слышать весь шепот на сервере");
				}
				else
				{
				    adminreadpm[playerid] = 0;
				    SendClientMessage(playerid, COLOR_GRAD2, "Теперь вы не будете слышать весь шепот на сервере");
				}

			}
  			else SendClientMessage(playerid, COLOR_GRAD1, "У Вас недостаточно прав для того, чтобы использовать эту команду");
		}
		return true;
	}
	if(strcmp(cmd, "/readsms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
 				if(adminreadsms[playerid] == 0)
				{
				    adminreadsms[playerid] = 1;
				    SendClientMessage(playerid, COLOR_GRAD2, "Теперь вы будете видеть чужие SMS");
				}
				else 
				{
				    adminreadsms[playerid] = 0;
				    SendClientMessage(playerid, COLOR_GRAD2, "Теперь вы не будете видеть чужие SMS");
				}
			}
  			else SendClientMessage(playerid, COLOR_GRAD1, "У Вас недостаточно прав для того, чтобы использовать эту команду!");
		}
		return true;
	}
	if(strcmp(cmd, "/offmoney", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offmoney [Ник] [кол-во]");
			new reason[128];
   			reason = bigstr(cmdtext, idx);
    		if (!strlen(reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offmoney [Ник] [кол-во]");
			new string[64];
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
                new File = ini_openFile(string);
				ini_setString(File, "DonateMoney", reason);
				ini_setInteger(File, "Text",5);
				ini_closeFile(File);
				format(string, sizeof(string), "Аккаунт %s пополнен на сумму: %d",tmp,reason);
   				SendClientMessage(playerid, COLOR_YELLOW2, string);
			}
   			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/offban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offban [Ник] [Причина]");
			new reason[128];
   			reason = bigstr(cmdtext, idx);
    		if(!strlen(reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offban [Ник] [Причина]");
    		new string[128];
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
                new File = ini_openFile(string);
				ini_setInteger(File, "Ban",1);
				ini_closeFile(File);
				format(string, sizeof(string), "[OFFBAN] Администратор: %s забанил(а) игрока %s. Причина: %s",PlayerInfo[playerid][pName],tmp,reason);
   				ABroadCast(COLOR_LIGHTRED, string, 1);
			}
   			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/unban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unban [ник]");
			new string[83];
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
				new File = ini_openFile(string);
				ini_setInteger(File, "Ban",0);
				ini_closeFile(File);
				format(string, sizeof(string), "Администратор %s разбанил(а) игрока %s",PlayerInfo[playerid][pName],tmp);
				ABroadCast(COLOR_LIGHTRED, string, 1);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/offleader", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offleader [ник]");
			new string[89];
			format(string, sizeof(string), "%s.ini", tmp);
	 		if(fexist(string))
	 		{
				new level;
				new File = ini_openFile(string);
				ini_getInteger(File, "Leader",level);
				ini_setInteger(File, "Member",0);
				ini_setInteger(File, "Rank",0);
				ini_setInteger(File, "Text",4);
                new iniFile = ini_openFile("gamefiles/log/leaders.ini");
                switch(level)
    			{
       				case 1: ini_removeKey(iniFile, "LSPD");
			        case 2: ini_removeKey(iniFile, "FBI");
			        case 3: ini_removeKey(iniFile, "ARMY SF");
			        case 4: ini_removeKey(iniFile, "MEDICS SF");
			        case 5: ini_removeKey(iniFile, "LCN");
			        case 6: ini_removeKey(iniFile, "YAKUZA");
			        case 7: ini_removeKey(iniFile, "MARYA");
			        case 8: ini_removeKey(iniFile, "KAZINO");
			        case 9: ini_removeKey(iniFile, "SFN");
			        case 10: ini_removeKey(iniFile, "SFPD");
			        case 11: ini_removeKey(iniFile, "LICENSERS");
			        case 12: ini_removeKey(iniFile, "BALLAS");
			        case 13: ini_removeKey(iniFile, "VAGOS");
			        case 14: ini_removeKey(iniFile, "RM");
			        case 15: ini_removeKey(iniFile, "GROVE");
			        case 16: ini_removeKey(iniFile, "LSNEWS");
			        case 17: ini_removeKey(iniFile, "AZTEC");
			        case 18: ini_removeKey(iniFile, "RIFA");
			        case 19: ini_removeKey(iniFile, "ARMY LV");
			        case 20: ini_removeKey(iniFile, "LVNEWS");
			        case 21: ini_removeKey(iniFile, "LVPD");
			        case 22: ini_removeKey(iniFile, "LOS SANTOS MCHS");
			        case 23: ini_removeKey(iniFile, "SSMCBAYKER");
			        case 24: ini_removeKey(iniFile, "HAMCBAYKER");
			        case 25: ini_removeKey(iniFile, "OMCBAYKER");
			        case 26: ini_removeKey(iniFile, "WMCBAYKER");
			        case 27: ini_removeKey(iniFile, "HWMCBAYKER");
			        case 28: ini_removeKey(iniFile, "FSMCBAYKER");
			        case 29: ini_removeKey(iniFile, "PMCBAYKER");
			        case 30: ini_removeKey(iniFile, "MMCBAYKER");
			        case 31: ini_removeKey(iniFile, "VMCBAYKER");
			        case 32: ini_removeKey(iniFile, "BMCBAYKER");
			        case 33: ini_removeKey(iniFile, "MEDICS LV");
			        case 34: ini_removeKey(iniFile, "FFIGHTERS");
			        case 35: ini_removeKey(iniFile, "HITMANS");
				}
				ini_setInteger(File, "Leader",0);
	            ini_closeFile(iniFile);
	            ini_closeFile(File);
				format(string, sizeof(string), "Администратор %s снял(а) лидерку с игрока %s",PlayerInfo[playerid][pName],tmp);
				ABroadCast(COLOR_LIGHTRED, string, 1);
			}
	 		else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/offadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offadmin [ник]");
			new string[56];
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
	 			new File = ini_openFile(string);
				ini_setInteger(File, "AdminLevel",0);
				ini_closeFile(File);
				format(string, sizeof(string), "Администраторка снята с игрока %s",tmp);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
	 		else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/offip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offip [ник]");
			new string[55];
			format(string, sizeof(string), "%s.ini", tmp);
			if(fexist(string))
			{
				new File = ini_openFile(string);
				ini_setInteger(File, "CheckIp",0);
				ini_closeFile(File);
				format(string, sizeof(string), "Проверка по IP снята с игрока %s",tmp);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
	  		else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/reloadbans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
			SendRconCommand("reloadbans");
			SendClientMessage(playerid, COLOR_WHITE, "Бан-лист перезагружен");
		}
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /warn [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть заварнен");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /warn [id] [причина]");
					if(PlayerInfo[giveplayerid][pLeader] != 0)
					{
						new iniFile = ini_openFile("gamefiles/log/leaders.ini");
						switch(PlayerInfo[giveplayerid][pLeader])
    					{
       						case 1: ini_removeKey(iniFile, "LSPD");
			        		case 2: ini_removeKey(iniFile, "FBI");
			       	 		case 3: ini_removeKey(iniFile, "ARMY SF");
			        		case 4: ini_removeKey(iniFile, "MEDICS SF");
			        		case 5: ini_removeKey(iniFile, "LCN");
			        		case 6: ini_removeKey(iniFile, "YAKUZA");
			        		case 7: ini_removeKey(iniFile, "MARYA");
			        		case 8: ini_removeKey(iniFile, "KAZINO");
			        		case 9: ini_removeKey(iniFile, "SFN");
			        		case 10: ini_removeKey(iniFile, "SFPD");
			        		case 11: ini_removeKey(iniFile, "LICENSERS");
			        		case 12: ini_removeKey(iniFile, "BALLAS");
			        		case 13: ini_removeKey(iniFile, "VAGOS");
			        		case 14: ini_removeKey(iniFile, "RM");
			        		case 15: ini_removeKey(iniFile, "GROVE");
			        		case 16: ini_removeKey(iniFile, "LSNEWS");
			        		case 17: ini_removeKey(iniFile, "AZTEC");
			        		case 18: ini_removeKey(iniFile, "RIFA");
			        		case 19: ini_removeKey(iniFile, "ARMY LV");
			        		case 20: ini_removeKey(iniFile, "LVNEWS");
			        		case 21: ini_removeKey(iniFile, "LVPD");
			        		case 22: ini_removeKey(iniFile, "LOS SANTOS MCHS");
			        		case 23: ini_removeKey(iniFile, "SSMCBAYKER");
			        		case 24: ini_removeKey(iniFile, "HAMCBAYKER");
			        		case 25: ini_removeKey(iniFile, "OMCBAYKER");
			        		case 26: ini_removeKey(iniFile, "WMCBAYKER");
			        		case 27: ini_removeKey(iniFile, "HWMCBAYKER");
			        		case 28: ini_removeKey(iniFile, "FSMCBAYKER");
			        		case 29: ini_removeKey(iniFile, "PMCBAYKER");
			        		case 30: ini_removeKey(iniFile, "MMCBAYKER");
			        		case 31: ini_removeKey(iniFile, "VMCBAYKER");
			        		case 32: ini_removeKey(iniFile, "BMCBAYKER");
			        		case 33: ini_removeKey(iniFile, "MEDICS LV");
			        		case 34: ini_removeKey(iniFile, "FFIGHTERS");
			        		case 35: ini_removeKey(iniFile, "HITMANS");
						}
						ini_closeFile(iniFile);
						PlayerInfo[giveplayerid][pLeader] = 0;
					}
					PlayerInfo[giveplayerid][pWarns] += 1;
					PlayerInfo[giveplayerid][pMember] = 0;
					PlayerInfo[giveplayerid][pJob] = 0;
					new string[128];
					if(PlayerInfo[giveplayerid][pWarns] >= 3)
					{
						new ip[20];
					    new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "Администратор: %s забанил(a) %s [3 предупреждения]. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						GetPlayerIp(giveplayerid,ip,sizeof(ip));
              			format(string, sizeof(string), "Ник: [%s] IP: [%s]",PlayerInfo[giveplayerid][pName],ip);
            	  		ABroadCast(COLOR_LIGHTRED, string, 1);
						PlayerInfo[giveplayerid][pLocked] = 1;
 					    format(string, sizeof(string), "Ваш аккаунт заблокирован. Подайте заявку на разблокировку на сайте: www.www.nextagerp.5nx.ru. Причина: %s", (result));
					    SendClientMessage(giveplayerid,COLOR_LIGHTRED, string);
 					    SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
						GKick(giveplayerid);
						return true;
					}
					format(string, sizeof(string), "Администратор: %s выдал(а) warn %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], (result));
					SendClientMessageToAll(COLOR_LIGHTRED,string);
					SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Вам выдали warn. В течении определенного времени он будет аннулирован");
 					SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
					OnPlayerUpdateAc(giveplayerid);
					GKick(giveplayerid);
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/unwarn", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /unwarn [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pWarns] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Варнов нет");
				new string[62];
				PlayerInfo[giveplayerid][pWarns] --;
				PlayerInfo[giveplayerid][punWarnstime] = 0;
				PlayerInfo[giveplayerid][punWarns] = 0;
				format(string, sizeof(string), "Одно предупреждение снято с игрока %s", PlayerInfo[giveplayerid][pName]);
				SendClientMessage(playerid, COLOR_REDD, string);
				SendClientMessage(giveplayerid, COLOR_GREEN, "C вас снят Warn");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		        	if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть забанен");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id] [причина]");
				 	PlayerInfo[giveplayerid][pLocked] = 1;
				 	new string[128];
					format(string, sizeof(string), "Администратор: %s забанил(а) %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], (result));
	  				SendClientMessageToAll(COLOR_LIGHTRED,string);
				    SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Ваш аккаунт заблокирован. Подайте заявку на разблокировку на сайте: www.www.nextagerp.5nx.ru");
				    SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
					format(string, sizeof(string), "%s.ini",PlayerInfo[giveplayerid][pName]);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pIpReg",string);
						ini_closeFile(file);
						new ip[16];
 	 					GetPlayerIp(giveplayerid,ip,16);
                  		format(string, sizeof(string), "Ник: [%s] | IP: [%s] | REG IP: [%s]",PlayerInfo[giveplayerid][pName],ip,string);
                	  	ABroadCast(COLOR_LIGHTRED, string, 1);
					    PlayerInfo[giveplayerid][pLocked] = 1;
					    GKick(giveplayerid);
					}
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/sban", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /sban [id] [причина]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[giveplayerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть забанен!");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sban [id] [причина]");
				 	PlayerInfo[giveplayerid][pLocked] = 1;
				 	new string[128];
					format(string, sizeof(string), "[Тихий Бан] Администратор: %s забанил(а) %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], (result));
              		ABroadCast(COLOR_LIGHTRED, string, 1);
					format(string, sizeof(string), "%s.ini", PlayerInfo[giveplayerid][pName]);
					new file = ini_openFile(string);
					if(file < 0) print("нет файла");
					else
					{
						ini_getString(file, "pIpReg",string);
						printf("Найдено: %s, началось чтение файла с этим именем",string);
						ini_closeFile(file);
						new ip[16];
               	 		GetPlayerIp(giveplayerid,ip,16);
                  		format(string, sizeof(string), "Ник: [%s] | IP: [%s] | REG IP: [%s]",PlayerInfo[giveplayerid][pName],ip,string);
                	  	ABroadCast(COLOR_LIGHTRED, string, 1);
            	  	}
					PlayerInfo[giveplayerid][pLocked] = 1;
					GKick(giveplayerid);
     				return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/freeze", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /freeze [id]");
			new playa;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					if(PlayerInfo[playa][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "Администратор не может быть заморожен");
					TogglePlayerControllable(playa, 0);
					new string[80];
					format(string, sizeof(string), "%s был заморожен администратором %s", PlayerInfo[playa][pName], PlayerInfo[playerid][pName]);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					printf("%s",string);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unfreeze [id]");
			new playa;
			playa = ReturnUser(tmp);
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					TogglePlayerControllable(playa, 1);
					new string[81];
					format(string, sizeof(string), "%s был разморожен администратором %s", PlayerInfo[playa][pName], PlayerInfo[playerid][pName]);
					printf("%s",string);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					SetPlayerSpecialAction(playa,0);
					RemovePlayerAttachedObject(playa,0);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			if(!PlayerToPoint(2.0,playerid,212.2816,1812.2374,21.8672)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у точки наблюдения");
			ShowPlayerDialog(playerid, 7724, DIALOG_STYLE_LIST, "Выберите камеру", "Сектор [1]\nСектор [2]\nСектор [3]\nСектор [4]", "Выбрать", "Закрыть");
			SendClientMessage(playerid, COLOR_GREY, "Для выхода из режима камеры введите /cameraoff ");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/cameraoff", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19)
		{
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/warnmans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new countmute = 0;
			new string[64];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pWarns] >= 1 && IsPlayerConnected(i))
				{
					format(string, sizeof(string), "%s [ID: %d] | Варнов: %d", PlayerInfo[i][pName], i,PlayerInfo[i][pWarns]);
					countmute ++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с варнами");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	if(strcmp(cmd, "/offallip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав", "Вход", "Отмена");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pCheckip] == 1 && IsPlayerConnected(i))
				{
					PlayerInfo[i][pCheckip] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Проверка по IP у игроков в сети отключена");
				}
			}
		}
	}
	if(strcmp(cmd, "/vipmans", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав", "Вход", "Отмена");
			new countmute = 0;
			SendClientMessage(playerid, COLOR_GREY, "==Vip игроки==");
			new string[64];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pDonateRank] >= 1 && IsPlayerConnected(i))
				{
					format(string, sizeof(string), "%s [ID: %d] | %d", PlayerInfo[i][pName], i,PlayerInfo[i][pDonateRank]);
					countmute ++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с VIP аккаунтом");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	if(strcmp(cmd, "/mutelist", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new countmute = 0;
			new string[64];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pMuted] == 1 && IsPlayerConnected(i))
				{
					format(string, sizeof(string), "%s [ID: %d] | %d секунд", PlayerInfo[i][pName], i,PlayerInfo[i][pMuteTime]);
					countmute++;
					SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				}
			}
			if(countmute == 0) SendClientMessage(playerid, COLOR_GREY, "Нет игроков с баном чата");
			else
			{
				format(string, sizeof(string), "Всего: %d игроков", countmute);
				SendClientMessage(playerid, COLOR_USE, string);
			}
		}
	}
	if(strcmp(cmd, "/unbanip",true) == 0)
    {
		if(PlayerInfo[playerid][pAdmin] >= 5)
        {
			if(IsPlayerConnected(playerid))
			{
		        tmp = strtok(cmdtext,idx);
		        if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "Введите: /unbanip [IP адрес]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
				new string[58];
		        format(string,sizeof(string), "unbanip %s",tmp);
		        SendRconCommand(string);
		        SendRconCommand("reloadbans");
		        format(string, sizeof(string), "%s разбанил(а) IP: %s", PlayerInfo[playerid][pName], tmp);
				ABroadCast(COLOR_GREEN, string, 1);
				new iniFile = ini_openFile("gamefiles/log/unbanip.cfg");
		    	ini_setString(iniFile, "IP: %s\n",tmp);
			    ini_closeFile(iniFile);
        	}
		}
		return true;
	}
	if(strcmp(cmd, "/banip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
	        tmp = strtok(cmdtext,idx);
	        if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_WHITE, "Введите: /banip [IP адрес]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
            new string[57];
			format(string,sizeof(string), "banip %s",tmp);
	        SendRconCommand(string);
	        SendRconCommand("reloadbans");
	        format(string, sizeof(string), "%s забанил(а) IP: %s", PlayerInfo[playerid][pName], tmp);
			ABroadCast(COLOR_LIGHTRED, string, 1);
	  		new iniFile = ini_openFile("gamefiles/log/banip.cfg");
	    	ini_setString(iniFile, "IP: %s\n",tmp);
		    ini_closeFile(iniFile);
		}
	}
	if(strcmp(cmd, "/unprison",true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unprison [id]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Игрок вытащен из тюрьмы");
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Администратор вытащил вас из тюрьмы");
					PlayerInfo[giveplayerid][pJailTime] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					TogglePlayerControllable(giveplayerid, 1);
					SpawnPlayer(giveplayerid);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/gmx", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 7)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			SendClientMessage(playerid, COLOR_YELLOW, "Происходит Restart сервера");
			printr("Server Restarting");
			GameModeExitFunc();
		}
		return true;
	}
	if(strcmp(cmd, "/savehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			SaveHomeSbizz();
			SendClientMessage(playerid, COLOR_GREY, "Сохранены дома и бизнесы");
		}
		return true;
	}
	if(strcmp(cmd, "/saveall", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			SaveServer();
			SendClientMessage(playerid, COLOR_GREY, "Изменения успешно сохранены");
		}
		return true;
	}
	if(strcmp(cmd, "/sellgas", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
			if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] == 0) return SendClientMessage(playerid,COLOR_GREY, "Нет бензина");
			for(new i = 0; i < sizeof(SBizzInfo); i++)
		    {
				if(PlayerToPoint(10.0, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(SBizzInfo[i][sbLocked] == 1) return SendClientMessage(playerid,COLOR_GREY, "Заправка закрыта");
				    if(SBizzInfo[i][sbProducts] >= 20000) return SendClientMessage(playerid, COLOR_GREY, "У бизнеса уже больше 20000 продуктов");
					SBizzInfo[i][sbProducts] += PlayersHaul[tmpcar-benzovoz[0]][sLoad];
					PlayersHaul[tmpcar-benzovoz[0]][sLoad] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Бензин успешно доставлен");
					OnPropUpdate();
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине");
			if(PlayerHaul[tmpcar-comptruck[0]][pLoad] == 0) return SendClientMessage(playerid,COLOR_GREY, "Нет продуктов в машине");
			for(new i = 0; i < sizeof(BizzInfo); i++)
		    {
				if(PlayerToPoint(10.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(BizzInfo[i][bLocked] == 1) return SendClientMessage(playerid,COLOR_GREY, "Бизнес закрыт");
				    if(BizzInfo[i][bProducts] >= 2000) return SendClientMessage(playerid, COLOR_GREY, "У бизнеса уже болше 2000 продуктов");
					BizzInfo[i][bProducts] += PlayerHaul[tmpcar-comptruck[0]][pLoad];
					PlayerHaul[tmpcar-comptruck[0]][pLoad] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Продукты успешно доставлены");
					OnPropUpdate();
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mcontract", true) == 0)
	{
		new Veh = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMember] == 0)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid,COLOR_GREY, "Вы не в машине механика");
			if(gcontract[playerid] == 1)
			{
				Delete3DTextLabel(Meh3d[Veh]);
				cenabenza[playerid] = 0;
				gcontract[playerid] = 0;
				Mechanics -= 1;
		 		SendClientMessage(playerid,COLOR_WHITE, "Контракт с заправкой рассторгнут");
				return true;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
				{
				    new string[41];
					Delete3DTextLabel(Meh3d[Veh]);
					gcontract[playerid] = 1;
					cenabenza[playerid] = SBizzInfo[b][sbPriceProd]/2;
					format(string, sizeof(string), "<< 300 литров. Цена: %d вирт >>", cenabenza[playerid]);
					Meh3d[Veh] = Create3DTextLabel(string, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(Meh3d[Veh], Veh, 0, 0, 1.5);
					SendClientMessage(playerid,COLOR_GREEN, "Вы подписали контракт с заправкой");
					Mechanics += 1;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/fill", true) == 0)
	{
		for(new b = 0; b < sizeof(SBizzInfo); b++)
		{
			if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]))
			{
				if(SBizzInfo[b][sbProducts] >= 49)
				{
				    if(SBizzInfo[b][sbLocked] == 2) return SendClientMessage(playerid, COLOR_GREY, "Заправка закрыта");
				    if(PlayerInfo[playerid][pCash] < SBizzInfo[b][sbPriceProd]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
    			    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
    			    if(Fuell[vehicleid] >= 95) return SendClientMessage(playerid,COLOR_GREY, "У вас полный бак");
				    SBizzInfo[b][sbTill] += SBizzInfo[b][sbPriceProd];
				    PlayerInfo[playerid][pCash] -= SBizzInfo[b][sbPriceProd];
				    SBizzInfo[b][sbProducts] -= 50;
			        Fuell[vehicleid] = 100;
				    GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Please Wait",2000,3);
				}
				if(SBizzInfo[b][sbProducts] <= 49)
				{
					SendClientMessage(playerid, COLOR_GREY, "На заправке закончился бензин");
					SBizzInfo[b][sbProducts] = 0;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/alock", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new nearveh = GetNearestVehicle(playerid);
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(nearveh, cx, cy, cz);
 		 	if(PlayerToPoint(4.0, playerid, cx, cy, cz))
			{
                GetVehicleParamsEx(nearveh,engine,lights,alarm,doors,bonnet,boot,objective);
                SetVehicleParamsEx(nearveh,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
				UnLockCar(nearveh);
				IsLocked[nearveh] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Машина открыта");
			}
		}
 		return true;
	}
 	if(strcmp(cmd, "/alockz", true) == 0)
	{
		new nearveh = GetNearestVehicle(playerid);
		new carid;
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			carid = nearveh;
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			if(PlayerToPoint(4.0, playerid, cx, cy, cz) )
			{
				SendClientMessage(playerid, COLOR_BLUE, "Машина закрыта");
				LockCar(carid);
				IsLocked[carid] = 1;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/lock", true) == 0)
	{
		new carid;
		if(PlayerInfo[playerid][pPHousekey] == 255)
		{
			if(caridhouse[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
		}
		carid = PlayerInfo[playerid][pPHousekey]+1;
		if(caridhouse[playerid] != 299) carid = caridhouse[playerid];
		new lockstatus = gCarLock[carid];
		new Float:cx,Float:cy,Float:cz;
		GetVehiclePos(carid, cx, cy, cz);
		switch (lockstatus)
		{
			case 0:
			{
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
					if(caridhouse[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
					if(caridhouse[playerid] == carid)
					{
						GameTextForPlayer(playerid, "~w~CAR ~r~LOCKED", 5000, 3);
						LockCar(caridhouse[playerid]);
						IsLocked[caridhouse[playerid]] = 1;
						SetPlayerChatBubble(playerid, "закрыл(а) транспортное средство",COLOR_PURPLE,10.0,10000);
					}
				}
			}
			case 1:
			{
				if(PlayerToPoint(4.0, playerid, cx, cy, cz) )
				{
					if(caridhouse[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
					if(caridhouse[playerid] == carid )
					{
						GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCKED", 5000, 3);
						UnLockCar(caridhouse[playerid]);
						IsLocked[caridhouse[playerid]] = 0;
						SetPlayerChatBubble(playerid, "открыл(а) транспортное средство",COLOR_PURPLE,10.0,10000);
					}
				}
			}
		}
		if(carid == 256) SendClientMessage(playerid, COLOR_GREY, "В данный момент у вас нет машины");
		return true;
	}
	else if(strcmp(cmd, "/animlist", true, 10) == 0 || strcmp(cmd, "/anim", true) == 0)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
		ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST, "Список анимаций", "[1] Танцы\t =>\n[2] Диллер\t =>\n[3] Сесть\t =>\n[4] Лечь\t =>\n[5] Курить\t =>\n[6] Насмешки\t =>\n[7] Эмоции\t =>\n[8] Жесты\t =>\n[9] Паркур\t =>\n[10] Сдаться\t =>\n[10] Шататься\n[11] Пьяная походка", "Выбрать", "Отмена");
		return true;
	}
	else if(strcmp(cmd, "/alogin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1) ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
		return true;
	}
	else if(strcmp(cmd, "/asellsbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /asellsbiz [sbizid]");
			new sbiz = strval(tmp);
			new string[128];
			format(string, sizeof(string), "%s.ini",SBizzInfo[sbiz][sbOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "Bussines",255);
			ini_closeFile(File);
			SBizzInfo[sbiz][sbLocked] = 1;
			SBizzInfo[sbiz][sbOwned] = 0;
			strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
	 		SendClientMessage(playerid, COLOR_WHITE, "Sbizz продан");
			format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", SBizzInfo[sbiz][sbMessage],SBizzInfo[sbiz][sbBuyPrice]);
			Update3DTextLabelText(SBizzInfo[sbiz][sbLabel], 0xEAC700AA, string);
			OnPropUpdate();
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	    {
		    if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /biz [biznumber]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
				PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
				PlayerInfo[playerid][pLocal] = housenum+99;
                PlayerInfo[playerid][pBisIn] = housenum;
				SetPlayerVirtualWorld(playerid,BizzInfo[housenum][bVworld]);
				SetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
			}
		}
  		return true;
	}
	if(strcmp(cmd, "/mast", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	    {
		    if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mast [id мастерской]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,AvtoInfo[housenum][abInterior]);
				SetPlayerPos(playerid,AvtoInfo[housenum][aExitX],AvtoInfo[housenum][aExitY],AvtoInfo[housenum][aExitZ]);
				SetPlayerVirtualWorld(playerid,AvtoInfo[housenum][abWorld]);
			}
		}
  		return true;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /sbiz [biznumber]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new housenum = strval(tmp);
			SetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
		}
		return true;
	}
	if(strcmp(cmd, "/asellbiz", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		    if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /asellbiz [bizid]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
				new biz = strval(tmp);
				new string[128];
				format(string, sizeof(string), "%s.ini",BizzInfo[biz][bOwner]);
	     		new File = ini_openFile(string);
				ini_setInteger(File, "Bussines",255);
				ini_closeFile(File);
				BizzInfo[biz][bLocked] = 0;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[biz][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GREY, "Бизнес продан");
				format(string, sizeof(string), "%s\nПродаётся\nЦена: %d", BizzInfo[biz][bMessage],BizzInfo[biz][bBuyPrice]);
				Update3DTextLabelText(BizzInfo[biz][bLabel], 0xEAC700AA, string);
				OnPropUpdate();
	    		return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aselltune", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
	    	if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /aselltune [тюн]");
				if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
				new biz = strval(tmp);
				new string[128];
				format(string, sizeof(string), "%s.ini",AvtoInfo[biz][abOwner]);
     			new File = ini_openFile(string);
				new bouse = PlayerInfo[playerid][pAutoMast];
				ini_setInteger(File, "Avtomast",255);
				ini_closeFile(File);
				AvtoInfo[biz][abLocked] = 1;
				AvtoInfo[biz][abOwned] = 0;
				AvtoInfo[biz][Poset] = 0;
				AvtoInfo[biz][Rab] = 0;
				AvtoInfo[biz][abTill] = 0;
				AvtoInfo[biz][abArenda] = 0;
				strmid(AvtoInfo[biz][abOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GREY,"Мастерская продана");
				format(string, sizeof(string), "{DDB201}Автомастерская ID: {FFFFFF}%s\n{DDB201}Цена: {FFFFFF}%d\n{DDB201}Информация: {FFFFFF}/tinfo",AvtoInfo[bouse][abMessage],AvtoInfo[bouse][abBuyPrice]);
				Update3DTextLabelText(AvtoInfo[biz][abLabel], 0xDDB201AA, string);
				OnPropUpdate();
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /asellhouse [houseid]");
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new house = strval(tmp);
			new string[29];
			format(string, sizeof(string), "%s.ini",HouseInfo[house][hOwner]);
			new File = ini_openFile(string);
			ini_setInteger(File, "House",255);
			ini_closeFile(File);
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			SendClientMessage(playerid, COLOR_GREY, "Дом продан");
			strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
			BuyHouse();
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/open", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPHousekey];
		if(bouse != 255 && strcmp(PlayerInfo[playerid][pName], HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
			if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				if(HouseInfo[bouse][hLock] == 1)
				{
					HouseInfo[bouse][hLock] = 0;
					GameTextForPlayer(playerid, "~w~House ~g~UNLOCKED", 5000, 3);
					PlaySoundNearPlayer(playerid, 1145);
					return true;
				}
				if(HouseInfo[bouse][hLock] == 0)
				{
					HouseInfo[bouse][hLock] = 1;
					GameTextForPlayer(playerid, "~w~House ~r~LOCKED", 5000, 3);
					PlaySoundNearPlayer(playerid, 1145);
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не у себя дома");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
		return true;
	}
	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPHousekey];
		if(bouse != 255 && strcmp(PlayerInfo[playerid][pName], HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
			if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX, "Продажа имущества", "Вы действительно хотите продать дом государству?\nВам будет возвращены только 75 процентов!", "Да", "Нет");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не у себя дома");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
		return true;
	}
	if(strcmp(cmd, "/hmenu", true) == 0 || strcmp(cmd, "/hm", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPHousekey];
		if(bouse != 255 && strcmp(PlayerInfo[playerid][pName], HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
			if(PlayerToPoint(10, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]))
			{
				new hpanel[200];
   				format(hpanel,sizeof(hpanel), " [1] Открыть/закрыть дом\n [2] Продать дом\n [3] Использовать аптечку [%d шт.]",HouseInfo[bouse][hHel]);
   				ShowPlayerDialog(playerid, 5540, DIALOG_STYLE_LIST, "Продукты", hpanel, "Купить", "Назад");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не у себя дома");
		}
        else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
		return true;
	}
	if(strcmp(cmd, "/healme", true) == 0)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(PlayerToPoint(5, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(GetPlayerVirtualWorld(playerid) == i+50)
				{
					if(HouseInfo[i][hHel] == 0)return SendClientMessage(playerid, COLOR_GREY, "В этом месте нет аптечек");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были вылечены до 100 процентов");
					new string[29];
					format(string, sizeof(string), "Осталось %d аптечек", HouseInfo[i][hHel]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					HouseInfo[i][hHel] -= 1;
					SetPlayerHealthAC(playerid, 100);
					PlayerInfo[playerid][pHP] = 100;
					SetPlayerChatBubble(playerid, "использовал аптечку", COLOR_PURPLE, 30.0, 10000);
					return true;
				}
			}
		}
	}
	if(strcmp(cmd,"/robhouse",true) == 0)
	{
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(IsAGang(playerid))
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && IsInAllowed(playerid))
					{
						if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
						{
							if(robhouse[playerid] != false) return SendClientMessage(playerid, COLOR_GREY, "Вы уже грабили дом в этом часу");
							if(HouseInfo[h][hOwned] == 0) return SendClientMessage(playerid, COLOR_GREY, "У дома нет владельца");
							if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) return SendClientMessage(playerid, COLOR_GREY, "Владелец дома OFF-LINE");
							SendClientMessage(playerid, COLOR_GREEN, "Вы ограбили дом, везите материалы в доки ((/gps - сдача метала))");
							PlayerInfo[playerid][pLabiding] -= 1;
							robh[playerid] = true;
							robhouse[playerid] = true;
							HouseInfo[h][hTakings] -= 500;
						}
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/myskill", true) == 0 || strcmp(cmd, "/myskills", true) == 0)
    {
        new stringskill[1400];
        new points[11],percent[2] = "%";
        points[0] = 100 - PlayerInfo[playerid][pGunSkill][0];
        points[1] = 100 - PlayerInfo[playerid][pGunSkill][1];
        points[2] = 100 - PlayerInfo[playerid][pGunSkill][2];
        points[3] = 100 - PlayerInfo[playerid][pGunSkill][3];
        points[4] = 100 - PlayerInfo[playerid][pGunSkill][4];
        points[5] = 100 - PlayerInfo[playerid][pGunSkill][5];
        points[6] = 100 - PlayerInfo[playerid][pGunSkill][6];
        points[7] = 100 - PlayerInfo[playerid][pGunSkill][7];
        points[8] = 100 - PlayerInfo[playerid][pGunSkill][8];
        points[9] = 100 - PlayerInfo[playerid][pGunSkill][9];
        points[10] = 100 - PlayerInfo[playerid][pGunSkill][10];
        format(stringskill,sizeof(stringskill), "SDPistol:\t[%s]%d%s\nDeagle:\t[%s]%d%s\nShotGun:\t[%s]%d%s\nMP5:\t\t[%s]%d%s\nAK47:\t\t[%s]%d%s\nM4A1:\t\t[%s]%d%s\nОбрез:\t\t[%s]%d%s\nColt.45:\t[%s]%d%s\nSPAS 12:\t[%s]%d%s\nUZI:\t\t[%s]%d%s\nRIFLE:\t\t[%s]%d%s",
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][0],points[0]),PlayerInfo[playerid][pGunSkill][0],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][1],points[1]),PlayerInfo[playerid][pGunSkill][1],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][2],points[2]),PlayerInfo[playerid][pGunSkill][2],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][3],points[3]),PlayerInfo[playerid][pGunSkill][3],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][4],points[4]),PlayerInfo[playerid][pGunSkill][4],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][5],points[5]),PlayerInfo[playerid][pGunSkill][5],percent,
		ToDevelopSkills(PlayerInfo[playerid][pGunSkill][6],points[6]),PlayerInfo[playerid][pGunSkill][6],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][7],points[7]),PlayerInfo[playerid][pGunSkill][7],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][8],points[8]),PlayerInfo[playerid][pGunSkill][8],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][9],points[9]),PlayerInfo[playerid][pGunSkill][9],percent,
        ToDevelopSkills(PlayerInfo[playerid][pGunSkill][10],points[10]),PlayerInfo[playerid][pGunSkill][10],percent);
        ShowPlayerDialog(playerid,43,DIALOG_STYLE_MSGBOX, "Навыки владения оружием",stringskill, "Готово", "");
		return true;
	}
	if(strcmp(cmd, "/setskill", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskill [id] [номер] [количество]");
                SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun |[7] Sawnoff |[8] Pistol|[9] SPAS12 |[10] UZI|[11] RIFLE");
                return true;
            }
            giveplayerid = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
				{
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
	                	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskill [id] [номер] [количество]");
	                	SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun |[7] Sawnoff |[8] Pistol|[9] SPAS12 |[10] UZI|[11] RIFLE");
	                	return true;
                    }
                    new stat;
                    stat = strval(tmp);
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
	                	SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskill [id] [номер] [количество]");
	                	SendClientMessage(playerid, COLOR_GRAD1, "[1] Slinced Pistol |[2] Desert Eagle |[3] MP5 |[4] AK47 |[5] M4A1 |[6] ShotGun |[7] Sawnoff |[8] Pistol|[9] SPAS12 |[10] UZI|[11] RIFLE");
	                	return true;
                    }
                    new amount;
                    amount = strval(tmp);
                    if(PlayerInfo[playerid][pAdmin] >= 6)
                    {
                        new string[58];
                        switch (stat)
                        {
                            case 1:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][0] = amount;
                                format(string, sizeof(string), "Скилл оружия SDPistol у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 2:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][1] = amount;
                                format(string, sizeof(string), "Скилл оружия Desert Eagle у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 3:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][3] = amount;
                                format(string, sizeof(string), "Скилл оружия MP5 у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 4:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][4] = amount;
                                format(string, sizeof(string), "Скилл оружия AK47 у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 5:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][5] = amount;
                                format(string, sizeof(string), "Скилл оружия M4A1 у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 6:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][2] = amount;
                                format(string, sizeof(string), "Скилл оружия ShotGun у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 7:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][6] = amount;
                                format(string, sizeof(string), "Скилл оружия Sawnoff у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 8:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][7] = amount;
                                format(string, sizeof(string), "Скилл оружия Pistol у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 9:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][8] = amount;
                                format(string, sizeof(string), "Скилл оружия SPAS 12 у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 10:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][9] = amount;
                                format(string, sizeof(string), "Скилл оружия UZI у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            case 11:
                            {
                                PlayerInfo[giveplayerid][pGunSkill][10] = amount;
                                format(string, sizeof(string), "Скилл оружия RIFLE у него теперь равен %d", amount);
                                SetPlayerSkills(giveplayerid);
                            }
                            default: return SendClientMessage(playerid, COLOR_GREY, "Неизвестное значение");
						}
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setmyint", true) == 0 || strcmp(cmd, "/smi", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmyint [ id интерьера ]");
        new I = strval(tmp);
		SetPlayerInterior(playerid, I);
        return true;
	}
	if(strcmp(cmd, "/setmyworld", true) == 0 || strcmp(cmd, "/smw", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Вы не уполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/setmyworld [virt world]");
        new I = strval(tmp);
		SetPlayerVirtualWorld(playerid, I);
        return true;
	}
	if(strcmp(cmd, "/racelist", true) == 0)
	{
		new pos1[64], pos2[64], pos3[64];
		new string[128];
		new file = ini_openFile("gamefiles/racelist.ini");
        ini_getString(file,"1.",string);
        format(pos1, sizeof(pos1), "1. %s", string);
        ini_getString(file,"2.",string);
        format(pos2, sizeof(pos2), "2. %s", string);
        ini_getString(file,"3.",string);
        format(pos3, sizeof(pos3), "3. %s", string);
        format(string, sizeof(string), "<< Список победителей >>\n\n%s\n%s\n%s",pos1,pos2,pos3);
        ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX," ",string,"Скрыть","");
        ini_closeFile(file);
    }
	if(strcmp(cmd, "/derbylist", true) == 0)
    {
        new pos1[35], pos2[35], pos3[35], pos4[35], pos5[35], pos6[35], pos7[35], pos8[35], pos9[35], pos10[35];
        new string[512];
        new file = ini_openFile("gamefiles/derbylist.ini");
        ini_getString(file,"1.",string);
        format(pos1, sizeof(pos1), "1. %s", string);
        ini_getString(file,"2.",string);
        format(pos2, sizeof(pos2), "2. %s", string);
        ini_getString(file,"3.",string);
        format(pos3, sizeof(pos3), "3. %s", string);
        ini_getString(file,"4.",string);
        format(pos4, sizeof(pos4), "4. %s", string);
        ini_getString(file,"5.",string);
        format(pos5, sizeof(pos5), "5. %s", string);
        ini_getString(file,"6.",string);
        format(pos6, sizeof(pos6), "6. %s", string);
        ini_getString(file,"7.",string);
        format(pos7, sizeof(pos7), "7. %s", string);
        ini_getString(file,"8.",string);
        format(pos8, sizeof(pos8), "8. %s", string);
        ini_getString(file,"9.",string);
        format(pos9, sizeof(pos9), "9. %s", string);
        ini_getString(file,"10.",string);
        format(pos10, sizeof(pos10), "10. %s", string);
        format(string, sizeof(string), "<< Список победителей >>\n\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",pos1,pos2,pos3,pos4,pos5,pos6,pos7,pos8,pos9,pos10);
        ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX," ",string,"Скрыть","");
        ini_closeFile(file);
    }
	if(strcmp(cmd, "/paint", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(PaintballRound == 0) return SendClientMessage(playerid,COLOR_WHITE, "Paintball уже начат");
			OOCOff(0xdc143cAA,"Внимание! Начало пейнтболла через 5 минут. Место проведения: Пляж Санта-Мария");
			SetTimer("StartPaintballtwo", 180000, 0);
			PaintballRound = 0;
		}
		return true;
	}
	if(strcmp(cmd, "/drace", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(DerbyOpen != 0) return SendClientMessage(playerid,COLOR_WHITE, "Demolition Derby уже начат");
			OOCOff(TEAM_GROVE_COLOR,"Внимание! Начало Demolition Derby через 5 минут. Регистрация: Стадион San Fierro");
			DerbyOpen = 1;
			SetTimer("DerbyTime", 120000, 0);
		}
		return true;
	}
	if(strcmp(cmd, "/arace", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(EndingRaceRound == 0) return SendClientMessage(playerid,COLOR_WHITE, "Гонка уже начата!");
			OOCOff(0xB9B900AA,"Внимание! Начало гонок через 5 минут. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
			EndingRaceRound = 0;
			SetTimer("StartRacetwo", 180000, 0);
		}
		return true;
	}
	else if (strcmp(cmd, "/mrace", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
			if(EndingmotoRound == 0) return SendClientMessage(playerid,COLOR_WHITE,"::: Вело Гонка уже начата!");
			OOCOff(0xc71585AA,"Внимание! Начало Мото - Гонок через 5 минут. Трасса: Стадион Лос Сантос. Регистрация на месте");
			EndingmotoRound = 0;
			SetTimer("MotoStartGonkatwo", 180000, 0);

		}
		return true;
	}
	if(strcmp(cmd, "/fixcar", true) == 0)
	{
		if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
		if(PlayerInfo[playerid][pPHousekey] != 255)
		{
			new house = PlayerInfo[playerid][pPHousekey];
			DestroyVehicle(caridhouse[playerid]);
			caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc], PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
			LockCar(caridhouse[playerid]);
			IsLocked[caridhouse[playerid]] = 1;
			createdcar = caridhouse[playerid];
			GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-1000", 5000, 1);
			PlayerInfo[playerid][pCash] -= 1000;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new string[29];
			format(string,sizeof(string),"%s.ini",PlayerInfo[playerid][pName]);
			new File = ini_openFile(string);
			ini_getString(File,"Numbercar",string);
			ini_closeFile(File);
			SetVehicleNumberPlate(caridhouse[playerid], string);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pWheels]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pNitro]);
			AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pHydrawlic]);
			if(PJ(caridhouse[playerid]))
			{
				ChangeVehiclePaintjob(caridhouse[playerid], PlayerInfo[playerid][pPaintJob]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pSpoiler]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper1]);
				AddVehicleComponent(caridhouse[playerid], PlayerInfo[playerid][pBumper2]);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/carpass", true) == 0)
	{
	    new str = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
		    if(IsPlayerInVehicle(playerid,caridhouse[i]))
	        {
	            tmp = strtok(cmdtext, idx);
	            if(!strlen(tmp))
	            {
	                giveplayerid = ReturnUser(tmp);
		   			if(IsPlayerConnected(giveplayerid))
			   		{
			   			if(giveplayerid != INVALID_PLAYER_ID)
	   					{
				   			if (ProxDetectorS(8.0, playerid, giveplayerid))
				   			{
						   		new house = PlayerInfo[playerid][pPHousekey];
						   		new textcar[71];
			   					SendClientMessage(giveplayerid,0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
					        	format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
					        	SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        	format(textcar,sizeof(textcar), " Владелец: %s",HouseInfo[house][hOwner]);
					        	SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        	format(textcar,sizeof(textcar), " Состояние: %d процентов",PlayerInfo[playerid][pProcents]);
					        	SendClientMessage(giveplayerid,0xC0E1EEFF, textcar);
					        	SendClientMessage(giveplayerid,0x0AA8DAFF, "-------====================================-------");
								format(textcar, sizeof(textcar), "%s показал(а) документы %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName]);
								ProxDetector(30.0, playerid, textcar, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							}
		        		}
		        	}
				}
				else
				{
			    	new house = PlayerInfo[i][pPHousekey];
			    	new textcar[71];
			    	SendClientMessage(playerid,0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
			    	format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			    	SendClientMessage(playerid,0xC0E1EEFF, textcar);
			    	format(textcar,sizeof(textcar), " Владелец: %s",HouseInfo[house][hOwner]);
			    	SendClientMessage(playerid,0xC0E1EEFF, textcar);
			   	 	format(textcar,sizeof(textcar), " Состояние: %d процентов",PlayerInfo[i][pProcents]);
			    	SendClientMessage(playerid,0xC0E1EEFF, textcar);
			    	SendClientMessage(playerid,0x0AA8DAFF, "-------====================================-------");
			    	format(textcar,sizeof(textcar), "достал(а) документы из бардачка",PlayerInfo[giveplayerid][pName]);
			    	SetPlayerChatBubble(playerid,textcar,COLOR_PURPLE,30.0,10000);
			    	format(textcar,sizeof(textcar), "%s достал(а) документы из бардачка", PlayerInfo[playerid][pName]);
			    	ProxDetector(10.0, playerid, textcar, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	str = 1;
				}
			    return true;
		    }
	    }
	    if(str == 0) SendClientMessage(playerid, COLOR_GREY, "В бардачке этого транспортного средства нет докуметов");
	}
	if(strcmp(cmd, "/sellcar", true) == 0)
    {
        new caren = PlayerInfo[playerid][pCar];
		new house = PlayerInfo[playerid][pPHousekey];
       	if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома");
		if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать мопед");
		switch(caren)
		{
        	case 400: PlayerInfo[playerid][pCash] += 65000;
			case 404: PlayerInfo[playerid][pCash] += 50000;
			case 436: PlayerInfo[playerid][pCash] += 50000;
			case 439: PlayerInfo[playerid][pCash] += 75000;
			case 458: PlayerInfo[playerid][pCash] += 60000;
		    case 466: PlayerInfo[playerid][pCash] += 55000;
            case 475: PlayerInfo[playerid][pCash] += 95000;
            case 478: PlayerInfo[playerid][pCash] += 50000;
			case 479: PlayerInfo[playerid][pCash] += 55000;
			case 492: PlayerInfo[playerid][pCash] += 70000;
			case 516: PlayerInfo[playerid][pCash] += 70000;
			case 517: PlayerInfo[playerid][pCash] += 75000;
			case 518: PlayerInfo[playerid][pCash] += 85000;
  			case 526: PlayerInfo[playerid][pCash] += 55000;
	    	case 527: PlayerInfo[playerid][pCash] += 50000;
			case 542: PlayerInfo[playerid][pCash] += 60000;
			case 543: PlayerInfo[playerid][pCash] += 50000;
			case 546: PlayerInfo[playerid][pCash] += 70000;
			case 547: PlayerInfo[playerid][pCash] += 55000;
		    case 549: PlayerInfo[playerid][pCash] += 60000;
		    case 567: PlayerInfo[playerid][pCash] += 100000;
		    case 419: PlayerInfo[playerid][pCash] += 400000;
		    case 421: PlayerInfo[playerid][pCash] += 415000;
		    case 445: PlayerInfo[playerid][pCash] += 405000;
		    case 489: PlayerInfo[playerid][pCash] += 440000;
		    case 491: PlayerInfo[playerid][pCash] += 400000;
		    case 533: PlayerInfo[playerid][pCash] += 410000;
		    case 534: PlayerInfo[playerid][pCash] += 360000;
		    case 554: PlayerInfo[playerid][pCash] += 420000;
		    case 555: PlayerInfo[playerid][pCash] += 500000;
		    case 561: PlayerInfo[playerid][pCash] += 405000;
		    case 579: PlayerInfo[playerid][pCash] += 465000;
		    case 580: PlayerInfo[playerid][pCash] += 500000;
		    case 589: PlayerInfo[playerid][pCash] += 350000;
		    case 603: PlayerInfo[playerid][pCash] += 400000;
		    case 418: PlayerInfo[playerid][pCash] += 350000;
		    case 461: PlayerInfo[playerid][pCash] += 500000;
		    case 581: PlayerInfo[playerid][pCash] += 500000;
		    case 586: PlayerInfo[playerid][pCash] += 400000;
		    case 401: PlayerInfo[playerid][pCash] += 170000;
		    case 405: PlayerInfo[playerid][pCash] += 200000;
		    case 412: PlayerInfo[playerid][pCash] += 175000;
		    case 422: PlayerInfo[playerid][pCash] += 155000;
		    case 426: PlayerInfo[playerid][pCash] += 210000;
		    case 467: PlayerInfo[playerid][pCash] += 185000;
		    case 474: PlayerInfo[playerid][pCash] += 185000;
		    case 496: PlayerInfo[playerid][pCash] += 240000;
		    case 507: PlayerInfo[playerid][pCash] += 225000;
		    case 529: PlayerInfo[playerid][pCash] += 220000;
		    case 536: PlayerInfo[playerid][pCash] += 200000;
		    case 540: PlayerInfo[playerid][pCash] += 165000;
		    case 550: PlayerInfo[playerid][pCash] += 240000;
		    case 551: PlayerInfo[playerid][pCash] += 240000;
		    case 566: PlayerInfo[playerid][pCash] += 175000;
		    case 575: PlayerInfo[playerid][pCash] += 230000;
		    case 576: PlayerInfo[playerid][pCash] += 175000;
		    case 585: PlayerInfo[playerid][pCash] += 175000;
		    case 600: PlayerInfo[playerid][pCash] += 210000;
		    case 402: PlayerInfo[playerid][pCash] += 1500000;
            case 411: PlayerInfo[playerid][pCash] += 1500000;
            case 415: PlayerInfo[playerid][pCash] += 1500000;
            case 429: PlayerInfo[playerid][pCash] += 1500000;
            case 451: PlayerInfo[playerid][pCash] += 2000000;
            case 506: PlayerInfo[playerid][pCash] += 1500000;
            case 541: PlayerInfo[playerid][pCash] += 2000000;
            case 522: PlayerInfo[playerid][pCash] += 1500000;
            case 434: PlayerInfo[playerid][pCash] += 1600000;
            case 477: PlayerInfo[playerid][pCash] += 950000;
            case 480: PlayerInfo[playerid][pCash] += 1000000;
            case 535: PlayerInfo[playerid][pCash] += 850000;
            case 545: PlayerInfo[playerid][pCash] += 700000;
            case 558: PlayerInfo[playerid][pCash] += 850000;
            case 559: PlayerInfo[playerid][pCash] += 900000;
            case 560: PlayerInfo[playerid][pCash] += 895000;
            case 562: PlayerInfo[playerid][pCash] += 900000;
            case 565: PlayerInfo[playerid][pCash] += 900000;
            case 587: PlayerInfo[playerid][pCash] += 900000;
            case 602: PlayerInfo[playerid][pCash] += 800000;
            case 521: PlayerInfo[playerid][pCash] += 800000;
            case 463: PlayerInfo[playerid][pCash] += 800000;
            case 468: PlayerInfo[playerid][pCash] += 700000;
		}
		CompVehDel(playerid);
		PlayerInfo[playerid][pProcents] = 100;
		PlayerInfo[playerid][pCar] = 462;
		PlayerInfo[playerid][pColor] = 0;
		PlayerInfo[playerid][pColor1] = 0;
		HouseInfo[house][hVcol1] = 0;
		HouseInfo[house][hVcol2] = 0;
		SendClientMessage(playerid,COLOR_WHITE, "Вы продали свой автомобиль");
		DestroyVehicle(caridhouse[playerid]);
		OnPropUpdate();
		caridhouse[playerid] = CreateVehicle(PlayerInfo[playerid][pCar], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc], PlayerInfo[playerid][pColor], PlayerInfo[playerid][pColor1], 86400);
		Fuell[caridhouse[playerid]] = PlayerInfo[playerid][pFuelCar];
		LockCar(caridhouse[playerid]);
		IsLocked[caridhouse[playerid]] = 1;
 	}
	if(strcmp(cmd, "/pgetip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		  	if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pgetip [ip]");
			SendClientMessage(playerid, COLOR_REDD, "Игроки с данного IP адреса:");
			new playersip[16];
			new string[68];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(!strcmp(playersip, tmp))
				 	{
				 	    GetPlayerIp(i,playersip,sizeof(playersip));
						format(string, sizeof(string), "[%d] %s | IP %s", i,PlayerInfo[i][pName],playersip);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sellzone", true) == 0)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				if(PlayerInfo[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей зоне");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellzone [id] [цена]");
				new playa;
				new money;
				playa = ReturnUser(tmp);
				if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать зону самому себе");
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if(money < 1 || money > 50000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 50000 вирт");
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, playa))
						{
							new string[106];
							format(string, sizeof(string), "Вы предложили %s купить территорию за %d вирт",PlayerInfo[playa][pName],money);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s предлагает Вам купить территорию за %d вирт. (/accept zone) для покупки",PlayerInfo[playerid][pName],money);
							SendClientMessage(playa, 0x6495EDFF, string);
							ZoneOffer[playa] = playerid;
							sellzone[playa] = PlayerInfo[playerid][pMember];
							ZonePrice[playa] = money;
						}
						else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					}
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/agetip", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /agetip [Ник]");
			new string[53];
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
                new File = ini_openFile(string);
				ini_getString(File, "pIp",string);
				ini_closeFile(File);
				format(string, sizeof(string), "Ник: %s | IP: %s",tmp,string);
   				SendClientMessage(playerid, 0x6495EDFF, string);
			}
   			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/agetipreg", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
            if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /agetipreg [Ник]");
			new string[69];
	   	    format(string, sizeof(string), "%s.ini", tmp);
            if(fexist(string))
      		{
                new File = ini_openFile(string);
				ini_getString(File, "pIpReg",string);
				ini_closeFile(File);
				format(string, sizeof(string), "Ник: %s | Регистрационный IP: %s",tmp,string);
   				SendClientMessage(playerid, 0x6495EDFF, string);
			}
   			else SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
		}
		return true;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pCDPlayer])
			{
		        new x_nr[30];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|_________________ MP3 Плеер _________________|");
					SendClientMessage(playerid, COLOR_GRAD1, "Введите: /music [значение]");
			  		SendClientMessage(playerid, COLOR_GREY, "Доступные значения: rock, rap, raggae");
			  		SendClientMessage(playerid, COLOR_GREY, "Для отключения музыки поставте значение: off");
					SendClientMessage(playerid, COLOR_WHITE, "|_________________________________________|");
					return true;
				}
			    if(strcmp(x_nr,"rock",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~MP3 Player on", 5000, 5);
				    switch(random(16))
                    {
                         case 0: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/07/93636efe055c4ca8fcc9075c1a5318.mp3");
                         case 1: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/a9/5af7320d88e7b4358a51e637bf6105.mp3");
                         case 2: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/cc/aa86534e24b722696a311f3aba9ef4.mp3");
                         case 3: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/8b/3ea8ecbfb0363ab0f72f56b1ea2d04.mp3");
                         case 4: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/df/ff4e5f6deb41e7e626a7bdfc9dbd9b.mp3");
                         case 5: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/71/0c17825e2dce3c4ef95d5805b0b405.mp3");
                         case 6: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/ee/98f61c947260371b7e484ebdfb2560.mp3");
                         case 7: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/6b/b79c264c43cd852aab56fe4a65bd3d.mp3");
                         case 8: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/e6/39a2ec4fd589e5b40e883f3e3145d3.mp3");
                         case 9: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/1a/8fab25efc87ba41f2386b6db8b75dd.mp3");
                         case 10: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/59/4fa73ae77ca69d41f17c40c85ab289.mp3");
                         case 11: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/c8/a9410e80d73b012df9c32c22420fd4.mp3");
                         case 12: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/f6/53e85c1569c6813ae91546b6f096eb.mp3");
                         case 13: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/fc/00accfe7c50ec5efd296c782d5c1c2.mp3");
                         case 14: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/48/db772adf492c703e2b97dd6b84cfb9.mp3");
                         case 15: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/7e/b2ba380b0518d7f5bbee58b707eb73.mp3");
                     }
                     return true;
				}
				else if(strcmp(x_nr,"rap",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~MP3 Player on", 5000, 5);
				    switch(random(6))
                    {
                         case 0: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/ee/65d56cbf4b36fe61491634aecfffbf.mp3");
                         case 1: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/02/a655f15e8dcf76603643b164b2123d.mp3");
                         case 2: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/a9/7a379b9a4574c154a3d5c20b6106ec.mp3");
                         case 3: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/83/c06b31462e1ca6b2db61b86a45f9b4.mp3");
                         case 4: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/ba/4cf837b2b3f210a110210e4ea0ed80.mp3");
                         case 5: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/2c/d26645fb26a149390866ec3a0229b4.mp3");
                     }
                     return true;
				}
				else if(strcmp(x_nr,"raggae",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~MP3 Player on", 5000, 5);
				    switch(random(9))
                    {
                         case 0: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/c9/7973c45d22311b8c1a4f2e6fd75f57.mp3");
                         case 1: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/ae/5eaf8fa3611529ce963da3bb34a0e7.mp3");
                         case 2: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/68/34c15e8c93eb7692ee09397bd6036b.mp3");
                         case 3: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/1e/6a63fff73999ce6e060b8ef100d769.mp3");
                         case 4: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/e6/791c09eb2872ec850982bf5e402538.mp3");
                         case 5: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/f5/f0fbe5701fa8ad6a06c479811f4696.mp3");
                         case 6: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/ca/370a9130c137dd9659532bb1764910.mp3");
                         case 7: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/4d/c1c9454bd329170aa55a4186afb7bc.mp3");
                         case 8: PlayAudioStreamForPlayer(playerid,"http://klopp.net.ru/musicbox/i/0313/a1/4dcc979a119734c1a65c0af5c18365.mp3");
                     }
                     return true;
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~MP3 Player Off", 5000, 5);
					StopAudioStreamForPlayer(playerid);
				}
				else SendClientMessage(playerid, COLOR_GREY, "Неизвестное значение");
			}
			else SendClientMessage(playerid, COLOR_GREY, "У вас нет MP3 плеера");
	    }
	    return true;
	}
	if(strcmp(cmd, "/atm", true) == 0)
	{
		if(IsABankomat(playerid))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация", "Далее", "Выход");
			}
			return true;
		}
	}
	if(strcmp(cmd, "/admins", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pDonateRank] >= 2)
 	    {
	    	SendClientMessage(playerid, COLOR_YELLOW, "Админы Online:");
	    	new string[58];
		   	for(new i = 0; i < MAX_PLAYERS; i++)
			{
   				if(IsPlayerConnected(i))
			    {
           			if(PlayerInfo[i][pAdmin] >= 1)
			       	{
						format(string, sizeof(string), "%s(ID:%d) [lvl: %d]",PlayerInfo[i][pName],i,PlayerInfo[i][pAdmin]);
						SendClientMessage(playerid, COLOR_YELLOW2, string);
				    }
			    }
		    }
		}
  		return true;
	}
	if(strcmp(cmd, "/members",true)==0)
    {
		if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
 		SendClientMessage(playerid, 0x059BD3FF, "Члены организации Online:");
 		new string[52];
		for(new i = 0; i < MAX_PLAYERS; i++)
 		{
 			if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
			    {
					if(PlayerInfo[i][pLeader] == PlayerInfo[playerid][pMember]) format(string, sizeof(string), "[%d] %s  ранг: Лидер",i,PlayerInfo[i][pName]);
					else format(string, sizeof(string), "[%d] %s  ранг: %d",i,PlayerInfo[i][pName], PlayerInfo[i][pRank]);
					SendClientMessage(playerid, 0x059BD3FF, string);
				}
			}
		}
        return true;
    }
	else if(strcmp(cmd, "/pdd", true)==0)
	{
		new pdddialog[2148];
		format(pdddialog,sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s",
		pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
		ShowPlayerDialog(playerid,15,DIALOG_STYLE_MSGBOX, "Правила дорожного движения", pdddialog, "Готово", "");
		format(pdddialog, sizeof(pdddialog), "%s читает Правила Дорожного Движения", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, pdddialog, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	else if(strcmp(cmd, "/creaturemode", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid,COLOR_GREY,"Вы не создатель");
        if(creaturemode[playerid] == 0)
        {
            creaturemode[playerid] = 1;
            SendClientMessage(playerid,COLOR_GREY,"Режим создателя включён");
            return true;
        }
		else
        {
            creaturemode[playerid] = 0;
            SendClientMessage(playerid,COLOR_GREY,"Режим создателя выключен");
            return true;
        }
	}
	else if(strcmp(cmd, "/ahelp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(dostup[playerid] != 1) return ShowPlayerDialog(playerid,2934,DIALOG_STYLE_INPUT, "Административная авторизация", "Введите свой пароль от административной панели\n\nДля авторизации и активации административных прав.", "Вход", "Отмена");
			new listitems[] = "[1] Уровень Администрирования\n[2] Уровень Администрирования\n[3] Уровень Администрирования\n[4] Уровень Администрирования\n[5] Уровень Администрирования\n[6] Уровень Администрирования\n[7] Уровень Администрирования";
			ShowPlayerDialog(playerid, 20011, DIALOG_STYLE_LIST, "Команды администратора", listitems, "Выбрать", "Отмена");
		}
	  	return true;
	}
	else if(strcmp(cmd, "/clist", true) == 0)
	{
	    new dialog[1024];
		strcat(dialog, "[0]	Выключить цвет\n[1]{089401}	Зелёный\n[2]{56FB4E}	Светло зелёный\n[3]{49E789}	Ярко зелёный\n[4]{2A9170}	Бирюзовый\n[5]{9ED201}	Жёлто-зелёный\n[6]{279B1E}	Тёмно-зелёный\n[7]{51964D}	Серо-зелёный\n[8]{FF0606}	Красный\n[9]{F68F67}	Ярко-красный\n[10]{F45000}	Оранжевый\n[11]{BE8A01}	Коричневый\n[12]{B30000}	Тёмно-красный\n[13]{954F4F}	Cеро-красный\n[14]{E7961D}	Жёлто-оранжевый\n[15]{E6284E}	Малиновый\n");
		strcat(dialog, "[16]{FF9DB6}	Розовый\n[17]{110CE7}	Синий\n[18]{0CD7E7}	Голубой\n[19]{139BEC}	Синяя сталь\n[20]{2C9197}	Сине-зелёный\n[21]{114D71}	Тёмно-синий\n[22]{8813E7}	Фиолетовый\n[23]{B313E7}	Индиго\n[24]{758C9D}	Серо-синий\n[25]{FFDE24}	Жёлтый\n[26]{FFEE8A}	Кукурузный\n[27]{DDB201}	Золотой\n[28]{DDA701}	Старое золото\n[29]{B0B000}	Оливковый\n[30]{868484}	Серый\n[31]{B8B6B6}	Серебро\n[32]{333333}	Чёрный\n[33]{FAFAFA}	Белый");
        ShowPlayerDialog(playerid,2001,DIALOG_STYLE_LIST, "Цвет",dialog, "Выбрать", "Отмена");
  		return true;
	}
	else if(strcmp(cmd, "/setclist", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setclist [id] [id цвета 0-34]");
			new playa;
			new colorf;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			colorf = strval(tmp);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setclist [id] [id цвета 0-34]");
			if(colorf < 0 ||colorf > 34) return SendClientMessage(playerid, COLOR_BLUE, "Цвета (0-34)");
	        switch(colorf)
	        {
			    case 0: SetPlayerColor(playa, TEAM_HIT_COLOR);
			    case 1: SetPlayerColor(playa,0x089401FF);
			    case 2: SetPlayerColor(playa,0x56FB4EFF);
			    case 3: SetPlayerColor(playa,0x49E789FF);
			    case 4: SetPlayerColor(playa,0x2A9170FF);
		        case 5: SetPlayerColor(playa,0x9ED201FF);
		        case 6: SetPlayerColor(playa,0x279B1EFF);
			    case 7: SetPlayerColor(playa,0x51964DFF);
	   	        case 8: SetPlayerColor(playa,0xFF0606FF);
                case 9: SetPlayerColor(playa,0xF68F67FF);
		        case 10: SetPlayerColor(playa,0xF45000FF);
		        case 11: SetPlayerColor(playa,0xBE8A01FF);
      	        case 12: SetPlayerColor(playa,0xB30000FF);
			    case 13: SetPlayerColor(playa,0x954F4FFF);
				case 14: SetPlayerColor(playa,0xE7961DFF);
			    case 15: SetPlayerColor(playa,0xE6284EFF);
			    case 16: SetPlayerColor(playa,0xFF9DB6FF);
			    case 17: SetPlayerColor(playa,0x110CE7FF);
			    case 18: SetPlayerColor(playa,0x0CD7E7FF);
			    case 19: SetPlayerColor(playa,0x139BECFF);
			    case 20: SetPlayerColor(playa,0x2C9197FF);
			    case 21: SetPlayerColor(playa,0x114D71FF);
			    case 22: SetPlayerColor(playa,0x8813E7FF);
		        case 23: SetPlayerColor(playa,0xB313E7FF);
			    case 24: SetPlayerColor(playa,0x758C9DFF);
			    case 25: SetPlayerColor(playa,0xFFDE24FF);
			    case 26: SetPlayerColor(playa,0xFFEE8AFF);
			    case 27: SetPlayerColor(playa,0xDDB201FF);
			    case 28: SetPlayerColor(playa,0xDDA701FF);
			    case 29: SetPlayerColor(playa,0xB0B000FF);
			    case 30: SetPlayerColor(playa,0x868484FF);
			    case 31: SetPlayerColor(playa,0xB8B6B6FF);
			    case 32: SetPlayerColor(playa,0x333333FF);
	            case 33: SetPlayerColor(playa,0xFAFAFAFF);
			    case 34: SetPlayerColor(playa,0xE35656FF);
			}
       	}
  		return true;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(GetPlayerVirtualWorld(playerid) == i+50)
				{
		            SetPlayerInterior(playerid,HouseInfo[i][hOint]);
		            SetPlayerVirtualWorld(playerid,HouseInfo[i][hVworld]);
		            SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
		            PlayerInfo[playerid][pInt] = HouseInfo[i][hOint];
		            PlayerInfo[playerid][pLocal] = 255;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/directory", true) == 0 || strcmp(cmd, "/dir", true) == 0)
	{
		if(PlayerInfo[playerid][pDirectory] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет телефонной книги (Её можно купить в любом 24/7)");
		ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST, "Справочник", "[0] Адвокаты\n[1] Таксисты\n[2] Крупье\n[3] Лидеры организаций\n[4] Инструкторы\n[5] Механики\n[6] Медики\n[7] Развозчики продуктов\n[8] Тренеры", "Выбрать", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/c", true) == 0)
	{
	    new string[43];
		format(string, sizeof(string), "%s достаёт мобильник", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,9,18871,6,0.08,0.0,0.0,100,180.0,10,1.0,1.0,1.0);
		PlaySoundNearPlayer(playerid, 3600);
		ShowPlayerDialog(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", " Вызвать Таксиста\n Вызвать Медицинскую помощь\n Вызвать Механика\n Вызвать Полицию\n Заказать игрока наёмникам", "Выбор", "Отмена");
		return true;
	}
	if(strcmp(cmd, "/makedonate", true, 10) == 0)
	{
		ShowPlayerDialog(playerid,1993,DIALOG_STYLE_INPUT, "Код #1", "==========================\n            Введите код №1\n==========================", "Далее", "Отмена");
		return true;
	}

	if(strcmp(cmd, "/donate", true, 10) == 0)
	{
        if(PlayerInfo[playerid][pDonate] <= 0)
		{
            ShowPlayerDialog(playerid, 348, DIALOG_STYLE_LIST, "Донат меню","Посмотреть кол-во очков доната\n [1] Скиллы на оружие\t [1000000 очков]", "Выбрать", "Отмена");
        }
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет очков доната");
    }
	if(strcmp(cmd, "/mm", true) == 0 || strcmp(cmd, "/mainmenu", true) == 0)
	{
		new listitems[] = " [1] Настройки\n [2] Статистика персонажа\n [3] Команды сервера\n [4] Репорт\n [5] Смена пароля\n [6] Очистить чат\n [7] Правила\n [8] Слив денег\n [9] Безопастность\n [10] Смена ника\n [11] Донат";
		ShowPlayerDialog(playerid, 9623, DIALOG_STYLE_LIST, "Личное меню", listitems, "Выбрать", "Отмена");
		showhelp[playerid] = 0;
		return true;
	}
	if(strcmp(cmd, "/items", true) == 0 || strcmp(cmd, "/inv", true) == 0)
	{
	    new string[1024];
		format(string, sizeof(string), "Материалы: %d\nНаркотики: %d\nКлючи: %d\nКлючи(news): %d\nРыба: %d\nГрибы: %d\nЧерви: %d\nЗаряды балончика: %d\nПрезервативы: %d\nВино: %d\nПиво: %d\nСигареты: %d\nСпрайт: %d\nФейерверки: %d\nУдочка: %d\nМобильник: %d\nСправочник: %d\nMP3: %d\nЛотерея: %d\nВерёвки: %d",
		PlayerInfo[playerid][pMaterials],PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pKeys],PlayerInfo[playerid][pNkeys],PlayerInfo[playerid][pFishes],PlayerInfo[playerid][pMushrooms],
		PlayerInfo[playerid][pWorms],PlayerInfo[playerid][pBalon], PlayerInfo[playerid][pPrez],PlayerInfo[playerid][pWine],PlayerInfo[playerid][pBeer],PlayerInfo[playerid][pSig],
		PlayerInfo[playerid][pSprite],PlayerInfo[playerid][pFirework],PlayerInfo[playerid][pFishrod],PlayerInfo[playerid][pPhone],PlayerInfo[playerid][pDirectory],PlayerInfo[playerid][pCDPlayer],PlayerInfo[playerid][pTicket],PlayerInfo[playerid][pRope]);
		ShowPlayerDialog(playerid, 9201, DIALOG_STYLE_LIST, "Инвентарь", string, "Готово", "Назад");
		return true;
	}
	if(strcmp(cmd, "/switchskin", true) == 0)
	{
		if(IsAGang(playerid))
		{
			if(forma[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет формы");
			SetPlayerSkin(playerid,287);
			SetPlayerColor(playerid, COLOR_GREEN);
			forma[playerid] = 0;
			proverkaforma[playerid] = 1;
		}
		return true;
	}
	if(strcmp(cmd, "/carm", true) == 0 || strcmp(cmd, "/conveyingarms", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 19 || proverkaforma[playerid] == 1)
		{
			new listitems[] = " [1] Загрузка\n [2] Разгрузить на гл.склад\n [3] Разгрузить на склад Армии ЛС\n [4] Разгрузить на склад Армии СФ\n [5] Разгрузить на склад ЛСПД\n [6] Разгрузить на склад ФБР\n [7] Разгрузить на склад СФПД\n [8] Разгрузить на склад ЛВПД\n [9] Разгрузить на клад бандам\n [10] Разгрузить на склад байкерам";
			ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "Развозка материалов", listitems, "Выбрать", "Отмена");
		}
		return true;
	}
	if(strcmp(cmd, "/hackbase", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /hackbase [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					new hackbaseusp = 1+random(3);
					if(hackbaseusp != 3) return SendClientMessage(playerid, COLOR_BLUE, "Вам не удалось взломать базу, попробуйте ещё раз");
					new string[66];
					format(string, sizeof(string), "Вы взломали базу и сняли розыск c игрока %s", PlayerInfo[giveplayerid][pName]);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s взломал базу и снял(а) с вас розыск", PlayerInfo[playerid][pName]);
					SendClientMessage(giveplayerid, COLOR_BLUE, string);
					PlayerInfo[giveplayerid][pMadWant] = 0;
					SetPlayerWantedLevel(giveplayerid, 0);
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/tie", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tie [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerTied[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new car = GetPlayerVehicleID(playerid);
						if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя связать самого себя");
						if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						{
							new string[67];
							format(string, sizeof(string), "%s связал(а) игрока %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 0);
							TieTime[giveplayerid] = 300;
							PlayerTied[giveplayerid] = 1;
						}
						else SendClientMessage(playerid, COLOR_GREY, "Игрок не в автомобиле");
					}
					else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/debtors", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 6 ранга");
			new string[54];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[playerid][pMember] == 5)
					{
						if(PlayerInfo[i][pMafiaRoof] == 5 && PlayerInfo[i][pMember] == 0)
						{
							format(string, sizeof(string), "Должник: %s | Долг: %s", PlayerInfo[i][pName],PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
					if(PlayerInfo[playerid][pMember] == 6)
					{
						if(PlayerInfo[i][pMafiaRoof] == 6 && PlayerInfo[i][pMember] == 0)
						{
							format(string, sizeof(string), "Должник: %s | Долг: %s", PlayerInfo[i][pName],PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
					if(PlayerInfo[playerid][pMember] == 14)
					{
						if(PlayerInfo[i][pMafiaRoof] == 14 && PlayerInfo[i][pMember] == 0)
						{
							format(string, sizeof(string), "Должник: %s | Долг: %s", PlayerInfo[i][pName],PlayerInfo[i][pDebt]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setdebt", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setdebt [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Неверный id игрока");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя поставить себе крышу");
			new string[74];
			format(string, sizeof(string), "%s предлагает вам крышу (/accept debt) чтобы принять", PlayerInfo[giveplayerid][pName]);
			SendClientMessage(giveplayerid, 0x6495EDFF, string);
			format(string, sizeof(string), "%s предлагает крышу игроку %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Krisha[giveplayerid] = PlayerInfo[playerid][pMember];
			KrishaOffer[giveplayerid] = playerid;
			return true;
		}
		else return SendClientMessage(playerid, COLOR_RED, "Вы неуполномочены использовать данную команду");
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 5  || PlayerInfo[playerid][pMember] == 14)
		{
			if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /untie [id]");
			giveplayerid = ReturnUser(tmp);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Неверный id игрока");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_RED, "Вы не можете себя развязать");
			if(!PlayerTied[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не связан");
			new string[66];
			format(string, sizeof(string), "%s развязал игрока %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			TogglePlayerControllable(giveplayerid, 1);
			PlayerTied[giveplayerid] = 0;
			TieTime[giveplayerid] = 0;
			return true;
		}
		else return SendClientMessage(playerid, COLOR_RED, "Вы неуполномочены использовать данную команду");
	}
	if(strcmp(cmd, "/showpass",true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /showpass [id]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Неверный id игрока");
		if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
		new ttext[32];
		switch(PlayerInfo[playerid][pMember])
		{
			case 0: ttext = "Гражданин";
			case 1: ttext = "LSPD";
			case 2: ttext = "FBI";
			case 3: ttext = "SFA";
			case 4: ttext = "МЧС SF";
			case 5: ttext = "LCN";
			case 6: ttext = "Yakuza";
			case 7: ttext = "Мэрия";
			case 8: ttext = "Casino Caligula";
			case 9: ttext = "Sf News";
			case 10: ttext = "SFPD";
			case 11: ttext = "Инструкторы";
			case 12: ttext = "The Ballas Gang";
			case 13: ttext = "Los Santos Vagos Gang";
			case 14: ttext = "Russian Mafia";
			case 15: ttext = "Grove Street Gang";
			case 16: ttext = "Ls News";
			case 17: ttext = "Varios Los Aztecas Gang";
			case 18: ttext = "The Rifa Gang";
			case 19: ttext = "LVA";
			case 20: ttext = "Lv News";
			case 21: ttext = "LVPD";
			case 22: ttext = "МЧС LS";
			case 23: ttext = "Sons of Silence MC";
			case 24: ttext = "Hell's Angels MC";
			case 25: ttext = "Outlaws MC";
			case 26: ttext = "Warlocks MC";
			case 27: ttext = "Highwaymen MC";
			case 28: ttext = "Free Souls MC";
			case 29: ttext = "Pagans MC";
			case 30: ttext = "Mongols MC";
			case 31: ttext = "Vagos MC";
			case 32: ttext = "Bandidos MC";
			case 33: ttext = "МЧС LV";
			case 34: ttext = "Пожарная часть SA";
			case 35: ttext = "Гражданин";
		}
		new jtext[32];
		switch(PlayerInfo[playerid][pJob])
		{
  			case 0: jtext = "Безработный";
			case 1: jtext = "Водитель автобуса";
			case 2: jtext = "Механик";
			case 3: jtext = "Продавец хотдогов";
			case 4: jtext = "Таксист";
			case 5: jtext = "Развозчик продуктов";
			case 6: jtext = "Тренер";
			case 7: jtext = "Прораб";
			case 8: jtext = "Инкассатор";
			case 9: jtext = "Частный детектив";
			case 10: jtext = "Дальнобойщик";
			case 11: jtext = "Мусоросборщик";
			case 12: jtext = "Машинист";
		}
		new string[512];
		if(ttext[1] != 0) format(string, sizeof(string),"ФИО:%s\nВозраст: %d\nРодился в США,ш.Сан Андреас,г.Лос Сантос\nСупруг(а): %s\nДополнительные данные:\nОрганизация: %s\nРанг: %d\nЗаконопослушность: %d", PlayerInfo[playerid][pName],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pMarriedTo],ttext,PlayerInfo[playerid][pRank],PlayerInfo[playerid][pLabiding]);
		else format(string, sizeof(string),"ФИО:%s\nВозраст: %d\nРодился в США,ш.Сан Андреас,г.Лос Сантос\nСупруг(а): %s\nДополнительные данные:\nРабота: %s\nЗаконопослушность: %d", PlayerInfo[playerid][pName],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pMarriedTo],jtext,PlayerInfo[playerid][pLabiding]);
		if(PlayerInfo[playerid][pMadWant] > 0) SendClientMessage(giveplayerid, COLOR_REDD, "Внимание! Это человек в розыске!");
		ShowPlayerDialog(giveplayerid,9025,DIALOG_STYLE_MSGBOX,"Паспорт",string,"Ок","Отмена");
		format(string,sizeof(string), "показал(a) свой паспорт игроку %s",PlayerInfo[giveplayerid][pName]);
		SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		format(string, sizeof(string), "%s показал(a) свой паспорт игроку %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	if(strcmp(cmd, "/showudost",true) == 0)
	{
		if(IsACop(playerid))
		{
 			tmp = strtok(cmdtext, idx);
		   	if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /showudost [id]");
		   	giveplayerid = ReturnUser(tmp);
		   	if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "Неверный id игрока");
			if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_RED, "Игрок далеко от вас");
			new ttext[32];
			switch(PlayerInfo[playerid][pMember])
			{
			    case 1: ttext = "LSPD";
				case 2: ttext = "FBI";
				case 10: ttext = "SFPD";
				case 21: ttext = "LVPD";
			}
			new string[256];
   			format(string, sizeof(string), "Имя: %s\nТелефон: %d\nВозраст: %d\nПодразделение: %s\nРанг: %d", PlayerInfo[playerid][pName],PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pLevel],ttext,PlayerInfo[playerid][pRank]);
			ShowPlayerDialog(giveplayerid, 69, DIALOG_STYLE_MSGBOX, "Удостоверение",string, "Готово", "");
			format(string, sizeof(string), "%s показал своё удостоверение игроку %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			format(string,sizeof(string), "показал своё удостоверение игроку %s",PlayerInfo[giveplayerid][pName]);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
     	}
		return true;
	}
	if(!strcmp(cmd, "/gzcolor",true))
	{
		if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_RED, "Вы неуполномочены использовать данную команду");
		tmp = strtok(cmdtext,idx);
		new l = strval(tmp);
		if(!IsInAllowedF(l)) return SendClientMessage(playerid,-1, "Введите: /gzcolor [банда]");
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				GZInfo[i][gFrakVlad] = l;
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				SaveGZ();
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/tazerall", true) ==0)
	{
		if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 3)
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!ProxDetectorS(6.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться рядом друг с другом");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
			if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
			new string[64];
			format(string, sizeof(string), "Агент FBI %s оглушил(а) всех на 10 секунд", PlayerInfo[playerid][pName]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			TogglePlayerControllable(giveplayerid, 0);
			SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_HANDSUP);
			SetTimerEx("UnFreeze", 10000, false, "i", giveplayerid);
			Tazer[playerid] = 1;
			TazerTime[playerid] = 11;
		}
		return true;
	}
	if(strcmp(cmd, "/ftazer", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 2)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[20];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job)) return SendClientMessage(playerid,COLOR_WHITE,"Введите: /ftazer [1/2/3]");
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
				if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
				if(strcmp(x_job,"1", true) == 0)
				{
				    new string[57];
					format(string, sizeof(string), "Агент FBI %s оглушил(а) всех рядом", PlayerInfo[playerid][pName]);
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(playerid,X,Y,Z);
						if(IsPlayerConnected(i))
						{
							if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
							{
								TogglePlayerControllable(i, 0);
								SendClientMessage(i,-1,"Вы обездвижены на 10 секунд");
								SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
								SetTimerEx("UnFreeze", 10000, false, "i", i);
								Tazer[playerid] = 1;
								TazerTime[playerid] = 11;
								Playert[i] = 1;
					            PlayertTime[i] = 11;
							}
						}
					}
				}
				if(strcmp(x_job,"2", true) == 0)
				{
				    new string[75];
					format(string, sizeof(string), "Агент FBI %s оглушил(а) всех рядомстоящих законников", PlayerInfo[playerid][pName]);
                    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    for(new i = 0; i < MAX_PLAYERS; i++)
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(playerid,X,Y,Z);
                        if(IsPlayerConnected(i))
                        {
                            if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
                            {
                                if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 ||PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 ||PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
                                {
                                    TogglePlayerControllable(i,0);
                                    SendClientMessage(i,-1,"Вы обездвижены на 10 секунд");
                                    SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
                                    SetTimerEx("UnFreeze", 10000, false, "i", i);
									Tazer[playerid] = 1;
									TazerTime[playerid] = 11;
									Playert[i] = 1;
					                PlayertTime[i] = 11;
                                }
                            }
                        }
                    }
                }
                if(strcmp(x_job,"3", true) == 0)
                {
                    new string[72];
                    format(string, sizeof(string), "Агент FBI %s оглушил(а) всех рядомстоящих жителей", PlayerInfo[playerid][pName]);
                    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    for(new i = 0; i < MAX_PLAYERS; i++)
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(playerid,X,Y,Z);
                        if(IsPlayerConnected(i))
                        {
                            if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
                            {
                                if(PlayerInfo[i][pMember] == 0 && PlayerInfo[i][pLeader] == 0)
                                {
                                    TogglePlayerControllable(i,0);
                                    SendClientMessage(i,-1,"Вы обездвижены на 10 секунд");
                                    SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
                                    SetTimerEx("UnFreeze", 10000, false, "i", i);
									Tazer[playerid] = 1;
									TazerTime[playerid] = 11;
									Playert[i] = 1;
					                PlayertTime[i] = 11;
                                }
                            }
                        }
                    }
                }
            }
        }
        return true;
    }
	if(strcmp(cmd, "/tazer", true) == 0)
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 3 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 4)
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
			if(Tazer[playerid] == 1) return  SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера  ещё не прошла");
			new suspect = GetClosestPlayer(playerid);
			if(IsPlayerConnected(suspect))
			{
				if(PlayerCuffed[suspect] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок в наручниках");
				if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
				{
					if(IsACop(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ударить электрошокером законника");
					if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
					new string[77];
					SetPlayerAttachedObject(playerid,9,18642,6,0.1,-0.03,0.09,45.0,190.0,345,1.0,1.0,1.0);
					format(string, sizeof(string), "Вас обездвижил(а) электрошокером %s на 15 секунд", PlayerInfo[playerid][pName]);
					SendClientMessage(suspect, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы обездвижили электрошокером %s на 15 секунд", PlayerInfo[suspect][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s проводит задержание игрока %s", PlayerInfo[playerid][pName], PlayerInfo[suspect][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					TogglePlayerControllable(suspect, 0);
					Tazer[playerid] = 1;
					TazerTime[playerid] = 15;
					Playert[suspect] = 1;
					PlayertTime[suspect] = 15;
					ApplyAnimation(playerid, "KNIFE", "knife_3", 4.1, 0, 1, 1, 0, 0 );
					ApplyAnimation(suspect, "PED", "handsup", 4.1, 0, 0, 0, 1, 1, 1 );
				}
				else SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
		return true;
	}
	if(strcmp(cmd, "/itazer", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] <= 3)
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в машине");
			if(Tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Перезарядка электрошокера ещё не прошла");
			new suspect = GetClosestPlayer(playerid);
			if(IsPlayerConnected(suspect))
			{
				if(PlayerCuffed[suspect] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок в наручниках");
				if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
				{
					if(IsACop(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ударить электрошокером законника");
					if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
					new string[82];
					format(string, sizeof(string), "Вас обездвижил(а) электрошокером %s на 10 секунд", PlayerInfo[playerid][pName]);
					SendClientMessage(suspect, 0x6495EDFF, string);
					format(string, sizeof(string), "Вы обездвижили электрошокером %s на 10 секунд", PlayerInfo[suspect][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Инструктор %s обезвредил(а) игрока %s", PlayerInfo[playerid][pName],PlayerInfo[suspect][pName]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					TogglePlayerControllable(suspect, 0);
                    SetPlayerSpecialAction(suspect, SPECIAL_ACTION_HANDSUP);
                    SetTimerEx("UnFreeze", 10000, false, "i", suspect);
                    Tazer[playerid] = 1;
					TazerTime[playerid] = 11;
					Playert[suspect] = 1;
					PlayertTime[suspect] = 11;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Рядом с вами некого нет");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/cuff", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 3 || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 4 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pMember] == 21)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cuff [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на самого себя"); return true; }
					if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на законника");
					if(PlayerCuffed[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках");
					if(ProxDetectorS(8.0, playerid, giveplayerid))
     				{
                        if(Playert[giveplayerid] == 1)
						{
						    new string[79];
							GameTextForPlayer(giveplayerid, "~r~cuffed", 5000, 3);
							format(string, sizeof(string), "%s надел(а) наручники на игрока %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerCuffed[giveplayerid] = 1;
							PlayerCuffedTime[giveplayerid] = 3600;
							Playert[giveplayerid] = 0;
							PlayertTime[giveplayerid] = 0;
							SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_CUFFED);
							SetPlayerAttachedObject(giveplayerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
						}
					}
					else SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] == 3 && PlayerInfo[playerid][pRank] == 4)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uncuff [id]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с самого себя"); return true; }
						if(PlayerCuffed[giveplayerid])
						{
							new string[77];
							format(string, sizeof(string), "%s снял(а) наручники с игрока %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName]);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerCuffed[giveplayerid] = 0;
							GameTextForPlayer(giveplayerid, "~g~uncuffed", 5000, 3);
							SetPlayerSpecialAction(giveplayerid,0);
							RemovePlayerAttachedObject(giveplayerid,0);
						}
						else SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в наручниках");
					}
					else SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		return true;
	}
	if(strcmp(cmd, "/cput", true) == 0)
	{
		if(IsACop(playerid))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 590) return SendClientMessage(playerid, COLOR_GREY, "Вы не в патрульной машине");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_WHITE, "Введите: /cput [playerid]");
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
				{
					if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
					if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в машину самого себя");
					if(!PlayerInfo[giveplayerid][pMadWant]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не приступник");
					if(GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, COLOR_GREY, "Игрок в автомобиле");
					new mesto2,vehicle = GetPlayerVehicleID(playerid);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
                        if(IsPlayerInVehicle(i,vehicle))
                        {
                            mesto2 = GetPlayerVehicleSeat(i);
                            if(mesto2 == 2) return SendClientMessage(playerid, COLOR_GREY, "Место в машине уже занято");
                        }
                    }
                    PutPlayerInVeh(giveplayerid,vehicle,2);
                    new string[72];
                    format(string,sizeof(string), "Вы были затащены в машину офицером/агентом FBI %s",PlayerInfo[playerid][pName]);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы затащили в машину преступника %s",PlayerInfo[giveplayerid][pName]);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "заталкнул преступника %s в автомобиль",PlayerInfo[giveplayerid][pName]);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
            }
        }
        else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
    }
	if(strcmp(cmd, "/ceject", true) == 0)
    {
        if(IsACop(playerid))
        {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 590) return SendClientMessage(playerid, COLOR_GREY, "Вы не в патрульной машине");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) return  SendClientMessage(playerid, COLOR_WHITE, "Введите: /ceject [playerid]");
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
                if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в вашем авто");
                RemovePlayerFromVehicle(giveplayerid);
                new string[77];
                if(IsPlayerInRangeOfPoint(giveplayerid,5.0,1568.6144,-1689.9901,6.2188))
                {
					SetPlayerInterior(giveplayerid,6);
					SetPlayerPos(giveplayerid,268.4186,77.6443,1001.0391);
					SetPlayerFacingAngle(giveplayerid, 85.7670);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Лос Сантоса",PlayerInfo[playerid][pName]);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Лос Сантоса",PlayerInfo[giveplayerid][pName]);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок",PlayerInfo[giveplayerid][pName]);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,-1594.2096,716.1803,-4.9063))
                {
					SetPlayerInterior(giveplayerid,10);
					SetPlayerPos(giveplayerid,220.1259,114.6476,999.0156);
					SetPlayerFacingAngle(giveplayerid, 95.3400);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Сан Фиеро",PlayerInfo[playerid][pName]);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Сан Фиерро", PlayerInfo[giveplayerid][pName]);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок", PlayerInfo[giveplayerid][pName]);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,2297.1138,2451.4346,10.8203))
                {
					SetPlayerInterior(giveplayerid,3);
					SetPlayerVirtualWorld(giveplayerid, 122);
					SetPlayerPos(giveplayerid,198.1339,158.4835,1003.0234);
					SetPlayerFacingAngle(giveplayerid, 354.8164);
                    format(string,sizeof(string), "Вы были высажены с машины офицером %s в участок Лас Вентурас",PlayerInfo[playerid][pName]);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы высадили подозреваемого %s в полицейский участок Лас Вентурас", PlayerInfo[giveplayerid][pName]);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Затолкал(а) подозреваемого %s в полицейский участок", PlayerInfo[giveplayerid][pName]);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
                else
                {
                    format(string,sizeof(string), "Вы были высажены с машины офицером/агентом FBI %s",PlayerInfo[playerid][pName]);
                    SendClientMessage(giveplayerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вы вытащили с машины подозреваемого %s", PlayerInfo[giveplayerid][pName]);
                    SendClientMessage(playerid,0x64E96EDFF,string);
                    format(string,sizeof(string), "Вытащил(а) из машины подозреваемого %s", PlayerInfo[giveplayerid][pName]);
                    SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
                }
            }
        }
        else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
    }
	if(strcmp(cmd, "/find", true) == 0)
	{
		if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 35) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данную команду");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /find [id]");
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(giveplayerid, X,Y,Z);
				SetPlayerCheckpoint(playerid, X,Y,Z, 6);
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		return true;
	}
	if(strcmp(cmd, "/accept",true)==0)
    {
		new x_job[50];
		x_job = strtok(cmdtext, idx);
		if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /accept [тип]");
		if(strcmp(x_job, "order",true) == 0)
		{
			if(wmoneys < 1000) return SendClientMessage(playerid, COLOR_GREY, "Никто никого не заказывал!");
			if(hitmanworked[playerid] != 0) SendClientMessage(playerid, COLOR_GREY, "Вы уже работаете над заказом");
			PlayerInfo[wclient][pCash] -= wmoneys;
			SendClientMessage(wclient, TEAM_AZTECAS_COLOR, "Наемник работает над вашим заказом");
			hvictim[playerid] = wvictim;
			hitmanworked[playerid] = 1;
			hmoneys[playerid] = wmoneys;
			hclient[playerid] = wclient;
			wvictim = -1;
			wmoneys = 0;
			wclient = -1;
			return true;
		}
		if(strcmp(x_job, "debt",true) == 0)
		{
			if(KrishaOffer[playerid] < 999)
			{
				new string[52];
				format(string, sizeof(string), "Вы приняли крышу от игрока %s", PlayerInfo[KrishaOffer[playerid]][pName]);
				SendClientMessage(playerid, 0x6495EDFF, string);
				format(string, sizeof(string), "%s согласился на вашу крышу", PlayerInfo[playerid][pName]);
				SendClientMessage(KrishaOffer[playerid], 0x6495EDFF, string);
				KrishaOffer[playerid] = 999;
				PlayerInfo[playerid][pUseMafiaRoof] = 1;
				PlayerInfo[playerid][pMafiaRoof] = Krisha[playerid];
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал крышу");
			return true;
		}
		else if(strcmp(x_job, "marriage",true) == 0)
		{
			if(ProposeOffer[playerid] < 999)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, -2032.0339,1119.2062,26.0531)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у церкви в San Fierro");
				if(IsPlayerConnected(ProposeOffer[playerid]))
				{
					if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
					{
						new string[61];
						format(string, sizeof(string), "Вы приняли предложение от игрока %s", PlayerInfo[ProposeOffer[playerid]][pName]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "%s приняла Ваш запрос быть Вашей женой", PlayerInfo[playerid][pName]);
						SendClientMessage(ProposeOffer[playerid], 0x6495EDFF, string);
						format(string, sizeof(string), "%s.ini",PlayerInfo[ProposeOffer[playerid]][pName]);
						new files = ini_openFile(string);
						if(files < 0) print("нет файла");
						else
						{
							ini_setString(files, "MarriedTo",PlayerInfo[playerid][pName]);
							ini_closeFile(files);
						}
						format(string, sizeof(string), "%s.ini",PlayerInfo[playerid][pName]);
						new file = ini_openFile(string);
						if(file < 0) print("нет файла");
						else
						{
							ini_setString(file, "MarriedTo",PlayerInfo[ProposeOffer[playerid]][pName]);
							ini_closeFile(file);
						}
						PlayerInfo[ProposeOffer[playerid]][pCash] -= 100000;
						PlayerInfo[playerid][pMarried] = 1;
						PlayerInfo[ProposeOffer[playerid]][pMarried] = 1;
						ProposedTo[playerid] = 999;
						ProposeOffer[playerid] = 999;
					}
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлогил жениться/замуж");
			return true;
		}
		else if(strcmp(x_job, "gcontract",true) == 0)
		{
			if(JobOffer[playerid] == 999) return SendClientMessage(playerid, COLOR_WHITE, "Никто не предлагал вас контракт");
			if(Employer[playerid] != 999) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже заключали контракт");
			if(!IsPlayerConnected(JobOffer[playerid])) return SendClientMessage(playerid,COLOR_WHITE, "Игрок не найден");
			if(!ProxDetectorS(5.0, playerid, JobOffer[playerid])) return SendClientMessage(playerid,COLOR_WHITE, "Игрок далеко от вас");
			Employer[playerid] = JobOffer[playerid];
			JobOffer[playerid] = 0;
			JobAmmount[Employer[playerid]] += 1;
			new string[57];
			format(string, sizeof(string), "Вы заключили контакт с игроком %s", Employer[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Прораб %s заключил с вами контракт", PlayerInfo[playerid][pName]);
			SendClientMessage(Employer[playerid], COLOR_LIGHTBLUE, string);
			SendClientMessage(Employer[playerid], COLOR_WHITE, "/gpayday выдать зарплату");
			return true;
		}
		else if(strcmp(x_job, "taxi",true) == 0)
		{
			if(TransportDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не таксист");
			if(TaxiCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(TaxiCall < 999)
			{
				if(IsPlayerConnected(TaxiCall))
				{
					new string[79];
					format(string, sizeof(string), "Вы приняли вызов от игрока %s", PlayerInfo[TaxiCall][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Водитель такси %s принял ваш вызов, оставайтесь на месте",PlayerInfo[playerid][pName]);
					SendClientMessage(TaxiCall, COLOR_GREEN, string);
					TaxiCall = 999;
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
			return true;
		}
		else if(strcmp(x_job, "fight",true) == 0)
		{
			if(BoxOffer[playerid] < 999)
			{
				if(IsPlayerConnected(BoxOffer[playerid]))
				{
					new string[59];
					format(string, sizeof(string), "Вы приняли вызов на бой от игрока %s",PlayerInfo[BoxOffer[playerid]][pName]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s принял ваш вызов на бой",PlayerInfo[playerid][pName]);
					SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
					SetPlayerHealthAC(playerid, 100);
					SetPlayerHealthAC(BoxOffer[playerid], 100);
					PlayerInfo[playerid][pHP] = 100;
					PlayerInfo[BoxOffer[playerid]][pHP] = 100;
					SetPlayerSkin(playerid,81);
					SetPlayerSkin(BoxOffer[playerid],80);
					SetPlayerInterior(playerid, 5);
					SetPlayerInterior(BoxOffer[playerid], 5);
					SetPlayerPos(playerid, 762.9852,2.4439,1001.5942);
					SetPlayerFacingAngle(playerid, 131.8632);
					SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942);
					SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
					TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
					GameTextForPlayer(playerid, "~r~Waiting", 3000, 1);
					GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
					BoxWaitTime[playerid] = 1;
					BoxWaitTime[BoxOffer[playerid]] = 1;
					if(BoxDelay < 1) BoxDelay = 5;
					InRing = 1;
					Boxer1 = BoxOffer[playerid];
					Boxer2 = playerid;
					PlayerBoxing[playerid] = 1;
					PlayerBoxing[BoxOffer[playerid]] = 1;
					BoxOffer[playerid] = 999;
					return true;
				}
				return true;
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал бой");
		}
		else if(strcmp(x_job, "ticket",true) == 0)
		{
			if(TicketOffer[playerid] < 999)
			{
				if(IsPlayerConnected(TicketOffer[playerid]))
				{
					if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
					{
						new string[78];
						format(string, sizeof(string), "Вы оплатили штраф в размере %d вирт офицеру %s", TicketMoney[playerid], PlayerInfo[TicketOffer[playerid]][pName]);
						SendClientMessage(playerid, COLOR_BLUE, string);
						format(string, sizeof(string), "%s оплатил штраф в размере %d вирт", PlayerInfo[playerid][pName], TicketMoney[playerid]);
						SendClientMessage(TicketOffer[playerid], COLOR_BLUE, string);
						PlayerInfo[playerid][pCash] -= TicketMoney[playerid];
						PlayerInfo[TicketOffer[playerid]][pCash] += TicketMoney[playerid];
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Полицейскйи не рядом с вами");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам не выписывали штраф");
			return true;
		}
		else if(strcmp(x_job, "drugs",true) == 0)
		{
			if(DrugOffer[playerid] < 999)
			{
				if(PlayerInfo[playerid][pCash] > DrugPrice[playerid])
				{
					if(PlayerInfo[playerid][pDrugs] < 7)
					{
						if(IsPlayerConnected(DrugOffer[playerid]))
						{
							new string[90];
							format(string, sizeof(string), "Вы купили %d грамм за %d вирт у игрока %s",DrugGramm[playerid],DrugPrice[playerid],PlayerInfo[DrugOffer[playerid]][pName]);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "%s купил(а) у вас %d грамм за %d вирт",PlayerInfo[playerid][pName],DrugGramm[playerid],DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], 0x6495EDFF, string);
							PlayerInfo[playerid][pCash] -= DrugPrice[playerid];
							PlayerInfo[DrugOffer[playerid]][pCash] += DrugPrice[playerid];
							PlayerInfo[playerid][pDrugs] += DrugGramm[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGramm[playerid];
							format(string, sizeof(string), "%s достал бумажник и передал деньги игроку %s", PlayerInfo[playerid][pName], PlayerInfo[DrugOffer[playerid]][pName]);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return true;
						}
					}
					else SendClientMessage(playerid, COLOR_GREY, "У вас и так много наркотиков");
				}
				else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить наркотики");
			return true;
		}
		else if(strcmp(x_job, "vehicle",true) == 0)
		{
			if(CarOffer[playerid] < 999)
			{
				if(ProxDetectorS(8.0, playerid, CarOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] < CarPrice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на руках!");
					PlayerInfo[playerid][pCash] -= CarPrice[playerid];
					PlayerInfo[playerid][pCar] = PlayerInfo[CarOffer[playerid]][pCar];
					PlayerInfo[playerid][pColor] = PlayerInfo[CarOffer[playerid]][pColor];
					PlayerInfo[playerid][pColor1] = PlayerInfo[CarOffer[playerid]][pColor1];
					PlayerInfo[playerid][pPaintJob] = PlayerInfo[CarOffer[playerid]][pPaintJob];
					PlayerInfo[playerid][pWheels] = PlayerInfo[CarOffer[playerid]][pWheels];
					PlayerInfo[playerid][pSpoiler] = PlayerInfo[CarOffer[playerid]][pSpoiler];
					PlayerInfo[playerid][pBumper1] = PlayerInfo[CarOffer[playerid]][pBumper1];
					PlayerInfo[playerid][pBumper2] = PlayerInfo[CarOffer[playerid]][pBumper2];
					PlayerInfo[playerid][pNitro] = PlayerInfo[CarOffer[playerid]][pNitro];
					PlayerInfo[playerid][pHydrawlic] = PlayerInfo[CarOffer[playerid]][pHydrawlic];
					PlayerInfo[playerid][pProcents] = PlayerInfo[CarOffer[playerid]][pProcents];
					PlayerInfo[CarOffer[playerid]][pCash] += CarPrice[playerid];
					PlayerInfo[CarOffer[playerid]][pCar] = 462;
					PlayerInfo[CarOffer[playerid]][pColor] = 0;
					PlayerInfo[CarOffer[playerid]][pColor1] = 0;
					CompVehDel(CarOffer[playerid]);
					PlayerInfo[CarOffer[playerid]][pProcents] = 100;
					new string[81];
					format(string, sizeof(string), "Вы продали машину игроку %s за %d вирт", PlayerInfo[playerid][pName], CarPrice[playerid]);
					SendClientMessage(CarOffer[playerid], 0x6495EDFF, string);
					format(string, sizeof(string), "Вы купили машину у игрока %s за %d вирт", PlayerInfo[CarOffer[playerid]][pName], CarPrice[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					DestroyVehicle(caridhouse[playerid]);
					DestroyVehicle(caridhouse[CarOffer[playerid]]);
					OnPropUpdate();
					OnPlayerUpdateAc(playerid);
					CarOffer[playerid] = 999;
					CarPrice[playerid] = 0;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить машину");
			return true;
		}
		else if(strcmp(x_job, "house",true) == 0)
		{
			if(HouseOffer[playerid] < 999)
			{
				new h = PlayerInfo[HouseOffer[playerid]][pPHousekey];
				if(ProxDetectorS(8.0, playerid, HouseOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] < HousePrice[playerid])return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег на руках!");
					PlayerInfo[playerid][pPHousekey] = PlayerInfo[HouseOffer[playerid]][pPHousekey];
					PlayerInfo[HouseOffer[playerid]][pPHousekey] = 255;
					PlayerInfo[playerid][pCash] -= HousePrice[playerid];
					PlayerInfo[HouseOffer[playerid]][pCash] += HousePrice[playerid];
					new string[88];
					strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pName], 0, strlen(PlayerInfo[playerid][pName]), 255);
					format(string, sizeof(string), "Вы продали дом игроку %s за %d вирт", PlayerInfo[playerid][pName], HousePrice[playerid]);
					SendClientMessage(HouseOffer[playerid], 0x6495EDFF, string);
					format(string, sizeof(string), "Вы купили дом у игрока %s за %d вирт", PlayerInfo[HouseOffer[playerid]][pName], HousePrice[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					SetPlayerInterior(playerid,HouseInfo[h][hInt]);
					SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
					PlayerInfo[playerid][pLocal] = h;
					DestroyVehicle(caridhouse[playerid]);
					SetPlayerVirtualWorld(playerid,h+50);
					BuyHouse();
					OnPropUpdate();
					HouseOffer[playerid] = 999;
					HousePrice[playerid] = 0;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить дом");
			return true;
		}
		else if(strcmp(x_job, "medic",true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pLeader] == 33)
			{
				if(MedicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже принимали вызов");
				if(MedicCall < 999)
				{
					if(IsPlayerConnected(MedicCall))
					{
						new string[53];
						format(string, sizeof(string), "Вы приняли запрос от игрока %s",PlayerInfo[MedicCall][pName]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Медик %s принял ваш вызов",PlayerInfo[playerid][pName]);
						SendClientMessage(MedicCall, COLOR_GREEN, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						MedicCall = 999;
						return true;
					}
				}
				else SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
			return true;
		}
		else if(strcmp(x_job, "police",true) == 0)
		{
			if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
			if(PoliceCallTime[playerid] > 0) return  SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(PoliceCall < 999)
			{
				if(IsPlayerConnected(PoliceCall))
				{
					new string[52];
					format(string, sizeof(string), "Вы приняли вызов от игрока %s",PlayerInfo[PoliceCall][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Патрульный %s принял ваш вызов",PlayerInfo[playerid][pName]);
					SendClientMessage(PoliceCall, COLOR_GREEN, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(PoliceCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					PoliceCall = 999;
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
			return true;
		}
		else if(strcmp(x_job, "mechanic",true) == 0)
		{
			if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы неуполномочены использовать данный параметр");
			if(MechanicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приняли вызов");
			if(MechanicCall < 999)
			{
				if(IsPlayerConnected(MechanicCall))
				{
				    new string[52];
					format(string, sizeof(string), "Вы приняли вызов от игрока %s",PlayerInfo[MechanicCall][pName]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s принял Ваш вызов",PlayerInfo[playerid][pName]);
					SendClientMessage(MechanicCall, COLOR_GREEN, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MechanicCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MechanicCall = 999;
					return true;
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вызовов не поступало");
			return true;
		}
		else if(strcmp(x_job,"livels",true) == 0)
		{
			if(LiveOfferls[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOfferls[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOfferls[playerid]))
					{
					    TalkingLivels[LiveOfferls[playerid]] = 2;
						SendClientMessage(LiveOfferls[playerid], COLOR_WHITE, "Введите: /live чтобы закончить интервью");
						lNews[playerid] = 0;
						gNews[playerid] = 1;
						LvNews[playerid] = 1;
						lNews[LiveOfferls[playerid]] = 0;
						gNews[LiveOfferls[playerid]] = 1;
						LvNews[LiveOfferls[playerid]] = 1;
						LiveOfferls[playerid] = 999;
						TalkingLivels[playerid] = 2;
						TalkingLivelsa[playerid] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио Los Santos");
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
			return true;
		}
		else if(strcmp(x_job,"livesf",true) == 0)
		{
			if(LiveOffer[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOffer[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
					    TalkingLive[LiveOffer[playerid]] = 2;
						SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "Введите: /live чтобы закончить интервью");
						lNews[playerid] = 1;
						gNews[playerid] = 0;
						LvNews[playerid] = 1;
						lNews[LiveOffer[playerid]] = 1;
						gNews[LiveOffer[playerid]] = 0;
						LvNews[LiveOffer[playerid]] = 1;
						LiveOffer[playerid] = 999;
						TalkingLive[playerid] = 2;
						TalkingLivesfa[playerid] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио San Fierro");
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
			return true;
		}
		else if(strcmp(x_job,"livelv",true) == 0)
		{
			if(LiveOfferlv[playerid] < 999)
			{
				if(IsPlayerConnected(LiveOfferlv[playerid]))
				{
					if(ProxDetectorS(5.0, playerid, LiveOfferlv[playerid]))
					{
						TalkingLivelv[LiveOfferlv[playerid]] = 2;
						SendClientMessage(LiveOfferlv[playerid], COLOR_WHITE, "Введите: /live чтобы закончить интервью");
						lNews[playerid] = 1;
						gNews[playerid] = 1;
						LvNews[playerid] = 0;
						lNews[LiveOfferlv[playerid]] = 1;
						gNews[LiveOfferlv[playerid]] = 1;
						LvNews[LiveOfferlv[playerid]] = 0;
						LiveOfferlv[playerid] = 999;
						TalkingLivelv[playerid] = 2;
						TalkingLivelva[playerid] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио Las Venturas");
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Вы далеко от репортёра");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
			return true;
		}
		else if(strcmp(x_job, "refill",true) == 0)
		{
			if(RefillOffer[playerid] < 999)
			{
				if(IsPlayerConnected(RefillOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > RefillPrice[playerid])
					{
					    new string[94];
						new car = GetPlayerVehicleID(RefillOffer[playerid]);
						if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SendClientMessage(playerid,COLOR_YELLOW, "Вы не в автомобиле или этот транспорт нельзя заправить");
						format(string, sizeof(string), "Автомеханик %s заправил ваш автомобиль на 150 литров за %d вирт",PlayerInfo[RefillOffer[playerid]][pName],RefillPrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы заправили машину игрока %s за %d вирт",PlayerInfo[playerid][pName],RefillPrice[playerid]);
						SendClientMessage(RefillOffer[playerid], 0x6495EDFF, string);
		                format(string, sizeof(string), "~r~-%d", RefillPrice[playerid]);
		                GameTextForPlayer(playerid, string, 5000, 1);
						PlayerInfo[playerid][pCash] -= RefillPrice[playerid];
						PlayerInfo[RefillOffer[playerid]][pCash] += RefillPrice[playerid];
						Fuell[GetPlayerVehicleID(playerid)] = 150;
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "Не достаточно денег");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали заправиться");
			return true;
		}
		else if(strcmp(x_job, "zone",true) == 0)
		{
			if(ZoneOffer[playerid] < 999)
			{
				if(IsPlayerConnected(ZoneOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > ZonePrice[playerid])
					{
						for(new i = 0; i < sizeof(GZInfo); i++)
						{
							if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
							{
								if(GZInfo[i][gFrakVlad] != sellzone[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Вам не предлагали купить эту территорию");
								GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMember];
								GangZoneStopFlashForAll(GZInfo[i][gID]);
								GangZoneHideForAll(GZInfo[i][gID]);
								GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
								SaveGZ();
							}
						}
						new string[74];
						format(string, sizeof(string), "Вы купили территорию у игрока %s за %d вирт",PlayerInfo[ZoneOffer[playerid]][pName], ZonePrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы продали территорию игроку %s за %d вирт",PlayerInfo[playerid][pName],ZonePrice[playerid]);
						SendClientMessage(ZoneOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= ZonePrice[playerid];
						PlayerInfo[ZoneOffer[playerid]][pCash]+= ZonePrice[playerid];
						ZoneOffer[playerid] = 999;
						ZonePrice[playerid] = 0;
						sellzone[playerid] = 0;
					}
					else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал территорию");
			return true;
		}
		else if(strcmp(x_job, "eat",true) == 0)
		{
			new Float:health;
			if(HotdogOffer[playerid] < 999)
			{
				if(IsPlayerConnected( HotdogOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > HotdogPrice[playerid])
					{
					    new string[71];
						GetPlayerHealth(playerid, health);
						PlayerInfo[playerid][pSatiety] += 50;
						if(PlayerInfo[playerid][pSatiety] > 100) PlayerInfo[playerid][pSatiety] = 100;
						format(string, sizeof(string), "Вы купили ХотДог у игрока %s за %d вирт",PlayerInfo[HotdogOffer[playerid]][pName], HotdogPrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string,sizeof(string), "«Сытость» пополнена до %d",PlayerInfo[playerid][pSatiety]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
						format(string,sizeof(string), "съел(a) ХотДог");
						SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
						format(string, sizeof(string), "Вы продали ХотДог игроку %s за %d вирт",PlayerInfo[playerid][pName],HotdogPrice[playerid]);
						SendClientMessage(HotdogOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= HotdogPrice[playerid];
						PlayerInfo[HotdogOffer[playerid]][pCash]+= HotdogPrice[playerid];
						HotdogOffer[playerid] = 999;
						HotdogPrice[playerid] = 0;
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал купить ХотДог");
			return true;
		}
		else if(strcmp(x_job, "free",true) == 0)
		{
			if(FreeOffer[playerid] < 999)
			{
				if(IsPlayerConnected( FreeOffer[playerid]))
				{
					if(PlayerInfo[playerid][pCash] > FreePrice[playerid])
					{
					    new string[75];
						format(string, sizeof(string), "Вы заплатили адвокату %s %d вирт",PlayerInfo[FreeOffer[playerid]][pName], FreePrice[playerid]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вы выпустили игрока %s из тюрьмы за %d вирт",PlayerInfo[playerid][pName], FreePrice[playerid]);
						SendClientMessage(FreeOffer[playerid], 0x6495EDFF, string);
						PlayerInfo[playerid][pCash] -= FreePrice[playerid];
						PlayerInfo[FreeOffer[playerid]][pCash]+= FreePrice[playerid];
						FreeOffer[playerid] = 999;
						FreePrice[playerid] = 0;
						SposobOffer[playerid] = 0;
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
						SetPlayerFacingAngle(playerid, 95.0636);
						PlayerInfo[playerid][pJailTime] = 0;
						PlayerInfo[playerid][pJailed] = 0;
						PlayerInfo[playerid][pMadWant] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вы свободны");
						SendClientMessage(playerid, COLOR_GREEN, "Вы заплатили свой долг обществу");
						SetPlayerWantedLevel(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
					else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал услуги адвоката");
			return true;
		}
		else if(strcmp(x_job, "repair",true) == 0)
		{
			if(RepairOffer[playerid] < 999)
			{
				if(PlayerInfo[playerid][pCash] > RepairPrice[playerid])
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						if(IsPlayerConnected(RepairOffer[playerid]))
						{
							RepairCar[playerid] = GetPlayerVehicleID(playerid);
							SetVehicleHealth(RepairCar[playerid], 1000.0);
							AnRepairVehicle(GetPlayerVehicleID(playerid));
							new string[82];
							format(string, sizeof(string), "Механик %s отремонтировал(а) Вашу машину за %d вирт", PlayerInfo[RepairOffer[playerid]][pName], RepairPrice[playerid]);
							SendClientMessage(playerid, 0x6495EDFF, string);
							format(string, sizeof(string), "Вы починили атомобиль игрока %s за %d вирт",PlayerInfo[playerid][pName],RepairPrice[playerid]);
							SendClientMessage(RepairOffer[playerid], 0x6495EDFF, string);
							PlayerInfo[playerid][pCash] -= RepairPrice[playerid];
							PlayerInfo[RepairOffer[playerid]][pCash] += RepairPrice[playerid];
							RepairOffer[playerid] = 999;
							RepairPrice[playerid] = 0;
							return true;
						}
					}
				}
				else SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали чинить машину");
		}
		return true;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
		if(gcontract[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "У вас не подписан контракт с заправкой");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /refill [id]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
			    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "Вы не на эвакуаторе");
				if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
					if(Fuell[GetPlayerVehicleID(playa)] >= 99) return SendClientMessage(playerid,COLOR_GREY, "У игрока полный бак");
					new string[104];
					format(string, sizeof(string), "Вы предложили %s заправить его машину за %d вирт.",PlayerInfo[playa][pName],cenabenza[playerid]);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s хочет заправить ваш автомобиль за %d вирт, ((/accept refill))",PlayerInfo[playerid][pName],cenabenza[playerid]);
					SendClientMessage(playa, 0x6495EDFF, string);
					RefillOffer[playa] = playerid;
					RefillPrice[playa] = cenabenza[playerid];
				}
				else SendClientMessage(playerid, COLOR_GREY, "Он не в машине");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		return true;
	}
	if(strcmp(cmd, "/changehouse", true) == 0)
	{
		if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changehouse [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 100000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 100000000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, playa))
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе дом");
					new string[123];
					format(string, sizeof(string), "Вы предложили %s купить ваш дом за %d вирт",PlayerInfo[playa][pName],money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам купить его дом за %d вирт. Введите (/accept house),чтобы совершить сделку",PlayerInfo[playerid][pName],money);
					SendClientMessage(playa, 0x6495EDFF, string);
					HouseOffer[playa] = playerid;
					HousePrice[playa] = money;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		return true;
	}
	if(strcmp(cmd, "/changecar", true) == 0)
	{
		new caren = GetVehicleModel(caridhouse[playerid]);
		if(caren == 462) return SendClientMessage(playerid, COLOR_GREY, "У вас мопед");
		if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid,COLOR_RED, "У вас нет дома");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changecar [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 10000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 10000000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, playa))
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать самому себе машину");
					new string[128];
					format(string, sizeof(string), "Вы предложили %s купить вашу машину за %d вирт",PlayerInfo[playa][pName],money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "%s предлагает вам купить его машину за %d вирт Введите (/accept vehicle), чтобы совершить сделку",PlayerInfo[playerid][pName],money);
					SendClientMessage(playa, 0x6495EDFF, string);
					CarOffer[playa] = playerid;
					CarPrice[playa] = money;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		return true;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /repair [id] [цена]");
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 1 || money > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 10000 вирт");
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
 				if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете чинить машину самому себе");
					new string[106];
					format(string, sizeof(string), "Вы предложили игроку %s отремонтировать его машину за %d вирт",PlayerInfo[playa][pName],money);
					SendClientMessage(playerid, 0x6495EDFF, string);
					format(string, sizeof(string), "Механик %s предлагает отремонтировать ваш автомобиль за %d вирт,(( /accept repair ))",PlayerInfo[playerid][pName],money);
					SendClientMessage(playa, 0x6495EDFF, string);
					RepairOffer[playa] = playerid;
					RepairPrice[playa] = money;
				}
				else SendClientMessage(playerid, COLOR_GREY, "Он не в машине");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		return true;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
		new dicen = random(12)+1;
		if(gDice[playerid] == 1)
		{
		    new string[91];
			format(string, sizeof(string), "%s бросил(а) игральные кости на стол, выпало %d очков из 12", PlayerInfo[playerid][pName],dicen);
			ProxDetector(5.0, playerid, string, COLOR_INDIGO,COLOR_INDIGO,COLOR_INDIGO,COLOR_INDIGO,COLOR_INDIGO);
		}
		else SendClientMessage(playerid, COLOR_GREY, "У вас нет игральных костей");
		return true;
	}
	if(strcmp(cmd, "/eject", true) == 0)
	{
		new State;
		if(IsPlayerInAnyVehicle(playerid))
		{
 			State = GetPlayerState(playerid);
			if(State != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY, "Вы не водитель!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /eject [id]");
			new playa;
			playa = ReturnUser(tmp);
			new test;
			test = GetPlayerVehicleID(playerid);
			if(IsPlayerConnected(playa))
			{
				if(playa != INVALID_PLAYER_ID)
				{
					if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выкинуть из машины себя");
					if(IsPlayerInVehicle(playa,test))
					{
						new string[59];
						format(string, sizeof(string), "Вы выбросили из автомобиля игрока %s", PlayerInfo[playa][pName]);
						SendClientMessage(playerid, 0x6495EDFF, string);
						format(string, sizeof(string), "Вас выбросил из автомобиля игрока %s", PlayerInfo[playerid][pName]);
						SendClientMessage(playa, 0x6495EDFF, string);
						RemovePlayerFromVehicleAc(playa);
					}
					else SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине");
	}
	return true;
}
stock ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(BigEar[i] == 0)
				{
					if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						GetPlayerPos(i, posx, posy, posz);
						tempposx = (oldposx -posx);
						tempposy = (oldposy -posy);
						tempposz = (oldposz -posz);
						if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
						{
							SendClientMessage(i, col1, string);
						}
						else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
						{
							SendClientMessage(i, col2, string);
						}
						else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
						{
							SendClientMessage(i, col3, string);
						}
						else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
						{
							SendClientMessage(i, col4, string);
						}
						else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
						{
							SendClientMessage(i, col5, string);
						}
					}
				}
				else if(BigEar[i] == 1)
				{
					SendClientMessage(i, col1, string);
				}
				if(SpyingID[i] == playerid && SpyingType[i] == 3|| GetPlayerVehicleID(playerid) == SpyingID[i] && SpyingType[i] == 4) SendClientMessage(i, col1, string);
			}
		}
	}
	return true;
}
stock IsPlayerApplyAnimation(playerid, animation[])
{
    if(!GetPlayerAnimationIndex(playerid)) return false;
    else
    {
        new animlib[32], animname[32];
        GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
        if(!strcmp(animname, animation, true)) return true;
    }
    return false;
}
stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	new enters[256];
	NameTimer();
	DollahScoreUpdate();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!PlayerToPoint(5.0, i, PosPic[0][i], PosPic[1][i], PosPic[2][i])) Dpic[i] = 0;
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				new tacha = GetPlayerVehicleID(i);
				if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsANoSpeed(tacha))
				{
			        if(Arrester[i] == true)
			        {
						if(SpeedVehicle(i) >= 50)
						{
							new Float:x,Float:y,Float:z;
							GetVehicleVelocity(GetPlayerVehicleID(i),x,y,z);
							SetVehicleVelocity(GetPlayerVehicleID(i),x*0.989,y*0.989,z);
						}
					}
				}
			}
			if(startaddiction[i] == 1)
			{
				if(PlayerInfo[i][pAddiction] >= 1000)
				{
		    		if(send[i] == 0)
		    		{
						SendClientMessage(i, COLOR_REDD, "~~~~~~~~ У вас началась ломка ~~~~~~~~");
						SendClientMessage(i, COLOR_WHITE, "(( Вызвать медика - /c => [2] Скорая помощь    ||    Принять наркотик - /usedrugs ))");
						send[i] = 1;
					}
					ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 1, 0, 0, 0, 0);
					send[i] = 1;
				}
			}
			if(BoxWaitTime[i] > 0)
            {
                if(BoxWaitTime[i] >= BoxDelay)
                {
                    BoxDelay = 0;
                    BoxWaitTime[i] = 0;
                    PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    GameTextForPlayer(i, "~g~Match Started", 5000, 1);
                    TogglePlayerControllable(i, 1);
                    RoundStarted = 1;
                }
                else
                {
                    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
                    GameTextForPlayer(i, string, 1500, 6);
                    BoxWaitTime[i] += 1;
                }
            }
            if(RoundStarted > 0)
            {
                if(PlayerBoxing[i] > 0)
                {
                    new trigger = 0;
                    new Lost = 0;
                    new Float:health;
                    GetPlayerHealth(i, health);
                    if(health < 12)
                    {
                        if(i == Boxer1)
						{
							Lost = 1;
							trigger = 1;
						}
                        else if(i == Boxer2)
						{
							Lost = 2;
							trigger = 1;
						}
                    }
                    if(trigger)
                    {
						new winner[MAX_PLAYER_NAME];
                        new loser[MAX_PLAYER_NAME];
                        new titel[MAX_PLAYER_NAME];
                        if(Lost == 1)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
                                SetPlayerPos(Boxer2, 765.7567,-1.5056,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                GetPlayerName(Boxer1, loser, sizeof(loser));
                                GetPlayerName(Boxer2, winner, sizeof(winner));
                                SetPlayerHealthAC(Boxer1, 100);
			                    PlayerInfo[Boxer1][pHP] = 100;
			                    SetPlayerHealthAC(Boxer2, 100);
			                    PlayerInfo[Boxer2][pHP] = 100;
                                if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
                                if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer2)
                                        {
                                            if(PlayerInfo[Boxer2][pJob] == 10)
                                            {
                                                TBoxer = Boxer2;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }
                                format(string, sizeof(string), "Вы проиграли бой против %s.", winner);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
                                format(string, sizeof(string), "Вы выиграли бой против %s.", loser);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
                                if(PlayerInfo[Boxer1][pJob] == 6 && PlayerInfo[Boxer1][pMember] == 0)
                                {
                                    SetPlayerSkin(Boxer1, 49);
	 	                        }
	 	                        else
				                {
				                    if(PlayerInfo[Boxer1][pMember] >= 1) { SetPlayerSkin(Boxer1,PlayerInfo[Boxer1][pModel]);}
		                            if(PlayerInfo[Boxer1][pMember] == 0) { SetPlayerSkin(Boxer1,PlayerInfo[Boxer1][pChar]);}
				                }
				                if(PlayerInfo[Boxer2][pJob] == 6 && PlayerInfo[Boxer2][pMember] == 0)
                                {
                                    SetPlayerSkin(Boxer2, 49);
	 	                        }
	 	                        else
				                {
				                    if(PlayerInfo[Boxer2][pMember] >= 1) { SetPlayerSkin(Boxer2,PlayerInfo[Boxer2][pModel]);}
		                            if(PlayerInfo[Boxer2][pMember] == 0) { SetPlayerSkin(Boxer2,PlayerInfo[Boxer2][pChar]);}
				                }
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        else if(Lost == 2)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.7567,-1.5056,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                SetPlayerHealthAC(Boxer1, 100);
			                    PlayerInfo[Boxer1][pHP] = 100;
			                    SetPlayerHealthAC(Boxer2, 100);
			                    PlayerInfo[Boxer2][pHP] = 100;
                                GetPlayerName(Boxer1, winner, sizeof(winner));
                                GetPlayerName(Boxer2, loser, sizeof(loser));
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer1)
                                        {
                                            if(PlayerInfo[Boxer1][pJob] == 10)
                                            {
                                                TBoxer = Boxer1;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }
                                format(string, sizeof(string), "Вы проиграли бой против %s.", winner);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
                                format(string, sizeof(string), "Вы выиграли бой против %s.", loser);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(Boxer1, "~r~You won", 3500, 1);
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
                                if(PlayerInfo[Boxer1][pJob] == 6 && PlayerInfo[Boxer1][pMember] == 0)
                                {
                                    SetPlayerSkin(Boxer1, 49);
	 	                        }
	 	                        else
				                {
				                    if(PlayerInfo[Boxer1][pMember] >= 1) { SetPlayerSkin(Boxer1,PlayerInfo[Boxer1][pModel]);}
		                            if(PlayerInfo[Boxer1][pMember] == 0) { SetPlayerSkin(Boxer1,PlayerInfo[Boxer1][pChar]);}
				                }
				                if(PlayerInfo[Boxer2][pJob] == 6 && PlayerInfo[Boxer2][pMember] == 0)
                                {
                                    SetPlayerSkin(Boxer2, 49);
	 	                        }
	 	                        else
				                {
				                    if(PlayerInfo[Boxer2][pMember] >= 1) { SetPlayerSkin(Boxer2,PlayerInfo[Boxer2][pModel]);}
		                            if(PlayerInfo[Boxer2][pMember] == 0) { SetPlayerSkin(Boxer2,PlayerInfo[Boxer2][pChar]);}
				                }
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        InRing = 0;
                        RoundStarted = 0;
                        Boxer1 = 255;
                        Boxer2 = 255;
                        TBoxer = 255;
                        trigger = 0;
					}
				}
			}
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			if(oldposx != 0.0 && oldposy != 0.0 && oldposz != 0.0)
			{
				for(new b = 0; b < sizeof(AvtoInfo); b++)
				{
					if(PlayerToPoint(1.5, i,AvtoInfo[b][abEntranceX], AvtoInfo[b][abEntranceY], AvtoInfo[b][abEntranceZ]))
					{
						if(GetPlayerState(i) != PLAYER_STATE_DRIVER)
						{
							if(Dpic[i] == 1) continue; else GetPlayerPos(i,PosPic[0][i],PosPic[1][i],PosPic[2][i]),Dpic[i] = 1;
							if(AvtoInfo[b][abOwned] == 0)
							{
								format(enters,sizeof(enters), "Желаете купить автомастерскую?");
			   				 	ShowPlayerDialog(i,9829,DIALOG_STYLE_MSGBOX, "Автомастерская продаётся", enters, "Да", "Нет");
								return true;
							}
							if(AvtoInfo[b][abLocked] == 1) return SendClientMessage(i, COLOR_GREY, "Мастерская закрыта");
							if(PlayerInfo[i][pAutoMast] == b)
							{
								SetPlayerInterior(i,AvtoInfo[b][abInterior]);
								SetPlayerPos(i,AvtoInfo[b][aExitX],AvtoInfo[b][aExitY],AvtoInfo[b][aExitZ]);
								PlayerInfo[i][pInt] = AvtoInfo[b][abInterior];
								SetPlayerVirtualWorld(i,AvtoInfo[b][abWorld]);
								SetPlayerFacingAngle(i, 172.8032);
								return true;
							}
							if(PlayerInfo[i][pJob] == 2)
							{
								AvtoInfo[b][Rab] += 1;
								SetPlayerInterior(i,AvtoInfo[b][abInterior]);
								SetPlayerPos(i,AvtoInfo[b][aExitX],AvtoInfo[b][aExitY],AvtoInfo[b][aExitZ]);
								PlayerInfo[i][pInt] = AvtoInfo[b][abInterior];
								SetPlayerVirtualWorld(i,AvtoInfo[b][abWorld]);
								SetPlayerFacingAngle(i, 172.8032);
								MehJob[i] = b;
								format(enters,sizeof(enters), "Вы успешно устроились рабочим в автомастерскую ID: %s",AvtoInfo[b][abMessage]);
								SendClientMessage(i, COLOR_GREEN, enters);
								SendClientMessage(i, COLOR_WHITE, "Ознакомиться с командами можно в личном меню /mm - Команды сервера");
		       					return true;
							}
						}
					}
				}
	 			for(new b = 0; b < sizeof(BizzInfo); b++)
				{
					if(IsPlayerInRangeOfPoint(i,1.5,BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bLocked] == 0)
					{
						if(GetPlayerState(i) != PLAYER_STATE_DRIVER)
						{
						    if(Dpic[i] == 1) continue; else GetPlayerPos(i,PosPic[0][i],PosPic[1][i],PosPic[2][i]),Dpic[i] = 1;
							if(BizzInfo[b][bOwned] == 0)
							{
								SetPlayerInterior(i,BizzInfo[b][bInterior]);
								PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
								SetPlayerVirtualWorld(i,BizzInfo[b][bVworld]);
								SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
								PlayerInfo[i][pBisIn] = b;
								return true;
							}
							if(BizzInfo[b][bType] == 0)
							{
								if(enterbiz[i] == 0)
								{
									if(BizzInfo[b][bLocked] == 1) return SendClientMessage(i, COLOR_GREY, "Бизнес закрыт");
			 						format(enters,sizeof(enters), "Цена входа %d вирт\nВы хотите войти?",BizzInfo[b][bEntranceCost]);
			   				 		ShowPlayerDialog(i,9898,DIALOG_STYLE_MSGBOX, "Вход", enters, "Да", "Отмена");
			           				return true;
		   				 		}
								if(PlayerInfo[i][pPBiskey] == 255)
								{
								}
		   				 		else
		   				 		{
									SetPlayerInterior(i,BizzInfo[b][bInterior]);
									PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
									SetPlayerVirtualWorld(i,BizzInfo[b][bVworld]);
									SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
									PlayerInfo[i][pBisIn] = b;
									return true;
		   				 		}
							}
							else
							{
								SetPlayerInterior(i,BizzInfo[b][bInterior]);
								PlayerInfo[i][pInt] = BizzInfo[b][bInterior];
								SetPlayerVirtualWorld(i, BizzInfo[b][bVworld]);
								SetPlayerPos(i,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
								PlayerInfo[i][pBisIn] = b;
								return true;
							}
						}
					}
					if(IsPlayerInRangeOfPoint(i,1.5,BizzInfo[b][bExitPlaceX], BizzInfo[b][bExitPlaceY], BizzInfo[b][bExitPlaceZ]) && GetPlayerVirtualWorld(i) == BizzInfo[b][bVworld] && PlayerInfo[i][pBisIn] != -1)
					{
                        SetPlayerInterior(i,0);
					    PlayerInfo[i][pInt] = 0;
					    SetPlayerVirtualWorld(i,0);
					    SetPlayerPos(i,BizzInfo[PlayerInfo[i][pBisIn]][bOutX],BizzInfo[PlayerInfo[i][pBisIn]][bOutY],BizzInfo[PlayerInfo[i][pBisIn]][bOutZ]);
					    PlayerInfo[i][pBisIn] = -1;
					    return true;
					}
				}
	      		for(new h = 0; h < sizeof(HouseInfo); h++)
	          	{
		        	if(PlayerToPoint(1.5, i, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hVworld] == GetPlayerVirtualWorld(i))
		        	{
						if(GetPlayerState(i) != PLAYER_STATE_DRIVER)
						{
		        	    	if(Dpic[i] == 1) continue; else GetPlayerPos(i,PosPic[0][i],PosPic[1][i],PosPic[2][i]),Dpic[i] = 1;
							if(HouseInfo[h][hOwned] == 1)
							{
					        	new ttextt[32];
					        	if(IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
								{
									ttextt = "[{22ff00}Online{F2EEF0}]";
								}
								else if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner])))
								{
									ttextt = "[{ff001c}Offline{F2EEF0}]";
								}
								if(HouseInfo[h][hKlass] == 0)format(string, sizeof(string), "{0080FF}Владелец: {F2EEF0}%s %s\n{0080FF}Класс:{FFFFFF} Nope\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								else if(HouseInfo[h][hKlass] == 1)format(string, sizeof(string), "{0080FF}Владелец: {F2EEF0}%s %s\n{0080FF}Класс:{ffffff} D\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								else if(HouseInfo[h][hKlass] == 2)format(string, sizeof(string), "{0080FF}Владелец: {F2EEF0}%s %s\n{0080FF}Класс:{ffffff} C\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								else if(HouseInfo[h][hKlass] == 3)format(string, sizeof(string), "{0080FF}Владелец: {F2EEF0}%s %s\n{0080FF}Класс:{ffffff} B\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								else if(HouseInfo[h][hKlass] == 4)format(string, sizeof(string), "{0080FF}Владелец: {F2EEF0}%s %s\n{0080FF}Класс:{ffffff} A\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								else format(string, sizeof(string), "{0080FF}Владелец:{F2EEF0} %s %s\n{0080FF}Класс:{ffffff} S\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hOwner],ttextt,h);
								ShowPlayerDialog(i,10075,DIALOG_STYLE_MSGBOX, "Дом куплен",string, "Войти", "Отмена");
								return true;
							}
							else
							{
								if(HouseInfo[h][hKlass] == 0)
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} Nope\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
		                        else if(HouseInfo[h][hKlass] == 1)
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} D\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
		                        else if(HouseInfo[h][hKlass] == 2)
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} C\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
		                        else if(HouseInfo[h][hKlass] == 3)
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} B\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
		                        else if(HouseInfo[h][hKlass] == 4)
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} A\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
	                            else
		                        {
		                            format(string, sizeof(string), "{0080FF}Цена:{ffffff} %d\n{0080FF}Класс:{ffffff} S\n{0080FF}Номер дома:{ffffff} %d",HouseInfo[h][hValue],h);
		                        }
			                    ShowPlayerDialog(i,10026,DIALOG_STYLE_MSGBOX, "Дом продаётся",string, "Купить", "Отмена");
			                    return true;
							}
						}
        			}
    			}
    		}
  		}
	}
	return true;
}
stock ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new sendername[MAX_PLAYER_NAME];
	    new string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
	 	format(string, sizeof(string), "%s.ini",sendername);
	 	new files = ini_openFile(string);
		if(files < 0) print("нет файла");
	 	else
		{
			ini_setInteger(files, "MarriedTo",0);
			ini_setInteger(files, "Married",0);
			ini_closeFile(files);
		}
	}
	return true;
}
public OnPlayerText(playerid, text[])
{
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new tmp[256];
	new string[256];
 	new ip[26];
 	new giveplayer[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
 	if(IsIP(text) || CheckString(text))
	{
		PlayerInfo[playerid][pMuteTime] = 10800;
		PlayerInfo[playerid][pMuted] = 1;
		format(string, sizeof(string), "%s: %s",sendername,text);
		ABroadCast(COLOR_LIGHTRED, string, 1);
		format(string, sizeof(string), "ID: %d | IP: [%s]",playerid,ip);
		ABroadCast(COLOR_LIGHTRED, string, 1);
		format(string,sizeof(string), "[Security] Вы получили бан чата на 3 часа /mm - репорт");
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		SetPlayerChatBubble(playerid, "заткнут(а)",COLOR_PURPLE,30.0,10000);
		return false;
    }
    if(TalkingLive[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		format(string, sizeof(string), "< [Тел] SF News > %s: %s", sendername, text);
		OOCNews(COLOR_GREEN, string);
	}
	if(TalkingLivels[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
 		format(string, sizeof(string), "< [Тел] LS News %s: %s", sendername, text);
		LSNews(0x0073B7AA, string);
	}
	if(TalkingLivelv[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		format(string, sizeof(string), "< [Тел] LV News > %s: %s", sendername, text);
		LVNews(TEAM_CYAN_COLOR, string);
	}
    if(TalkingLive[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 9)
		{
		    format(string, sizeof(string), "< SF News > Ведущий %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< SF News > Гость %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
			return false;
		}
	}
	if(TalkingLivels[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 16)
		{
		    format(string, sizeof(string), "< LS News > Ведущий %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< LS News > Гость %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
			return false;
		}
	}
	if(TalkingLivelv[playerid] == 2)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		if(PlayerInfo[playerid][pMember] == 20)
		{
		    format(string, sizeof(string), "< LV News > Ведущий %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
			return false;
		}
		else
		{
		    format(string, sizeof(string), "< LV News > Гость %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
			return false;
		}
	}
	if(PlayerTalkingWith[playerid] != -1)
	{
		new idx;
		tmp = strtok(text, idx);
		if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		format(string, sizeof(string), "[Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(IsPlayerConnected(PlayerTalkingWith[playerid]))
	{
		if(PlayerTalkingWith[PlayerTalkingWith[playerid]] == playerid)
		{
			SendClientMessage(PlayerTalkingWith[playerid], COLOR_YELLOW,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "На второй линии ни кого нет");
		}
		return false;
	}
	if(PEfir[playerid] != 255)
	{
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!");return false; }
		    format(string, sizeof(string), "< SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
		}
		if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LV News > %s: %s", sendername, text);
			LVNews(TEAM_CYAN_COLOR, string);
		}
		if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
		}
		if(Pefir[playerid] == 1)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		    format(string, sizeof(string), "< SF News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, string);
		}
		if(Pefir[playerid] == 2)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LS News > %s: %s", sendername, text);
			LSNews(0x0073B7AA, string);
		}
		if(Pefir[playerid] == 3)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SendClientMessage(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return false; }
		    format(string, sizeof(string), "< LV News > %s: %s", sendername, text);
			LSNews(TEAM_CYAN_COLOR, string);
		}
		return false;
	}
	if(strcmp(text, "привет", true) == 0 || strcmp(text, "ку", true) == 0 || strcmp(text, "хай", true) == 0|| strcmp(text, "q", true) == 0 || strcmp(text, "re", true) == 0 || strcmp(text, "ghbdtn", true) == 0)
	{
		new suspect = GetClosestPlayer(playerid);
		GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
		if(GetDistanceBetweenPlayers(playerid,suspect) < 2)
		{
			if(PlayerInfo[playerid][pMember] == PlayerInfo[suspect][pMember])
			{
				format(string, sizeof(string), "%s пожал(а) руку %s'у", sendername ,giveplayer);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(suspect, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				return false;
			}
		}
		switch(PlayerInfo[playerid][pMember])
		{
			case 12:
			{
				format(string,sizeof(string), "показал(a) распальцовку The Ballas Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s показал(a) распальцовку The Ballas Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
			case 13:
			{
				format(string,sizeof(string), "показал(a) распальцовку Los Santos Vagos Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s показал(a) распальцовку Los Santos Vagos Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
			case 15:
			{
				format(string,sizeof(string), "показал(a) распальцовку Grove Street Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s показал(a) распальцовку Grove Street Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
			case 17:
			{
				format(string,sizeof(string), "показал(a) распальцовку Varios Los Aztecas Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s показал(a) распальцовку Varios Los Aztecas Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
			case 18:
			{
				format(string,sizeof(string), "показал(a) распальцовку The Rifa Gang");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string, sizeof(string), "%s показал(a) распальцовку The Rifa Gang", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		}
	}
	else if(strcmp(text, "здравия", true) == 0 || strcmp(text, "Здравия", true) == 0 || strcmp(text, "plhfdbz", true) == 0 || strcmp(text, "Plhfdbz", true) == 0 )
	{
        if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pMember] == 3)
		{
	    	format(string, sizeof(string), "%s отдал(а) честь", sendername);
	    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	SetPlayerChatBubble(playerid, "отдал(а) честь", COLOR_PURPLE, 30.0, 10000);
	    	return false;
		}
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, ":В", true) == 0 || strcmp(text, ":в", true) == 0 )
	{
	    format(string, sizeof(string), "%s смеётся", sendername);
	    if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "смеётся", COLOR_PURPLE, 30.0, 10000);
	    return false;
	}
	else if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хд", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
	    format(string, sizeof(string), "%s валяется от смеха", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
	    SetPlayerChatBubble(playerid, "валяется от смеха",COLOR_PURPLE,30.0,10000);
	    ApplyAnimation( playerid, "FINALE", "Fin_Land_Die", 10.0, 0, 0, 0, 0, 0 );
	    return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
	    format(string, sizeof(string), "%s улыбается", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "улыбается",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, "(", true) == 0)
	{
	    format(string, sizeof(string), "%s грустит", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "грустит",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, "((", true) == 0)
	{
	    format(string, sizeof(string), "%s расстроился", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "расстроился",COLOR_PURPLE,30.0,10000);
	    return false;
	}
    else if(strcmp(text, "facepalm", true) == 0 || strcmp(text, "мда", true) == 0 || strcmp(text, "ойё", true) == 0 || strcmp(text, "сука", true) == 0)
	{
	    format(string, sizeof(string), "%s сделал facepalm", sendername);
	    ApplyAnimation( playerid, "MISC", "PLYR_SHKHEAD", 10.0, 0, 0, 0, 0, 0 );
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "facepalm",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, "админ", true) == 0 || strcmp(text, "адм", true) == 0 || strcmp(text, "admin", true) == 0)
	{
	    format(string, sizeof(string), "%s говорит о всевышних", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "говорит о всевышних",COLOR_PURPLE,30.0,10000);
	    return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
	    format(string, sizeof(string), "%s хохочет во весь голос", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "хохочет во весь голос",COLOR_PURPLE,30.0,10000);
	    ApplyAnimation( playerid, "RAPPING", "Laugh_01", 10.0, 0, 0, 0, 0, 0 );
	    return false;
	}
    else if(strcmp(text, ";(", true) == 0)
	{
	    format(string, sizeof(string), "%s плачет", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerChatBubble(playerid, "плачет",COLOR_PURPLE,30.0,10000);
	    ApplyAnimation(playerid, "GRAVEYARD", "mrnF_loop", 4.1, 0, 0, 1, 0 ,0);
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
            {
                PlaySoundNearPlayer(playerid, 22600);
            }
        }
	    return false;
	}
	if(realchat)
	{
		if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, 0xFFD5BBAA, "Пожалуйста войдите/зарегистрируйтесь");
	 	if(PlayerInfo[playerid][pMuted] == 1)
		{
			format(string, sizeof(string), "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			SetPlayerChatBubble(playerid, "У меня бан чата",COLOR_PURPLE,30.0,10000);
			return false;
		}
		if(gag[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
			SetPlayerChatBubble(playerid, "пытается что-то сказать",COLOR_PURPLE,30.0,10000);
			return false;
		}
		if(PlayerInfo[playerid][pLevel] <= 1)
		{
			new succ;
			for(new i; i < strlen(text); i++)
			{
				if(PText[playerid][i] == text[i]) succ++;
			}
			if(succ == strlen(text))
			{
				SendClientMessage(playerid,0xFFD5BBAA, "Не флуди!");
	     		return false;
			}
		}
		strmid(PText[playerid],text,0,256,256);
      	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
      	{
	        ApplyAnimation(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
			clearanim[playerid] = 7;
        }
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
		format(string, sizeof(string), "- %s: %s", sendername, text);
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return false;
	}
	return true;
}
stock ClearAnim(playerid)
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
	return true;
}
stock OnPlayerAiming(playerid,weaponid)
{
    switch(weaponid)
    {
        case 34..36,43:
        {
            if(IsPlayerAiming(playerid))
  			{
 				RemovePlayerAttachedObject(playerid, 0);
				RemovePlayerAttachedObject(playerid, 1);
				RemovePlayerAttachedObject(playerid, 2);
				RemovePlayerAttachedObject(playerid, 3);
				RemovePlayerAttachedObject(playerid, 4);
				RemovePlayerAttachedObject(playerid, 5);
				RemovePlayerAttachedObject(playerid, 6);
				RemovePlayerAttachedObject(playerid, 7);
				RemovePlayerAttachedObject(playerid, 8);
                RemovePlayerAttachedObject(playerid, 9);
       		}
        }
    }
	return true;
}
public OnPlayerUpdate(playerid)
{
    if(GetPVarInt(playerid, "Kick") != 0) GKick(playerid);
    switch(GetPlayerWeapon(playerid))
   	{
      	case 44, 45:
      	{
        	new keys, ud, lr;
        	GetPlayerKeys(playerid, keys, ud, lr);
        	if((keys & KEY_FIRE) && (!IsPlayerInAnyVehicle(playerid)))
        	{
            	return false;
            }
        }
    }
    if(IsPlayerAiming(playerid)) OnPlayerAiming(playerid,GetPlayerWeapon(playerid));
    if(GetPVarInt(playerid, "laser"))
    {
     	RemovePlayerAttachedObject(playerid, 8);
      	switch(GetPlayerWeapon(playerid))
       	{
        	case 22:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
             	  	}
          	      	else
       	       	  	{
      		          	SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
                	}
            	}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
             		{
              			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                	}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                	}
            	}
        	}
        	case 23:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
           			{
            			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
            		}
            		else
            		{
            			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
            		}
            	}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
             		{
              			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                	}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                	}
            	}
        	}
        	case 27:
        	{
        		if(IsPlayerAiming(playerid))
         		{
         			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
           			{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.588246, -0.022766, 0.138052, -11.531745, 347.712585, 352.784271);
             		}
              		else
               		{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.588246, -0.022766, 0.138052, 1.468254, 350.712585, 352.784271);
                	}
           		}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
             		{
              			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
                	}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
                	}
            	}
        	}
        	case 30:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
                	}
            	}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
             		{
              			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                	}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                	}
            	}
        	}
        	case 31:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
                	}
           	 	}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
                	}
            	}
      		}
       		case 34:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
                	}
                	return true;
		    	}
      			else
        		{
         			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
           			{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
                	}
           		}
        	}
        	case 29:
        	{
        		if(IsPlayerAiming(playerid))
         		{
          			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
            		{
             			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
               		}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
                	}
            	}
            	else
            	{
            		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
             		{
              			SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
                	}
                	else
                	{
                		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "color"), 6, 0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
                	}
            	}
        	}
    	}
    }
	SetPVarInt(playerid, "NewPlayerAmmo", GetPlayerAmmo(playerid));
	if(GetPVarInt(playerid, "NewPlayerAmmo") != GetPVarInt(playerid, "PlayerAmmo"))
	{
	    OnPlayerAmmoChange(playerid, GetPVarInt(playerid, "NewPlayerAmmo"), GetPVarInt(playerid, "PlayerAmmo"));
	    SetPVarInt(playerid, "PlayerAmmo", GetPVarInt(playerid, "NewPlayerAmmo"));
 	}
 	if(godmode[playerid] == 1)
 	{
 	    SetPlayerHealthAC(playerid, 9999);
		PlayerInfo[playerid][pHP] = 9999;
 	}
	if(Works[playerid] == true && JobCP[playerid] == 2)
	{
	    if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_CARRY)
		{
			Bags[playerid] = 1;
			if(PlayerToPoint(2.0,playerid,278.7468,1797.6921,17.6406)) return true;
			DisablePlayerCheckpoint(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid,7)) RemovePlayerAttachedObject(playerid,7);
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			JobCP[playerid] = 1;
		}
	}
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if(Upravakazino[playerid] == true)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5,2242.7837,1620.9683,1006.1769) || IsPlayerInRangeOfPoint(playerid,1.5,2231.1338,1621.2253,1006.1768))
		{
			if(ud > 0) Stavkarul1up(playerid);
			else if(ud < 0) Stavkarul1down(playerid);
			if(lr > 0) Stavkarul1left(playerid);
			else if(lr < 0) Stavkarul1right(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.5,2231.0769,1620.5939,1006.1772) || IsPlayerInRangeOfPoint(playerid,1.5,2242.8293,1618.1311,1006.1790))
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
		else
		{
			if(ud > 0) Stavkarul1down(playerid);
			else if(ud < 0) Stavkarul1up(playerid);
			if(lr > 0) Stavkarul1right(playerid);
			else if(lr < 0) Stavkarul1left(playerid);
		}
	}
	clearanim[playerid] -= 1;
	if(clearanim[playerid] == 10) ApplyAnimation(playerid, "PED", "getup_front", 4.1, 0, 1, 1, 1, 1, 1);
	if(clearanim[playerid] == 0) ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
    if(IsPlayerConnected(playerid)) PlayerEx[playerid][TickEx]++;
	return true;
}
stock FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return true;
}
public AdvertiseTimer()
{
	SendClientMessageToAll(0x33AA33AA,"============================== [ Информация ] ==============================");
    SendClientMessageToAll(0x9ACD32AA,"Получение дополнительных денежных средств: http://www.nextagerp.5nx.ru/Донат");
    SendClientMessageToAll(0x9ACD32AA,"Приведи друга, получи 2 000 000. При регистрации необходимо указать ваш ник и набрать 7 уровень.");
    SendClientMessageToAll(0x9ACD32AA,"Для связи с администрацией введите /mm ,далее выберите репорт, либо введите /rep");
    SendClientMessageToAll(0x33AA33AA,"==========================================================================");
	new randad = random(21);
	switch (randad)
	{
		case 0: SendClientMessageToAll(0x6ec2ff,"Если вам не хватает денег,возьмите кредит в банке");
		case 1: SendClientMessageToAll(0x6ec2ff,"Если вам не на чем заработать,то вы можете сделать вклад в банке,а потом получить процент");
        case 2: SendClientMessageToAll(0x6ec2ff,"Метро позволит вам быстро перемещаться по городу,а междугородний поезд довезёт до другого");
        case 3: SendClientMessageToAll(0x6ec2ff,"В 24/7 вы можете купить большинство нужных вещей,от выпивки до телефона");
        case 4: SendClientMessageToAll(0x6ec2ff,"В магазине одежды вы можете покупать дополнительную одежду,такую как очки или шапки");
        case 5: SendClientMessageToAll(0x6ec2ff,"Вступайте во фракции,знакомьтесь с новыми людьми,заводите семью,живите полной жизнью!");
        case 6: SendClientMessageToAll(0x6ec2ff,"Не забывайте регистрироваться на форуме");
        case 7: SendClientMessageToAll(0x6ec2ff,"Без знания РП вас вряд ли примут во фракцию,а тем более на лидерство");
        case 8: SendClientMessageToAll(0x6ec2ff,"Любите заниматься бизнесом? Вы можете купить автомастерскую,магазин,клуб,бар или просто ферму");
        case 9: SendClientMessageToAll(0x6ec2ff,"Не унижайтесь,не выпрашивайте админку");
        case 10: SendClientMessageToAll(0x6ec2ff,"На пляже Вероны вы можете арендовать лодку для рыбалки или просто для развлечения");
        case 11: SendClientMessageToAll(0x6ec2ff,"Не забывайте питаться в столовых или фаст фудах,т.к. сытость влияет на здоровье");
        case 12: SendClientMessageToAll(0x6ec2ff,"Для рыбалки нужны удочка и черви,место рыбалки:на лодке/пристани,место продажи:склад продуктов");
        case 13: SendClientMessageToAll(0x6ec2ff,"Вы можете собирать грибы в лесу,продать вы их можете на складе продуктов");
        case 14: SendClientMessageToAll(0x6ec2ff,"Мэр полностью управляет штатом,начиная от зарплаты,заканчивая налогами на имущество");
        case 15: SendClientMessageToAll(0x6ec2ff,"Детективы важны для полицейских,они собирают улики и отправляют выводы полицейским");
        case 16: SendClientMessageToAll(0x6ec2ff,"Если вы хотите подать объявление,вы можете сделать это в банкомате или отправив его в News");
        case 17: SendClientMessageToAll(0x6ec2ff,"Купив mp3-плеер вы сможете слушать музыку");
        case 18: SendClientMessageToAll(0x6ec2ff,"Донат деньги помогают серверу развиваться");
        case 19: SendClientMessageToAll(0x6ec2ff,"Через команду /cm вы можете управлять компонентами автомобиля");
        case 20: SendClientMessageToAll(0x6ec2ff,"Используя команду /tv,вы можете посмотреть телевизор(если он рядом)");
	}
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(playertextid == NextCAR)
    {
        new carid;
        new curcar = GetVehicleModel(GetPlayerVehicleID(playerid));
    	DestroyVehicle(GetPlayerVehicleID(playerid));
		switch(curcar)
		{
		    case 477:
		    {
		    	CarPrice[playerid] = 3200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Super GT     \n\nMAX SPEED: 100\nKM/H \n\nPRICE: 3200000$");
				carid = CreateVehicle(506, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 415);
			}
			case 506:
		    {
		    	CarPrice[playerid] = 3400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Cheetah     \n\nMAX SPEED: 107\nKM/H \n\nPRICE: 3400000$");
				carid = CreateVehicle(415, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 541);
			}
		    case 415:
		    {
		    	CarPrice[playerid] = 3500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bullet     \n\nMAX SPEED: 113\nKM/H \n\nPRICE: 3500000$");
				carid = CreateVehicle(541, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 451);
			}
			case 541:
		    {
		    	CarPrice[playerid] = 3800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Turismo     \n\nMAX SPEED: 108\nKM/H \n\nPRICE: 3800000$");
				carid = CreateVehicle(451, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 411);
			}
			case 451:
		    {
		    	CarPrice[playerid] = 4000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Infernus     \n\nMAX SPEED: 123\nKM/H \n\nPRICE: 4000000$");
				carid = CreateVehicle(411, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 477);
			}
			case 411:
		    {
		    	CarPrice[playerid] = 3000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: ZR-350     \n\nMAX SPEED: 104\nKM/H \n\nPRICE: 3000000$");
				carid = CreateVehicle(477, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 506);
			}//B
			case 550:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Stratum     \n\nMAX SPEED: 86\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(561, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 555);
			}
			case 561:
		    {
		    	CarPrice[playerid] = 1600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Windsor     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1600000$");
				carid = CreateVehicle(555, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 535);
			}
			case 555:
		    {
		    	CarPrice[playerid] = 1650000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Slamvan     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1650000$");
				carid = CreateVehicle(535, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 496);
			}
			case 535:
		    {
		    	CarPrice[playerid] = 1700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Blista Compact  \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 1700000$");
				carid = CreateVehicle(496, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 445);
			}
			case 496:
		    {
		    	CarPrice[playerid] = 1750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Admiral     \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 1750000$");
				carid = CreateVehicle(445, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 565);
			}
			case 445:
		    {
		    	CarPrice[playerid] = 1800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Flash     \n\nMAX SPEED: 92\nKM/H \n\nPRICE: 1800000$");
				carid = CreateVehicle(565, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 587);
			}
			case 565:
		    {
		    	CarPrice[playerid] = 1900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Euros     \n\nMAX SPEED: 92\nKM/H \n\nPRICE: 1900000$");
				carid = CreateVehicle(587, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 533);
			}
			case 587:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Feltzer     \n\nMAX SPEED: 93\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(533, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 560);
			}
			case 533:
		    {
		    	CarPrice[playerid] = 2100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sultan     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2100000$");
				carid = CreateVehicle(560, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 602);
			}
			case 560:
		    {
		    	CarPrice[playerid] = 2200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Alpha     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2200000$");
				carid = CreateVehicle(602, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 534);
			}
			case 602:
		    {
		    	CarPrice[playerid] = 2250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Remington     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2250000$");
				carid = CreateVehicle(534, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 603);
			}
			case 534:
		    {
		    	CarPrice[playerid] = 2300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Phoenix     \n\nMAX SPEED: 95\nKM/H \n\nPRICE: 2300000$");
				carid = CreateVehicle(603, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 426);
			}
			case 603:
		    {
		    	CarPrice[playerid] = 2300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Premier     \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 2300000$");
				carid = CreateVehicle(426, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 562);
			}
			case 426:
		    {
		    	CarPrice[playerid] = 2350000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Elegy     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2350000$");
				carid = CreateVehicle(562, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 559);
			}
			case 562:
		    {
		    	CarPrice[playerid] = 2400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Jester     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2400000$");
				carid = CreateVehicle(559, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 480);
			}
			case 559:
		    {
		    	CarPrice[playerid] = 2500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Comet     \n\nMAX SPEED: 103\nKM/H \n\nPRICE: 2500000$");
				carid = CreateVehicle(480, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 402);
			}
			case 480:
		    {
		    	CarPrice[playerid] = 2600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Buffalo     \n\nMAX SPEED: 104\nKM/H \n\nPRICE: 2600000$");
				carid = CreateVehicle(402, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 429);
			}
			case 402:
		    {
		    	CarPrice[playerid] = 2600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Banshee     \n\nMAX SPEED: 112\nKM/H \n\nPRICE: 2600000$");
				carid = CreateVehicle(429, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 545);
			}
			case 429:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Hustler     \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(545, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 500);
			}
			case 545:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Mesa     \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(500, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 589);
			}
			case 500:
		    {
		    	CarPrice[playerid] = 2100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Club       \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 2100000$");
				carid = CreateVehicle(589, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 579);
			}
			case 589:
		    {
		    	CarPrice[playerid] = 1800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Huntley     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1800000$");
				carid = CreateVehicle(579, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 550);
			}
			case 579:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sunrise     \n\nMAX SPEED: 81\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(550, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 561);
			}//C
			case 410:
		    {
		    	CarPrice[playerid] = 650000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Primo     \n\nMAX SPEED: 79\nKM/H \n\nPRICE: 650000$");
				carid = CreateVehicle(547, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 401);
			}
			case 547:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bravura     \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(401, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 529);
			}
			case 401:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Willard     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(529, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 491);
			}
			case 529:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Virgo     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(491, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 436);
			}
			case 491:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Previon     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(436, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 419);
			}
			case 436:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Esperanto     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(419, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 527);
			}
			case 419:
		    {
		    	CarPrice[playerid] = 800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Cadrona     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 800000$");
				carid = CreateVehicle(527, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 540);
			}
			case 527:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Vincent     \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(540, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 585);
			}
			case 540:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Emperor     \n\nMAX SPEED: 85\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(585, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 421);
			}
			case 585:
		    {
		    	CarPrice[playerid] = 950000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Washington     \n\nMAX SPEED: 86\nKM/H \n\nPRICE: 950000$");
				carid = CreateVehicle(421, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 558);
			}
			case 421:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Uranus     \n\nMAX SPEED: 87\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(558, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 517);
			}
			case 558:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Majestic     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(517, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 439);
			}
			case 517:
		    {
		    	CarPrice[playerid] = 1050000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Stallion     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1050000$");
				carid = CreateVehicle(439, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 458);
			}
			case 439:
		    {
		    	CarPrice[playerid] = 1100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Solair     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1100000$");
				carid = CreateVehicle(458, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 516);
			}
			case 458:
		    {
		    	CarPrice[playerid] = 1100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Nebula     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1100000$");
				carid = CreateVehicle(516, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 526);
			}
			case 516:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Fortune     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(526, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 566);
			}
			case 526:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Tahoma     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(566, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 551);
			}
			case 566:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Merit     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(551, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 507);
			}
			case 551:
		    {
		    	CarPrice[playerid] = 1250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Elegant     \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 1250000$");
				carid = CreateVehicle(507, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 405);
			}
			case 507:
		    {
		    	CarPrice[playerid] = 1300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sentinel     \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 1300000$");
				carid = CreateVehicle(405, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 412);
			}
			case 405:
		    {
		    	CarPrice[playerid] = 1400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Voodoo     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 1400000$");
				carid = CreateVehicle(412, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 536);
			}
			case 412:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Blade     \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(536, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 475);
			}
			case 536:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sabre     \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(475, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 418);
			}
			case 475:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Moonbeam     \n\nMAX SPEED: 64\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(418, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 413);
			}
			case 418:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Pony     \n\nMAX SPEED: 61\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(413, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 554);
			}
			case 413:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Yosemite     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(554, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 400);
			}
			case 554:
		    {
		    	CarPrice[playerid] = 800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Landstalker     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 800000$");
				carid = CreateVehicle(400, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 505);
			}
			case 400:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Rancher     \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(505, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 410);
			}
			case 505:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Manana     \n\nMAX SPEED: 72\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(410, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 547);
			}//nope
			case 404:
		    {
		    	CarPrice[playerid] = 250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Regina     \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 250000$");
				carid = CreateVehicle(479, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 466);
			}
			case 479:
		    {
		    	CarPrice[playerid] = 300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Glendale     \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 300000$");
				carid = CreateVehicle(466, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 549);
			}
			case 466:
		    {
		    	CarPrice[playerid] = 400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Tampa     \n\nMAX SPEED: 85\nKM/H \n\nPRICE: 400000$");
				carid = CreateVehicle(549, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 542);
			}
			case 549:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Clover     \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(542, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 518);
			}
			case 542:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Buccaneer     \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(518, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 600);
			}
			case 518:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Picador     \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(600, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 478);
			}
			case 600:
		    {
		    	CarPrice[playerid] = 400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Walton     \n\nMAX SPEED: 65\nKM/H \n\nPRICE: 400000$");
				carid = CreateVehicle(478, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 543);
			}
			case 478:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sadler     \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(543, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 422);
			}
			case 543:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bobcat     \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(422, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 483);
			}
			case 422:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Camper     \n\nMAX SPEED: 68\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(483, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 404);
			}
			case 483:
		    {
		    	CarPrice[playerid] = 200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Perenniel     \n\nMAX SPEED: 74\nKM/H \n\nPRICE: 200000$");
				carid = CreateVehicle(404, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 479);
			}
			//байки
			case 586:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Freeway     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(463, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 581);
			}
			case 463:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: BF-400     \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(581, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 461);
			}
			case 581:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: PCJ-600     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(461, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 521);
			}
			case 461:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: FCR-900     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(521, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 522);
			}
			case 521:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: NRG-500     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(522, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 586);
			}
			case 522:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Wayfarer     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(586, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, 463);
			}
		}
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		SetPlayerCameraPos(playerid, -1647.2406, 1209.6245, 22.9207);
		SetPlayerCameraLookAt(playerid, -1648.2365, 1209.5519, 22.7062);
		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, curcar);
		PlayerTextDrawShow(playerid, PlayerText:NextCarPic);
		PlayerTextDrawShow(playerid, PlayerText:PrevCarPic);
		PlayerTextDrawShow(playerid, PlayerText:NameCar);
    }
    else if(playertextid == PrevCAR)
    {
        new carid;
        new curcar = GetVehicleModel(GetPlayerVehicleID(playerid));
    	DestroyVehicle(GetPlayerVehicleID(playerid));
		switch(curcar)
		{
		    case 477:
		    {
		    	CarPrice[playerid] = 4000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Infernus     \n\nMAX SPEED: 123\nKM/H \n\nPRICE: 4000000$");
				carid = CreateVehicle(411, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 451);
			}
			case 506:
		    {
		    	CarPrice[playerid] = 3000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: ZR-350     \n\nMAX SPEED: 104\nKM/H \n\nPRICE: 3000000$");
				carid = CreateVehicle(477, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 411);
			}
		    case 415:
		    {
		    	CarPrice[playerid] = 3200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Super GT     \n\nMAX SPEED: 100\nKM/H \n\nPRICE: 3200000$");
				carid = CreateVehicle(506, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 477);
			}
			case 541:
		    {
		    	CarPrice[playerid] = 3400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Cheetah     \n\nMAX SPEED: 107\nKM/H \n\nPRICE: 3400000$");
				carid = CreateVehicle(415, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 506);
			}
			case 451:
		    {
		    	CarPrice[playerid] = 3500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bullet     \n\nMAX SPEED: 113\nKM/H \n\nPRICE: 3500000$");
				carid = CreateVehicle(541, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 415);
			}
			case 411:
		    {
		    	CarPrice[playerid] = 3800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Turismo     \n\nMAX SPEED: 108\nKM/H \n\nPRICE: 3800000$");
				carid = CreateVehicle(451, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 541);
			}//b
			case 550:
		    {
		    	CarPrice[playerid] = 1800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Huntley     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1800000$");
				carid = CreateVehicle(579, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 589);
			}
			case 561:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sunrise     \n\nMAX SPEED: 81\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(550, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 579);
			}
			case 555:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Stratum     \n\nMAX SPEED: 86\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(561, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 550);
			}
			case 535:
		    {
		    	CarPrice[playerid] = 1600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Windsor     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1600000$");
				carid = CreateVehicle(555, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 561);
			}
			case 496:
		    {
		    	CarPrice[playerid] = 1650000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Slamvan     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1650000$");
				carid = CreateVehicle(535, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 555);
			}
			case 445:
		    {
		    	CarPrice[playerid] = 1700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Blista Compact  \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 1700000$");
				carid = CreateVehicle(496, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 535);
			}
			case 565:
		    {
		    	CarPrice[playerid] = 1750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Admiral     \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 1750000$");
				carid = CreateVehicle(445, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 496);
			}
			case 587:
		    {
		    	CarPrice[playerid] = 1800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Flash     \n\nMAX SPEED: 92\nKM/H \n\nPRICE: 1800000$");
				carid = CreateVehicle(565, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 445);
			}
			case 533:
		    {
		    	CarPrice[playerid] = 1900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Euros     \n\nMAX SPEED: 92\nKM/H \n\nPRICE: 1900000$");
				carid = CreateVehicle(587, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 565);
			}
			case 560:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Feltzer     \n\nMAX SPEED: 93\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(533, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 587);
			}
			case 602:
		    {
		    	CarPrice[playerid] = 2100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Feltzer     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2100000$");
				carid = CreateVehicle(560, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 533);
			}
			case 534:
		    {
		    	CarPrice[playerid] = 2200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Alpha     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2200000$");
				carid = CreateVehicle(602, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 560);
			}
			case 603:
		    {
		    	CarPrice[playerid] = 2250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Remington     \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 2250000$");
				carid = CreateVehicle(534, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 602);
			}
			case 426:
		    {
		    	CarPrice[playerid] = 2300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Phoenix     \n\nMAX SPEED: 95\nKM/H \n\nPRICE: 2300000$");
				carid = CreateVehicle(603, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 534);
			}
			case 562:
		    {
		    	CarPrice[playerid] = 2300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Premier     \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 2300000$");
				carid = CreateVehicle(426, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 603);
			}
			case 559:
		    {
		    	CarPrice[playerid] = 2350000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Elegy     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2350000$");
				carid = CreateVehicle(562, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 426);
			}
			case 480:
		    {
		    	CarPrice[playerid] = 2400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Jester     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2400000$");
				carid = CreateVehicle(559, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 562);
			}
			case 402:
		    {
		    	CarPrice[playerid] = 2500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Comet     \n\nMAX SPEED: 103\nKM/H \n\nPRICE: 2500000$");
				carid = CreateVehicle(480, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 559);
			}
			case 429:
		    {
		    	CarPrice[playerid] = 2600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Buffalo     \n\nMAX SPEED: 104\nKM/H \n\nPRICE: 2600000$");
				carid = CreateVehicle(402, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 480);
			}
			case 545:
		    {
		    	CarPrice[playerid] = 2600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Banshee     \n\nMAX SPEED: 112\nKM/H \n\nPRICE: 2600000$");
				carid = CreateVehicle(429, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 402);
			}
			case 500:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Hustler     \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(545, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 429);
			}
			case 589:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Mesa     \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(500, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 545);
			}
			case 579:
		    {
		    	CarPrice[playerid] = 2100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Club       \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 2100000$");
				carid = CreateVehicle(589, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 500);
			}//c
			case 410:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Rancher       \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(505, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 400);
			}
			case 547:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Manana       \n\nMAX SPEED: 72\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(410, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 505);
			}
			case 401:
		    {
		    	CarPrice[playerid] = 650000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Primo       \n\nMAX SPEED: 79\nKM/H \n\nPRICE: 650000$");
				carid = CreateVehicle(547, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 410);
			}
			case 529:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bravura       \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(401, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 547);
			}
			case 491:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Willard       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(529, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 401);
			}
			case 436:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Virgo       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(491, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 529);
			}
			case 419:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Previon       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(436, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 491);
			}
			case 527:
		    {
		    	CarPrice[playerid] = 750000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Esperanto       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 750000$");
				carid = CreateVehicle(419, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 436);
			}
			case 540:
		    {
		    	CarPrice[playerid] = 800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Cadrona       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 800000$");
				carid = CreateVehicle(527, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 419);
			}
			case 585:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Vincent       \n\nMAX SPEED: 83\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(540, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 527);
			}
			case 421:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Emperor       \n\nMAX SPEED: 85\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(585, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 540);
			}
			case 558:
		    {
		    	CarPrice[playerid] = 950000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Washington     \n\nMAX SPEED: 86\nKM/H \n\nPRICE: 950000$");
				carid = CreateVehicle(421, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 585);
			}
			case 517:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Uranus       \n\nMAX SPEED: 87\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(558, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 421);
			}
			case 439:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Majestic       \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(517, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 558);
			}
			case 458:
		    {
		    	CarPrice[playerid] = 1050000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Stallion       \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1050000$");
				carid = CreateVehicle(439, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 517);
			}
			case 516:
		    {
		    	CarPrice[playerid] = 1100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Solair       \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1100000$");
				carid = CreateVehicle(458, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 439);
			}
			case 526:
		    {
		    	CarPrice[playerid] = 1100000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Nebula       \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1100000$");
				carid = CreateVehicle(516, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 458);
			}
			case 566:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Fortune       \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(526, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 516);
			}
			case 551:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Tahoma       \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(566, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 526);
			}
			case 507:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Merit       \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(551, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 566);
			}
			case 405:
		    {
		    	CarPrice[playerid] = 1250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Elegant       \n\nMAX SPEED: 90\nKM/H \n\nPRICE: 1250000$");
				carid = CreateVehicle(507, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 551);
			}
			case 412:
		    {
		    	CarPrice[playerid] = 1300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sentinel       \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 1300000$");
				carid = CreateVehicle(405, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 507);
			}
			case 536:
		    {
		    	CarPrice[playerid] = 1400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Voodoo       \n\nMAX SPEED: 94\nKM/H \n\nPRICE: 1400000$");
				carid = CreateVehicle(412, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 405);
			}
			case 475:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Blade       \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(536, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 412);
			}
			case 418:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sabre       \n\nMAX SPEED: 96\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(475, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 536);
			}
			case 413:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Moonbeam     \n\nMAX SPEED: 64\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(418, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 475);
			}
			case 554:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Pony       \n\nMAX SPEED: 61\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(413, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 418);
			}
			case 400:
		    {
		    	CarPrice[playerid] = 1200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Yosemite       \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 1200000$");
				carid = CreateVehicle(554, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 413);
			}
			case 505:
		    {
		    	CarPrice[playerid] = 800000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Landstalker     \n\nMAX SPEED: 88\nKM/H \n\nPRICE: 800000$");
				carid = CreateVehicle(400, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 554);
			}//nope
			case 404:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Camper       \n\nMAX SPEED: 68\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(483, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 422);
			}
			case 479:
		    {
		    	CarPrice[playerid] = 200000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Perenniel       \n\nMAX SPEED: 74\nKM/H \n\nPRICE: 200000$");
				carid = CreateVehicle(404, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 483);
			}
			case 466:
		    {
		    	CarPrice[playerid] = 250000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Regina       \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 250000$");
				carid = CreateVehicle(479, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 404);
			}
			case 549:
		    {
		    	CarPrice[playerid] = 300000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Glendale       \n\nMAX SPEED: 82\nKM/H \n\nPRICE: 300000$");
				carid = CreateVehicle(466, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 479);
			}
			case 542:
		    {
		    	CarPrice[playerid] = 400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Tampa       \n\nMAX SPEED: 85\nKM/H \n\nPRICE: 400000$");
				carid = CreateVehicle(549, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 466);
			}
			case 518:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Clover       \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(542, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 549);
			}
			case 600:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Buccaneer       \n\nMAX SPEED: 91\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(518, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 542);
			}
			case 478:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Picador       \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(600, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 518);
			}
			case 543:
		    {
		    	CarPrice[playerid] = 400000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Walton       \n\nMAX SPEED: 65\nKM/H \n\nPRICE: 400000$");
				carid = CreateVehicle(478, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 600);
			}
			case 422:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Sadler       \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(543, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 478);
			}
			case 483:
		    {
		    	CarPrice[playerid] = 600000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Bobcat       \n\nMAX SPEED: 78\nKM/H \n\nPRICE: 600000$");
				carid = CreateVehicle(422, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
				PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 543);
			}
			//байки
			case 586:
		    {
		    	CarPrice[playerid] = 2000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: NRG-500     \n\nMAX SPEED: 99\nKM/H \n\nPRICE: 2000000$");
				carid = CreateVehicle(522, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 521);
			}
			case 463:
		    {
		    	CarPrice[playerid] = 500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Wayfarer     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 500000$");
				carid = CreateVehicle(586, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 522);
			}
			case 581:
		    {
		    	CarPrice[playerid] = 700000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: Freeway     \n\nMAX SPEED: 80\nKM/H \n\nPRICE: 700000$");
				carid = CreateVehicle(463, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 586);
			}
			case 461:
		    {
		    	CarPrice[playerid] = 900000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: BF-400     \n\nMAX SPEED: 84\nKM/H \n\nPRICE: 900000$");
				carid = CreateVehicle(581, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 463);
			}
			case 521:
		    {
		    	CarPrice[playerid] = 1000000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: PCJ-600     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1000000$");
				carid = CreateVehicle(461, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 581);
			}
			case 522:
		    {
		    	CarPrice[playerid] = 1500000;
		    	PlayerTextDrawSetString(playerid, NameCar, "  NAME: FCR-900     \n\nMAX SPEED: 89\nKM/H \n\nPRICE: 1500000$");
				carid = CreateVehicle(521, -1655.9785,1209.4010,20.9879,227.2012, CarColor[playerid], CarColor[playerid], -1);
	    		PlayerTextDrawSetPreviewModel(playerid, PrevCarPic, 461);
			}
		}
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		SetPlayerCameraPos(playerid, -1647.2406, 1209.6245, 22.9207);
		SetPlayerCameraLookAt(playerid, -1648.2365, 1209.5519, 22.7062);
		PlayerTextDrawSetPreviewModel(playerid, NextCarPic, curcar);
		PlayerTextDrawShow(playerid, PlayerText:NextCarPic);
		PlayerTextDrawShow(playerid, PlayerText:PrevCarPic);
		PlayerTextDrawShow(playerid, PlayerText:NameCar);
    }
    else if(playertextid == ColorNext)
    {
        switch(CarColor[playerid])
        {
            case 1:
			{
				CarColor[playerid] = 0;
				PlayerTextDrawColor(playerid, ColorNext, 7536895);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -16780060);
				PlayerTextDrawColor(playerid, ColorPrev, -1);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, 228);
			}
            case 0:
			{
				CarColor[playerid] = 16;
				PlayerTextDrawColor(playerid, ColorNext, 83932415);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -131100);
				PlayerTextDrawColor(playerid, ColorPrev, 255);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -16780060);
			}
            case 16:
			{
				CarColor[playerid] = 79;
				PlayerTextDrawColor(playerid, ColorNext, -50331393);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, 228);
				PlayerTextDrawColor(playerid, ColorPrev, 7536895);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -16780060);

			}
            case 79:
			{
				CarColor[playerid] = 3;
				PlayerTextDrawColor(playerid, ColorNext, -1);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, 228);
				PlayerTextDrawColor(playerid, ColorPrev, 83932415);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -131100);

			}
            case 3:
			{
				CarColor[playerid] = 1;
                PlayerTextDrawColor(playerid, ColorNext, 255);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -16780060);
				PlayerTextDrawColor(playerid, ColorPrev, -50331393);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, 228);
			}
		}
        ChangeVehicleColor(GetPlayerVehicleID(playerid), CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawSetPreviewVehCol(playerid,NextCarPic, CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawSetPreviewVehCol(playerid,PrevCarPic, CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawShow(playerid, PlayerText:NextCarPic);
		PlayerTextDrawShow(playerid, PlayerText:PrevCarPic);
		PlayerTextDrawShow(playerid, PlayerText:ColorNext);
   		PlayerTextDrawShow(playerid, PlayerText:ColorPrev);
	}
	else if(playertextid == ColorPrev)
    {
        switch(CarColor[playerid])
        {
            case 1:
			{
				CarColor[playerid] = 3;
				PlayerTextDrawColor(playerid, ColorNext, -1);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, 228);
				PlayerTextDrawColor(playerid, ColorPrev, 83932415);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -131100);
			}
            case 0:
			{
		 		CarColor[playerid] = 1;
                PlayerTextDrawColor(playerid, ColorNext, 255);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -16780060);
				PlayerTextDrawColor(playerid, ColorPrev, -50331393);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, 228);
			}
            case 16:
			{
				CarColor[playerid] = 0;
				PlayerTextDrawColor(playerid, ColorNext, 7536895);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -16780060);
				PlayerTextDrawColor(playerid, ColorPrev, -1);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, 228);
			}
            case 79:
			{
				CarColor[playerid] = 16;
				PlayerTextDrawColor(playerid, ColorNext, 83932415);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, -131100);
				PlayerTextDrawColor(playerid, ColorPrev, 255);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -16780060);
			}
            case 3:
			{
				CarColor[playerid] = 79;
				PlayerTextDrawColor(playerid, ColorNext, -50331393);
				PlayerTextDrawBackgroundColor(playerid, ColorNext, 228);
				PlayerTextDrawColor(playerid, ColorPrev, 7536895);
				PlayerTextDrawBackgroundColor(playerid, ColorPrev, -16780060);
			}
		}
        ChangeVehicleColor(GetPlayerVehicleID(playerid), CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawSetPreviewVehCol(playerid,NextCarPic, CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawSetPreviewVehCol(playerid,PrevCarPic, CarColor[playerid], CarColor[playerid]);
		PlayerTextDrawShow(playerid, PlayerText:NextCarPic);
		PlayerTextDrawShow(playerid, PlayerText:PrevCarPic);
		PlayerTextDrawShow(playerid, PlayerText:ColorNext);
   		PlayerTextDrawShow(playerid, PlayerText:ColorPrev);
	}
    else if(playertextid == Exitcar)
    {
        CancelSelectTextDraw(playerid);
   		PlayerTextDrawDestroy(playerid, PlayerText:NextCAR);
   		PlayerTextDrawDestroy(playerid, PlayerText:NextCarPic);
   		PlayerTextDrawDestroy(playerid, PlayerText:PrevCAR);
   		PlayerTextDrawDestroy(playerid, PlayerText:PrevCarPic);
   		PlayerTextDrawDestroy(playerid, PlayerText:ColorNext);
   		PlayerTextDrawDestroy(playerid, PlayerText:ColorPrev);
   		PlayerTextDrawDestroy(playerid, PlayerText:Buycar);
   		PlayerTextDrawDestroy(playerid, PlayerText:Exitcar);
   		PlayerTextDrawDestroy(playerid, PlayerText:NameCar);
   		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
   		{
   		    case 477,506,415,541,451,411: SetPlayerPos(playerid,2201.0388,1391.1754,10.8203);
   		    case 550,561,555,535,496,445,465,587,533,560,602,534,603,426,562,559,480,402,429,545,500,589,579: SetPlayerPos(playerid,-1957.4863,295.6040,35.4688);
   		    case 404,479,466,549,542,518,600,478,543,422,483: SetPlayerPos(playerid,561.2245,-1288.9308,17.2482);
   		    case 586,463,581,461,521,522: SetPlayerPos(playerid,-1661.0996,1210.6643,7.2500);
   		    default: SetPlayerPos(playerid,1666.1010,1813.5262,10.8203);
		}
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPlayerVirtualWorld(playerid, 0);
		DestroyVehicle(GetPlayerVehicleID(playerid));
	}
	else if(playertextid == Buycar)
	{
	    if(PlayerInfo[playerid][pCash] < CarPrice[playerid]) return SendClientMessage(playerid,COLOR_WHITE, "У вас недостаточно денег!");
		PlayerInfo[playerid][pCash] -= CarPrice[playerid];
		FracBank[0][fKazna] += CarPrice[playerid];
		CarPrice[playerid] = 0;
		PlayerInfo[playerid][pColor] = CarColor[playerid];
		PlayerInfo[playerid][pColor1] = CarColor[playerid];
		PlayerInfo[playerid][pCar] = GetVehicleModel(GetPlayerVehicleID(playerid));
		PlayerInfo[playerid][pProcents] = 100;
		CompVehDel(playerid);
		SetCameraBehindPlayer(playerid);
  		SendClientMessage(playerid,COLOR_GREEN, "Вы приобрели автомобиль. Вам нужно подождать 24 часа/либо (( /fixcar )) заплатить");
		OnPropUpdate();
        CancelSelectTextDraw(playerid);
   		PlayerTextDrawDestroy(playerid, PlayerText:NextCAR);
   		PlayerTextDrawDestroy(playerid, PlayerText:NextCarPic);
   		PlayerTextDrawDestroy(playerid, PlayerText:PrevCAR);
   		PlayerTextDrawDestroy(playerid, PlayerText:PrevCarPic);
   		PlayerTextDrawDestroy(playerid, PlayerText:ColorNext);
   		PlayerTextDrawDestroy(playerid, PlayerText:ColorPrev);
   		PlayerTextDrawDestroy(playerid, PlayerText:Buycar);
   		PlayerTextDrawDestroy(playerid, PlayerText:Exitcar);
   		PlayerTextDrawDestroy(playerid, PlayerText:NameCar);
   		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
   		{
   		    case 477,506,415,541,451,411: SetPlayerPos(playerid,2201.0388,1391.1754,10.8203);
   		    case 550,561,555,535,496,445,465,587,533,560,602,534,603,426,562,559,480,402,429,545,500,589,579: SetPlayerPos(playerid,-1957.4863,295.6040,35.4688);
   		    case 404,479,466,549,542,518,600,478,543,422,483: SetPlayerPos(playerid,561.2245,-1288.9308,17.2482);
   		    case 586,463,581,461,521,522: SetPlayerPos(playerid,-1661.0996,1210.6643,7.2500);
   		    default: SetPlayerPos(playerid,1666.1010,1813.5262,10.8203);
		}
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		SetPlayerVirtualWorld(playerid, 0);
		DestroyVehicle(GetPlayerVehicleID(playerid));
	}
    return true;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[90];
	if(newkeys == 16)
	{
		if(IsPlayerInRangeOfPoint(playerid,2.0,2231.0784,1619.5814,1007.1223))
		{
			if(Kazkamera[playerid] == 0)
			{
   				if(Maxis[0] > 10) return SendClientMessage(playerid,COLOR_WHITE,"За этим столом нет свободных мест");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2230.8989,1619.2358,1006.1888);
				Kazkamera[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				RuletkaStol[playerid] = 1;
				fishechkax[playerid]= 2230.2999;
				fishechkay[playerid]= 1619.5603;
				NumberFishka[playerid] = 0;
				Upravakazino[playerid] = true;
				Fishka[playerid]= CreateObject(1913,fishechkax[playerid],fishechkay[playerid], 1006.0690,0.00,0.00,0.00);
				Maxis[0] += 1;
				return true;
			}
			else return Kazvihod(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,2.0,2242.4980,1619.5001,1006.2346))
		{
			if(Kazkamera[playerid] == 0)
			{
   				if(Maxis[1] > 10) return SendClientMessage(playerid,COLOR_WHITE,"За этим столом нет свободных мест");
				new Float:xi,Float:yi,Float:zi;
				GetPlayerPos(playerid,xi,yi,zi);
				SetPlayerCameraPos(playerid,xi,yi,zi+2);
				SetPlayerCameraLookAt(playerid,2242.4980,1619.5001,1006.2346);
				Kazkamera[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				RuletkaStol[playerid] = 2;
				fishechkax[playerid]= 2241.9082;
				fishechkay[playerid]= 1619.5603;
				NumberFishka[playerid] = 0;
				Upravakazino[playerid] = true;
				Maxis[1] += 1;
				Fishka[playerid]= CreateObject(1913,2241.9082,1619.5603, 1006.0690,0.00,0.00,0.00);
				return true;
			}
			else return Kazvihod(playerid);
		}
		else if(RCController[playerid] == 1)
		{
		    KillTimer(RCControlTimer);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			DestroyVehicle(GetPlayerVehicleID(playerid));
			CreateExplosion(X, Y, Z, 12, 10.0);
			ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",0,0,0,0,1,1);
			RCController[playerid] = 0;
			return true;
		}
	}
	if(newkeys == 8)
	{
	    new nearveh = GetNearestVehicle(playerid);
	    if(nearveh == ugoncar[playerid])
	    {
		    if(RobbingCar[playerid] == true)
		    {
				new Float:cx,Float:cy,Float:cz;
				GetVehiclePos(nearveh, cx, cy, cz);
				if(PlayerToPoint(4.0, playerid, cx, cy, cz))
				{
					RobbingCar[playerid] = false;
					GameTextForPlayer(playerid, "~b~Wait", 1000, 6);
					SendClientMessage(playerid, 0x6495EDFF, "SMS: Вот тачка которую мы заказывали. {FFFFFF}(( Держите клавишу пока не откроется ))");
					SendClientMessage(playerid, 0x6495EDFF, "SMS: Тачка открыта, пора уносить ноги.");
					format(string, sizeof(string), "~w~CAR ~g~UNLOCKED");
					GameTextForPlayer(playerid, string, 5000, 3);
                    if(PlayerInfo[playerid][pMadWant] >= 5) PlayerInfo[playerid][pMadWant] = 6;
					else PlayerInfo[playerid][pMadWant] += 1;
				    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pMadWant]);
					format(string, sizeof(string), "Ваша узнаваемость повысилась до %d. Причина: Угон автомобиля", PlayerInfo[playerid][pMadWant]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					new sendername[MAX_PLAYER_NAME];
    				GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Рация: Подозреваемый: %s. Преступление: Угон автомобиля. Уровень розыска: %d", sendername, PlayerInfo[playerid][pMadWant]);
					SendRadioMessage(1, COLOR_LIGHTRED, string);
					SendRadioMessage(2, COLOR_LIGHTRED, string);
					SendRadioMessage(10, COLOR_LIGHTRED, string);
					SendRadioMessage(21, COLOR_LIGHTRED, string);
					UnLockCar(nearveh);
					IsLocked[nearveh] = 0;
				}
			}
		}
	}
	if(newkeys == KEY_FIRE && bypahan[playerid] == true)
    {
        new Float:X1, Float:Y1, Float:Z1, Float:X2, Float:Y2, Float:Z2, Float:X3, Float:Y3, Float:Z3, Float:X4, Float:Y4, Float:Z4, Float:X5, Float:Y5, Float:Z5;
        GetObjectPos(fob[0], X1, Y1, Z1);
        GetObjectPos(fob[1], X2, Y2, Z2);
        GetObjectPos(fob[2], X3, Y3, Z3);
        GetObjectPos(fob[3], X4, Y4, Z4);
		GetObjectPos(fob[4], X5, Y5, Z5);
       if(!IsPlayerInRangeOfPoint(playerid, 20.0, X1, Y1, Z1) || !IsPlayerInRangeOfPoint(playerid, 20.0, X2, Y2, Z2) || !IsPlayerInRangeOfPoint(playerid, 20.0, X3, Y3, Z3) || !IsPlayerInRangeOfPoint(playerid, 20.0, X4, Y4, Z4) || !IsPlayerInRangeOfPoint(playerid, 20.0, X5, Y5, Z5)) return SendClientMessage(playerid, 0xFFFFFFFF, "Чтобы потушить пожар вы должны находиться рядом с ним!");
       if(PlayerInfo[playerid][pMember] == 34 || PlayerInfo[playerid][pLeader] == 34)
       {
            if(FireStatus <= 0)
            {
                KillFire();
                format(string, sizeof(string), "%s потушил пожар, едет обратно на базу",PlayerInfo[playerid][pName]);
                SendFamilyMessage(34, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid,COLOR_WHITE,"Поздравляем! Вы потушили пожар!");
   	           	PlayerInfo[playerid][pCash] += 2500;
                bypahan[playerid] = false;
                return true;
            }
            if(FireStatus < 80)
            {
                DestroyObject(fob[0]);
                return true;
            }
            if(FireStatus < 60)
            {
                DestroyObject(fob[1]);
                return true;
            }
            if(FireStatus < 40)
            {
                DestroyObject(fob[2]);
                return true;
            }
            if(FireStatus < 20)
            {
                DestroyObject(fob[3]);
                return true;
            }
            if(IsPlayerInAnyVehicle(playerid) == 1)
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
                {
                    FireStatus = FireStatus - 15;
                }
            }
            else if(GetPlayerWeapon(playerid) == 42)
            {
                FireStatus = FireStatus - 5;
            }
            else return true;
        }
    }
	if(newkeys & KEY_SPRINT)
	{
		if(Upravakazino[playerid] == true)
		{
			switch(NumberFishka[playerid])
			{
				case 0..36: RuletTip[playerid]= NumberFishka[playerid]+1;
				case 45,46: RuletTip[playerid] = NumberFishka[playerid]-7;
				case 40..42: RuletTip[playerid] = NumberFishka[playerid];
				case 43: RuletTip[playerid] = 43;
				case 48: RuletTip[playerid] = 44;
				case 44: RuletTip[playerid] = 45;
				case 47: RuletTip[playerid] = 46;
				case 37..39: RuletTip[playerid] = NumberFishka[playerid]+10;
			}
			if(RuletkaStol[playerid]==1) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Введите сумму ставки","Можно поставить от 10000 до 100000 вирт","Играть","Назад");
			else return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Введите сумму ставки","Введите сумму ставки","Играть","Назад");
		}
	}
	if(newkeys == 16)
	{
		if(SelectCharPlace[playerid] != 0)
		{
			TogglePlayerControllable(playerid, 0);
			if(PlayerInfo[playerid][pMember] > 0)
			{
				ShowMenuForPlayer(ChoseSkin,playerid);
			}
			if(PlayerInfo[playerid][pMember] == 0)
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					ShowMenuForPlayer(skinshopmagaz[0],playerid);
				}
				if(PlayerInfo[playerid][pSex] == 2)
				{
					ShowMenuForPlayer(skinshopmagaz[1],playerid);
				}
 			}
			if(PlayerInfo[playerid][pTut] == 0)
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					ShowMenuForPlayer(bomj[0],playerid);
				}
				if(PlayerInfo[playerid][pSex] == 2)
				{
					ShowMenuForPlayer(bomj[1],playerid);
				}
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_HANDBRAKE && oldkeys & KEY_CROUCH)
	{
        ApplyAnimation(playerid,"ped","Run_stop", 4.1, 0, 0, 0, 0, 0 ,1);
	}
	if(newkeys == 1024)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			ShowPlayerDialog(playerid,5112,DIALOG_STYLE_MSGBOX, " ", "Вы действительно хотите выйти из дома?", "Да", "Нет");
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        if(times[playerid] == true)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid,9)) RemovePlayerAttachedObject(playerid,9);
				SetTimerEx("AntiBunny", 850,false, "i",playerid);
	        }
	    }
	}
	if(newkeys & KEY_FIRE || (newkeys & KEY_SPRINT && newkeys & KEY_FIRE))
	{
		if(IsAAntidm(playerid) && PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 1)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				clearanim[playerid] = 10;
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
				return true;
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				clearanim[playerid] = 10;
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
				return true;
			}
		}
	}
	if(PlayerToPoint(8.0,playerid,-2070.0000, -129.7411, 35.0000))
	{
		if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || TakingLesson[playerid] == 1)
		{
		    MoveObject(LicGate, -2070.0000, -129.7411, 35.0000, 3.0, 0.00, 0.00, 270.00);
		    SetTimer("LicClose", 8000, 0);
		}
	}
	if(newkeys == KEY_CROUCH)
	{
	    if(PlayerToPoint(8.0,playerid,1544.4468,-1627.2415,13.3828))
		{
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
		    	MoveObject(LspdsGate, 1544.6929, -1630.8207, 13.1704, 3.0, 0.0000, 0.0000, 90.0000);
		    	SetTimer("LspdsClose", 8000, 0);
			}
		}
		if(PlayerToPoint(3.0,playerid,1644.0469,2196.9868,10.8203))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid,COLOR_GREY, "Вы не в своей машине.");
			if(IsAPlane(tmpcar)) return SendClientMessage(playerid,COLOR_GREY, "Не допустимый транспорт.");
			if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid,COLOR_GREY, "У вас нет машины.");
			if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid,COLOR_GREY, "У вас нет дома.");
			if(AvtoInfo[0][Mesto] != 255) return SendClientMessage(playerid,COLOR_GREY, "Мастерская обслуживает клиента, подождите.");
			if(AvtoInfo[0][Rab] ==0) return SendClientMessage(playerid,COLOR_GREY, "У мастерской нет рабочих.");
	        AvtoInfo[0][Mesto] = 1;
	        AvtoInfo[0][Poset] += 1;
	        mesto[playerid] = 0;
			SetVehiclePos(tmpcar, 608.9133,-14.4088,1000.5442);
			SetVehicleZAngle(tmpcar, 335.0551);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			SetPlayerInterior(playerid,AvtoInfo[0][abInterior]);
			SetPlayerVirtualWorld(playerid,AvtoInfo[0][abWorld]);
			LinkVehicleToInterior(tmpcar, AvtoInfo[0][abInterior]);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			SendClientMessage(playerid, COLOR_GREEN, "Выйдите из машины, и закажите тюнинг /buytune");
			SendClientMessage(playerid, COLOR_GREY, "Если механиков нет, введите /out");
			if(repairdvig[playerid] > 0)
			{
				SendClientMessage(playerid,COLOR_LIGHTGREEN, "Ваша заявка, о ремонте двигателя всё еще активна, сообщите об этом механикам!");
			}
  			return true;
		}
		if(PlayerToPoint(10.0,playerid,-1880.6442,-3115.2825,20.8914)){ShowPlayerDialog(playerid,9341,DIALOG_STYLE_MSGBOX, "Выход из подземной стоянки", "Вы действительно хотите выйти из подземной стоянки?", "Да","Нет");}
		if(PlayerToPoint(7.0,playerid,1459.6578,-1501.7847,13.1589)){ShowPlayerDialog(playerid,9337,DIALOG_STYLE_MSGBOX, "Вход в подземную стоянку", "Вы действительно хотите войти на подземную стоянку?", "Да","Нет");}
		if(PlayerToPoint(7.0,playerid,1351.8026,-1570.6809,13.1510)){ShowPlayerDialog(playerid,9338,DIALOG_STYLE_MSGBOX, "Вход в подземную стоянку", "Вы действительно хотите войти на подземную стоянку?", "Да","Нет");}
		if(PlayerToPoint(7.0,playerid,1279.8945,-1350.1272,12.9792)){ShowPlayerDialog(playerid,9339,DIALOG_STYLE_MSGBOX, "Вход в подземную стоянку", "Вы действительно хотите войти на подземную стоянку?", "Да","Нет");}
		if(PlayerToPoint(7.0,playerid,2434.8130,-742.2032,1422.3630)){ShowPlayerDialog(playerid,9340,DIALOG_STYLE_MSGBOX, "Выход из админ деревни", "Вы действительно хотите выйти из админ деревни?", "Да","Нет");}
		if(PlayerToPoint(3.0,playerid,-1786.8265,1206.1196,25.1250))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid,COLOR_GREY, "Вы не в своей машине.");
			if(IsAPlane(tmpcar)) return SendClientMessage(playerid,COLOR_GREY, "Не допустимый транспорт.");
			if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid,COLOR_GREY, "У вас нет машины.");
			if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid,COLOR_GREY, "У вас нет дома.");
			if(AvtoInfo[1][Mesto] !=255) return SendClientMessage(playerid,COLOR_GREY, "Мастерская обслуживает клиента, подождите.");
			if(AvtoInfo[1][Rab] ==0) return SendClientMessage(playerid,COLOR_GREY, "У мастерской нет рабочих.");
	        AvtoInfo[1][Mesto] = 1;
	        AvtoInfo[1][Poset] += 1;
	        mesto[playerid] = 1;
			SetVehiclePos(tmpcar, 608.9133,-14.4088,1000.5442);
			SetVehicleZAngle(tmpcar, 335.0551);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			SetPlayerInterior(playerid,AvtoInfo[1][abInterior]);
			SetPlayerVirtualWorld(playerid,AvtoInfo[1][abWorld]);
			LinkVehicleToInterior(tmpcar, AvtoInfo[1][abInterior]);
			SetVehicleVirtualWorld(tmpcar, AvtoInfo[1][abWorld]);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			SendClientMessage(playerid, COLOR_GREEN, "Выйдите из машины, и закажите тюнинг /buytune");
			SendClientMessage(playerid, COLOR_GREY, "Если механиков нет, введите /out");
			if(repairdvig[playerid] > 0)
			{
				SendClientMessage(playerid,COLOR_LIGHTGREEN, "Ваша заявка, о ремонте двигателя всё еще активна, сообщите об этом механикам!");
			}
  			return true;
		}
		if(PlayerToPoint(3.0,playerid,844.7690,-600.3463,18.4219))
		{
	  		new tmpcar = GetPlayerVehicleID(playerid);
			if(GetPlayerVehicleID(playerid) != caridhouse[playerid]) return SendClientMessage(playerid,COLOR_GREY, "Вы не в своей машине.");
			if(IsAPlane(tmpcar)) return SendClientMessage(playerid,COLOR_GREY, "Не допустимый транспорт.");
			if(PlayerInfo[playerid][pCar] == 462) return SendClientMessage(playerid,COLOR_GREY, "У вас нет машины!");
			if(PlayerInfo[playerid][pPHousekey] == 255) return SendClientMessage(playerid,COLOR_GREY, "У вас нет дома.");
			if(AvtoInfo[2][Mesto] !=255) return SendClientMessage(playerid,COLOR_GREY, "Мастерская обслуживает клиента, подождите.");
			if(AvtoInfo[2][Rab] ==0) return SendClientMessage(playerid,COLOR_GREY, "У мастерской нет рабочих.");
	        AvtoInfo[2][Mesto] = 1;
	        AvtoInfo[2][Poset] += 1;
	        mesto[playerid] = 2;
			SetVehiclePos(tmpcar, 608.9133,-14.4088,1000.5442);
			SetVehicleZAngle(tmpcar, 335.0551);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			SetPlayerInterior(playerid,AvtoInfo[2][abInterior]);
			SetPlayerVirtualWorld(playerid,AvtoInfo[2][abWorld]);
			LinkVehicleToInterior(tmpcar, AvtoInfo[2][abInterior]);
			SetVehicleVirtualWorld(tmpcar, AvtoInfo[2][abWorld]);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
			SendClientMessage(playerid, COLOR_GREEN, "Выйдите из машины, и закажите тюнинг /buytune");
			SendClientMessage(playerid, COLOR_GREY, "Если механиков нет, введите /out");
			if(repairdvig[playerid] > 0)
			{
				SendClientMessage(playerid,COLOR_LIGHTGREEN, "Ваша заявка, о ремонте двигателя всё еще активна, сообщите об этом механикам!");
			}
  			return true;
		}
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19 || proverkaforma[playerid] == 1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406))
				{
					if (GetPlayerState(playerid) == 2)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
						{
							SendClientMessage(playerid,COLOR_GREY, "Попробуйте в объезд!");
							return true;
						}
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
						TelePos[playerid][0] = 0.0;
						TelePos[playerid][1] = 0.0;
					}
				}
				else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
					{
						SendClientMessage(playerid,COLOR_GREY, "Попробуйте в объезд!");
						return true;
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
					return true;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid = GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pMafiaRoof] = 6;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[playerid][pMember] == 5)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
						{
							SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PlayerInfo[giveplayerid][pMafiaRoof] = 5;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(KrishaOffer[giveplayerid] < 999)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pJob] != 0)
					{
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
						PlayerInfo[giveplayerid][pMafiaRoof] = 14;
						KrishaOffer[giveplayerid] = 999;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT) return true;
			giveplayerid = GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pMafiaRoof] == 6)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он(а) еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nYakuza]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
			 	else if(PlayerInfo[giveplayerid][pMafiaRoof] == 5)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он(а) еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nLcn]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
				else if(PlayerInfo[giveplayerid][pMafiaRoof] == 14)
				{
					if(health <= 25 && PlayerInfo[giveplayerid][pUseMafiaRoof] != 0)
					{
						if(PlayerInfo[giveplayerid][pDebt] < 50) return SendClientMessage(playerid,COLOR_GREY, "Он(а) еще ни чего не заработал(а)!");
						SendClientMessage(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						MafiaBank[0][nRm]+=PlayerInfo[giveplayerid][pDebt];
						PlayerInfo[giveplayerid][pDebt] = 0;
						PlayerInfo[giveplayerid][pUseMafiaRoof] = 0;
						return true;
					}
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
	    switch(FightSkilling[playerid])
		{
		    case 1:
		    {
				if(PlayerToPoint(3.0,playerid,768.5205,-2.8860,1000.7214))
				{
				    switch(PlayerInfo[playerid][pBoxSkill])
				    {
				        case 249,499,749,999,1249,1499,1749:
				        {
				            ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				    		SendClientMessage(playerid, COLOR_GREY, "Вы закончили данный урок! Для продолжения изучения стиля начните новый урок у тренера!");
				    		SetPlayerChatBubble(playerid, "устал(а)",COLOR_PURPLE,30.0,10000);
				    		FightSkilling[playerid] = 0;
						}
					}
					if(PlayerInfo[playerid][pBoxSkill] >= 1000)
					{
						if(PlayerInfo[playerid][pBoxSkill] == 1000)
					 	{
						 	SendClientMessage(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
						 	SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
						}
						else if(PlayerInfo[playerid][pBoxSkill] >= 2000)
						{
					   		SendClientMessage(playerid, COLOR_GREY, "Вы уже максимально прокачали стиль искусства: Бокс");
					    	ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
					    	FightSkilling[playerid] = 0;
					    	return true;
						}
		  		 		PlayerInfo[playerid][pBoxSkill] += 1;
		            	format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pBoxSkill]);
						GameTextForPlayer(playerid, string, 2000, 4);
		   				return true;
  		 			}
              		PlayerInfo[playerid][pBoxSkill] += 1;
            		format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pBoxSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
    				return true;
				}
			}
			case 2:
			{
				if(PlayerToPoint(3.0,playerid,769.8723,14.4393,1000.6978))
				{
					switch(PlayerInfo[playerid][pKongfuSkill])
				    {
				        case 249,499,749,999,1249,1499,1749:
				        {
				            ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				    		SendClientMessage(playerid, COLOR_GREY, "Вы закончили данный урок! Для продолжения изучения стиля начните новый урок у тренера!");
				    		SetPlayerChatBubble(playerid, "устал(а)",COLOR_PURPLE,30.0,10000);
				    		FightSkilling[playerid] = 0;
						}
					}
					if(PlayerInfo[playerid][pKongfuSkill] >= 1000)
					{
						if(PlayerInfo[playerid][pKongfuSkill] == 1000)
						{
							SendClientMessage(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
							SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
						}
						if(PlayerInfo[playerid][pKongfuSkill] >= 2000)
						{
					    	SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете данным стилем искусства");
					    	ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
					    	FightSkilling[playerid] = 0;
					    	return true;
						}
	  		      		PlayerInfo[playerid][pKongfuSkill] += 1;
	               		format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pKongfuSkill]);
						GameTextForPlayer(playerid, string, 2000, 4);
						return true;
					}
		     		PlayerInfo[playerid][pKongfuSkill] += 1;
		  			format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pKongfuSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
				}
	        }
			case 3:
			{
				if(PlayerToPoint(3.0,playerid,761.1723,11.3122,1001.1639))
				{
				    switch(PlayerInfo[playerid][pKickboxSkill])
				    {
				        case 249,499,749,999,1249,1499,1749:
				        {
				            ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
				    		SendClientMessage(playerid, COLOR_GREY, "Вы закончили данный урок! Для продолжения изучения стиля начните новый урок у тренера!");
				    		SetPlayerChatBubble(playerid, "устал(а)",COLOR_PURPLE,30.0,10000);
				    		FightSkilling[playerid] = 0;
						}
					}
	 				if(PlayerInfo[playerid][pKickboxSkill] >= 1000)
					{
						if(PlayerInfo[playerid][pKickboxSkill] == 1000)
						{
							SendClientMessage(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
							SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
						}
						else if(PlayerInfo[playerid][pKickboxSkill] >= 2000)
						{
					    	SendClientMessage(playerid, COLOR_GREY, "Вы уже максимально прокачали стиль искусства: КикБокс");
				    		ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,0,0,1);
					   	 	FightSkilling[playerid] = 0;
							return true;
						}
		  		 		PlayerInfo[playerid][pKickboxSkill] += 1;
		            	format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pKickboxSkill]);
						GameTextForPlayer(playerid, string, 2000, 4);
		   				return true;
  		 			}
              		PlayerInfo[playerid][pKickboxSkill] += 1;
                	format(string, sizeof(string), "~g~%d/2000", PlayerInfo[playerid][pKickboxSkill]);
					GameTextForPlayer(playerid, string, 2000, 4);
					return true;
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAAntidm(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				clearanim[playerid] = 5;
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
				return true;
			}
		}
	}
	if(newkeys == KEY_SUBMISSION  || newkeys & KEY_SUBMISSION && newkeys & 8)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(EngineState[playerid] == false)
			{
				SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
				EngineState[playerid] = true;
			}
			else if(EngineState[playerid] == true)
			{
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
				EngineState[playerid] = false;
			}
			return true;
		}
	}
	if(newkeys == KEY_ACTION || newkeys & KEY_ACTION && newkeys & 8)
	{
		new tacha = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsAPlane(tacha) && !IsABoat(tacha) && !IsANoSpeed(tacha))
		{
  			switch(Arrester[playerid])
     		{
       			case 0: return Arrester[playerid] = true;
          		case 1: return Arrester[playerid] = false;
	        }
	    }
	}
	if(newkeys == KEY_FIRE || newkeys & KEY_FIRE && newkeys & 8)
	{
        new vid = GetPlayerVehicleID(playerid);
        if(vid != INVALID_VEHICLE_ID)
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
                if(Lightsp[playerid] == 0)
                {
                    GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
                    Lightsp[playerid] = 1;
			    }
			    else if(Lightsp[playerid] == 1)
			    {
			       	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
                    Lightsp[playerid] = 0;
                }
			}
        }
        return true;
    }
	if(newkeys == 16)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
            if(IsABankomat(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "Банкомат", " [1] Снять наличные\n [2] Баланс\n [3] Домашний счёт\n [4] Отправить объявление по банкоматам\n [5] Информация", "Далее", "Выход");
				return true;
			}
			else if(PlayerToPoint(3.0,playerid,2308.8201,-13.2660,26.7422))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Банковские услуги", " [1] Снять со счёта\n [2] Положить на счёт\n [3] Информация\n [4] Пополнить счёт бизнеса\n [5] Забрать изъятые деньги\n [6] Операции с кредитами\n [7] Операции с вкладами", "Выбрать", "Закрыть");
				return true;
			}
			else if(IsAFoods(playerid))
			{
				ClearAnimations(playerid, 1);
   				PlaySoundNearPlayer(playerid, 4203);
				ShowPlayerDialog(playerid,7025,DIALOG_STYLE_LIST, "Выберите пункт и вставьте купюру", "[1]Минеральная вода\t\t[100]\n[2]Кола\t\t\t\t[200]\n[3]Закуска\t\t\t[400]","Купить","Уйти");
				return true;
			}
		}
	}
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, gCarLock[vehicleid]);
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[playerid][pMember] == 11)
	{
		if(duty[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вам нужно начать рабочий день в автошколе");
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", "[1] Водительские права\n[2] Лицензия на полёты\n[3] Лицензия на рыболовлю\n[4] Лицензия на вождение водного транспорта\n[5] Лицензия на оружие\n[6] Лицензия на бизнес\n[7] Начать урок\n[8] Завершить урок\n[9] Номера", "Выбрать", "Отмена");
		ChosenPlayer[playerid] = clickedplayerid;
	}
	else if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		ShowPlayerDialog(playerid,1541,DIALOG_STYLE_LIST, "Административная панель","[0] Статистика персонажа\n[1] Телепортироваться к игроку\n[2] Телепортировать к себе\n[3] Бан чата\n[4] Посадить игрока\n[5] Следить\n[6] Уволить", "Выбрать", "Отмена");
		ChosenPlayer[playerid] = clickedplayerid;
	}
	return true;
}
stock strvalEx(const string[])
{
	if(strlen(string) >= 50) return false;
	return strval(string);
}
stock printr(message[])
{
	FixConsole(message);
	print(message);
	return true;
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicssf[0] && carid <= medicssf[7] || carid == medmav || carid >= medicsls[0] && carid <= medicsls[5] || carid >= medicslv[0] && carid <= medicslv[7])
	{
		return true;
	}
	return false;
}
stock CarLic(carid)
{
    switch (GetVehicleModel(carid))
    {
	    case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	    case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	    case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
    }
	return false;
}
stock DeleteObjects(playerid)
{
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -118.9141, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -113.8125, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 11014, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 11372, -2076.4375, -107.9297, 36.9688, 0.25);
    RemoveBuildingForPlayer(playerid, 11099, -2056.9922, -184.5469, 34.4141, 0.25);
	//==========================================================================
	RemoveBuildingForPlayer(playerid, 1290, 1649.0625, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1855.7969, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1922.2031, -2641.4063, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	//================================= пеинт ==========================
    RemoveBuildingForPlayer(playerid, 961, 2570.7344, 2829.7734, 11.1719, 0.25);
    RemoveBuildingForPlayer(playerid, 960, 2570.7344, 2829.7734, 11.1641, 0.25);
    RemoveBuildingForPlayer(playerid, 961, 2594.5859, 2821.3750, 11.1719, 0.25);
    RemoveBuildingForPlayer(playerid, 960, 2594.5938, 2821.3750, 11.1641, 0.25);
    RemoveBuildingForPlayer(playerid, 961, 2608.7969, 2806.9063, 11.1719, 0.25);
    RemoveBuildingForPlayer(playerid, 960, 2608.7969, 2806.9063, 11.1641, 0.25);
    //================================= остановки ==========================
    RemoveBuildingForPlayer(playerid, 1257, 1974.5000, 627.2266, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 1893.6719, 639.2500, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 2020.6641, 665.7969, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 1885.1875, 767.1641, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 1974.8750, 779.2813, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 2019.9141, 747.1797, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 2114.7031, 679.3438, 11.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1257, 2114.8594, 759.2656, 11.0781, 0.25);
    //================================= FFighters ==========================
    RemoveBuildingForPlayer(playerid, 14650, 681.4766, -456.4141, -24.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 14651, 686.4141, -462.8516, -24.4922, 0.25);
    RemoveBuildingForPlayer(playerid, 14652, 681.4297, -456.0469, -24.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 14653, 681.4453, -455.1719, -25.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 14654, 681.4531, -457.6172, -23.7969, 0.25);
    RemoveBuildingForPlayer(playerid, 14657, 681.4297, -456.4141, -25.8281, 0.25);
}
stock CreateObjects()
{
	//================================= Хитманы ================================
    CreateObject(1502, -2810.69, -1524.88, 139.94,   0.00, 0.00, 90.00);
	CreateObject(1502, -2821.33, -1519.46, 139.94,   0.00, 0.00, 90.00);
	CreateObject(2611, -2820.84, -1524.74, 141.66,   0.00, 0.00, 90.00);
	CreateObject(3576, -2816.27, -1529.50, 141.34,   0.00, 0.00, 0.00);
	CreateObject(2198, -2819.08, -1524.26, 139.80,   0.00, 0.00, 270.00);
	
	CreateObject(2165, -1951.52, 299.81, 34.47,   0.00, 0.00, 90.00);
	CreateObject(1715, -1950.43, 300.52, 34.46,   0.00, 0.00, -90.00);
	CreateObject(1569, 558.78, -1294.35, 16.18,   0.00, 0.00, 0.00);
	//================================= Admin деревня ==========================
	CreateObject(4867,2477.3599854,-599.8180008,1572.8017578,0.0000000,0.0000000,0.0000000); //object(lasrnway3_las) (1)
    CreateObject(9241,2560.7159424,-538.4679985,1574.5208000,0.0000000,0.0000000,0.0000000); //object(copbits_sfn) (2)
    CreateObject(3307,2386.6040039,-556.6899986,1574.2841797,0.0000000,0.0000000,269.6571655); //object(swburbhaus01) (1)
    CreateObject(3307,2385.5479736,-621.0189972,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (2)
    CreateObject(3307,2436.5870361,-557.0190010,1574.2841797,0.0000000,0.0000000,269.6539307); //object(swburbhaus01) (3)
    CreateObject(3307,2461.5889893,-557.1599998,1574.2841797,0.0000000,0.0000000,269.6539307); //object(swburbhaus01) (4)
    CreateObject(3307,2486.5500488,-557.2750015,1574.2841797,0.0000000,0.0000000,269.6539307); //object(swburbhaus01) (5)
    CreateObject(3307,2410.5510254,-621.0640030,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (6)
    CreateObject(3307,2435.5169678,-621.0670013,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (7)
    CreateObject(3307,2460.4870605,-621.0950012,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (8)
    CreateObject(3307,2485.4560547,-621.1289978,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (9)
    CreateObject(3307,2510.4370117,-621.1480026,1574.2841797,0.0000000,0.0000000,90.0000000); //object(swburbhaus01) (10)
    CreateObject(3307,2411.4019775,-556.8330002,1574.2841797,0.0000000,0.0000000,269.6539307); //object(swburbhaus01) (14)
    CreateObject(8210, 2581.5073, -634.9361, 1575.9028, 0.0000, 0.0000, 270.0000);
    CreateObject(8210, 2581.4873, -662.8950, 1575.9028, 0.0000, 0.0000, 270.0000);
    CreateObject(8210, 2581.4873, -538.3998, 1575.9028, 0.0000, 0.0000, 270.0000);
    CreateObject(8150, 2518.1060, -510.3249, 1575.9028, 0.0000, 0.0000, 180.0000);
    CreateObject(8150, 2434.0374, -510.3249, 1575.9028, 0.0000, 0.0000, 180.0000);
    CreateObject(8150, 2521.1859, -691.0924, 1575.9028, 0.0000, 0.0000, 0.0000);
    CreateObject(8150, 2433.9969, -691.0924, 1575.9028, 0.0000, 0.0000, 0.0000);
    CreateObject(8150, 2370.6836, -573.7005, 1575.9028, 0.0000, 0.0000, -90.0000);
    CreateObject(8150, 2370.6836, -627.7536, 1575.9028, 0.0000, 0.0000, -90.0000);
    CreateObject(11490, 2519.4100342,-549.6199989,1572.7749023,0.0000000,0.0000000,180.0000000);
    CreateObject(11491, 2519.4060, -538.5650, 1574.2568, 0.0000, 0.0000, 180.0000);
    CreateObject(11665, 2516.4479980,-545.8979988,1574.9819336,0.0000000,0.0000000,180.0000000);
    CreateObject(11666, 2519.4420166,-545.3170013,1575.9458008,0.0000000,0.0000000,180.0000000);
    CreateObject(11631, 2522.9749, -553.2090, 1575.5162, 0.0000, 0.0000, 180.0000);
    CreateObject(11664, 2516.4102, -552.3385, 1574.7699, 0.0000, 0.0000, 180.0000);
    CreateObject(6522, 2554.9038, -639.4957, 1581.0839, 0.0000, 0.0000, -90.0000);
    CreateObject(18688, 2519.2679443,-542.0730019,1572.9648438,0.0000000,0.0000000,0.0000000); //object(fire) (1)
	//=========================== Апартаменты ==================================
	CreateDynamicObject(7191,-1919.90002441,-2973.30004883,27.50000000,0.00000000,0.00000000,359.99450684,-1,1,-1,300); //object(vegasnnewfence2b) (2)
    CreateDynamicObject(6959,-1926.90002441,-2976.30004883,25.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (1)
    CreateDynamicObject(6959,-1926.89941406,-2936.29980469,25.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (2)
    CreateDynamicObject(6959,-1885.59960938,-2936.29980469,25.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (3)
    CreateDynamicObject(7191,-1918.00000000,-2951.19921875,47.50000000,90.00000000,180.69213867,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (10)
    CreateDynamicObject(7191,-1926.69995117,-2936.50000000,27.50000000,0.00000000,0.00000000,179.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (12)
    CreateDynamicObject(7191,-1914.29980469,-2951.19921875,11.39999962,90.00000000,180.68664551,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (13)
    CreateDynamicObject(14416,-1910.40002441,-2955.00000000,26.39999962,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(carter-stairs07) (1)
    CreateDynamicObject(6959,-1899.19995117,-2977.39990234,29.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (4)
    CreateDynamicObject(7191,-1916.30004883,-2953.10009766,47.59999847,90.00000000,180.69213867,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (14)
    CreateDynamicObject(7191,-1916.30004883,-2957.00000000,47.59999847,90.00000000,180.68664551,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (16)
    CreateDynamicObject(7191,-1916.30004883,-2960.89990234,47.59999847,90.00000000,180.68664551,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (17)
    CreateDynamicObject(7191,-1914.30004883,-2960.89990234,47.50000000,90.00000000,180.68664551,269.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (18)
    CreateDynamicObject(7191,-1910.40002441,-2960.89990234,47.59999847,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (19)
    CreateDynamicObject(7191,-1908.50000000,-2958.89941406,47.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (21)
    CreateDynamicObject(7191,-1908.50000000,-2955.00000000,47.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (22)
    CreateDynamicObject(7191,-1908.50000000,-2953.00000000,47.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (23)
    CreateDynamicObject(7191,-1912.39941406,-2953.09960938,47.59999847,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (25)
    CreateDynamicObject(7191,-1912.40002441,-2956.10009766,47.59999847,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (26)
    CreateDynamicObject(6959,-1928.50000000,-2931.19995117,33.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (5)
    CreateDynamicObject(6959,-1940.50000000,-2971.19995117,29.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (6)
    CreateDynamicObject(7191,-1904.19921875,-2943.50000000,27.50000000,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (27)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,27.50000000,0.00000000,0.00000000,359.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (28)
    CreateDynamicObject(7191,-1926.30004883,-2929.00000000,31.39999962,0.00000000,0.00000000,179.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (30)
    CreateDynamicObject(7191,-1904.19995117,-2943.50000000,31.39999962,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (31)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,31.39999962,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (32)
    CreateDynamicObject(14416,-1910.40002441,-2955.00000000,34.40000153,0.00000000,0.00000000,179.99450684,-1,1,-1,300); //object(carter-stairs07) (5)
    CreateDynamicObject(6959,-1899.19921875,-2977.39941406,37.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (8)
    CreateDynamicObject(14416,-1914.40002441,-2954.19995117,38.40000153,0.00000000,0.00000000,359.98901367,-1,1,-1,300); //object(carter-stairs07) (6)
    CreateDynamicObject(14416,-1914.39941406,-2954.19921875,30.39999962,0.00000000,0.00000000,359.73632812,-1,1,-1,300); //object(carter-stairs07) (7)
    CreateDynamicObject(6959,-1928.50000000,-2931.19995117,41.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (9)
    CreateDynamicObject(14416,-1910.39941406,-2955.00000000,42.40000153,0.00000000,0.00000000,179.99450684,-1,1,-1,300); //object(carter-stairs07) (9)
    CreateDynamicObject(6959,-1926.59997559,-2931.19995117,29.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (10)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,35.29999924,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (34)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,39.20000076,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (35)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,43.09999847,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (36)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,47.00000000,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (37)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,50.90000153,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (38)
    CreateDynamicObject(7191,-1908.40002441,-2944.69995117,54.79999924,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (39)
    CreateDynamicObject(6959,-1899.19995117,-2977.39990234,45.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (11)
    CreateDynamicObject(14416,-1914.39941406,-2954.19921875,46.40000153,0.00000000,0.00000000,359.98352051,-1,1,-1,300); //object(carter-stairs07) (10)
    CreateDynamicObject(6959,-1928.50000000,-2931.19921875,49.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (12)
    CreateDynamicObject(7191,-1940.80004883,-2958.00000000,27.50000000,0.00000000,0.00000000,269.98901367,-1,1,-1,300); //object(vegasnnewfence2b) (44)
    CreateDynamicObject(7191,-1890.19921875,-2951.09960938,31.39999962,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (46)
    CreateDynamicObject(7191,-1921.89941406,-2951.19921875,47.50000000,90.00000000,180.68664551,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (53)
    CreateDynamicObject(7191,-1923.89941406,-2949.19921875,47.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (54)
    CreateDynamicObject(7191,-1923.90002441,-2945.30004883,47.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (55)
    CreateDynamicObject(7191,-1923.90002441,-2941.39990234,47.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (56)
    CreateDynamicObject(7191,-1921.90002441,-2939.30004883,47.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (57)
    CreateDynamicObject(7191,-1918.00000000,-2939.30004883,47.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (58)
    CreateDynamicObject(7191,-1914.09997559,-2939.30004883,47.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (59)
    CreateDynamicObject(7191,-1910.19995117,-2939.30004883,47.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (60)
    CreateDynamicObject(18553,-1923.69995117,-2947.30004883,26.89999962,0.00000000,0.00000000,359.75000000,-1,1,-1,300); //object(count_ammundoor) (1)
    CreateDynamicObject(14902,-1913.40002441,-2975.60009766,38.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (1)
    CreateDynamicObject(14902,-1913.09997559,-2975.60009766,46.90000153,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (2)
    CreateDynamicObject(14902,-1913.40002441,-2975.60009766,30.29999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (3)
    CreateDynamicObject(6959,-1929.19995117,-2950.00000000,56.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (12)
    CreateDynamicObject(7191,-1910.50000000,-2951.19995117,71.59999847,270.00000000,180.69581604,90.67382812,-1,1,-1,300); //object(vegasnnewfence2b) (25)
    CreateDynamicObject(4227,-1910.19995117,-2943.60009766,27.10000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(graffiti_lan01) (1)
    CreateDynamicObject(5069,-1920.00000000,-2948.50000000,27.10000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(ctscene1_las) (1)
    CreateDynamicObject(2834,-1921.50000000,-2947.89990234,25.60000038,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gb_livingrug03) (1)
    CreateDynamicObject(1778,-1909.19995117,-2943.80004883,25.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_mop_pail) (1)
    CreateDynamicObject(1738,-1922.00000000,-2950.80004883,26.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (1)
    CreateDynamicObject(1738,-1921.19995117,-2950.80004883,26.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (2)
    CreateDynamicObject(1738,-1920.40002441,-2950.80004883,26.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (3)
    CreateDynamicObject(1481,-1914.09997559,-2951.60009766,27.70000076,314.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (1)
    CreateDynamicObject(1481,-1914.09997559,-2951.60009766,27.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (2)
    CreateDynamicObject(1481,-1914.09997559,-2951.60009766,26.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (3)
    CreateDynamicObject(1481,-1915.19995117,-2951.60009766,26.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (4)
    CreateDynamicObject(1481,-1915.19995117,-2951.60009766,27.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (5)
    CreateDynamicObject(1481,-1915.19995117,-2951.60009766,27.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (6)
    CreateDynamicObject(1481,-1916.30004883,-2951.60009766,27.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (7)
    CreateDynamicObject(1481,-1916.30004883,-2951.60009766,27.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (8)
    CreateDynamicObject(1481,-1916.30004883,-2951.60009766,26.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (9)
    CreateDynamicObject(1481,-1917.40002441,-2951.60009766,27.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (11)
    CreateDynamicObject(1481,-1917.40002441,-2951.60009766,26.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (12)
    CreateDynamicObject(1481,-1918.50000000,-2951.60009766,26.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (13)
    CreateDynamicObject(1481,-1918.50000000,-2951.60009766,27.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (14)
    CreateDynamicObject(1481,-1918.50000000,-2951.60009766,27.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (15)
    CreateDynamicObject(1481,-1917.40002441,-2951.60009766,27.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (16)
    CreateDynamicObject(3029,-1923.80004883,-2942.39990234,41.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cr1_door) (1)
    CreateDynamicObject(3029,-1923.80004883,-2949.39990234,33.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cr1_door) (2)
    CreateDynamicObject(2955,-1923.69995117,-2947.69995117,42.79999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(imy_compin) (1)
    CreateDynamicObject(2924,-1917.80004883,-2939.39990234,42.79999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(kmb_crash3door) (1)
    CreateDynamicObject(977,-1911.80004883,-2939.30004883,43.20000076,0.00000000,0.00000000,12.00000000,-1,1,-1,300); //object(newtowerdoor1) (1)
    CreateDynamicObject(1497,-1918.40002441,-2951.10009766,41.50000000,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(gen_doorext02) (1)
    CreateDynamicObject(1498,-1908.50000000,-2943.60009766,41.59999847,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext03) (1)
    CreateDynamicObject(1504,-1908.50000000,-2947.10009766,49.50000000,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext06) (1)
    CreateDynamicObject(1505,-1908.50000000,-2941.30004883,49.50000000,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext07) (1)
    CreateDynamicObject(1506,-1914.40002441,-2939.39990234,49.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext08) (1)
    CreateDynamicObject(1507,-1921.30004883,-2939.39990234,49.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext09) (1)
    CreateDynamicObject(1535,-1923.80004883,-2944.50000000,49.50000000,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gen_doorext14) (1)
    CreateDynamicObject(14819,-1920.40002441,-2951.19995117,50.70000076,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(og_door) (1)
    CreateDynamicObject(3061,-1923.80004883,-2948.39990234,50.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(ad_flatdoor) (1)
    CreateDynamicObject(1504,-1923.80004883,-2943.50000000,33.50000000,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gen_doorext06) (2)
    CreateDynamicObject(1505,-1920.59997559,-2951.10009766,33.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext07) (2)
    CreateDynamicObject(1506,-1920.69995117,-2939.39990234,33.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext08) (2)
    CreateDynamicObject(1507,-1913.90002441,-2939.39990234,33.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext09) (2)
    CreateDynamicObject(2959,-1908.50000000,-2945.69995117,33.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(rider1_door) (1)
	CreateDynamicObject(1450,-1910.59997559,-2939.89990234,34.20000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_crate_3) (1)
	CreateDynamicObject(1449,-1923.59997559,-2945.50000000,34.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(dyn_crate_2) (1)
	CreateDynamicObject(1441,-1908.90002441,-2947.80004883,42.29999924,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1440,-1923.00000000,-2945.19995117,42.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1357,-1917.19995117,-2950.50000000,49.90000153,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_fruitcrate3) (1)
	CreateDynamicObject(1338,-1922.30004883,-2941.30004883,50.29999924,0.00000000,0.00000000,40.00000000,-1,1,-1,300); //object(binnt08_la) (1)
	CreateDynamicObject(1338,-1922.29980469,-2941.29980469,50.29999924,0.00000000,0.00000000,39.99572754,-1,1,-1,300); //object(binnt08_la) (2)
	CreateDynamicObject(1265,-1909.30004883,-2944.30004883,50.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(blackbag2) (1)
	CreateDynamicObject(1265,-1908.80004883,-2945.50000000,50.09999847,38.58639526,341.97119141,61.47491455,-1,1,-1,300); //object(blackbag2) (2)
	CreateDynamicObject(1265,-1909.19995117,-2944.80004883,50.09999847,60.69964600,330.36352539,6.38381958,-1,1,-1,300); //object(blackbag2) (3)
	CreateDynamicObject(1525,-1920.80004883,-2951.10009766,27.89999962,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(tag_kilo) (1)
	CreateDynamicObject(1526,-1916.19995117,-2939.39990234,35.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(tag_rifa) (1)
	CreateDynamicObject(3029,-1908.5063, -2944.0017, 25.5288,0.0000, 0.0000, 180.0000,-1,1,-1,300);
	
	CreateDynamicObject(19462,-1911.9724, -2961.0759, 32.2032,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	CreateDynamicObject(19462,-1911.9724, -2961.0759, 40.6232,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	CreateDynamicObject(19462,-1911.9724, -2961.0759, 48.8232,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	
	
	
	//=========================== Тестаппартам ==================================
	CreateDynamicObject(7191,1419.90002441,-1573.30004883,-49.50000000,0.00000000,0.00000000,359.99450684,-1,1,-1,300); //object(vegasnnewfence2b) (2)
    CreateDynamicObject(6959,1426.90002441,-1576.30004883,-51.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (1)
    CreateDynamicObject(6959,1426.89941406,-1536.29980469,-51.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (2)
    CreateDynamicObject(6959,1585.59960938,-1536.29980469,-51.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (3)
    CreateDynamicObject(7191,1418.00000000,-1551.19921875,-29.50000000,90.00000000,180.69213867,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (10)
    CreateDynamicObject(7191,1426.69995117,-1536.50000000,-49.50000000,0.00000000,0.00000000,179.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (12)
    CreateDynamicObject(7191,1414.29980469,-1551.19921875,-76.39999962,90.00000000,180.68664551,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (13)
    CreateDynamicObject(14416,1410.40002441,-1555.00000000,-50.39999962,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(carter-stairs07) (1)
    CreateDynamicObject(6959,1599.19995117,-1577.39990234,-47.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (4)
    CreateDynamicObject(7191,1416.30004883,-1553.10009766,-29.59999847,90.00000000,180.69213867,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (14)
    CreateDynamicObject(7191,1416.30004883,-1557.00000000,-29.59999847,90.00000000,180.68664551,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (16)
    CreateDynamicObject(7191,1416.30004883,-1560.89990234,-29.59999847,90.00000000,180.68664551,179.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (17)
    CreateDynamicObject(7191,1414.30004883,-1560.89990234,-29.50000000,90.00000000,180.68664551,269.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (18)
    CreateDynamicObject(7191,1410.40002441,-1560.89990234,-29.59999847,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (19)
    CreateDynamicObject(7191,1408.50000000,-1558.89941406,-29.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (21)
    CreateDynamicObject(7191,1408.50000000,-1555.00000000,-29.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (22)
    CreateDynamicObject(7191,1408.50000000,-1553.00000000,-29.59999847,90.00000000,180.68664551,359.28039551,-1,1,-1,300); //object(vegasnnewfence2b) (23)
    CreateDynamicObject(7191,1412.39941406,-1553.09960938,-29.59999847,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (25)
    CreateDynamicObject(7191,1412.40002441,-1556.10009766,-29.59999847,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (26)
    CreateDynamicObject(6959,1428.50000000,-1531.19995117,-43.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (5)
    CreateDynamicObject(6959,1440.50000000,-1571.19995117,-47.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (6)
    CreateDynamicObject(7191,1404.19921875,-1543.50000000,-49.50000000,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (27)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-49.50000000,0.00000000,0.00000000,359.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (28)
    CreateDynamicObject(7191,1426.30004883,-1529.00000000,-45.39999962,0.00000000,0.00000000,179.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (30)
    CreateDynamicObject(7191,1404.19995117,-1543.50000000,-45.39999962,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (31)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-45.39999962,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (32)
    CreateDynamicObject(14416,1410.40002441,-1555.00000000,-42.40000153,0.00000000,0.00000000,179.99450684,-1,1,-1,300); //object(carter-stairs07) (5)
    CreateDynamicObject(6959,1599.19921875,-1577.39941406,-39.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (8)
    CreateDynamicObject(14416,1414.40002441,-1554.19995117,-38.40000153,0.00000000,0.00000000,359.98901367,-1,1,-1,300); //object(carter-stairs07) (6)
    CreateDynamicObject(14416,1414.39941406,-1554.19921875,-46.39999962,0.00000000,0.00000000,359.73632812,-1,1,-1,300); //object(carter-stairs07) (7)
    CreateDynamicObject(6959,1428.50000000,-1531.19995117,-35.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (9)
    CreateDynamicObject(14416,1410.39941406,-1555.00000000,-34.40000153,0.00000000,0.00000000,179.99450684,-1,1,-1,300); //object(carter-stairs07) (9)
    CreateDynamicObject(6959,1426.59997559,-1531.19995117,-47.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (10)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-41.29999924,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (34)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-37.20000076,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (35)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-33.09999847,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (36)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-29.00000000,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (37)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-26.90000153,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (38)
    CreateDynamicObject(7191,1408.40002441,-1544.69995117,-22.79999924,0.00000000,0.00000000,359.97802734,-1,1,-1,300); //object(vegasnnewfence2b) (39)
    CreateDynamicObject(6959,1599.19995117,-1577.39990234,-31.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (11)
    CreateDynamicObject(14416,1414.39941406,-1554.19921875,-30.40000153,0.00000000,0.00000000,359.98352051,-1,1,-1,300); //object(carter-stairs07) (10)
    CreateDynamicObject(6959,1428.50000000,-1531.19921875,-27.59999847,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (12)
    CreateDynamicObject(7191,1440.80004883,-1558.00000000,-49.50000000,0.00000000,0.00000000,269.98901367,-1,1,-1,300); //object(vegasnnewfence2b) (44)
    CreateDynamicObject(7191,1590.19921875,-1551.09960938,-45.39999962,0.00000000,0.00000000,89.98352051,-1,1,-1,300); //object(vegasnnewfence2b) (46)
    CreateDynamicObject(7191,1421.89941406,-1551.19921875,-29.50000000,90.00000000,180.68664551,89.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (53)
    CreateDynamicObject(7191,1423.89941406,-1549.19921875,-29.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (54)
    CreateDynamicObject(7191,1423.90002441,-1545.30004883,-29.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (55)
    CreateDynamicObject(7191,1423.90002441,-1541.39990234,-29.50000000,90.00000000,180.68664551,359.29138184,-1,1,-1,300); //object(vegasnnewfence2b) (56)
    CreateDynamicObject(7191,1421.90002441,-1539.30004883,-29.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (57)
    CreateDynamicObject(7191,1418.00000000,-1539.30004883,-29.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (58)
    CreateDynamicObject(7191,1414.09997559,-1539.30004883,-29.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (59)
    CreateDynamicObject(7191,1410.19995117,-1539.30004883,-29.50000000,90.00000000,180.68664551,269.28588867,-1,1,-1,300); //object(vegasnnewfence2b) (60)
    CreateDynamicObject(18553,1423.69995117,-1547.30004883,-50.89999962,0.00000000,0.00000000,359.75000000,-1,1,-1,300); //object(count_ammundoor) (1)
    CreateDynamicObject(14902,1413.40002441,-1575.60009766,-38.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (1)
    CreateDynamicObject(14902,1413.09997559,-1575.60009766,-30.90000153,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (2)
    CreateDynamicObject(14902,1413.40002441,-1575.60009766,-46.29999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(veg_pol_window) (3)
    CreateDynamicObject(6959,1429.19995117,-1550.00000000,-20.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(vegasnbball1) (12)
    
    
    CreateDynamicObject(7191,1410.5000, -1551.2000, -15.6000,270.00000000,180.69581604,90.67382812,-1,1,-1,300); //object(vegasnnewfence2b) (25)
    
    
    CreateDynamicObject(4227,1410.19995117,-1543.60009766,-49.10000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(graffiti_lan01) (1)
    CreateDynamicObject(5069,1420.00000000,-1548.50000000,-49.10000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(ctscene1_las) (1)
    CreateDynamicObject(2834,1421.50000000,-1547.89990234,-51.60000038,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gb_livingrug03) (1)
    CreateDynamicObject(1778,1409.19995117,-1543.80004883,-51.60000038,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_mop_pail) (1)
    CreateDynamicObject(1738,1422.00000000,-1550.80004883,-50.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (1)
    CreateDynamicObject(1738,1421.19995117,-1550.80004883,-50.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (2)
    CreateDynamicObject(1738,1420.40002441,-1550.80004883,-50.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_radiator_old) (3)
    CreateDynamicObject(1481,1414.09997559,-1551.60009766,-49.70000076,314.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (1)
    CreateDynamicObject(1481,1414.09997559,-1551.60009766,-49.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (2)
    CreateDynamicObject(1481,1414.09997559,-1551.60009766,-50.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (3)
    CreateDynamicObject(1481,1415.19995117,-1551.60009766,-50.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (4)
    CreateDynamicObject(1481,1415.19995117,-1551.60009766,-49.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (5)
    CreateDynamicObject(1481,1415.19995117,-1551.60009766,-49.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (6)
    CreateDynamicObject(1481,1416.30004883,-1551.60009766,-49.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (7)
    CreateDynamicObject(1481,1416.30004883,-1551.60009766,-49.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (8)
    CreateDynamicObject(1481,1416.30004883,-1551.60009766,-50.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (9)
    CreateDynamicObject(1481,1417.40002441,-1551.60009766,-49.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (11)
    CreateDynamicObject(1481,1417.40002441,-1551.60009766,-50.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (12)
    CreateDynamicObject(1481,1418.50000000,-1551.60009766,-50.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (13)
    CreateDynamicObject(1481,1418.50000000,-1551.60009766,-49.20000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (14)
    CreateDynamicObject(1481,1418.50000000,-1551.60009766,-49.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (15)
    CreateDynamicObject(1481,1417.40002441,-1551.60009766,-49.70000076,313.99475098,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_bar_b_q) (16)
    CreateDynamicObject(3029,1423.80004883,-1542.39990234,-35.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cr1_door) (1)
    CreateDynamicObject(3029,1423.80004883,-1549.39990234,-43.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cr1_door) (2)
    CreateDynamicObject(2955,1423.69995117,-1547.69995117,-34.79999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(imy_compin) (1)
    CreateDynamicObject(2924,1417.80004883,-1539.39990234,-34.79999924,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(kmb_crash3door) (1)
    CreateDynamicObject(977,1411.80004883,-1539.30004883,-33.20000076,0.00000000,0.00000000,12.00000000,-1,1,-1,300); //object(newtowerdoor1) (1)
    CreateDynamicObject(1497,1418.40002441,-1551.10009766,-35.50000000,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(gen_doorext02) (1)
    CreateDynamicObject(1498,1408.50000000,-1543.60009766,-35.59999847,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext03) (1)
    CreateDynamicObject(1504,1408.50000000,-1547.10009766,-27.50000000,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext06) (1)
    CreateDynamicObject(1505,1408.50000000,-1541.30004883,-27.50000000,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(gen_doorext07) (1)
    CreateDynamicObject(1506,1414.40002441,-1539.39990234,-27.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext08) (1)
    CreateDynamicObject(1507,1421.30004883,-1539.39990234,-27.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext09) (1)
    CreateDynamicObject(1535,1423.80004883,-1544.50000000,-27.50000000,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gen_doorext14) (1)
    CreateDynamicObject(14819,1420.40002441,-1551.19995117,-26.70000076,0.00000000,0.00000000,180.00000000,-1,1,-1,300); //object(og_door) (1)
    CreateDynamicObject(3061,1423.80004883,-1548.39990234,-26.70000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(ad_flatdoor) (1)
    CreateDynamicObject(1504,1423.80004883,-1543.50000000,-43.50000000,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(gen_doorext06) (2)
    CreateDynamicObject(1505,1420.59997559,-1551.10009766,-43.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext07) (2)
    CreateDynamicObject(1506,1420.69995117,-1539.39990234,-43.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext08) (2)
    CreateDynamicObject(1507,1413.90002441,-1539.39990234,-43.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(gen_doorext09) (2)
    CreateDynamicObject(2959,1408.50000000,-1545.69995117,-43.50000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(rider1_door) (1)
	CreateDynamicObject(1450,1410.59997559,-1539.89990234,-42.20000076,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(dyn_crate_3) (1)
	CreateDynamicObject(1449,1423.59997559,-1545.50000000,-42.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(dyn_crate_2) (1)
	CreateDynamicObject(1441,1408.90002441,-1547.80004883,-34.29999924,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(dyn_box_pile_4) (1)
	CreateDynamicObject(1440,1423.00000000,-1545.19995117,-34.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1357,1417.19995117,-1550.50000000,-27.90000153,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(cj_fruitcrate3) (1)
	CreateDynamicObject(1338,1422.30004883,-1541.30004883,-26.29999924,0.00000000,0.00000000,40.00000000,-1,1,-1,300); //object(binnt08_la) (1)
	CreateDynamicObject(1338,1422.29980469,-1541.29980469,-26.29999924,0.00000000,0.00000000,39.99572754,-1,1,-1,300); //object(binnt08_la) (2)
	CreateDynamicObject(1265,1409.30004883,-1544.30004883,-26.00000000,0.00000000,0.00000000,0.00000000,-1,1,-1,300); //object(blackbag2) (1)
	CreateDynamicObject(1265,1408.80004883,-1545.50000000,-26.09999847,38.58639526,341.97119141,61.47491455,-1,1,-1,300); //object(blackbag2) (2)
	CreateDynamicObject(1265,1409.19995117,-1544.80004883,-26.09999847,60.69964600,330.36352539,6.38381958,-1,1,-1,300); //object(blackbag2) (3)
	CreateDynamicObject(1525,1420.80004883,-1551.10009766,-49.89999962,0.00000000,0.00000000,270.00000000,-1,1,-1,300); //object(tag_kilo) (1)
	CreateDynamicObject(1526,1416.19995117,-1539.39990234,-41.09999847,0.00000000,0.00000000,90.00000000,-1,1,-1,300); //object(tag_rifa) (1)
	CreateDynamicObject(3029,1408.5063, -1544.0017, -51.5288,0.0000, 0.0000, 180.0000,-1,1,-1,300);

	CreateDynamicObject(19462,1411.9724, -1561.0759, -44.2032,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	CreateDynamicObject(19462,1411.9724, -1561.0759, -36.6232,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	CreateDynamicObject(19462,1411.9724, -1561.0759, -28.8232,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	
	
	
	//===ап стоянка
	CreateDynamicObject(10781,-1864.1708, -3071.3630, 23.8427,0.0000, 0.0000, 0.0000,-1,1,-1,300);
    CreateDynamicObject(19456,-1835.2611, -3097.7654, 21.9673,0.0000, 0.0000, 0.0000,-1,1,-1,300);
    CreateDynamicObject(19456,-1835.2611, -3097.7654, 25.4473,180.0000, 0.0000, 0.0000,-1,1,-1,300);
    CreateDynamicObject(19456,-1835.2611, -3097.7654, 28.9273,0.0000, 0.0000, 0.0000,-1,1,-1,300);
    CreateDynamicObject(19457,-1880.7072, -3123.0830, 22.0194,0.0000, 0.0000, 90.0000,-1,1,-1,300);
    CreateDynamicObject(19457,-1880.7072, -3123.0830, 25.5194,0.0000, 0.0000, 90.0000,-1,1,-1,300);
    CreateDynamicObject(19457,-1880.7072, -3123.0830, 28.9794,0.0000, 0.0000, 90.0000,-1,1,-1,300);
    CreateDynamicObject(3354,-1880.7505, -3123.0186, 21.3403,0.0000, 0.0000, 90.0000,-1,1,-1,300);
	// вых стоянок
	CreateObject(3354,1460.5079, -1509.5037, 13.8015,0.0000, 0.0000, 90.0000);
	CreateObject(3354,1352.9813, -1565.5847, 13.8004,0.0000, 0.0000, 76.3400);
	CreateObject(3354,1287.1932, -1349.9196, 13.8541,0.0000, 0.0000, 0.0000);
	//==================================== Заделаные текстуры ==================
	CreateObject(19385, 355.19, -38.52, 1077.20,   -0.02, 0.00, 0.00);
	CreateObject(972, 600.24, -8.35, 998.50,   0.00, 0.00, 0.00);
	//==================================== LSPD ==================
	CreateObject(19302, 247.95, 72.59, 1003.90,   0.00, 0.00, 0.00);
	//==================================== Метро ===============================
	CreateObject(5772, 351.70, 190.23, 1045.33,   0.00, 0.00, 0.00);
    CreateObject(10828, 346.85, 239.99, 1042.91,   0.00, 0.00, 1.66);
    CreateObject(10828, 348.13, 139.15, 1043.83,   0.00, 0.00, 0.00);
    CreateObject(19377, 365.79, 186.44, 1042.79,   0.00, 0.00, 1.27);
    CreateObject(1561, 365.71, 186.19, 1039.52,   0.00, 0.00, 90.00);
    CreateObject(962, 355.41, 183.49, 1040.66,   90.00, 90.00, 0.00);
	//================================= Баги SFA ==========================
	CreateObject(1780,-1376.6999512,492.6000061,6.6999998,0.0000000,0.0000000,0.0000000); //object(cj_thin_frige) (1)
    CreateObject(1780,-1376.6999512,493.7999878,6.6999998,0.0000000,0.0000000,0.0000000); //object(cj_thin_frige) (2)
    CreateObject(986, 1843.26, -1855.84, 10.49,0.00, 0.00, 90.00);
    CreateObject(986, 2539.2639, 2822.9377, 11.5300,0.00, 0.00, -90.00);
    CreateObject(986, 2616.4871, 2831.4226, 11.5300,0.00, 0.00, 90.00);
	//= Интерьер Автовокзала====
	CreateObject(18049, 288.23, -192.42, 1002.75,   0.00, 0.00, 0.00);
    CreateObject(2416, 303.13, -197.67, 1003.18,   0.00, 0.00, 270.00);
    CreateObject(2453, 303.10, -193.88, 1004.50,   0.00, 0.00, 0.00);
    CreateObject(2427, 305.48, -194.51, 1004.06,   0.00, 0.00, 270.00);
    CreateObject(2369, 303.79, -196.10, 1004.11,   0.00, 0.00, 270.00);
    CreateObject(2430, 303.06, -194.01, 1005.80,   345.00, 0.00, 270.00);
    CreateObject(19462, 292.99, -192.92, 1004.51,   0.00, 0.00, 0.00);
    CreateObject(970, 295.53, -196.14, 1003.60,   0.00, 0.00, 0.00);
    CreateObject(970, 295.53, -194.50, 1003.60,   0.00, 0.00, 0.00);
    CreateObject(970, 295.53, -193.10, 1003.60,   0.00, 0.00, 0.00);
    CreateObject(970, 295.53, -191.70, 1003.60,   0.00, 0.00, 0.00);
    CreateObject(19056, 304.72, -188.08, 999.24,   0.00, 0.00, 0.00);
    CreateObject(1709, 302.12, -200.37, 998.59,   0.00, 0.00, 180.00);
    CreateObject(1710, 297.89, -196.93, 998.59,   0.00, 0.00, 0.00);
    
    CreateObject(19456,297.6448,-202.0116,1000.3206,0.0000,0.0000,90.0000);
    //================================= АШ ==========================
    CreateObject(3660,-2027.0000, -86.9400, 36.8000,   0.00, 0.00, 0.00);
    CreateObject(3660,-2027.0000, -84.9700, 36.8000,   0.00, 0.00, 0.00);
    CreateObject(3660,-2027.0000, -83.0000, 36.8000,   0.00, 0.00, 0.00);
    CreateObject(3660,-2027.0000, -81.0300, 36.8000,   0.00, 0.00, 0.00);
    CreateObject(9949,-2077.5000000,-188.3000031,46.2999992,0.0000000,0.0000000,179.9945068); //object(pier1_sfe) (1)
    CreateObject(1257,-2025.0000000,-77.9000015,35.5999985,0.0000000,0.0000000,270.0000000); //object(bustopm) (1)
    CreateObject(983,-2062.1000977,-241.1999969,35.0000000,0.0000000,0.0000000,269.9946289); //object(fenceshit3) (10)
    CreateObject(983,-2055.6999512,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (11)
    CreateObject(983,-2049.3000488,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (12)
    CreateObject(983,-2027.8000488,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (13)
    CreateObject(983,-2042.9000244,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (14)
    CreateObject(983,-2021.4000244,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (16)
    CreateObject(983,-2015.0000000,-241.1999969,35.0000000,0.0000000,0.0000000,269.9945068); //object(fenceshit3) (17)
    CreateObject(1280,-2061.3000488,-182.6999969,34.7000008,0.0000000,0.0000000,180.0000000); //object(parkbench1) (1)
    CreateObject(1280,-2061.1999512,-208.1999969,34.7000008,0.0000000,0.0000000,179.9945068); //object(parkbench1) (2)
    CreateObject(1432,-2062.0000000,-174.3999939,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (1)
    CreateObject(1432,-2062.0000000,-167.8999939,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (2)
    CreateObject(1432,-2062.0000000,-161.3999939,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (3)
    CreateObject(1432,-2062.0000000,-154.8999939,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (4)
    CreateObject(1432,-2062.0000000,-216.8000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (5)
    CreateObject(1432,-2062.0000000,-223.3000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (6)
    CreateObject(1432,-2062.0000000,-229.8000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (7)
    CreateObject(1432,-2062.0000000,-236.3000031,34.2999992,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (8)
    CreateObject(1597,-2056.1999512,-154.1000061,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (1)
    CreateObject(1597,-2056.1999512,-167.3000031,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (2)
    CreateObject(1597,-2056.1999512,-180.5000000,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (3)
    CreateObject(1597,-2056.1999512,-209.6000061,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (4)
    CreateObject(1597,-2056.1999512,-236.0000000,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (5)
    CreateObject(1597,-2056.1999512,-222.8000031,37.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (6)
    CreateObject(3437, -2015.00, -163.00, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -171.20, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -183.50, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -167.11, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -179.40, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -175.30, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -208.10, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -191.70, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -187.60, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -195.80, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -199.90, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -204.00, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -216.30, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -212.20, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -220.40, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -224.50, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -232.70, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2015.00, -228.60, 33.81,   90.00, 90.00, 193.00);
    CreateObject(3437, -2093.50, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2089.00, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2084.50, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2080.00, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2075.50, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2071.00, -144.80, 33.82,   -90.00, -90.00, 90.00);
    CreateObject(3437, -2093.50, -108.20, 33.82,   -90.00, 90.00, 90.00);
    CreateObject(3437, -2075.50, -108.20, 33.82,   -90.00, 90.00, 90.00);
    CreateObject(3437, -2089.00, -108.20, 33.82,   -90.00, 90.00, 90.00);
    CreateObject(3437, -2084.50, -108.20, 33.82,   -90.00, 90.00, 90.00);
    CreateObject(3437, -2071.50, -108.20, 33.82,   -90.00, 90.00, 90.00);
    CreateObject(3437, -2080.00, -108.20, 33.82,   -90.00, 90.00, 90.00);
    //================================= Мэрия ==========================
    CreateObject(6189, 836.43, -2130.37, -9.78,   6.26, 0.00, 0.00);
    CreateObject(6189, 836.41, -2223.99, -12.66,   0.00, 0.00, 0.00);
    CreateObject(12990, 822.57, -2299.94, 1.75,   0.00, 0.00, 0.00);
    CreateObject(12990, 848.69, -2299.26, 1.75,   0.00, 0.00, 0.00);
    CreateObject(12990, 863.69, -2311.61, 1.75,   0.00, 0.00, 90.00);
    CreateObject(12990, 808.27, -2312.45, 1.75,   0.00, 0.00, 270.00);
    CreateObject(12990, 822.57, -2328.88, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 848.72, -2328.04, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 863.04, -2340.47, 1.75,   0.00, 0.00, 90.00);
    CreateObject(12990, 808.53, -2341.17, 1.75,   0.00, 0.00, 270.00);
    CreateObject(12990, 822.56, -2357.45, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 848.70, -2356.84, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 863.14, -2369.20, 1.75,   0.00, 0.00, 90.00);
    CreateObject(12990, 808.02, -2369.73, 1.75,   0.00, 0.00, 270.00);
    CreateObject(12990, 848.78, -2385.25, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 822.50, -2385.10, 1.85,   0.00, 0.00, 0.00);
    CreateObject(12990, 808.74, -2397.21, 1.75,   0.00, 0.00, 270.00);
    CreateObject(12990, 863.11, -2397.72, 1.75,   0.00, 0.00, 90.00);
    CreateObject(2754,1496.0378,-1750.2800,15.2756,0.0000,0.0000,270.0000);
	//================================= Мэрия ==========================
    CreateObject(2963,354.9769897,196.5729980,1009.6829834,0.0000000,0.0000000,270.0000000); //object(freezer_door) (1)
    CreateObject(1502,371.2659912,166.5529938,1007.3909912,0.0000000,0.0000000,0.0000000); //object(gen_doorint04) (2)
    CreateObject(3851,357.8580017,160.2570038,1010.3070068,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx) (1)
    CreateObject(3851,357.8739929,165.8300018,1010.3070068,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx) (2)
    CreateObject(3851,357.8800049,181.3899994,1010.3070068,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx) (3)
    CreateObject(3851,357.8659973,188.4759979,1010.3070068,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx) (4)
    CreateObject(2395,379.5350037,175.7180023,1007.3829956,270.0000000,0.0000000,0.0000000); //object(cj_sports_wall) (1)
   	//======================================= Лежачие полицейские ===================
    CreateObject(3437, 1442.90, -1731.78, 12.02,   90.00, 90.00, 90.00);
    CreateObject(3437, 1512.64, -1731.55, 12.02,   90.00, 90.00, 90.00);
    CreateObject(3437, 1514.81, -1592.06, 12.02,   90.00, 90.00, 90.00);
    CreateObject(3437, 1444.29, -1591.91, 12.02,   90.00, 90.00, 90.00);
    CreateObject(3437, 1327.02, -1731.81, 12.02,   90.00, 90.00, 90.00);
    CreateObject(3437, 1446.60, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1450.70, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1454.80, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1463.00, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1458.90, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1467.10, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1471.20, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1475.30, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1479.40, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1495.80, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1483.50, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1491.70, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1487.60, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1504.00, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1499.90, -1721.40, 12.04,   90.00, 90.00, 105.00);
    CreateObject(3437, 1508.10, -1721.40, 12.04,   90.00, 90.00, 105.00);
    //======================================= Деревья ===================
    CreateObject(3520, -1804.97, -594.58, 15.98,   0.00, 0.00, 90.00);
    CreateObject(3520, -1793.16, -594.79, 15.93,   -0.12, 0.00, 90.00);
    CreateObject(3520, -1785.32, -594.84, 15.96,   0.00, 0.00, 90.00);
    CreateObject(3520, -1810.12, -594.71, 15.97,   0.00, 0.00, 90.00);
    CreateObject(3660, -1803.30, -594.70, 17.50,   0.08, 0.00, 0.00);
    CreateObject(3660, -1783.71, -594.70, 17.50,   0.00, 0.00, 0.00);
    CreateObject(3660, -1777.03, -594.70, 17.50,   0.00, 0.00, 0.00);
    CreateObject(3660, -1790.86, -594.70, 17.50,   0.00, 0.00, 0.00);
    CreateObject(3660, -1797.16, -594.70, 17.50,   0.00, 0.00, 0.00);
    CreateObject(3660, -1803.24, -595.25, 17.50,   0.00, 0.00, 180.00);
    CreateObject(615, -1808.17, -627.74, 15.66,   0.00, 0.00, 0.00);
    CreateObject(615, -1827.20, -644.57, 15.52,   0.00, 0.00, 0.00);
    CreateObject(615, -1806.46, -663.17, 17.68,   0.00, 0.00, 0.00);
    CreateObject(615, -1826.71, -681.77, 21.45,   0.00, 0.00, 0.00);
    CreateObject(615, -1804.15, -696.98, 23.62,   0.00, 0.00, 0.00);
    CreateObject(615, -1822.32, -712.10, 25.70,   0.00, 0.00, 0.00);
    CreateObject(615, -1801.85, -725.23, 27.88,   0.00, 0.00, 0.00);
    CreateObject(615, -1820.80, -737.69, 28.53,   0.00, 0.00, 0.00);
    CreateObject(615, -1798.79, -749.03, 30.38,   0.00, 0.00, 0.00);
    CreateObject(615, -1819.68, -760.72, 31.22,   0.00, 0.00, 0.00);
    CreateObject(615, -1798.34, -773.16, 32.29,   0.00, 0.00, 0.00);
    CreateObject(615, -1820.03, -785.63, 33.25,   0.00, 0.00, 0.00);
    CreateObject(615, -1798.61, -798.77, 32.20,   0.00, 0.00, 0.00);
    CreateObject(615, -1821.40, -810.02, 34.47,   0.00, 0.00, 0.00);
    CreateObject(615, -1800.03, -827.16, 34.36,   0.00, 0.00, 0.00);
    CreateObject(615, -1822.86, -839.61, 35.77,   0.00, 0.00, 0.00);
    CreateObject(615, -1772.71, -620.94, 15.29,   0.00, 0.00, 0.00);
    CreateObject(615, -1750.43, -619.75, 15.29,   0.00, 0.00, 0.00);
    CreateObject(615, -1773.84, -659.67, 20.37,   0.00, 0.00, 0.00);
    CreateObject(615, -1750.78, -656.00, 19.49,   0.00, 0.00, 0.00);
    CreateObject(615, -1772.55, -689.17, 22.46,   0.00, 0.00, 0.00);
    CreateObject(615, -1747.50, -687.62, 23.02,   0.00, 0.00, 0.00);
    CreateObject(615, -1764.07, -711.86, 27.29,   0.00, 0.00, 0.00);
    CreateObject(615, -1807.92, -608.63, 15.28,   0.00, 0.00, 0.00);
    CreateObject(615, -1830.23, -612.40, 15.14,   0.00, 0.00, 0.00);
    CreateObject(3532, -1226.64, -782.24, 63.45,   0.00, 360.00, 40.00);
    CreateObject(3532, -1229.05, -779.19, 63.53,   0.00, 360.00, 40.00);
    CreateObject(3532, -1216.59, -772.27, 63.41,   -4.00, 360.00, 40.00);
    CreateObject(3532, -1218.72, -769.52, 63.43,   0.00, 360.00, 40.00);
    CreateObject(3532, -1231.76, -779.50, 63.65,   4.00, 360.00, 127.00);
    CreateObject(3532, -1235.21, -781.98, 64.27,   4.00, 360.00, 127.00);
    CreateObject(3532, -1218.17, -767.07, 63.11,   4.00, 360.00, 135.00);
    CreateObject(3532, -1215.29, -764.06, 62.45,   3.00, 360.00, 135.00);
    CreateObject(727, -1236.27, -758.79, 62.85,   0.00, 0.00, 0.00);
    CreateObject(727, -1253.64, -770.61, 63.05,   0.00, 0.00, 0.00);
    CreateObject(727, -1271.20, -780.35, 63.57,   0.00, 0.00, 0.00);
    CreateObject(727, -1288.24, -789.84, 65.73,   0.00, 0.00, 0.00);
    CreateObject(727, -1311.53, -797.81, 65.33,   0.00, 0.00, 0.00);
    CreateObject(1364, -1259.93, -740.01, 64.44,   0.00, -3.00, 222.00);
    CreateObject(1364, -1265.39, -744.44, 65.26,   0.00, -3.00, 215.00);
    CreateObject(1364, -1271.59, -747.99, 66.12,   0.00, -3.00, 207.00);
    
	//=================================== заборы ==================
	CreateObject(979, -1742.7090, -566.3074, 16.2681,0.0000, 0.0000, 180.0000);
	CreateObject(979, -1752.0490, -566.3074, 16.2681,0.0000, 0.0000, 180.0000);
	CreateObject(979, -1761.3890, -566.3074, 16.2681,0.0000, 0.0000, 180.0000);
	CreateObject(979, -1770.7090, -566.3074, 16.2681,0.0000, 0.0000, 180.0000);
	//======================================= Ангары Авианосец ===================
	CreateDynamicObject(3268,-1244.00000000,446.97998047,6.19999981,0.00000000,0.00000000,270.00000000); //object(mil_hangar1_) (1)
	CreateDynamicObject(3268,-1282.00000000,446.97998047,6.19999981,0.00000000,0.00000000,270.00000000); //object(mil_hangar1_) (1)
	//======================================= МЧС ЛС ===================
	CreateObject(7905, 1187.23, -1377.03, 19.01,   0.00, 0.00, 98.00);
    CreateObject(970, 1190.36, -1382.97, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.34, -1378.85, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.29, -1374.75, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.27, -1370.59, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.24, -1366.46, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.25, -1362.32, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.24, -1358.20, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.25, -1354.07, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.25, -1349.91, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.27, -1345.82, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1180.11, -1333.59, 13.47,   0.00, 0.00, 90.00);
    CreateObject(970, 1180.09, -1331.52, 13.47,   0.00, 0.00, 90.00);
    CreateObject(970, 1178.08, -1335.66, 13.47,   0.00, -1.00, 0.00);
    CreateObject(970, 1173.98, -1335.66, 13.47,   0.00, 1.00, 0.00);
    CreateObject(970, 1178.00, -1329.50, 13.55,   0.00, -1.92, 0.00);
    CreateObject(970, 1173.84, -1329.49, 13.47,   0.00, -0.25, 0.00);
    CreateObject(870, 1177.25, -1332.33, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1175.27, -1333.51, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1176.61, -1334.10, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.53, -1334.05, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1174.24, -1331.65, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1175.71, -1331.21, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.60, -1331.02, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1174.26, -1334.15, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.32, -1332.74, 13.27,   0.00, 0.00, 0.00);
    CreateObject(970, 1180.11, -1315.98, 13.47,   0.00, 0.00, 90.00);
    CreateObject(970, 1178.05, -1318.11, 13.47,   -0.09, -1.33, 0.00);
    CreateObject(870, 1173.83, -1316.47, 13.27,   0.00, 0.00, 0.00);
    CreateObject(970, 1180.12, -1313.88, 13.47,   0.00, 0.00, 90.00);
    CreateObject(970, 1174.11, -1318.01, 13.47,   -0.09, -1.33, 0.00);
    CreateObject(970, 1178.06, -1311.77, 13.47,   -0.09, -1.33, 0.00);
    CreateObject(970, 1174.01, -1311.73, 13.47,   -0.09, 0.67, 0.00);
    CreateObject(970, 1173.84, -1329.49, 13.47,   0.00, -0.25, 0.00);
    CreateObject(870, 1173.49, -1314.62, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1173.46, -1313.26, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1175.32, -1313.27, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1177.19, -1313.45, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.81, -1313.63, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.81, -1315.46, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1177.32, -1315.57, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1177.92, -1317.01, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1176.01, -1316.79, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1175.77, -1315.21, 13.27,   0.00, 0.00, 0.00);
    CreateObject(870, 1178.91, -1316.97, 13.27,   0.00, 0.00, 0.00);
    CreateObject(970, 1185.31, -1302.73, 13.64,   0.00, 0.00, 89.15);
    CreateObject(870, 1182.12, -1300.91, 13.44,   0.00, 0.00, 0.00);
    CreateObject(970, 1183.24, -1304.83, 13.64,   -0.09, 0.03, 0.00);
    CreateObject(970, 1179.12, -1304.83, 13.64,   -0.09, 0.03, 0.00);
    CreateObject(970, 1185.32, -1298.61, 13.64,   0.00, 0.00, 90.85);
    CreateObject(970, 1185.33, -1294.55, 13.64,   0.00, 0.00, 88.72);
    CreateObject(970, 1185.38, -1293.31, 13.64,   0.00, 0.00, 88.81);
    CreateObject(970, 1183.35, -1291.35, 13.64,   -0.09, 0.03, 1.62);
    CreateObject(970, 1179.26, -1291.46, 13.64,   -0.09, 0.03, 1.62);
    CreateObject(870, 1179.85, -1303.12, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1182.66, -1302.96, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1182.58, -1296.35, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1180.35, -1296.99, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1182.95, -1298.70, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.54, -1298.71, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1180.56, -1300.09, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.29, -1302.07, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.29, -1302.07, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.29, -1302.07, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.29, -1302.07, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.29, -1302.07, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1182.42, -1293.37, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1183.37, -1294.54, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1181.70, -1294.68, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1179.97, -1293.39, 13.44,   0.00, 0.00, 0.00);
    CreateObject(870, 1183.94, -1303.45, 13.44,   0.00, 0.00, 0.00);
    CreateObject(970, 1190.24, -1303.35, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.18, -1299.22, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.19, -1295.17, 12.97,   0.00, 0.00, 90.00);
    CreateObject(970, 1190.17, -1291.02, 12.97,   0.00, 0.00, 90.00);
    CreateObject(1216, 1172.45, -1328.64, 15.06,   0.00, 0.00, 180.00);
    CreateObject(1233, 1180.87, -1328.92, 13.83,   0.00, 0.00, 90.00);
    CreateObject(1235, 1180.77, -1334.20, 13.06,   0.00, 0.00, 0.00);
    CreateObject(1280, 1181.02, -1332.35, 12.90,   0.00, 0.00, 180.00);
    CreateObject(1280, 1181.01, -1314.96, 12.96,   0.00, 0.00, 180.00);
    CreateObject(1235, 1180.97, -1316.63, 13.06,   0.00, 0.00, 0.00);
    CreateObject(1232, 1181.36, -1329.58, 15.21,   0.00, 0.00, 0.00);
    CreateObject(1232, 1181.29, -1317.87, 15.21,   0.00, 0.00, 0.00);
    //================================= FFighters ==========================
    CreateObject(1800, 687.75, -461.73, -26.69,   0.00, 0.00, 180.00);
    CreateObject(1800, 684.45, -461.65, -25.78,   0.00, 0.00, 180.00);
    CreateObject(1800, 684.45, -461.65, -26.69,   0.00, 0.00, 180.00);
    CreateObject(1800, 687.75, -461.73, -25.78,   0.00, 0.00, 180.00);
    CreateObject(2200, 686.50, -451.83, -26.58,   0.00, 0.00, 0.00);
    CreateObject(14805, 677.90, -454.28, -25.79,   0.00, 0.00, 270.00);
    CreateObject(2009, 676.12, -460.84, -26.60,   0.00, 0.00, 90.00);
    CreateObject(1806, 676.37, -459.94, -26.60,   0.00, 0.00, 90.00);
    CreateObject(19388, 681.50, -450.34, -24.96,   0.00, 0.00, 90.00);
    CreateObject(19358, 681.29, -450.32, -21.92,   0.00, 0.00, 90.00);
    CreateObject(1560, 682.24, -450.31, -26.69,   0.00, 0.00, 180.00);
	//======================================= Тюрьма читеров ===================
	CreateObject(18759,5512.3423,1244.4044,22.188636779785,0.00000000,0.00000000,0.00000000); //Присон
	//======================================= Церковь ==========================
	CreateObject(14623,-1998.00000000,1119.50000000,30.59999847,0.00000000,0.00000000,270.00000000);
    CreateObject(2808,-2030.69995117,1115.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2868,-2033.40002441,1118.59997559,26.60000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2808,-2030.69995117,1116.90002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2030.69995117,1123.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2030.69995117,1121.69995117,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2027.90002441,1123.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2027.90002441,1121.69995117,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2025.30004883,1123.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2025.29980469,1121.69921875,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2022.59997559,1121.69995117,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2022.59997559,1123.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2027.90002441,1116.90002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2025.30004883,1116.90002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2022.59997559,1116.90002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2027.90002441,1115.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2025.30004883,1115.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2808,-2022.59997559,1115.40002441,25.70000076,0.00000000,0.00000000,90.00000000);
    CreateObject(2868,-2033.40002441,1120.00000000,26.60000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2033.00000000,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2031.19995117,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2029.40002441,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2027.59997559,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2025.79980469,1118.79980469,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2024.00000000,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2022.19995117,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2020.40002441,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(936,-2034.69995117,1119.96765137,25.11000061,0.00000000,0.00000000,90.00000000);
    CreateObject(1743,-2034.69995117,1119.84997559,25.29000092,0.00000000,0.00000000,270.00000000);
    CreateObject(936,-2034.69995117,1118.64001465,25.10000038,0.00000000,0.00000000,90.00000000);
    CreateObject(936,-2033.77990723,1118.66003418,25.11100006,0.00000000,0.00000000,270.00000000);
    CreateObject(936,-2033.77990723,1119.99304199,25.11209869,0.00000000,0.00000000,270.00000000);
    CreateObject(936,-2035.30004883,1118.63000488,24.86000061,0.00000000,0.00000000,90.00000000);
    CreateObject(936,-2035.30004883,1119.96765137,24.87000084,0.00000000,0.00000000,90.00000000);
    CreateObject(630,-2033.50000000,1120.59997559,26.60000038,0.00000000,0.00000000,0.00000000);
    CreateObject(630,-2033.50000000,1118.00000000,26.60000038,0.00000000,0.00000000,0.00000000);
    CreateObject(1667,-2033.90002441,1119.59997559,26.39999962,0.00000000,0.00000000,0.00000000);
    CreateObject(1664,-2033.80004883,1119.09997559,26.45999908,0.00000000,0.00000000,0.00000000);
    CreateObject(5710,-2014.00000000,1119.33996582,28.60000038,0.00000000,0.00000000,180.00000000);
    CreateObject(2842,-2018.59997559,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(2842,-2016.80004883,1118.80004883,25.10000038,0.00000000,0.00000000,0.00000000);
    CreateObject(7191,-2015.66003418,1119.69995117,5.69999981,90.00000000,0.00000000,0.00000000);
    CreateObject(7191,-2036.72998047,1120.69995117,27.00000000,0.00000000,180.00000000,0.00000000);
    CreateObject(1557,-2015.80004883,1117.80004883,25.10000038,0.00000000,0.00000000,90.00000000);
    CreateObject(1557,-2015.80004883,1120.80004883,25.10000038,0.00000000,0.00000000,270.00000000);
    CreateObject(2894,-2033.40002441,1119.50000000,26.60000038,0.00000000,0.00000000,280.00000000);
    CreateObject(2195,-2017.00000000,1117.40002441,25.70000076,0.00000000,0.00000000,0.00000000);
    CreateObject(2195,-2017.00000000,1121.30004883,25.70000076,0.00000000,0.00000000,0.00000000);
	//===================================== Респавн новичков ===================
    CreateDynamicObject(1257,1132.17102051,-1721.20275879,13.97465801,0.00000000,0.00000000,270.00000000); //object(bustopm) (1)
	CreateDynamicObject(982,1152.15075684,-1722.22851562,13.64132500,0.00000000,0.00000000,90.00000000); //object(fenceshit) (1)
	CreateDynamicObject(984,1133.00854492,-1722.22851562,13.34931469,358.50000000,0.00000000,90.00000000); //object(fenceshit2) (1)
	CreateDynamicObject(982,1113.80603027,-1722.22851562,13.23042965,0.00000000,0.00000000,90.00000000); //object(fenceshit) (2)
	CreateDynamicObject(982,1088.21301270,-1722.22851562,13.23794270,0.00000000,0.00000000,90.00000000); //object(fenceshit) (3)
	CreateDynamicObject(984,1069.08020020,-1722.22851562,13.18355465,0.00000000,0.00000000,90.00000000); //object(fenceshit2) (2)
	CreateDynamicObject(983,1061.10009766,-1722.22851562,13.23042965,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
	CreateDynamicObject(982,1057.89489746,-1735.00000000,13.31189728,0.00000000,0.00000000,0.00000000); //object(fenceshit) (4)
	CreateDynamicObject(982,1057.89489746,-1760.58935547,13.25795174,0.00000000,0.00000000,0.00000000); //object(fenceshit) (5)
	CreateDynamicObject(983,1057.89489746,-1775.00000000,13.23992157,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
	CreateDynamicObject(982,1070.71105957,-1778.17041016,13.19638634,0.00000000,0.00000000,90.00000000); //object(fenceshit) (6)
	CreateDynamicObject(982,1096.30371094,-1778.17041016,13.23059177,0.00000000,0.00000000,90.00000000); //object(fenceshit) (7)
	CreateDynamicObject(983,1109.09997559,-1778.17041016,13.26394463,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (3)
	CreateDynamicObject(983,1112.30480957,-1781.35913086,13.26394463,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
	CreateDynamicObject(983,1164.91748047,-1725.40405273,13.57842827,0.60000610,0.00000000,0.00000000); //object(fenceshit3) (5)
	CreateDynamicObject(983,1164.91748047,-1727.00097656,13.54496384,0.59875488,0.00000000,0.00000000); //object(fenceshit3) (6)
	CreateDynamicObject(1257,1163.58540000, -1762.2216000, 13.8436000,0.00000000,0.00000000,180.00000000); //object(bustopm) (1)
	//================================ HOTDOGERS ===============================
	CreateDynamicObject(1340,1157.0768,-1732.6000,13.8000,0.0000,0.0000,-90.0000);
	CreateDynamicObject(1340,1414.2425537109, -1718.1134033203, 13.692994117737, 0, 0, 0.000);
	CreateDynamicObject(1340,1471.03857422,-1675.05468750,14.17446136,0.00000000,0.00000000,270.00000000); //object(chillidogcart) (3)
	CreateDynamicObject(1340,1477.06201172,-1675.11145020,14.17446136,0.00000000,0.00000000,270.00000000); //object(chillidogcart) (4)
	CreateDynamicObject(1340,1154.2336,-1732.6000,13.7420,0.0000,0.0000,-90.0000); //object(chillidogcart) (5)
	CreateDynamicObject(1340, 2182.3732910156, -2268.9443359375, 13.593506813049, 0, 0, 0.000);//грузкичи
	//============================== Грузчики ==================================
	CreateDynamicObject(983, 2214.6716,-2263.1155,13.3000, 0.0000, 0.0000, 225.000);
	CreateDynamicObject(2060,2172.89526367,-2256.86108398,12.46142387,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2172.89453125,-2256.86035156,12.46142387,0.00000000,0.00000000,43.99475098);
	CreateDynamicObject(2060,2172.42309570,-2256.42822266,12.46099281,0.00000000,0.00000000,47.25003052);
	CreateDynamicObject(2060,2173.31835938,-2257.36694336,12.46148300,0.00000000,0.00000000,43.75000000);
	CreateDynamicObject(2060,2172.75854492,-2256.49853516,12.77687645,0.00000000,0.00000000,315.24987793);
	CreateDynamicObject(2060,2172.41381836,-2256.85815430,12.77693558,0.00000000,0.00000000,316.25000000);
	CreateDynamicObject(2060,2173.61865234,-2257.31201172,12.77693558,0.00000000,0.00000000,136.00000000);
	CreateDynamicObject(2060,2173.29321289,-2257.70800781,12.77693558,0.00000000,0.00000000,134.00000000);
	CreateDynamicObject(2060,2173.73193359,-2257.77856445,12.46504116,0.00000000,0.00000000,42.00000000);
	CreateDynamicObject(2060,2172.61962891,-2256.63281250,13.09232903,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2060,2229.29809570,-2286.05883789,13.53178787,0.00000000,0.00000000,226.00000000);
	CreateDynamicObject(2060,2229.61987305,-2286.45825195,13.53178787,0.00000000,0.00000000,45.00000000);
	CreateDynamicObject(2060,2230.00610352,-2286.81738281,13.53178787,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2230.39746094,-2287.23168945,13.53178787,0.00000000,0.00000000,44.00000000);
	CreateDynamicObject(2060,2229.35400391,-2286.54858398,13.80724049,0.00000000,0.00000000,134.00000000);
	CreateDynamicObject(2060,2230.20898438,-2286.95312500,13.82723999,0.00000000,0.00000000,102.00000000);
	CreateDynamicObject(1482,2222.66113281,-2289.36279297,12.31155109,0.00000000,0.00000000,135.00000000);
	//===================================== Стоянка Zone 51 ====================
    CreateDynamicObject(8661,169.00000000,1950.80004883,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (1)
    CreateDynamicObject(5706,136.60000610,1952.80004883,23.39999962,0.00000000,0.00000000,181.00000000); //object(studiobld03_law) (2)
    CreateDynamicObject(8661,169.00000000,1970.69995117,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (6)
    CreateDynamicObject(8661,169.00000000,1990.59997559,19.00000000,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (7)
    CreateDynamicObject(7922,148.10000610,1994.90002441,18.79999924,0.00000000,0.00000000,179.50000000); //object(vgwstnewall6905) (1)
    CreateDynamicObject(7922,148.30000305,1973.90002441,18.89999962,0.00000000,0.00000000,269.74926758); //object(vgwstnewall6905) (2)
    CreateDynamicObject(7922,149.39999390,1996.90002441,19.00000000,0.00000000,271.00012207,88.74707031); //object(vgwstnewall6905) (3)
    CreateDynamicObject(7922,149.39999390,1998.90002441,19.00000000,0.00000000,270.99975586,89.99438477); //object(vgwstnewall6905) (4)
    CreateDynamicObject(8657,149.19999695,1957.40002441,19.10000038,0.00000000,0.00000000,180.75000000); //object(shbbyhswall10_lvs) (1)
    CreateDynamicObject(9339,176.10000610,1942.30004883,19.70000076,0.00000000,0.00000000,268.75000000); //object(sfnvilla001_cm) (1)
    CreateDynamicObject(9339,176.10000610,1942.30004883,21.00000000,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (2)
    CreateDynamicObject(9339,152.89999390,1942.80004883,21.00000000,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (4)
    CreateDynamicObject(9339,152.89999390,1942.80004883,19.70000076,0.00000000,0.00000000,268.74755859); //object(sfnvilla001_cm) (5)
    CreateDynamicObject(9339,188.80000305,1955.19995117,19.70000076,0.00000000,0.00000000,179.99755859); //object(sfnvilla001_cm) (6)
    CreateDynamicObject(9339,188.80000305,1987.69995117,19.70000076,0.00000000,0.00000000,179.99731445); //object(sfnvilla001_cm) (7)
    CreateDynamicObject(9339,188.80000305,1973.30004883,19.70000076,0.00000000,0.00000000,179.99731445); //object(sfnvilla001_cm) (8)
    CreateDynamicObject(9339,188.80000305,1955.19995117,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (9)
    CreateDynamicObject(9339,188.80000305,1973.30004883,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (10)
    CreateDynamicObject(9339,188.80000305,1987.69995117,21.00000000,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (11)
    CreateDynamicObject(9339,188.80000305,1987.69995117,18.29999924,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (12)
    CreateDynamicObject(9339,188.80000305,1973.30004883,18.39999962,0.00000000,0.00000000,179.99450684); //object(sfnvilla001_cm) (13)
    CreateDynamicObject(9339,188.89999390,1954.50000000,18.29999924,0.00000000,0.00000000,180.49450684); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,152.9000, 1942.8000, 22.3800,0.0000, 0.0000, 268.7476); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,176.1000, 1942.3000, 22.3800,0.0000, 0.0000, 268.7476); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1955.2000, 22.3800,0.0000, 0.0000, 179.9945); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1973.3000, 22.3800,0.0000, 0.0000, 179.9945); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1987.7000, 22.3800,0.0000, 0.0000, 179.9945); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,152.9000, 1942.8000, 23.7600,0.0000, 0.0000, 268.7476); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,176.0954, 1942.3000, 23.7600,0.0000, 0.0000, 268.7476); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1955.2000, 23.7600,0.0000, 0.0000, 179.9945); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1973.3000, 23.7600,0.0000, 0.0000, 179.9945); //object(sfnvilla001_cm) (14)
    CreateDynamicObject(9339,188.8000, 1987.7000, 23.7600,0.0000, 0.0000, 179.9945); //ob
    CreateDynamicObject(8657,163.89999390,2000.69995117,18.89999962,0.00000000,0.00000000,89.99707031); //object(shbbyhswall10_lvs) (3)
    CreateDynamicObject(8657,173.80000305,2000.69995117,18.89999962,0.00000000,0.00000000,89.99157715); //object(shbbyhswall10_lvs) (4)
    CreateDynamicObject(8657,173.80000305,2000.69995117,16.60000038,0.00000000,0.00000000,89.98901367); //object(shbbyhswall10_lvs) (5)
    CreateDynamicObject(8657,173.30000305,1942.09997559,17.79999924,0.00000000,0.00000000,89.23901367); //object(shbbyhswall10_lvs) (6)
    CreateDynamicObject(8657,142.30000305,1942.50000000,17.79999924,0.00000000,0.00000000,89.23645020); //object(shbbyhswall10_lvs) (7)
    CreateDynamicObject(3029,139.10000610,1940.09997559,18.29999924,0.00000000,0.00000000,272.49963379); //object(cr1_door) (2)
    CreateDynamicObject(10183,184.50000000,1962.69995117,19.10000038,0.00000000,0.00000000,316.00000000); //object(ferspaces) (1)
    CreateDynamicObject(10183,184.39999390,1977.80004883,19.10000038,0.00000000,0.00000000,315.99975586); //object(ferspaces) (2)
    CreateDynamicObject(10183,172.69999695,1965.69995117,19.10000038,0.00000000,0.00000000,135.74975586); //object(ferspaces) (3)
    CreateDynamicObject(1215,148.69999695,2000.80004883,20.00000000,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,188.19999695,2001.00000000,20.70000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,149.00000000,1965.09997559,20.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
    CreateDynamicObject(1278,166.30000305,1975.40002441,25.20000076,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (1)
    CreateDynamicObject(1278,166.30000305,1962.09997559,25.10000038,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (2)
    CreateDynamicObject(973,148.89999390,1970.30004883,21.10000038,0.00000000,0.00000000,92.00000000); //object(sub_roadbarrier) (1)
    CreateDynamicObject(973,149.30000305,1959.90002441,21.10000038,0.00000000,0.00000000,91.99951172); //object(sub_roadbarrier) (2)
    CreateDynamicObject(1237,166.30000305,1962.19995117,18.89999962,0.00000000,359.24987793,1.75000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,166.39999390,1975.50000000,18.79999924,0.00000000,359.24743652,0.74707031); //object(strtbarrier01) (2)
    CreateDynamicObject(8661,129.50000000,1984.50000000,15.50000000,0.00000000,349.99993896,0.00000000); //object(gnhtelgrnd_lvs) (8)
    CreateDynamicObject(1251,152.89999390,1972.69995117,19.10000038,0.00000000,0.00000000,268.00000000); //object(smashbar) (1)
    CreateDynamicObject(1251,152.80000305,1967.59997559,19.00000000,0.00000000,0.00000000,270.74902344); //object(smashbar) (2)
    CreateDynamicObject(1251,155.30000305,1961.30004883,19.00000000,0.00000000,0.00000000,273.99902344); //object(smashbar) (3)
    CreateDynamicObject(1251,155.60000610,1955.09997559,19.00000000,0.00000000,0.00000000,273.99902344); //object(smashbar) (4)
    CreateDynamicObject(7922,152.19999695,1944.30004883,19.89999962,0.00000000,270.99426270,270.48901367); //object(vgwstnewall6905) (5)
    CreateDynamicObject(3029,153.30000305,1943.69995117,18.89999962,0.00000000,0.00000000,0.49938965); //object(cr1_door) (3)
    CreateDynamicObject(973,152.39999390,1974.50000000,19.79999924,0.00000000,0.00000000,359.49951172); //object(sub_roadbarrier) (4)
    
  	//===================================== Грузчики ===========================
	CreateDynamicObject(2754,1919.78381348,-1766.21813965,13.44901943,0.00000000,0.00000000,270.00000000); //object(otb_machine) (4)
	CreateDynamicObject(2754,2236.16186523,-1665.79772949,15.27980804,0.00000000,0.00000000,344.00000000); //object(otb_machine) (6)
	CreateDynamicObject(2754,1367.56359863,-1290.13696289,13.44901943,0.00000000,0.00000000,0.00000000); //object(otb_machine) (7)
	CreateDynamicObject(2754,1142.44287109,-1763.92932129,13.59816360,0.00000000,0.00000000,180.00000000); //object(otb_machine) (8)
	CreateDynamicObject(2754,557.32824707,-1294.28137207,17.24994087,0.00000000,0.00000000,270.00000000); //object(otb_machine) (9)
	CreateDynamicObject(2754,847.58093262,-1799.19348145,13.71945286,0.00000000,0.00000000,354.00000000); //object(otb_machine) (10)
	CreateDynamicObject(2754,-78.74282837,-1171.64892578,1.95329499,0.00000000,0.00000000,336.00000000); //object(otb_machine) (11)
	CreateDynamicObject(2754,-1551.53637695,-2737.33691406,48.64560318,0.00000000,0.00000000,146.00000000); //object(otb_machine) (13)
	CreateDynamicObject(2754,661.71307373,-576.21777344,16.25428581,0.00000000,0.00000000,0.00000000); //object(otb_machine) (14)
	CreateDynamicObject(1696,-1334.93273926,487.19998169,10.39754200,355.00000000,0.00000000,180.00000000);
	CreateDynamicObject(2754,-2035.70605469,-102.35491180,35.07402039,0.00000000,0.00000000,270.00000000); //object(otb_machine) (16)
	CreateDynamicObject(2754,-2033.32604980,159.50723267,28.94120598,0.00000000,0.00000000,178.00000000); //object(otb_machine) (17)
	CreateDynamicObject(2754,-1676.34570312,434.01806641,7.08183193,0.00000000,0.00000000,226.00000000); //object(otb_machine) (19)
	CreateDynamicObject(2754,-2421.45410156,958.35540771,45.18632126,0.00000000,0.00000000,88.00000000); //object(otb_machine) (20)
	CreateDynamicObject(2754,-2621.31445312,1415.23510742,6.88521862,0.00000000,0.00000000,158.00000000); //object(otb_machine) (22)
	CreateDynamicObject(2754,-2452.32275391,2252.62988281,4.87058449,0.00000000,0.00000000,92.00000000); //object(otb_machine) (23)
	CreateDynamicObject(2754,-1282.38098145,2715.18652344,50.16842651,0.00000000,0.00000000,28.00000000); //object(otb_machine) (24)
	CreateDynamicObject(2754,91.92106628,1180.56555176,18.56620598,0.00000000,0.00000000,90.00000000); //object(otb_machine) (25)
	CreateDynamicObject(2754,-818.55200195,1567.63708496,27.01933098,0.00000000,0.00000000,178.00000000); //object(otb_machine) (26)
	CreateDynamicObject(2754,2174.20336914,1402.93469238,10.96464443,0.00000000,0.00000000,0.00000000); //object(otb_machine) (27)
	CreateDynamicObject(2754,1587.30920410,2218.34838867,10.96464443,0.00000000,0.00000000,88.00000000); //object(otb_machine) (28)
	CreateDynamicObject(2754,2187.36035156,2478.89160156,11.14433193,0.00000000,0.00000000,180.00000000); //object(otb_machine) (29)
	CreateDynamicObject(2754,2843.30444336,1286.17187500,11.29276943,0.00000000,0.00000000,270.00000000); //object(otb_machine) (30)
	//================================ Мостик ==================================
	CreateObject(18769, -1337.65, 424.76, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1357.63, 424.77, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1377.60, 424.79, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1397.58, 424.81, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1417.56, 424.82, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1437.54, 424.64, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1457.52, 424.06, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1337.65, 390.95, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1337.65, 355.32, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1357.63, 354.74, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1377.61, 354.96, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1397.59, 353.16, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1417.56, 353.89, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1437.54, 355.52, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1457.52, 355.11, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1357.63, 390.47, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1377.60, 390.72, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1397.58, 391.63, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1417.56, 391.58, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1437.54, 390.44, 5.52,   0.00, 0.00, 0.00);
	CreateObject(18769, -1457.52, 390.81, 5.52,   0.00, 0.00, 0.00);
	
	CreateObject(9241, -1311.6543, 449.7913, 7.8560, 0.0000, 0.0000, -90.0000);
	//=============================== Шоссе ====================================
	CreateDynamicObject(982, 1304.06,-1698.00,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1723.61,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1749.24,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1774.84,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1800.46,13.22,0.00,0.00,0.00);
	CreateDynamicObject(982, 1304.06,-1826.04,13.22,0.00,0.00,0.00);
	CreateDynamicObject(983, 1304.06,-1840.46,13.22,0.00,0.00,0.00);
 	//================================ AIR =====================================
	CreateDynamicObject(969, 1961.7924,-2189.6584,12.7000, 0.0000, 0.0000, 180.000);
	CreateDynamicObject(969, 1970.2289,-2189.7229,12.7000, 0.0000, 0.0000, 180.000);
	CreateDynamicObject(5706,135.93359375,1953.40722656,23.30762100,0.00000000,0.00000000,179.99450684); //object(studiobld03_law) (1)
	CreateDynamicObject(3361,130.43261719,1935.47949219,25.07071495,0.00000000,0.00000000,270.00000000); //object(cxref_woodstair) (1)
	CreateDynamicObject(3361,130.43457031,1929.55761719,21.12256813,0.00000000,0.00000000,269.98901367); //object(cxref_woodstair) (2)
	CreateDynamicObject(3361,130.43457031,1927.51074219,19.75853539,0.00000000,0.00000000,269.98901367); //object(cxref_woodstair) (3)
	CreateDynamicObject(8580,131.89939880,1956.01074219,27.35955429,0.00000000,0.00000000,0.00000000); //object(vgssstairs05_lvs) (1)
	CreateDynamicObject(994,119.38395691,1940.31347656,27.12810516,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (1)
	CreateDynamicObject(994,146.13539124,1940.31347656,27.12810516,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
	//======================================== Блок пост =======================
 	CreateDynamicObject(1696,-1334.93273926,487.19998169,10.39754200,355.00000000,0.00000000,180.00000000);//лесена на авианосце
	CreateDynamicObject(3279, -1541.521606, 475.820618, 6.263117, 0.0, 0.0, 0.0);//Вышка 1
	CreateDynamicObject(973, 1892.7526855469, -1031.3897705078, 23.714654922485, 0.000000, 0.000000, 193.26123046875);
	CreateDynamicObject(973, 1883.8662109375, -1033.466796875, 23.714654922485, 0.000000, 0.000000, 193.26049804688);
	CreateDynamicObject(973, 1875.4471435547, -1037.2456054688, 23.714654922485, 0.000000, 0.000000, 215.09533691406);
	CreateDynamicObject(973, 1868.6027832031, -1043.1340332031, 23.668344497681, 0.000000, 0.000000, 227.00024414063);
	CreateDynamicObject(973, 1862.8218994141, -1050.4644775391, 23.668344497681, 0.000000, 0.000000, 236.92443847656);
	CreateDynamicObject(973, 1859.1612548828, -1058.8864746094, 23.668344497681, 0.000000, 0.000000, 256.77001953125);
	CreateDynamicObject(973, 1856.6405029297, -1067.8319091797, 23.668344497681, 0.000000, 0.000000, 250.81201171875);
	CreateDynamicObject(3095, 195.75790405273, 176.58215332031, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 191.64668273926, 175.71965026855, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 197.26713562012, 160.2391204834, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 197.26713562012, 160.2391204834, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2970, 968.55859375, -52.525318145752, 1000.1245727539, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3032, 968.59686279297, -53.524635314941, 1001.4867553711, 0.000000, 89.325012207031, 270.67565917969);
	CreateDynamicObject(3032, 968.59484863281, -52.065414428711, 1001.4867553711, 0.000000, 89.324340820313, 270.67565917969);
	CreateDynamicObject(3032, 968.54077148438, -52.819187164307, 1003.9867553711, 0.000000, 180.63439941406, 270.67565917969);
	CreateDynamicObject(8615, -316.34866333008, 1294.8453369141, 55.389030456543, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3095, 191.99526977539, 160.93226623535, 1001.2734375, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(966, 1577.6838378906, 1836.7041015625, 9.7616519927979, 0.000000, 0.000000, 89.325012207031);
	CreateDynamicObject(966, 1636.9364013672, 1836.494140625, 9.8031454086304, 0.000000, 0.000000, 91.309326171875);
	//===================================== Автошкола ==========================
	CreateDynamicObject(982,-2087.6392, -80.3200, 34.8476,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(982,-2068.4307, -80.3200, 34.8476,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(983,-2055.6001, -83.4800, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2055.6001, -86.6186, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2055.6001, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2061.9956, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2068.4026, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2074.9463, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2081.2559, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2087.6506, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3877,-2094.1704, -80.3000, 33.9298,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1231,-2055.6260, -86.6250, 36.4150,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1231,-2055.6272, -80.3414, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2062.0044, -80.2905, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2068.4126, -80.3000, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2074.9241, -80.2949, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2081.2520, -80.3000, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2087.6609, -80.3000, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1231,-2094.1831, -80.3000, 36.4150,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1597,-2018.3237, -95.7098, 36.6600,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(966,-2070.0000, -129.7914, 34.2000,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(983,-2070.0000, -106.3832, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -112.7689, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -119.1625, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -133.5000, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -139.8923, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -146.2665, 34.8476,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(983,-2070.0000, -147.8664, 34.8476,0.00000000,0.00000000,0.00000000);
	//================================= SFA ====================================
    CreateDynamicObject(5130, -1334.831909, 478.695892, 8.176680, 0.356194, 0.000000, 224.0);//Лестница на авианосце
    CreateDynamicObject(3399, -2038.251953, -110.215775, 35.829094, -1.712389, 0.000000, 90.000000);//Лестница АШ
    CreateDynamicObject(19463,-1467.4259,496.3496,10.7816,0.0000,0.0000,0.0000);
    CreateDynamicObject(19463,-1467.4259,505.9870,10.7816,0.0000,0.0000,0.0000);
    //================================= Zone 51 ================================
    CreateObject(3707,353.669983,1950.344604,24.623753,0.141593,0.000000,180.000000);//Склад
    CreateDynamicObject(3279,384.702789,1892.396484,16.716242,-1.570796,0.000000,180.000000);//вышка
    CreateDynamicObject(3279,350.380798,1807.448975,17.561840,1.748893,0.000000,180.000000);//вышка2
    CreateDynamicObject(3279,333.368652,1795.830444,17.059250,0.552544,0.000000,180.000000);//вышка3
    CreateDynamicObject(11480,289.229370,1822.304443,18.834333,0.570796,0.000000,90.000000);//переезд
    CreateDynamicObject(11480,282.921143,1822.302612,18.834333,0.570796,0.000000,90.000000);//переезд
    CreateDynamicObject(16095,291.7807,1830.3577,16.6481,0.000000,0.000000,270.000000);//будка
    //============================== Медики Интерьер ===========================
	CreateObject(14602,374.27539062,-60.06250000,1080.83801270,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
	CreateObject(14597,364.12292480,-30.97869873,1077.44995117,0.00000000,0.00000000,270.00000000); //object(paperchase07)(1)
	CreateObject(1567,368.96865845,-67.08923340,1075.47729492,0.00000000,0.00000000,358.00000000); //object(gen_wardrobe)(1)
	CreateObject(14602,374.27539062,-60.06250000,1080.83801270,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
	CreateObject(1567,363.54928589,-75.67990112,1075.50280762,0.00000000,0.00000000,0.00000000); //object(gen_wardrobe)(2)
	CreateObject(1703,362.57421875,-69.41406250,1075.47082520,0.00000000,0.00000000,270.00000000); //object(kb_couch02)(1)
	CreateObject(1703,361.37350464,-72.85481262,1075.47082520,0.00000000,0.00000000,180.00000000); //object(kb_couch02)(3)
	CreateObject(1703,361.37304688,-72.85449219,1075.47082520,0.00000000,0.00000000,179.99450684); //object(kb_couch02)(4)
	CreateObject(1703,358.49493408,-71.17904663,1075.47082520,0.00000000,0.00000000,92.00000000); //object(kb_couch02)(5)
	CreateObject(1703,368.20260620,-52.03403091,1075.47082520,0.00000000,0.00000000,90.00000000); //object(kb_couch02)(12)
	CreateObject(1703,368.11425781,-52.12597656,1075.47082520,0.00000000,0.00000000,90.00000000); //object(kb_couch02)(13)
	CreateObject(1703,372.52929688,-50.22558594,1075.47082520,0.00000000,0.00000000,267.99499512); //object(kb_couch02)(14)
	CreateObject(2296,370.59490967,-44.70132446,1075.47729492,0.00000000,0.00000000,0.00000000); //object(tv_unit_1)(1)
	CreateObject(1808,374.59463501,-45.23389053,1075.47729492,0.00000000,0.00000000,324.00000000); //object(cj_watercooler2)(1)
	CreateObject(1997,352.49923706,-41.29287338,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(1)
	CreateObject(1997,357.22293091,-41.29145050,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(3)
	CreateObject(1997,354.88546753,-41.28674698,1075.45776367,0.00000000,0.00000000,180.00000000); //object(hos_trolley)(4)
	CreateObject(14532,359.51007080,-36.37860870,1076.44775391,0.00000000,0.00000000,179.99450684); //object(tv_stand_driv)(1)
	CreateObject(14532,357.16040039,-36.39913940,1076.44775391,0.00000000,0.00000000,181.99499512); //object(tv_stand_driv)(2)
	CreateObject(14532,354.77044678,-36.38866806,1076.44042969,0.00000000,0.00000000,181.99952698); //object(tv_stand_driv)(4)
	CreateObject(1723,362.18386841,-25.19425774,1075.45776367,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(1)
	CreateObject(2166,363.38323975,-20.56666946,1075.46508789,0.00000000,0.00000000,178.00000000); //object(med_office_desk_2)(1)
	CreateObject(2164,363.16012573,-17.83714485,1075.47387695,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5)(2)
	CreateObject(3383,355.20410156,-30.70117188,1075.46508789,0.00000000,0.00000000,0.00000000); //object(a51_labtable1_)(1)
	CreateObject(14532,354.01953125,-33.94433594,1076.44042969,0.00000000,0.00000000,0.00000000); //object(tv_stand_driv)(5)
	CreateObject(2164,354.67745972,-27.21059227,1075.45776367,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5)(3)
	CreateObject(1703,369.51205444,-48.82185364,1075.47729492,0.00000000,0.00000000,359.99499512); //object(kb_couch02)(14)
	CreateObject(1822,369.84472656,-51.59863281,1075.47082520,0.00000000,0.00000000,0.00000000); //object(coffee_swank_6) (1)
	CreateObject(3383,372.06622314,-38.51749039,1075.45776367,0.00000000,0.00000000,0.00000000); //object(a51_labtable1_)(1)
	CreateObject(14532,352.43011475,-36.37911987,1076.44042969,0.00000000,0.00000000,181.98950195); //object(tv_stand_driv)(3)
	CreateObject(14532,377.26409912,-38.52306747,1076.44042969,0.00000000,0.00000000,92.00000000); //object(tv_stand_driv)(5)
	CreateObject(2000,377.30770874,-39.17716217,1075.45776367,0.00000000,0.00000000,272.00000000); //object(filing_cab_nu) (1)
	CreateObject(2000,377.18554688,-37.85644531,1075.45776367,0.00000000,0.00000000,271.99951172); //object(filing_cab_nu) (2)
	CreateObject(2154,372.16540527,-42.10847473,1075.45776367,0.00000000,0.00000000,180.00000000); //object(cj_k5_low_unit1) (1)
	CreateObject(2151,370.86386108,-42.11722946,1075.45776367,0.00000000,0.00000000,180.00000000); //object(cj_k5_low_unit2) (1)
	CreateObject(2151,373.49874878,-42.09830093,1075.45776367,0.00000000,0.00000000,179.99450684); //object(cj_k5_low_unit2) (2)
	CreateObject(2161,377.66760254,-36.77020645,1075.45776367,0.00000000,0.00000000,270.00000000); //object(med_office_unit_4) (1)
	CreateObject(2164,377.62908936,-39.90225220,1075.45776367,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (1)
	CreateObject(2604,371.37481689,-35.07409668,1076.25463867,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
	CreateObject(2606,363.51773071,-17.83714485,1077.54626465,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (1)
	CreateObject(1997,369.08117676,-32.60949707,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,370.99313354,-32.54833221,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,373.33929443,-32.53343582,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(1997,375.70501709,-32.54546356,1075.45776367,0.00000000,0.00000000,179.99450684); //object(hos_trolley)(1)
	CreateObject(14532,368.95733643,-27.61697006,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(14532,370.87658691,-27.58014870,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(14532,373.38571167,-27.62643242,1076.44042969,0.00000000,0.00000000,181.99951172); //object(tv_stand_driv)(4)
	CreateObject(2008,357.29519653,-59.83173370,1075.47729492,0.00000000,0.00000000,266.00000000); //object(officedesk1) (1)
	CreateObject(2356,356.32742310,-60.38174820,1075.47729492,0.00000000,0.00000000,268.00000000); //object(police_off_chair) (1)
	CreateObject(2774,365.90295410,-44.43481445,1088.54565430,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (1)
	CreateObject(2774,362.69305420,-44.43302917,1088.45776367,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (2)
	CreateObject(18066,364.27432251,-43.94282150,1078.27539062,0.00000000,0.00000000,0.25000000); //object(posterv) (1)
	//================================== News ==================================
	CreateObject(15031,998.90002441,1003.70001221,1998.79998779,0.00000000,0.00000000,0.25000000); //convertffs(0)
    CreateObject(2009,997.09997559,1004.29998779,1998.79998779,0.00000000,0.00000000,180.00000000); //convertffs(1)
    CreateObject(1714,996.00000000,1004.40002441,1998.90002441,0.00000000,0.00000000,45.74642944); //convertffs(2)
    CreateObject(14391,1004.69921875,1002.69921875,1999.79998779,0.00000000,0.00000000,179.99450684); //convertffs(8)
    CreateObject(1567,997.84997559,1000.59997559,1998.79998779,0.00000000,0.00000000,270.00000000); //convertffs(10)
    CreateObject(1671,1002.90002441,1004.29998779,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(15)
    CreateObject(1671,1002.90002441,1002.59997559,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(17)
    CreateObject(1671,1002.90002441,1000.90002441,1999.29998779,0.00000000,0.00000000,89.74731445); //convertffs(18)
    CreateObject(18098,1005.90002441,1001.70001221,2000.70001221,0.00000000,0.00000000,90.00000000); //object(barber_blinds03) (1)
    CreateObject(18072,1005.79998779,1008.70001221,2000.50000000,0.00000000,0.00000000,270.00000000); //object(gap_window) (2)
    CreateObject(1671,998.20001221,1003.70001221,1999.29998779,0.00000000,0.00000000,269.99731445); //convertffs(17)
    CreateObject(1671,998.20001221,1004.50000000,1999.29998779,0.00000000,0.00000000,269.99450684); //convertffs(17)
    CreateObject(1726,998.09997559,1002.09997559,1998.79998779,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
    CreateObject(2161,998.50000000,1002.79998779,1998.79998779,0.00000000,0.00000000,179.99993896); //object(med_office_unit_4) (1)
    CreateObject(2167,999.40002441,1002.79998779,1998.79998779,0.00000000,0.00000000,179.25000000); //object(med_office_unit_7) (1)
    CreateObject(14812,994.59997559,1004.90002441,2001.00000000,0.00000000,359.50000000,89.74993896); //object(studiohall_frames) (1)
    CreateObject(14392,996.90002441,1002.90002441,2000.00000000,0.00000000,0.00000000,0.00000000); //object(dr_gsnew08) (1)
    CreateObject(2346,1002.40002441,998.50000000,1998.79998779,0.00000000,0.00000000,179.25000000); //object(cj_hifi_table) (1)
    CreateObject(2346,1002.40002441,998.50000000,1999.20001221,0.00000000,0.00000000,179.24743652); //object(cj_hifi_table) (3)
	//========================== Новое =================================
	CreateDynamicObject(19129,481.85,-16.31,999.68,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.66,-16.76,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.52,-17.41,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.55,-18.19,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.58,-18.99,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.56,-19.83,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.43,-20.81,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.49,-21.59,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.50,-22.41,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.58,-23.20,1002.53,0.00,0.00,0.00);
	CreateDynamicObject(19159,500.53,-23.98,1002.53,0.00,0.00,0.00);
	//========================== Paint Ball ============================
	CreateDynamicObject(5170,2552.87597656,2766.25659180,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (1)
	CreateDynamicObject(5170,2551.80981445,2744.61572266,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (2)
	CreateDynamicObject(5170,2551.49316406,2794.50073242,13.66572475,0.00000000,0.00000000,0.00000000); //object(imnrmpy2_las2) (3)
	//================== Гардеробы для банд(В разработке) ======================
	CreateDynamicObject(2025,-71.42,1365.68,1079.21,0.00,0.00,50.00); // шкаф
	//==========================================================================
	CreateDynamicObject(1978,2230.8989,1619.5001,1006.2346,0.00,0.00,90.00);
	CreateDynamicObject(1978,2242.4980,1619.5001,1006.2346,0.00,0.00,90.00);
    LicGate = CreateObject(968,-2070.0000, -129.7411, 35.0000,0.00000000,90.00000000,90.00000000);
    LgateGate = CreateObject(980,1590.1759, -1638.1416, 15.0555,0.0000, 0.0000, 0.0000);
    LspdsGate = CreateObject(968,1544.6929, -1630.8207, 13.1704, 0.0000, 90.0000, 90.0000);
	Braban[0] = CreateObject(1979,2229.5522,1619.2888,1006.1536,0.00,0.00,0.00);
	Braban[1] = CreateObject(1979,2241.1545,1619.2888,1006.1536,0.00,0.00,0.00);
	//==============================Ворота Домов========================
	Gate688 = CreateObject(984,1240.0760, -740.8105, 95.1933,-4.0000, 0.0000, -63.3400);
	return true;
}
stock CreateVehicles()
{
	//Не перемещать - поезд
    train[0] = AddStaticVehicle(538,1762.0215,-1953.7897,14.8756,89.9275,0,0);//Если переместишь поезд - не будет работать проверка на пассажиров
    //================================ HITMANS =================================
    hitmancar[0] = AddStaticVehicle(487,-2817.7246,-1494.2137,139.4718,269.9678,1,4); // Hitman Maverick
	hitmancar[1] = AddStaticVehicle(461,-2803.1987,-1519.4451,138.8487,273.4216,1,1); // Hitman Bike 1
	hitmancar[2] = AddStaticVehicle(461,-2803.0305,-1522.1602,138.8719,271.5807,1,1); // Hitman Bike 2
	hitmancar[3] = AddStaticVehicle(461,-2802.8860,-1524.4847,138.8712,272.3142,1,1); // Hitman Bike 3
	hitmancar[4] = AddStaticVehicle(558,-2812.6943,-1534.7478,138.9584,178.7099,1,1); // Hitman Uranus 3
	hitmancar[5] = AddStaticVehicle(558,-2816.3328,-1534.8761,138.9111,184.9042,1,1); // Hitman Uranus 2
	hitmancar[6] = AddStaticVehicle(558,-2819.6382,-1534.9377,138.9171,182.3693,1,1); // Hitman Uranus 1
	hitmancar[7] = AddStaticVehicle(554,-2814.2917,-1511.8260,139.3808,271.7348,1,4); // Hitman Yousemite
	//============================== MEDICS SF =================================
	medicssf[0] = AddStaticVehicleEx(416,-2665.4248,611.2086,14.6056,179.5688,1,3,900); // Ambulance 0
	medicssf[1] = AddStaticVehicleEx(416,-2661.2083,611.0942,14.6027,180.4825,1,3,900); // Ambulance 1
	medicssf[2] = AddStaticVehicleEx(416,-2669.6826,611.1447,14.5899,180.8062,1,3,900); // Ambulance 2
	medicssf[3] = AddStaticVehicleEx(416,-2617.8303,627.9868,14.6024,89.7837,1,3,900); // Ambulance 3
	medicssf[4] = AddStaticVehicleEx(416,-2617.8972,621.3510,14.6023,89.8205,1,3,900); // Ambulance 4
	medicssf[5] = AddStaticVehicleEx(416,-2706.2029,590.4933,14.6021,270.0135,1,3,900); // Ambulance 5
	medicssf[6] = AddStaticVehicleEx(416,-2706.2490,595.5879,14.6025,270.1201,1,3,900); // Ambulance 6
	medicssf[7] = AddStaticVehicleEx(487,-2703.4836,622.4868,14.6662,176.4144,1,3,900); // Medic Maverick 0
	//================================ MEDICS LS ===============================
	medicsls[0] = AddStaticVehicle(416,1178.5431,-1338.7671,14.0167,270.0624,1,228); // Ambulance 0
	medicsls[1] = AddStaticVehicle(416,1178.0116,-1308.9192,13.9939,268.2672,1,228); // Ambulance 1
	medicsls[2] = AddStaticVehicle(487,1181.3508,-1361.2964,14.3443,269.2090,1,228); // Ambulance 2
	medicsls[3] = AddStaticVehicle(416,1145.6483,-1311.8895,13.8003,91.8553,1,228); // Ambulance 3
	medicsls[4] = AddStaticVehicle(416,1145.3275,-1306.1224,13.8045,88.2659,1,228); // Ambulance 4
	medicsls[5] = AddStaticVehicle(416,1145.8798,-1302.2570,13.8015,88.1521,1,228); // Ambulance 5
	//================================ MEDICS LV ===============================
	medicslv[0] = AddStaticVehicle(416,1620.4630,1850.6283,10.9697,180.2412,1,3); // Ambulance 0
	medicslv[1] = AddStaticVehicle(416,1616.1317,1850.6100,11.0046,180.2408,1,3); // Ambulance 1
	medicslv[2] = AddStaticVehicle(416,1611.9624,1850.5928,11.0261,180.2408,1,3); // Ambulance 2
	medicslv[3] = AddStaticVehicle(416,1607.6329,1850.5745,11.0442,180.2408,1,3); // Ambulance 3
	medicslv[4] = AddStaticVehicle(416,1603.5677,1850.5577,10.9890,180.2408,1,3); // Ambulance 4
	medicslv[5] = AddStaticVehicle(416,1599.3500,1850.5466,10.9629,180.2446,1,3); // Ambulance 5
	medicslv[6] = AddStaticVehicle(416,1595.1877,1850.5289,10.9924,180.2446,1,3); // Ambulance 6
	medicslv[7] = AddStaticVehicle(416,1591.0562,1850.5118,11.0216,180.2446,1,3); // Ambulance 7
	//================================ SFPD ====================================
	sfpdcar[0] = AddStaticVehicleEx(427,-1638.7850,653.7558,-5.1094,271.5658,1,79,900); // SFPD Enforcer 0
	sfpdcar[1] = AddStaticVehicleEx(427,-1638.8691,657.6266,-5.1104,271.5658,1,79,900); // SFPD Enforcer 1
	sfpdcar[2] = AddStaticVehicleEx(427,-1638.9778,661.6664,-5.1103,271.5658,1,79,900); // SFPD Enforcer 2
 	sfpdcar[3] = AddStaticVehicleEx(427,-1639.0596,666.1422,-5.1103,271.5658,1,79,900); // SFPD Enforcer 3
 	sfpdcar[4] = AddStaticVehicleEx(427,-1639.1912,670.1107,-5.1098,271.5658,1,79,900); // SFPD Enforcer 4
 	sfpdcar[5] = AddStaticVehicleEx(597,-1608.5095,748.6892,-5.4740,180.7957,1,79,900); // SFPD Cruiser 0
	sfpdcar[6] = AddStaticVehicleEx(597,-1604.3743,748.7833,-5.4732,180.8979,1,79,900); // SFPD Cruiser 1
	sfpdcar[7] = AddStaticVehicleEx(597,-1600.1812,748.8475,-5.4732,180.6038,1,79,900); // SFPD Cruiser 2
	sfpdcar[9] = AddStaticVehicleEx(597,-1579.5892,749.2114,-5.4732,180.1104,1,79,900); // SFPD Cruiser 3
	sfpdcar[10] = AddStaticVehicleEx(597,-1591.9786,748.9724,-5.4733,180.5795,1,79,900); // SFPD Cruiser 4
	sfpdcar[11] = AddStaticVehicleEx(597,-1583.8110,749.2034,-5.4739,179.4646,1,79,900); // SFPD Cruiser 5
	sfpdcar[12] = AddStaticVehicleEx(597,-1596.0133,748.9694,-5.4740,179.9943,1,79,900); // SFPD Cruiser 6
	sfpdcar[13] = AddStaticVehicleEx(597,-1587.7101,749.0371,-5.4737,180.2399,1,79,900); // SFPD Cruiser 7
	sfpdcar[14] = AddStaticVehicleEx(597,-1574.1715,738.8038,-5.4727,90.8081,1,79,900); // SFPD Cruiser 8
	sfpdcar[15] = AddStaticVehicleEx(597,-1574.2087,714.2832,-5.4741,90.8081,1,79,900); // SFPD Cruiser 9
	sfpdcar[16] = AddStaticVehicleEx(597,-1574.2324,718.6381,-5.4733,90.8081,1,79,900); // SFPD Cruiser 10
	sfpdcar[17] = AddStaticVehicleEx(597,-1573.9800,734.5951,-5.4732,90.8081,1,79,900); // SFPD Cruiser 11
	sfpdcar[18] = AddStaticVehicleEx(597,-1573.7732,730.6323,-5.4739,90.8081,1,79,900); // SFPD Cruiser 12
	sfpdcar[19] = AddStaticVehicleEx(497,-1680.9225,705.6724,30.7915,95.5060,0,162,900); // SFPD Helicopter 0
	sfpdcar[20] = AddStaticVehicle(523,-1600.0845,695.2717,-5.6700,180.5546,0,1); // SFPD Bike 0
	sfpdcar[21] = AddStaticVehicle(523,-1603.5908,695.2377,-5.6700,180.5546,0,1); // SFPD Bike 1
	sfpdcar[22] = AddStaticVehicle(523,-1608.4457,695.1907,-5.6700,180.5546,0,1); // SFPD Bike 2
	sfpdcar[23] = AddStaticVehicle(523,-1611.6722,695.1595,-5.6701,180.5546,0,1); // SFPD Bike 3
	sfpdcar[24] = AddStaticVehicle(523,-1616.8567,692.3514,-5.6723,177.3526,0,1); // SFPD Bike 4
	sfpdcar[25] = AddStaticVehicle(523,-1620.4467,692.5175,-5.6723,177.3526,0,1); // SFPD Bike 5
	sfpdcar[26] = AddStaticVehicle(523,-1624.2755,692.6945,-5.6723,177.3526,0,1); // SFPD Bike 6
	sfpdcar[27] = AddStaticVehicle(523,-1629.6143,692.9413,-5.6722,177.3526,0,1); // SFPD Bike 7
	sfpdcar[28] = AddStaticVehicle(523,-1632.7988,693.0886,-5.6722,177.3526,0,1); // SFPD Bike 8
	sfpdcar[29] = AddStaticVehicleEx(599,-1612.3048,733.3722,-5.4734,1.4171,1,79,900); // SFPD Cruiser 13
	sfpdcar[30] = AddStaticVehicleEx(599,-1616.7042,733.8506,-5.4743,359.9381,1,79,900); // SFPD Cruiser 14
	sfpdcar[31] = AddStaticVehicleEx(528,-1574.0302,705.9220,-5.4738,90.3687,1,79,900); // SFPD Cruiser 15
	sfpdcar[32] = AddStaticVehicleEx(528,-1574.2903,710.2787,-5.4730,90.3956,1,79,900); // SFPD Cruiser 16
	sfpdcar[33] = AddStaticVehicleEx(601,-1638.3539,686.1087,-5.4729,270.0131,1,79,900); // SFPD Cruiser 17
	sfpdcar[34] = AddStaticVehicleEx(601,-1638.1102,682.0833,-5.4737,269.1310,1,79,900); // SFPD Cruiser 18
	//============================== RUSSIAN MAFIA =============================
	ruscar[0] = AddStaticVehicleEx(579,984.1832,1720.4199,8.5910,90.3216,0,0,900); // RM HUNTLEY 0
	ruscar[1] = AddStaticVehicleEx(579,984.1126,1723.8441,8.5843,91.2075,0,0,900); // RM HUNTLEY 1
	ruscar[2] = AddStaticVehicleEx(579,984.1122,1727.3198,8.5860,91.1532,0,0,900); // RM HUNTLEY 2
	ruscar[3] = AddStaticVehicleEx(579,983.9010,1734.5618,8.5911,90.6430,0,0,900); // RM HUNTLEY 3
	ruscar[4] = AddStaticVehicleEx(579,983.8235,1737.5437,8.5824,91.0029,0,0,900); // RM HUNTLEY 4
	ruscar[5] = AddStaticVehicleEx(579,983.6899,1740.7048,8.5631,92.9132,0,0,900); // RM HUNTLEY 5
	ruscar[6] = AddStaticVehicleEx(579,983.7421,1744.0139,8.5786,91.0281,0,0,900); // RM HUNTLEY 6
	ruscar[7] = AddStaticVehicleEx(580,966.0602,1706.5366,8.5400,270.8105,0,0,900); // RM STAFFORD 0
	ruscar[8] = AddStaticVehicleEx(580,959.2162,1706.4982,8.5321,270.0911,0,0,900); // RM STAFFORD 1
	ruscar[9] = AddStaticVehicleEx(579,983.9714,1730.7939,8.5866,90.0946,0,0,900); // RM HUNTLEY 7
	ruscar[10] = AddStaticVehicleEx(487,957.9562,1754.1691,8.4446,248.4217,0,0,900); // RM Helicopter 0
	ruscar[11] = AddStaticVehicleEx(409,949.6057,1715.6672,8.5426,181.0793,0,0,900); // RM Limo 0
	//================================== LCN ===================================
	lcncar[0] =	AddStaticVehicleEx(445,1413.5277,787.9661,10.6953,270.0358,0,0,900); // LCN Admiral 0
	lcncar[1] =	AddStaticVehicleEx(445,1413.5298,784.6968,10.6952,270.0358,0,0,900); // LCN Admiral 1
	lcncar[2] =	AddStaticVehicleEx(445,1413.5317,781.6289,10.6951,270.0358,0,0,900); // LCN Admiral 2
	lcncar[3] =	AddStaticVehicleEx(445,1413.5338,778.3932,10.6951,270.0358,0,0,900); // LCN Admiral 3
	lcncar[4] =	AddStaticVehicleEx(445,1413.5360,775.1172,10.6950,270.0358,0,0,900); // LCN Admiral 4
	lcncar[5] =	AddStaticVehicleEx(445,1413.5380,771.8521,10.6949,270.0358,0,0,900); // LCN Admiral 5
	lcncar[6] =	AddStaticVehicleEx(445,1413.5419,765.7633,10.9611,270.0358,0,0,900); // LCN Admiral 6
	lcncar[7] =	AddStaticVehicleEx(445,1413.5499,759.3215,10.6498,270.0358,0,0,900); // LCN Admiral 7
	lcncar[8] =	AddStaticVehicleEx(445,1413.5537,753.0690,10.6495,270.0358,0,0,900); // LCN Admiral 8
	lcncar[9] =	AddStaticVehicleEx(445,1413.5576,746.6254,10.6493,270.0358,0,0,900); // LCN Admiral 9
	lcncar[10] = AddStaticVehicleEx(487,1414.5128,730.6333,10.9784,267.1382,0,0,900); // LCN Helicopter 0
	lcncar[11] = AddStaticVehicleEx(409,1429.0035,787.3469,10.6200,179.3787,0,0,900); // LCN Limo 0
	//=================================== SF NEWS ==============================
	cnncar[0] = AddStaticVehicle(582,-2031.1930,459.3309,35.2332,1.0561,1,16); // News Van 0
	cnncar[1] = AddStaticVehicle(582,-2022.5162,459.3569,35.2286,359.1067,1,16); // News Van 1
	cnncar[2] = AddStaticVehicle(582,-2056.8635,469.9971,35.2334,270.9870,1,16); // News Van 2
	cnncar[3] = AddStaticVehicle(582,-2052.0874,478.6587,35.2299,269.6934,1,16); // News Van 3
	cnncar[4] = AddStaticVehicle(582,-2051.2991,487.4715,35.2243,269.5258,1,16); // News Van 4
	cnnmav = AddStaticVehicle(488,-2060.9878,442.0086,139.9191,270.0095,11,16); // CNN maverick
	//=================================== TAXI =================================
	taxicar[0] = AddStaticVehicle(438,2805.6475,1325.9688,10.7589,270.1906,6,6); // TAXI LV 0
	taxicar[1] = AddStaticVehicle(438,2805.6365,1329.1567,10.7589,270.1906,6,6); // TAXI LV 1
	taxicar[2] = AddStaticVehicle(438,2805.6248,1332.6895,10.7589,270.1906,6,6); // TAXI LV 2
	taxicar[3] = AddStaticVehicle(438,2805.6140,1335.8807,10.7589,270.1906,6,6); // TAXI LV 3
	taxicar[4] = AddStaticVehicle(438,2805.6028,1339.1978,10.7589,270.1906,6,6); // TAXI LV 4
	taxicar[5] = AddStaticVehicle(438,2805.5916,1342.6688,10.7589,270.1906,6,6); // TAXI LV 5
	taxicar[6] = AddStaticVehicle(438,2805.5808,1345.8571,10.7588,270.1906,6,6); // TAXI LV 6
	taxicar[7] = AddStaticVehicle(438,2805.5686,1349.4170,10.7588,270.1906,6,6); // TAXI LV 7
	taxicar[8] = AddStaticVehicle(438,2805.5591,1352.3472,10.7588,270.1906,6,6); // TAXI LV 8
	taxicar[9] = AddStaticVehicle(438,2805.5486,1355.3315,10.7588,270.1906,6,6); // TAXI LV 9
	taxicar[10] = AddStaticVehicle(438,2805.5378,1358.5138,10.7588,270.1906,6,6); // TAXI LV 10
	taxicar[11] = AddStaticVehicle(438,2805.5266,1361.8738,10.7588,270.1906,6,6); // TAXI LV 11
	taxicar[12] = AddStaticVehicle(438,2805.5168,1364.7805,10.7587,270.1906,6,6); // TAXI LV 12
	taxicar[13] = AddStaticVehicle(438,2805.5056,1368.1226,10.7587,270.1906,6,6); // TAXI LV 13
	taxicar[14] = AddStaticVehicle(438,2839.3208,1374.4399,10.7664,178.7267,6,6); // TAXI LV 14
	taxicar[15] = AddStaticVehicle(438,2842.7415,1374.3636,10.7837,178.7269,6,6); // TAXI LV 15
	taxicar[16] = AddStaticVehicle(438,2846.3364,1374.2836,10.8018,178.7269,6,6); // TAXI LV 16
	taxicar[17] = AddStaticVehicle(438,2849.2231,1374.2194,10.8163,178.7269,6,6); // TAXI LV 17
	taxicar[18] = AddStaticVehicle(420,1062.0615,-1775.7018,13.1535,269.9980,6,6); // TAXI LS 0
	taxicar[19] = AddStaticVehicle(420,1062.0488,-1772.5802,13.1710,269.9309,6,6); // TAXI LS 1
	taxicar[20] = AddStaticVehicle(420,1062.0527,-1769.4326,13.1771,269.9322,6,6); // TAXI LS 2
	taxicar[21] = AddStaticVehicle(420,1062.0631,-1766.5918,13.1792,269.9274,6,6); // TAXI LS 3
	taxicar[22] = AddStaticVehicle(420,1062.0592,-1763.6497,13.2056,269.9315,6,6); // TAXI LS 4
	taxicar[23] = AddStaticVehicle(420,1062.0620,-1760.6293,13.2142,269.9259,6,6); // TAXI LS 5
	taxicar[24] = AddStaticVehicle(420,1062.0664,-1757.6024,13.2499,269.9300,6,6); // TAXI LS 6
	taxicar[25] = AddStaticVehicle(420,1062.0704,-1754.6869,13.2409,269.9322,6,6); // TAXI LS 7
	taxicar[26] = AddStaticVehicle(420,1062.0726,-1751.6990,13.2605,269.9281,6,6); // TAXI LS 8
	taxicar[27] = AddStaticVehicle(420,1062.0757,-1748.7107,13.2629,269.9274,6,6); // TAXI LS 9
	taxicar[28] = AddStaticVehicle(420,1062.0771,-1745.7866,13.2691,269.9208,6,6); // TAXI LS 10
	taxicar[29] = AddStaticVehicle(420,-1976.7260,175.3114,27.4937,56.8506,6,1); // TAXI SF 0
	taxicar[30] = AddStaticVehicle(420,-1976.9633,179.6026,27.4687,58.8356,6,1); // TAXI SF 1
	taxicar[31] = AddStaticVehicle(420,-1976.7339,186.4631,27.4957,62.7047,6,1); // TAXI SF 2
	taxicar[32] = AddStaticVehicle(420,-1976.7123,191.9683,27.4807,66.5103,6,1); // TAXI SF 3
	taxicar[33] = AddStaticVehicle(420,-1976.1292,196.7620,27.3541,66.8474,6,1); // TAXI SF 4
	taxicar[34] = AddStaticVehicle(420,-1975.7725,203.2701,27.1523,64.5844,6,1); // TAXI SF 5
	taxicar[35] = AddStaticVehicle(420,-1984.5652,215.0136,27.4954,144.9371,6,1); // TAXI SF 6
	taxicar[36] = AddStaticVehicle(420,-1976.7355,183.0014,27.4672,60.1627,6,1); // TAXI SF 7
	taxicar[37] = AddStaticVehicle(420,-1990.6533,215.1601,27.4778,143.5870,6,1); // TAXI SF 8
	//============================== Rent SF ===================================
	rentcarsf[0] = AddStaticVehicle(526,-1992.9874,246.4800,34.9385,261.6614,56,29); // Rent Car SF 0
	rentcarsf[1] = AddStaticVehicle(401,-1993.3531,243.0621,34.9711,263.2895,74,74); // Rent Car SF 1
	rentcarsf[2] = AddStaticVehicle(585,-1992.4501,250.2246,34.7885,261.2562,37,37); // Rent Car SF 2
	rentcarsf[3] = AddStaticVehicle(551,-1991.7334,253.8855,35.0055,260.6862,72,1); // Rent Car SF 3
	rentcarsf[4] = AddStaticVehicle(546,-1991.4490,257.6257,34.9785,260.4451,2,62); // Rent Car SF 4
	rentcarsf[5] = AddStaticVehicle(540,-1991.1312,261.4296,35.0981,260.8096,62,62); // Rent Car SF 5
	rentcarsf[6] = AddStaticVehicle(516,-1991.1089,264.8615,35.0447,264.0082,9,1); // Rent Car SF 6
	rentcarsf[7] = AddStaticVehicle(410,-1991.2776,268.6611,34.8407,265.4250,10,1); // Rent Car SF 7
	rentcarsf[8] = AddStaticVehicle(436,-1990.7087,272.2687,34.9584,265.5690,119,45); // Rent Car SF 8
	//Лодки
	rentboat[0] = AddStaticVehicle(472,814.5801,-2307.7527,0.3642,93.0334,1,1); // Rent Car SF 0
	rentboat[1] = AddStaticVehicle(472,799.2812,-2307.6760,-0.1320,92.0055,1,1); // Rent Car SF 1
	rentboat[2] = AddStaticVehicle(473,815.4140,-2316.6887,-0.0089,88.6187,1,1); // Rent Car SF 2
	rentboat[3] = AddStaticVehicle(473,800.4627,-2317.5029,-0.4210,86.3494,1,1); // Rent Car SF 3
	rentboat[4] = AddStaticVehicle(493,802.9565,-2336.0476,-0.3091,89.8435,1,1); // Rent Car SF 4
	rentboat[5] = AddStaticVehicle(493,802.9095,-2347.3369,-0.3895,90.4972,1,1); // Rent Car SF 5
	rentboat[6] = AddStaticVehicle(595,799.7178,-2364.8037,0.4477,89.9293,1,1); // Rent Car SF 6
	rentboat[7] = AddStaticVehicle(595,798.3921,-2375.1499,-0.0587,89.5757,1,1); // Rent Car SF 7
	rentboat[8] = AddStaticVehicle(484,811.0410,-2391.7175,-0.0795,89.8449,1,1); // Rent Car SF 8
	rentboat[9] = AddStaticVehicle(484,809.8072,-2403.7637,0.3596,93.9296,1,1); // Rent Car SF 0
	rentboat[10] = AddStaticVehicle(453,868.6767,-2305.1304,-0.2264,266.4784,1,1); // Rent Car SF 1
	rentboat[11] = AddStaticVehicle(453,869.2636,-2316.6045,-0.3719,268.5237,1,1); // Rent Car SF 2
	rentboat[12] = AddStaticVehicle(452,868.0179,-2334.9998,-0.6425,269.4924,1,1); // Rent Car SF 3
	rentboat[13] = AddStaticVehicle(452,868.5554,-2346.0955,-0.4185,271.4002,1,1); // Rent Car SF 4
	rentboat[14] = AddStaticVehicle(446,868.5832,-2363.1226,-0.5433,267.6144,1,1); // Rent Car SF 5
	rentboat[15] = AddStaticVehicle(446,866.8442,-2374.9758,-0.7358,272.7250,1,1); // Rent Car SF 6
	rentboat[16] = AddStaticVehicle(454,865.9541,-2390.8325,-0.0039,273.4373,1,1); // Rent Car SF 7
	rentboat[17] = AddStaticVehicle(454,865.9109,-2404.3318,-0.0346,273.1654,1,1); // Rent Car SF 8
	//самолёты/верты
	rentplane[0] = AddStaticVehicle(511,-1360.9113,-493.7377,15.5468,204.8319,1,1); // Rent Car SF 4
	rentplane[1] = AddStaticVehicle(519,-1439.3555,-525.8384,15.0929,204.3239,1,1); // Rent Car SF 5
	rentplane[2] = AddStaticVehicle(592,-1658.2169,-163.8615,15.3436,316.1231,1,1); // Rent Car SF 6
	rentplane[3] = AddStaticVehicle(469,-1187.2225,27.2409,14.1550,47.2531,1,1); // Rent Car SF 7
	rentplane[4] = AddStaticVehicle(487,-1225.0142,-9.3613,14.3231,43.9023,1,1); // Rent Car SF 8
	//============================= Rent LS ====================================
	rentcarls[0] = AddStaticVehicle(401,525.5535,-1283.5392,17.0309,249.2930,-1,-1); // Rent Car LS 0
	rentcarls[1] = AddStaticVehicle(526,529.7659,-1280.2317,16.9532,245.8029,-1,-1); // Rent Car LS 1
	rentcarls[2] = AddStaticVehicle(585,534.1425,-1277.2675,16.8415,246.4638,-1,-1); // Rent Car LS 2
	rentcarls[3] = AddStaticVehicle(551,538.4374,-1274.0146,17.0553,248.1329,-1,-1); // Rent Car LS 3
	rentcarls[4] = AddStaticVehicle(546,542.0103,-1270.6676,16.8926,244.0262,-1,-1); // Rent Car LS 4
	rentcarls[5] = AddStaticVehicle(540,546.1081,-1267.5892,17.1557,244.3047,-1,-1); // Rent Car LS 5
	rentcarls[6] = AddStaticVehicle(516,567.4392,-1288.4241,17.1140,50.6030,-1,-1); // Rent Car LS 6
	rentcarls[7] = AddStaticVehicle(410,566.5842,-1283.0811,16.9026,57.9391,-1,-1); // Rent Car LS 7
	rentcarls[8] = AddStaticVehicle(436,565.1833,-1277.9972,17.0457,60.2207,-1,-1); // Rent Car LS 8
	rentcarls[9] = AddStaticVehicle(452,719.01116943359,-1704.5384521484,0,182,1,1); // Rent Car LS 8
	rentcarls[10] = AddStaticVehicle(452,719.07446289063,-1691.9649658203,0,181.99951171875,1,1); // Rent Car LS 0
	//============================= Rent LV ====================================
	rentcarlv[0] = AddStaticVehicle(401,2148.7632,1398.2522,10.5919,179.3318,-1,-1); // Rent Car LV 0
	rentcarlv[1] = AddStaticVehicle(526,2142.2549,1398.5380,10.5895,180.1983,-1,-1); // Rent Car LV 1
	rentcarlv[2] = AddStaticVehicle(585,2136.0012,1398.4728,10.4594,179.7632,-1,-1); // Rent Car LV 2
	rentcarlv[3] = AddStaticVehicle(551,2129.5227,1398.3572,10.6811,179.9108,-1,-1); // Rent Car LV 3
	rentcarlv[4] = AddStaticVehicle(546,2123.1968,1398.0679,10.5173,180.2094,-1,-1); // Rent Car LV 4
	rentcarlv[5] = AddStaticVehicle(540,2116.7009,1398.6531,10.7517,180.8054,-1,-1); // Rent Car LV 5
	rentcarlv[6] = AddStaticVehicle(516,2110.3887,1398.8379,10.7088,178.9539,-1,-1); // Rent Car LV 6
	rentcarlv[7] = AddStaticVehicle(436,2103.8853,1399.1855,10.6324,180.4412,-1,-1); // Rent Car LV 7
	rentcarlv[8] = AddStaticVehicle(410,2097.7957,1398.6720,10.4728,180.8700,-1,-1); // Rent Car LV 8
	rentcarlv[9] = AddStaticVehicle(410,2148.6797,1408.0872,10.5066,0.9862,-1,-1); // Rent Car LV 9
	rentcarlv[10] = AddStaticVehicle(516,2142.3816,1408.8521,10.6997,0.1314,-1,-1); // Rent Car LV 10
	rentcarlv[11] = AddStaticVehicle(436,2135.9126,1408.2151,10.6270,0.4270,-1,-1); // Rent Car LV 11
	rentcarlv[12] = AddStaticVehicle(540,2129.6021,1408.2108,10.7522,0.6938,-1,-1); // Rent Car LV 12
	rentcarlv[13] = AddStaticVehicle(546,2123.1118,1408.6428,10.5633,0.3106,-1,-1); // Rent Car LV 13
	rentcarlv[14] = AddStaticVehicle(551,2116.7241,1408.6730,10.6830,359.9039,-1,-1); // Rent Car LV 14
	rentcarlv[15] = AddStaticVehicle(585,2110.1846,1407.9718,10.4684,359.9608,-1,-1); // Rent Car LV 15
	rentcarlv[16] = AddStaticVehicle(526,2104.1704,1408.4935,10.5844,0.1492,-1,-1); // Rent Car LV 16
	rentcarlv[17] = AddStaticVehicle(401,2097.4080,1408.4969,10.5998,0.4172,-1,-1); // Rent Car LV 17
	rentcarlv[18] = AddStaticVehicle(505,1683.2926,2243.8496,10.9637,0.6157,-1,-1); // Rent Car LV 8
	rentcarlv[19] = AddStaticVehicle(533,1687.6250,2243.9385,10.5294,359.3489,-1,-1); // Rent Car LV 9
	rentcarlv[20] = AddStaticVehicle(540,1691.6832,2243.8752,10.6814,359.9579,-1,-1); // Rent Car LV 10
	//================================== HOT DOG ===============================
	hotdogcar[0] = AddStaticVehicle(588,-2429.2341,741.4066,34.9217,179.6980,1,1); // Hot Dog 0
	hotdogcar[1] = AddStaticVehicle(588,-2433.9192,741.2372,34.9212,179.6447,1,1); // Hot Dog 1
	hotdogcar[2] = AddStaticVehicle(588,-2437.8342,741.0984,34.9189,179.8946,1,1); // Hot Dog 2
	hotdogcar[3] = AddStaticVehicle(588,-2442.5227,741.0941,34.9182,179.8704,1,1); // Hot Dog 3
	hotdogcar[4] = AddStaticVehicle(588,-2446.9268,740.9801,34.9242,179.3379,1,1); // Hot Dog 4
	hotdogcar[5] = AddStaticVehicle(588,-2451.2832,740.9025,34.9189,180.1623,1,1); // Hot Dog 5
	hotdogcar[6] = AddStaticVehicle(588,-2455.7896,740.9033,34.9215,179.2092,1,1); // Hot Dog 6
	hotdogcar[7] = AddStaticVehicle(588,-2460.1279,740.7226,34.9204,180.5361,1,1); // Hot Dog 7
	hotdogcar[8] = AddStaticVehicle(588,-2464.4287,740.7175,34.9191,180.0000,1,1); // Hot Dog 8
	//================================ Sons of Silence MC ======================
	ssmccar[0] = AddStaticVehicleEx(463,1248.09997559,198.69999695,19.20000076,178.00000000,0,0,300); //Freeway
	ssmccar[1] = AddStaticVehicleEx(463,1249.90002441,197.80000305,19.20000076,177.99499512,0,0,300); //Freeway
	ssmccar[2] = AddStaticVehicleEx(463,1251.80004883,197.10000610,19.20000076,177.99499512,0,0,300); //Freeway
	ssmccar[3] = AddStaticVehicleEx(463,1253.50000000,196.39999390,19.20000076,177.99499512,0,0,300); //Freeway
	ssmccar[4] = AddStaticVehicleEx(463,1246.19995117,199.60000610,19.20000076,177.99499512,0,0,300); //Freeway
	ssmccar[5] = AddStaticVehicleEx(463,1239.00000000,208.89999390,19.20000076,66.00000000,0,0,300); //Freeway
	ssmccar[6] = AddStaticVehicleEx(463,1241.00000000,214.30000305,19.20000076,65.99487305,0,0,300); //Freeway
	ssmccar[7] = AddStaticVehicleEx(463,1240.40002441,212.60000610,19.20000076,65.99487305,0,0,300); //Freeway
	ssmccar[8] = AddStaticVehicleEx(463,1239.69995117,210.89999390,19.20000076,65.99487305,0,0,300); //Freeway
	ssmccar[9] = AddStaticVehicleEx(463,1238.19995117,207.00000000,19.20000076,65.99487305,0,0,300); //Freeway
	matsfuraSsmc[0] = AddStaticVehicleEx(459,1234.50000000,216.50000000,19.70000076,155.99987793,0,0,300); //Pony
	//================================== Hell's Angels MC ======================
	hamccar[0] = AddStaticVehicleEx(463,694.79998779,-473.20001221,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[1] = AddStaticVehicleEx(463,694.90002441,-470.10000610,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[2] = AddStaticVehicleEx(463,695.09997559,-466.89999390,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[3] = AddStaticVehicleEx(463,695.09997559,-464.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[4] = AddStaticVehicleEx(463,695.00000000,-461.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[5] = AddStaticVehicleEx(463,708.79998779,-473.60000610,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[6] = AddStaticVehicleEx(463,708.79998779,-461.29998779,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[7] = AddStaticVehicleEx(463,708.70001221,-464.39999390,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[8] = AddStaticVehicleEx(463,708.20001221,-467.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[9] = AddStaticVehicleEx(463,708.20001221,-470.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	matsfuraHamc[0] = AddStaticVehicleEx(459,696.09997559,-451.00000000,16.50000000,180.00000000,0,0,300); //Pony
	//================================= Outlaws MC =============================
	omccar[0] = AddStaticVehicleEx(463,-293.39999390,1294.09997559,53.29999924,80.00000000,0,0,300); //Freeway
	omccar[1] = AddStaticVehicleEx(463,-292.79998779,1299.19995117,53.40000153,79.99694824,0,0,300); //Freeway
	omccar[2] = AddStaticVehicleEx(463,-292.29998779,1303.80004883,53.59999847,79.99694824,0,0,300); //Freeway
	omccar[3] = AddStaticVehicleEx(463,-291.50000000,1308.09997559,53.70000076,79.99694824,0,0,300); //Freeway
	omccar[4] = AddStaticVehicleEx(463,-290.79998779,1312.69995117,53.79999924,79.99694824,0,0,300); //Freeway
	omccar[5] = AddStaticVehicleEx(463,-290.10000610,1317.40002441,53.90000153,79.99694824,0,0,300); //Freeway
	omccar[6] = AddStaticVehicleEx(463,-289.29998779,1322.00000000,54.00000000,79.99694824,0,0,300); //Freeway
	omccar[7] = AddStaticVehicleEx(463,-288.79998779,1326.40002441,54.09999847,79.99694824,0,0,300); //Freeway
	omccar[8] = AddStaticVehicleEx(463,-299.00000000,1328.19995117,54.09999847,178.00000000,0,0,300); //Freeway
	omccar[9] = AddStaticVehicleEx(463,-305.89999390,1328.80004883,54.09999847,177.99499512,0,0,300); //Freeway
	matsfuraOmc[0] = AddStaticVehicleEx(459,-305.60000610,1294.80004883,53.50000000,0.00000000,0,0,300); //Pony
	//=============================== Warlocks MC ==============================
	wmccar[0] = AddStaticVehicleEx(463,669.59997559,1729.69995117,6.59999990,38.00000000,0,0,300); //Freeway
	wmccar[1] = AddStaticVehicleEx(463,667.29998779,1728.00000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[2] = AddStaticVehicleEx(463,665.20001221,1726.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[3] = AddStaticVehicleEx(463,663.29998779,1724.40002441,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[4] = AddStaticVehicleEx(463,661.09997559,1722.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[5] = AddStaticVehicleEx(463,659.09997559,1720.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[6] = AddStaticVehicleEx(463,656.90002441,1718.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[7] = AddStaticVehicleEx(463,654.90002441,1717.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[8] = AddStaticVehicleEx(463,652.79998779,1715.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[9] = AddStaticVehicleEx(463,650.50000000,1713.30004883,6.59999990,37.99621582,0,0,300); //Freeway
	matsfuraWmc[0] = AddStaticVehicleEx(459,672.7252,1698.7985,7.0829,130.1172,0,0,300); //Pony
	//================================== Highwaymen MC =========================
	hwmccar[0] = AddStaticVehicleEx(463,16.20000076,-2633.69995117,40.00000000,182.00000000,0,0,300); //Freeway
	hwmccar[1] = AddStaticVehicleEx(463,18.50000000,-2633.60009766,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[2] = AddStaticVehicleEx(463,20.79999924,-2633.60009766,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[3] = AddStaticVehicleEx(463,23.20000076,-2633.50000000,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[4] = AddStaticVehicleEx(463,25.70000076,-2633.50000000,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[5] = AddStaticVehicleEx(463,28.20000076,-2633.60009766,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[6] = AddStaticVehicleEx(463,30.60000038,-2633.39990234,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[7] = AddStaticVehicleEx(463,33.09999847,-2633.19995117,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[8] = AddStaticVehicleEx(463,35.59999847,-2633.19995117,40.00000000,181.99951172,0,0,300); //Freeway
	hwmccar[9] = AddStaticVehicleEx(463,38.20000076,-2633.10009766,40.00000000,181.99951172,0,0,300); //Freeway
	matsfuraHwmc[0] = AddStaticVehicleEx(459,37.4749,-2650.4390,40.5666,2.1319,0,0,300); //Pony
	//================================== Free Souls MC =========================
	fsmccar[0] = AddStaticVehicleEx(463,-226.10000610,2595.10009766,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-240.89999390,2596.00000000,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-237.60000610,2595.80004883,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-235.00000000,2595.60009766,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-232.00000000,2595.39990234,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-229.19999695,2595.30004883,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-223.00000000,2595.00000000,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-220.00000000,2594.89990234,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-217.10000610,2594.89990234,62.29999924,0.00000000,0,0,300); //Freeway
	fsmccar[0] = AddStaticVehicleEx(463,-213.89999390,2594.80004883,62.29999924,0.00000000,0,0,300); //Freeway
	matsfuraFsmc[0] = AddStaticVehicleEx(459,-210.1882,2594.8572,62.7882,360.0000,0,0,300); //Pony
	//================================== Pagans MC =============================
	pmccar[0] = AddStaticVehicleEx(463,-2113.00000000,-2495.10009766,30.20000076,320.00000000,0,0,300); //Freeway
	pmccar[1] = AddStaticVehicleEx(463,-2115.19995117,-2493.30004883,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[2] = AddStaticVehicleEx(463,-2117.39990234,-2491.60009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[3] = AddStaticVehicleEx(463,-2119.60009766,-2489.80004883,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[4] = AddStaticVehicleEx(463,-2122.89990234,-2487.19995117,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[5] = AddStaticVehicleEx(463,-2121.10009766,-2488.60009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[6] = AddStaticVehicleEx(463,-2125.10009766,-2485.50000000,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[7] = AddStaticVehicleEx(463,-2126.89990234,-2484.10009766,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[8] = AddStaticVehicleEx(463,-2128.60009766,-2482.89990234,30.20000076,319.99877930,0,0,300); //Freeway
	pmccar[9] = AddStaticVehicleEx(463,-2130.50000000,-2481.50000000,30.20000076,319.99877930,0,0,300); //Freeway
	matsfuraPmc[0] = AddStaticVehicleEx(459,-2119.7229,-2473.1384,30.7093,142.0000,0,0,300); //Pony
	//================================== Mongols MC ============================
	mmccar[0] = AddStaticVehicleEx(463,-1275.59997559,2705.60009766,49.70000076,212.00000000,-1,1,15); //Freeway
	mmccar[1] = AddStaticVehicleEx(463,-1272.59997559,2707.19995117,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[2] = AddStaticVehicleEx(463,-1269.90002441,2708.69995117,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[3] = AddStaticVehicleEx(463,-1267.09997559,2710.39990234,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[4] = AddStaticVehicleEx(463,-1264.19995117,2711.60009766,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[5] = AddStaticVehicleEx(463,-1261.40002441,2713.30004883,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[6] = AddStaticVehicleEx(463,-1258.90002441,2714.80004883,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[7] = AddStaticVehicleEx(463,-1256.09997559,2716.50000000,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[8] = AddStaticVehicleEx(463,-1278.90002441,2704.10009766,49.70000076,211.99768066,-1,1,15); //Freeway
	mmccar[9] = AddStaticVehicleEx(463,-1253.69995117,2718.00000000,49.70000076,211.99768066,-1,1,15); //Freeway
	matsfuraMmc[0] = AddStaticVehicleEx(459,-1275.5009,2727.7271,50.1456,118.6071,-1,1,15); //Pony
	//================================= Vagos MC ===============================
	vmccar[0] = AddStaticVehicleEx(463,-289.60000610,1780.50000000,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[1] = AddStaticVehicleEx(463,-289.89999390,1778.00000000,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[2] = AddStaticVehicleEx(463,-290.20001221,1775.50000000,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[3] = AddStaticVehicleEx(463,-290.20001221,1772.80004883,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[4] = AddStaticVehicleEx(463,-290.29998779,1769.90002441,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[5] = AddStaticVehicleEx(463,-290.70001221,1767.50000000,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[6] = AddStaticVehicleEx(463,-290.70001221,1764.90002441,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[7] = AddStaticVehicleEx(463,-290.70001221,1762.00000000,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[8] = AddStaticVehicleEx(463,-291.00000000,1759.69995117,42.29999924,90.00000000,0,0,300); //Freeway
	vmccar[9] = AddStaticVehicleEx(463,-291.00000000,1756.90002441,42.29999924,90.00000000,0,0,300); //Freeway
	matsfuraVmc[0] = AddStaticVehicleEx(459,-300.89999390,1779.90002441,42.79999924,268.50000000,0,0,300); //Pony
	//================================= Bandidos MC ============================
	bmccar[0] = AddStaticVehicleEx(463,-1940.30004883,2393.10009766,49.09999847,293.50000000,0,0,300); //Freeway
	bmccar[1] = AddStaticVehicleEx(463,-1939.00000000,2389.89990234,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[2] = AddStaticVehicleEx(463,-1937.80004883,2386.80004883,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[3] = AddStaticVehicleEx(463,-1936.50000000,2383.80004883,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[4] = AddStaticVehicleEx(463,-1935.40002441,2380.50000000,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[5] = AddStaticVehicleEx(463,-1934.00000000,2377.19995117,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[6] = AddStaticVehicleEx(463,-1932.69995117,2374.00000000,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[7] = AddStaticVehicleEx(463,-1931.19995117,2371.19995117,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[8] = AddStaticVehicleEx(463,-1930.09997559,2367.69995117,49.09999847,293.49975586,0,0,300); //Freeway
	bmccar[9] = AddStaticVehicleEx(463,-1929.09997559,2364.80004883,48.90000153,293.49975586,0,0,300); //Freeway
	matsfuraBmc[0] = AddStaticVehicleEx(459,-1956.7488,2380.3784,49.5793,20.8621,0,0,300); //Pony
	//================================== LVPD ==================================
	lvpdcar[0] = AddStaticVehicle(598,2268.9678,2443.6958,10.5668,359.5409,0,1); // LVPD Cruiser 0
	lvpdcar[1] = AddStaticVehicle(598,2273.5706,2443.7290,10.5665,0.6987,0,1); // LVPD Cruiser 1
	lvpdcar[2] = AddStaticVehicle(598,2277.9482,2443.7490,10.5654,359.8027,0,1); // LVPD Cruiser 2
	lvpdcar[3] = AddStaticVehicle(598,2282.1309,2443.7957,10.5660,359.7104,0,1); // LVPD Cruiser 3
	lvpdcar[4] = AddStaticVehicle(598,2282.5002,2476.4595,10.5663,181.3129,0,1); // LVPD Cruiser 4
	lvpdcar[5] = AddStaticVehicle(598,2277.6665,2476.5178,10.5670,180.8092,0,1); // LVPD Cruiser 5
	lvpdcar[6] = AddStaticVehicle(598,2273.6030,2476.5684,10.5669,180.3357,0,1); // LVPD Cruiser 6
	lvpdcar[7] = AddStaticVehicle(598,2268.8853,2476.6331,10.5663,179.7468,0,1); // LVPD Cruiser 7
	lvpdcar[8] = AddStaticVehicle(598,2269.2004,2459.8330,10.5683,0.1298,0,1); // LVPD Cruiser 8
	lvpdcar[9] = AddStaticVehicle(598,2273.3623,2459.5422,10.5661,178.7547,0,1); // LVPD Cruiser 9
	lvpdcar[10] = AddStaticVehicle(598,2278.0513,2459.7075,10.5667,359.0662,0,1); // LVPD Cruiser 10
	lvpdcar[11] = AddStaticVehicle(598,2281.9307,2459.4504,10.5672,180.7914,0,1); // LVPD Cruiser 11
	lvpdcar[12] = AddStaticVehicle(599,2290.6970,2443.7861,11.0110,1.2899,0,1); // LVPD Cruiser 12
	lvpdcar[13] = AddStaticVehicle(599,2260.5859,2476.3032,11.0123,180.0692,0,1); // LVPD Cruiser 13
	lvpdcar[14] = AddStaticVehicle(497,2271.4736,2470.6799,38.8604,0.0013,0,1); // LVPD Rancher 14
	lvpdcar[15] = AddStaticVehicle(523,2255.9148,2476.6135,10.4263,180.0082,1,1); //
	lvpdcar[16] = AddStaticVehicle(523,2251.9368,2476.6135,10.4263,180.0082,1,1); //
	//================================== LS NEWS ================================
	lsnewscar[0] = AddStaticVehicle(582,1668.2490,-1699.8988,15.6692,113.6156,1,2); // LS NEWS VAN 0
	lsnewscar[1] = AddStaticVehicle(582,1668.3706,-1705.5723,15.6659,113.6156,1,2); // LS NEWS VAN 1
	lsnewscar[2] = AddStaticVehicle(582,1668.7556,-1711.6621,15.6669,113.6156,1,2); // LS NEWS VAN 2
	lsnewscar[3] = AddStaticVehicle(582,1668.5909,-1718.2150,15.6650,113.6156,1,2); // LS NEWS VAN 3
	lsnewscar[4] = AddStaticVehicle(582,1667.6899,-1694.3616,15.6655,113.6156,1,2); // LS NEWS VAN 4
	lsnewscar[5] = AddStaticVehicle(488,1654.3325,-1637.6818,83.9478,360.0000,1,2); // LS NEWS Helicopter 0
	//================================= LV NEWS ================================
	lvnewscar[0] = AddStaticVehicle(488,2647.3130,1214.7228,27.0833,179.9999,1,3); // LV NEWS VAN 0
	lvnewscar[1] = AddStaticVehicle(582,2639.1929,1167.8363,10.8775,33.1387,1,3); // LV NEWS VAN 1
	lvnewscar[2] = AddStaticVehicle(582,2646.3479,1168.2446,10.8790,34.0851,1,3); // LV NEWS VAN 2
	lvnewscar[3] = AddStaticVehicle(582,2653.7300,1169.2220,10.8752,35.7964,1,3); // LV NEWS VAN 3
	lvnewscar[4] = AddStaticVehicle(582,2660.8367,1168.9835,10.8743,33.8417,1,3); // LV NEWS VAN 4
	lvnewscar[5] = AddStaticVehicle(582,2666.9121,1169.7819,10.8752,34.9291,1,3); // LV NEWS Helicopter 0
	//================================ GOVERMENT ===============================
	govcar[0] =	AddStaticVehicle(421,1406.8253,-1774.1882,13.4268,65.0000,1,1); // Goverment Washingtone
	govcar[1] =	AddStaticVehicle(421,1406.0670,-1780.0697,13.4308,65.0000,1,1); // Goverment Washingtone
	govcar[2] =	AddStaticVehicle(421,1405.9895,-1785.6119,13.4300,65.0000,1,1); // Goverment Washingtone
	govcar[3] = AddStaticVehicle(421,1405.3645,-1790.4142,13.3956,65.0000,1,1); // Goverment Washingtone
	govcar[4] = AddStaticVehicle(409,1404.8344,-1800.1476,13.3473,65.0000,1,1); // Goverment Limo
	govcar[5] = AddStaticVehicle(487,1404.2203,-1805.9696,13.6964,65.0000,1,1); // Goverment Mavarick
	//============================ Инкассаторы =================================
	incos[0] = AddStaticVehicle(428,1361.6652,-1635.2184,13.5076,272.1388,4,75); // Машина1
	incos[1] = AddStaticVehicle(428,1361.7642,-1642.9727,13.5084,273.5148,4,75); // Машина2
	incos[2] = AddStaticVehicle(428,1361.7140,-1650.7054,13.5074,272.9565,4,75); // Машина3
	incos[3] = AddStaticVehicle(428,1361.6759,-1658.6383,13.5077,272.2585,4,75); // Машина4
	//=========================== Дальнобойщики ================================
    Linerunner[0] = AddStaticVehicle(403,2260.9980,2779.8608,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9980,2770.3906,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9980,2764.0408,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9983,2754.5005,11.4380,89.9999,-1,-1);
    AddStaticVehicle(403,2260.9988,2747.9705,11.4380,90.0005,-1,-1);
    Linerunner[1] = AddStaticVehicle(403,2260.9983,2738.4004,11.4380,89.9999,-1,-1);
    Roadtrain[0] = AddStaticVehicle(515,2296.0073,2779.9189,11.8265,270.0013,-1,-1);
    AddStaticVehicle(515,2296.0146,2770.4751,11.8305,270.2599,-1,-1);
    AddStaticVehicle(515,2296.0159,2763.8289,11.8284,270.0019,-1,-1);
    AddStaticVehicle(515,2296.0044,2754.3877,11.8305,269.7369,-1,-1);
    AddStaticVehicle(515,2296.0159,2747.9287,11.8284,270.0018,-1,-1);
    AddStaticVehicle(515,2296.0159,2738.3289,11.8284,270.0019,-1,-1);
    AddStaticVehicle(515,2347.0161,2738.2393,11.8725,270.0006,-1,-1);
    AddStaticVehicle(515,2347.0161,2747.8691,11.8727,270.0008,-1,-1);
    AddStaticVehicle(515,2347.0161,2754.4189,11.8728,270.0009,-1,-1);
    AddStaticVehicle(515,2347.0161,2763.9092,11.8726,270.0006,-1,-1);
    AddStaticVehicle(515,2347.0159,2770.5994,11.8725,270.0005,-1,-1);
    Roadtrain[1] = AddStaticVehicle(515,2347.0159,2779.9290,11.8282,270.0015,-1,-1);
	//================================= Ферма ===================================
	FarmCar[0] = AddStaticVehicleEx(478,-366.69195557,-1438.09130859,25.80656242,90.00000000,113,1,6000000000); // Walton
	Combine[0] = AddStaticVehicleEx(532,-377.5220,-1450.5730,26.7058,0.00000000,113,1,6000000000); // Combine
	//================================= LSA ====================================
    lsacar[0] = AddStaticVehicle(470,2739.5549,-2419.2371,13.6304,270.2878,0,0);
    lsacar[1] = AddStaticVehicle(470,2739.5923,-2423.3367,13.6305,270.9906,0,0);
    lsacar[2] = AddStaticVehicle(470,2739.6287,-2427.6265,13.6315,271.0866,0,0);
    lsacar[3] = AddStaticVehicle(470,2743.4583,-2448.7090,13.6656,270.0050,0,0);
    lsacar[4] = AddStaticVehicle(470,2743.4321,-2444.9141,13.6371,270.5514,0,0);
    lsacar[5] = AddStaticVehicle(470,2743.3860,-2441.0242,13.6362,270.8676,0,0);
    lsacar[6] = AddStaticVehicle(470,2736.8411,-2474.9597,13.6466,270.4148,0,0);
    lsacar[7] = AddStaticVehicle(470,2736.8289,-2471.1628,13.6426,269.8400,0,0);
    lsacar[8] = AddStaticVehicle(470,2736.8328,-2467.4814,13.6651,269.7310,0,0);
    lsacar[9] = AddStaticVehicle(470,2736.8308,-2463.7458,13.6885,269.8215,0,0);
	lsacar[10] = AddStaticVehicle(470,2736.8667,-2478.7322,13.6415,270.8732,0,0);
	lsacar[11] = AddStaticVehicle(470,2736.7996,-2460.1074,13.6475,269.3318,0,0);
	lsacar[12] = AddStaticVehicle(470,2735.5662,-2392.9441,13.6267,140.8576,0,0);
	lsacar[13] = AddStaticVehicle(470,2740.5520,-2392.8936,13.6257,142.6246,0,0);
	lsacar[14] = AddStaticVehicle(470,2745.5024,-2392.9404,13.6255,142.6646,0,0);
	lsacar[15] = AddStaticVehicle(470,2750.4390,-2392.9768,13.6442,143.1559,0,0);
	lsacarvert[0] = AddStaticVehicle(548,2773.1833,-2354.5332,15.3227,270.0318,0,0);
   	//================================ BUS DRIVERS =============================
	busls[0] = AddStaticVehicle(437,1673.9000,-1129.4241,24.0396,90.0574,86,86); // BUS LS 0
	busls[1] = AddStaticVehicle(437,1673.9000,-1124.8726,24.0396,90.0652,86,86); // BUS LS 1
	busls[2] = AddStaticVehicle(437,1673.9000,-1120.2773,24.0396,90.1512,86,86); // BUS LS 2
	busls[3] = AddStaticVehicle(437,1673.9000,-1115.8087,24.0395,90.0558,86,86); // BUS LS 3
	busls[4] = AddStaticVehicle(437,1673.9000,-1111.3969,24.0396,90.0382,86,86); // BUS LS 4
	busls[5] = AddStaticVehicle(437,1673.9000,-1106.8892,24.0396,90.0158,86,86); // BUS LS 5
	busls[6] = AddStaticVehicle(437,1673.9000,-1102.3464,24.0396,90.3764,86,86); // BUS LS 6
	busls[7] = AddStaticVehicle(437,1673.9000,-1097.9077,24.0396,89.1974,86,86); // BUS LS 7
	buslv[0] = AddStaticVehicle(437,2796.3726,1292.8879,10.9320,180.6715,3,3); // BUS LV 0
	buslv[1] = AddStaticVehicle(437,2791.4136,1292.8875,10.8445,180.8042,3,3); // BUS LV 1
	buslv[2] = AddStaticVehicle(437,2786.8433,1292.8900,10.8391,179.1906,3,3); // BUS LV 2
	buslv[3] = AddStaticVehicle(437,2781.8323,1292.8600,10.8414,178.8762,3,3); // BUS LV 3
	buslv[4] = AddStaticVehicle(437,2776.8726,1292.8629,10.9332,178.6264,3,3); // BUS LV 4
	buslv[5] = AddStaticVehicle(437,2772.2546,1292.8892,10.8318,179.4327,3,3); // BUS LV 5
	buslv[6] = AddStaticVehicle(437,2768.1365,1292.8923,10.8432,179.9848,3,3); // BUS LV 6
	buslv[7] = AddStaticVehicle(437,2763.5010,1292.9160,10.8295,178.4583,3,3); // BUS LV 7
	bussf[0] = AddStaticVehicle(437,-1966.4335,104.7064,27.7658,89.9606,6,6); // BUS SF 0
	bussf[1] = AddStaticVehicle(437,-1966.4343,100.2197,27.8601,91.2461,6,6); // BUS SF 1
	bussf[2] = AddStaticVehicle(437,-1966.4478,91.8828,27.8536,89.7976,6,6); // BUS SF 2
	bussf[3] = AddStaticVehicle(437,-1966.4204,95.7563,27.8175,90.0150,6,6); // BUS SF 3
	bussf[4] = AddStaticVehicle(437,-1966.4330,86.7903,27.7780,89.5876,6,6); // BUS SF 4
	bussf[5] = AddStaticVehicle(437,-1966.4335,82.5873,27.7651,90.5652,6,6); // BUS SF 5
	bussf[6] = AddStaticVehicle(437,-1985.9680,84.0007,27.7733,359.9922,6,6); // BUS SF 6
	bussf[7] = AddStaticVehicle(437,-1991.0907,83.9682,27.7758,359.8318,6,6); // BUS SF 7
	bussf[8] = AddStaticVehicle(437,-1995.9253,83.1516,27.8592,1.1714,6,6); // BUS SF 8
	//========================== Mechaniks =====================================
    mehanik[0] = AddStaticVehicle(525,1649.8070,-1107.4197,23.7879,270.4307,1,3); // Mechanik 0
    mehanik[1] = AddStaticVehicle(525,1649.5594,-1097.9303,23.7825,271.0184,1,3); // Mechanik 1
	mehanik[2] = AddStaticVehicle(525,1649.5481,-1088.9520,23.7802,271.2585,1,3); // Mechanik 2
	mehanik[3] = AddStaticVehicle(525,1649.4701,-1080.2677,23.7859,269.8732,1,3); // Mechanik 3
	mehanik[4] = AddStaticVehicle(525,1630.1318,-1107.5986,23.7810,90.0636,1,3); // Mechanik 4
	mehanik[5] = AddStaticVehicle(525,1629.4932,-1098.3491,23.7889,91.1477,1,3); // Mechanik 5
	mehanik[6] = AddStaticVehicle(525,1629.3313,-1089.4033,23.7905,89.8329,1,3); // Mechanik 6
	mehanik[7] = AddStaticVehicle(525,-70.9419,-1156.6366,1.6491,106.9529,1,3); // Mechanik 7
	mehanik[8] = AddStaticVehicle(525,-75.4985,-1153.8265,1.5561,106.9529,1,3); // Mechanik 8
	mehanik[9] = AddStaticVehicle(525,-79.4743,-1152.0967,2.1477,106.9529,1,3); // Mechanik 9
	mehanik[10] = AddStaticVehicle(525,-81.0021,-1197.2158,2.0621,13.2738,1,3); // Mechanik 10
	mehanik[11] = AddStaticVehicle(525,-85.3324,-1197.1295,2.1304,13.2739,1,3); // Mechanik 11
	mehanik[12] = AddStaticVehicle(525,-89.2924,-1196.4034,2.1066,13.2739,1,3); // Mechanik 12
	mehanik[13] = AddStaticVehicle(525,981.9313,-911.2308,41.8059,235.0910,1,3); // Mechanik 13
	mehanik[14] = AddStaticVehicle(525,982.1018,-916.5222,41.6776,235.8817,1,3); // Mechanik 14
	mehanik[15] = AddStaticVehicle(525,982.1166,-921.6226,41.5944,237.6462,1,3); // Mechanik 15
	mehanik[16] = AddStaticVehicle(525,982.2241,-927.0219,41.5558,235.2148,1,3); // Mechanik 16
	mehanik[17] = AddStaticVehicle(525,981.9857,-931.9604,41.4651,238.0461,1,3); // Mechanik 17
	mehanik[18] = AddStaticVehicle(525,-1913.1592,302.4428,40.9302,132.1687,1,3); // Mechanik 18
	mehanik[19] = AddStaticVehicle(525,-1912.9362,297.2397,40.9293,130.1418,1,3); // Mechanik 19
	mehanik[20] = AddStaticVehicle(525,-1913.0543,291.9246,40.9192,128.8127,1,3); // Mechanik 20
	mehanik[21] = AddStaticVehicle(525,-1912.9203,286.9842,40.9267,127.0311,1,3); // Mechanik 21
	mehanik[22] = AddStaticVehicle(525,-1912.8986,281.8015,40.9196,125.3126,1,3); // Mechanik 22
	//================================= Licensers ==============================
 	liccar[0] = AddStaticVehicleEx(560,-2091.2000,-144.7000,34.8940,359.6343,208,208,900); //Licenzer Car 0
	liccar[1] = AddStaticVehicleEx(560,-2086.7000,-144.7000,34.8940,359.6343,208,208,900); //Licenzer Car 1
	liccar[2] = AddStaticVehicleEx(560,-2082.2000,-144.7000,34.8940,359.6343,208,208,900); //Licenzer Car 2
	liccar[3] = AddStaticVehicleEx(560,-2077.7000,-144.7000,34.8940,359.6343,208,208,900); //Licenzer Car 3
	liccar[4] = AddStaticVehicleEx(560,-2073.2000,-144.7000,34.8940,359.6343,208,208,900); //Licenzer Car 4
	liccar[5] = AddStaticVehicle(560,-2091.2000,-108.0000,34.8928,180.0266,208,208); //Licenzer Car 5
	liccar[6] = AddStaticVehicle(560,-2086.7000,-108.0000,34.8928,180.0266,208,208); //Licenzer Car 6
	liccar[7] = AddStaticVehicle(560,-2082.2000,-108.0000,34.8928,180.0266,208,208); //Licenzer Car 7
	liccar[8] = AddStaticVehicle(560,-2077.7000,-108.0000,34.8928,180.0266,208,208); //Licenzer Car 8
	liccar[9] = AddStaticVehicle(560,-2073.2000,-108.0000,34.8928,180.0266,208,208); //Licenzer Car 9
	mavlic[0] = AddStaticVehicleEx(487,-2079.1999512,-225.8000031,53.7000008,270.0000000,208,208, 300); //Licenzer Maverick 0
	mavlic[1] = AddStaticVehicleEx(487,-2079.1999512,-165.5000000,53.7000008,270.0000000,208,208, 300); //Licenzer Maverick 0
	//=================================== YAKUZA ===============================
	yakcar[0] = AddStaticVehicleEx(516,1494.2484,2848.7676,10.6405,178.6475,0,0,900); // Yakuza Car 0
	yakcar[1] = AddStaticVehicleEx(516,1489.7351,2848.1570,10.6399,179.4486,0,0,900); // Yakuza Car 1
	yakcar[2] = AddStaticVehicleEx(516,1484.5413,2847.4619,10.6357,177.8342,0,0,900); // Yakuza Car 2
	yakcar[3] = AddStaticVehicleEx(516,1479.5450,2847.2419,10.6412,180.0046,0,0,900); // Yakuza Car 3
	yakcar[4] = AddStaticVehicleEx(516,1475.3090,2847.5596,10.6374,179.9559,0,0,900); // Yakuza Car 4
	yakcar[5] = AddStaticVehicleEx(409,1472.8611,2773.2961,10.5400,180.4315,0,0,900); // Yakuza Limo 0
	yakcar[6] = AddStaticVehicleEx(487,1500.6167,2820.9463,10.9702,180.0113,0,0,900); // Yakuza Helicopter 0
	yakcar[7] = AddStaticVehicleEx(516,1469.9667,2847.6016,10.6374,180.0243,0,0,900); // Yakuza Car 5
	yakcar[8] = AddStaticVehicleEx(516,1465.3102,2847.6907,10.6381,179.3099,0,0,900); // Yakuza Car 6
	yakcar[9] = AddStaticVehicleEx(516,1460.3976,2847.7878,10.6375,179.5810,0,0,900); // Yakuza Car 7
	yakcar[10] = AddStaticVehicleEx(516,1499.0840,2767.7461,10.5897,176.9912,0,0,900); // Yakuza Car 8
	yakcar[11] = AddStaticVehicleEx(516,1499.0308,2779.2732,10.5885,0.8175,0,0,900); // Yakuza Car 9
	//=================================== LSPD =================================
	sapdcar[0] = AddStaticVehicleEx(596,1602.4960,-1683.9705,5.6106,89.9966,1,79, 900); // LSPD Copcar 0
	sapdcar[1] = AddStaticVehicleEx(596,1602.4961,-1688.1863,5.6106,89.9944,1,79, 900); // LSPD Copcar 1
	sapdcar[2] = AddStaticVehicleEx(596,1602.4960,-1692.1858,5.6106,89.9963,1,79, 900); // LSPD Copcar 2
	sapdcar[3] = AddStaticVehicleEx(596,1602.4961,-1696.4399,5.6106,89.9965,1,79, 900); // LSPD Copcar 3
	sapdcar[4] = AddStaticVehicleEx(596,1602.4961,-1700.4475,5.6105,89.9928,1,79, 900); // LSPD Copcar 4
	sapdcar[5] = AddStaticVehicleEx(596,1602.4973,-1704.7720,5.6111,89.9599,1,79, 900); // LSPD Copcar 5
	sapdcar[6] = AddStaticVehicleEx(596,1591.1188,-1710.8458,5.6106,359.9953,1,79, 900); // LSPD Copcar 6
	sapdcar[7] = AddStaticVehicleEx(596,1587.0615,-1710.8457,5.6106,359.9914,1,79, 900); // LSPD Copcar 7
	sapdcar[8] = AddStaticVehicleEx(596,1582.9340,-1710.8418,5.6106,359.9973,1,79, 900); // LSPD Copcar 8
	sapdcar[9] = AddStaticVehicleEx(596,1569.6342,-1710.8481,5.5788,359.9579,1,79, 900); // LSPD Copcar 11
	sapdcar[10] = AddStaticVehicleEx(599,1584.5720,-1672.3798,5.6135,269.9952,1,79, 900); // LSPD Copcar 12
	sapdcar[11] = AddStaticVehicleEx(599,1584.5693,-1668.1559,5.6123,269.9404,1,79, 900); // LSPD Copcar 13
	sapdcar[12] = AddStaticVehicleEx(523,1545.6881,-1684.3760,5.4628,89.8548,0,1, 900); // LSPD copbike 0
	sapdcar[13] = AddStaticVehicleEx(523,1545.6832,-1680.3370,5.4628,90.0000,0,1, 900); // LSPD copbike 1
	sapdcar[14] = AddStaticVehicleEx(523,1545.6796,-1676.2489,5.4715,90.0000,0,1, 900); // LSPD copbike 2
	sapdcar[15] = AddStaticVehicleEx(523,1545.6934,-1672.1342,5.4719,90.0000,0,1, 900); // LSPD copbike 3
	sapdcar[16] = AddStaticVehicleEx(523,1545.7043,-1667.6414,5.4657,89.5909,0,1, 900); // LSPD copbike 4
	sapdcar[17] = AddStaticVehicleEx(523,1545.6930,-1663.1404,5.4719,90.0000,0,1, 900); // LSPD copbike 5
	sapdcar[18] = AddStaticVehicleEx(601,1545.4475,-1659.0334,5.6477,89.9272,1,79, 900); // LSPD Tank 0
	sapdcar[19] = AddStaticVehicleEx(601,1545.4456,-1655.0054,5.6652,89.9993,1,79, 900); // LSPD Tank 1
	sapdcar[20] = AddStaticVehicleEx(427,1538.1487,-1644.9996,6.0336,180.0003,1,79, 900); // LSPD Enforcer 0
	sapdcar[21] = AddStaticVehicleEx(427,1534.1730,-1644.9996,6.0335,180.0002,1,79, 900); // LSPD Enforcer 1
	sapdcar[22] = AddStaticVehicleEx(427,1529.9532,-1644.9991,6.0335,180.0003,1,79, 900); // LSPD Enforcer 2
	sapdcar[23] = AddStaticVehicleEx(497,1551.7830,-1609.5548,13.5595,270.2284,1,79,900); // LSPD Maverick 0
	sapdcar[24] = AddStaticVehicleEx(430,843.7457,-2298.5925,-0.0553,177.8288,1,79, 900); // LSPD Enforcer 2
	sapdcar[25] = AddStaticVehicleEx(430,828.6237,-2299.6931,-0.3592,179.1380,1,79,900); // LSPD Maverick 0
	//=================================== FBI ==================================
	fbicar[0] = AddStaticVehicleEx(490,-2427.9131,513.7803,30.0532,215.1379,0,0,100); // FBI 0
	fbicar[1] = AddStaticVehicleEx(490,-2424.6934,516.8582,30.0587,222.8319,0,0,100); // FBI 1
	fbicar[2] = AddStaticVehicleEx(490,-2421.7825,520.8435,30.0605,228.4378,0,0,100); // FBI 2
	fbicar[3] = AddStaticVehicleEx(490,-2418.6829,524.3395,30.1057,228.4384,0,0,100); // FBI 3
	fbicar[4] = AddStaticVehicleEx(490,-2415.4868,528.1856,30.0583,238.5820,0,0,100); // FBI 4
	fbicar[5] = AddStaticVehicleEx(490,-2414.2876,531.9501,30.0543,248.4161,0,0,100); // FBI 5
	fbicar[6] = AddStaticVehicleEx(490,-2411.8467,535.6798,30.0563,260.0896,0,0,100); // FBI 6
	fbicar[7] = AddStaticVehicleEx(490,-2413.0754,539.9163,30.0575,267.8040,0,0,100); // FBI 7
	fbicar[8] = AddStaticVehicleEx(487,-2469.8752,495.2847,30.2099,279.2241,0,0,100); // Helicopter 0
	//================================= Агенство детективов ====================
	detectivcar[0] = AddStaticVehicle(551,613.3411,-601.3885,17.0449,269.2462,4,4); // dcar1
	detectivcar[1] = AddStaticVehicle(551,613.3494,-597.1021,17.0484,270.9189,4,4); // dcar2
	detectivcar[2] = AddStaticVehicle(551,635.9706,-577.7796,16.0267,179.0736,4,4); // dcar3
	detectivcar[3] = AddStaticVehicle(551,635.9434,-564.6849,16.0606,179.7495,4,4); // dcar4
	//================================= Prodz ==================================
	comptruck[0] = AddStaticVehicle(440,1.0235,-368.0243,5.5643,90.6093,-1,-1); // Prodz Van 0
	comptruck[1] = AddStaticVehicle(440,0.9863,-364.7068,5.5351,90.6048,-1,-1); // Prodz Van 1
	comptruck[2] = AddStaticVehicle(440,0.9476,-361.0444,5.5351,90.6048,-1,-1); // Prodz Van 2
	comptruck[3] = AddStaticVehicle(440,0.9099,-357.4743,5.5351,90.6048,-1,-1); // Prodz Van 3
	comptruck[4] = AddStaticVehicle(440,0.8716,-353.8435,5.5351,90.6048,-1,-1); // Prodz Van 4
	comptruck[5] = AddStaticVehicle(440,0.8365,-350.5167,5.5351,90.6048,-1,-1); // Prodz Van 5
	comptruck[6] = AddStaticVehicle(440,0.7862,-346.9642,6.4105,90.6048,-1,-1); // Prodz Van 6
	comptruck[7] = AddStaticVehicle(440,0.6810,-343.2654,5.5471,90.6511,-1,-1); // Prodz Van 7
	comptruck[8] = AddStaticVehicle(440,0.6531,-340.0890,5.5368,90.6518,-1,-1); // Prodz Van 8
	//================================= GASERS =================================
	benzovoz[0] = AddStaticVehicle(403,-1004.8691,-686.8160,32.6148,90.4683,-1,-1); // Lineruner 0
	benzovoz[1] = AddStaticVehicle(403,-1004.9096,-681.8693,32.6147,90.4683,-1,-1); // Lineruner 1
	benzovoz[2] = AddStaticVehicle(403,-1004.9517,-676.7342,32.6146,90.4683,-1,-1); // Lineruner 2
	benzovoz[3] = AddStaticVehicle(403,-1004.9948,-671.4503,32.6146,90.4683,-1,-1); // Lineruner 3
	benzovoz[4] = AddStaticVehicle(403,-1005.0370,-666.2866,32.6145,90.4683,-1,-1); // Lineruner 4
	benzovoz[5] = AddStaticVehicle(403,-1005.0771,-661.3845,32.6145,90.4683,-1,-1); // Lineruner 5
	benzovoz[6] = AddStaticVehicle(403,-1005.1198,-656.1423,32.6144,90.4683,-1,-1); // Lineruner 6
	benzovoz[7] = AddStaticVehicle(403,-1005.1617,-651.0016,32.6144,90.4683,-1,-1); // Lineruner 7
	benzovoz[8] = AddStaticVehicle(403,-1005.2026,-645.9958,32.6143,90.4683,-1,-1); // Lineruner 8
	benzovoz[9] = AddStaticVehicle(403,-1005.2440,-640.9403,32.6143,90.4683,-1,-1); // Lineruner 9
	AddStaticVehicle(584,-984.8389,-635.7936,33.1543,91.1889,1,1); // Pricep 0
	AddStaticVehicle(584,-984.7327,-640.9091,33.1543,91.1889,1,1); // Pricep 1
	AddStaticVehicle(584,-984.6266,-646.0191,33.1543,91.1889,1,1); // Pricep 2
	AddStaticVehicle(584,-984.5270,-650.8137,33.1543,91.1889,1,1); // Pricep 3
	AddStaticVehicle(584,-984.4152,-656.2086,33.1543,91.1889,1,1); // Pricep 4
	AddStaticVehicle(584,-984.3068,-661.4308,33.1543,91.1889,1,1); // Pricep 5
	//=================================== Мусоровозы ==================================
	dvr[0] = AddStaticVehicle(408,1668.5034,-1895.3152,14.0940,358.0218,33,44); // mysorovozka 1
    dvr[1] = AddStaticVehicle(408,1660.9915,-1894.9308,14.0979,0.0745,33,44); // mysorovozka 2
    dvr[2] = AddStaticVehicle(408,1615.6340,-1890.7177,14.0736,358.8106,33,44); // mysorovozka 3
    dvr[3] = AddStaticVehicle(408,1622.0182,-1891.0692,14.0917,357.5620,33,44); // mysorovozka 4
	//============================== Army SFA ==================================
	armycarsf[0] = AddStaticVehicleEx(554,-1382.8628,456.3147,7.1837,358.4553,46,46,900);// Hydra 0
	armycarsf[1] = AddStaticVehicleEx(425,-1311.7374, 449.9471, 10.4156,359.0257,46,46,900);// Hydra 1
	armycarsf[2] = AddStaticVehicleEx(437,-1244.4874,445.7033,7.3208,358.5476,46,46,900); // Hydra 2
	armycarsf[3] = AddStaticVehicleEx(430,-1441.8682,504.9640,-0.1769,90.9145,44,44,900); // Predator 0
	armycarsf[4] = AddStaticVehicleEx(430,-1444.5718,497.6307,-0.2322,87.5099,44,44,900); // Predator 1
	armycarsf[5] = AddStaticVehicleEx(548,-1264.5787,494.3990,19.8453,205.9503,46,46,900); // Hunter 0
	armycarsf[6] = AddStaticVehicleEx(470,-1353.6660,456.0203,7.2077,358.8921,46,46,900); // Patriot 0
	armycarsf[7] = AddStaticVehicleEx(470,-1359.6062,456.1334,7.2077,0.0182,46,46,900); // Patriot 1
	armycarsf[8] = AddStaticVehicleEx(470,-1365.3795,456.2057,7.2077,358.6358,46,46,900); // Patriot 2
	armycarsf[9] = AddStaticVehicleEx(470,-1371.5607,456.2316,7.1983,0.0280,46,46,900); // Patriot 3
	armycarsf[10] = AddStaticVehicleEx(470,-1377.2144,456.3732,7.1839,357.9771,46,46,900); // Patriot 4
	armycarsf[11] = AddStaticVehicleEx(470,-1348.1566,455.9752,7.1812,359.4036,46,46,900); // Patriot 5
	armycarsf[12] = AddStaticVehicleEx(470,-1342.1515,456.1178,7.1960,358.9728,46,46,900); // Patriot 6
	armycarsf[13] = AddStaticVehicleEx(432,-1251.2520,444.9526,7.1963,358.4855,46,46,900); // Army Helicopter 0
	armycarsf[14] = AddStaticVehicleEx(432,-1235.8230,444.2809,7.1946,359.3226,46,46,900); // Army Helicopter 1
	armycarsf[15] = AddStaticVehicleEx(520,-1411.0370,518.2012,18.9659,357.2483,0,0,900); // Hunter 0
	armycarsf[16] = AddStaticVehicleEx(548,-1294.1105,494.6427,19.8051,206.3096,46,46,900); // Hunter 1
	armycarsf[17] = AddStaticVehicleEx(520,-1463.0947,498.0269,18.3698,269.4657,0,0,900); // Hunter 2
	armycarsf[18] = AddStaticVehicleEx(497,-1404.1675,493.7274,18.4051,206.0088,44,0,900); // Hunter 3
	armycarsf[19] = AddStaticVehicleEx(497,-1422.7838,493.1982,18.4068,206.0107,44,0,900); // Hunter 4
	armycarsf[20] = AddStaticVehicleEx(520,-1462.9346,506.2688,18.3667,270.0224,0,0,900); // Hunter 5
	//================================ Aztecas =================================
	coronoscar[0] = AddStaticVehicle(534,1714.50000000,-2118.69995117,13.39999962,328.00000000,135,135); // Remington 0
	coronoscar[1] = AddStaticVehicle(534,1710.19995117,-2118.69995117,13.39999962,327.99682617,135,135); // Remington 1
	coronoscar[2] = AddStaticVehicle(534,1710.00000000,-2107.19995117,13.39999962,227.99682617,135,135); // Remington 2
	coronoscar[3] = AddStaticVehicle(534,1714.59997559,-2106.80004883,13.39999962,227.99377441,135,135); // Remington 3
	coronoscar[4] = AddStaticVehicle(471,1696.7197,-2106.2351,13.0289,179.0099,135,135); // Remington 0
	coronoscar[5] = AddStaticVehicle(471,1696.6675,-2119.4766,13.0288,358.0259,135,135); // Remington 1
	coronoscar[6] = AddStaticVehicle(471,1692.3312,-2106.2419,13.0262,179.2706,135,135); // Remington 2
	coronoscar[7] = AddStaticVehicle(471,1692.3627,-2119.3115,13.0282,0.1184,135,135); // Remington 3
	coronoscar[8] = AddStaticVehicle(536,1705.8760,-2117.8274,13.2002,320.6478,135,135); // Remington 0
	coronoscar[9] = AddStaticVehicle(536,1705.4208,-2107.7368,13.2021,224.7116,135,135); // Remington 1
	matsfuraactek[0] = AddStaticVehicleEx(482,1670.80004883,-2115.50000000,13.80000019,268.00000000,135,135,900); // MatsVan 0
	//================================= Vagos ==================================
	vagoscar[0] = AddStaticVehicleEx(474,2782.1636,-1623.6354,10.6842,329.0284,6,6,900); // Hermes 0
	vagoscar[1] = AddStaticVehicleEx(474,2786.2476,-1623.0164,10.6844,329.1863,6,6,900); // Hermes 1
	vagoscar[2] = AddStaticVehicleEx(467,2771.0518,-1606.1017,10.5311,268.8685,1,6,900); // Oceanic 0
	vagoscar[3] = AddStaticVehicleEx(467,2771.2153,-1610.5345,10.5310,270.8883,1,6,900); // Oceanic 1
	vagoscar[4] = AddStaticVehicleEx(467,2771.1968,-1615.2633,10.5306,270.8752,1,6,900); // Oceanic 2
	vagoscar[5] = AddStaticVehicleEx(474,2778.0803,-1623.6750,10.6844,326.1422,6,6,900); // Hermes 2
	vagoscar[6] = AddStaticVehicleEx(474,2772.8315,-1623.4960,10.6874,322.4687,6,6,900); // Hermes 3
	vagoscar[7] = AddStaticVehicleEx(471,2776.7637,-1603.0204,10.4033,209.4050,6,6,900); // Hermes 0
	vagoscar[8] = AddStaticVehicleEx(471,2780.3281,-1603.0516,10.4022,202.8300,6,6,900); // Hermes 1
	vagoscar[9] = AddStaticVehicleEx(471,2784.0083,-1603.2683,10.4041,200.3255,6,6,900); // Oceanic 0
	vagoscar[10] = AddStaticVehicleEx(471,2788.0251,-1603.4510,10.4044,203.2109,6,6,900); // Oceanic 1
	matsfuravagos[0] = AddStaticVehicleEx(482,2801.3621,-1599.0444,11.1306,337.2412,6,6,900); // MatsVan 0
	//================================== Grove Street =========================
	grovecar[0] = AddStaticVehicle(492,2470.3638,-1671.0203,13.1017,11.3005,86,86); // GreenWood 0
	grovecar[1] = AddStaticVehicle(492,2501.0886,-1656.2217,13.2122,64.6832,86,86); // GreenWood 1
	grovecar[2] = AddStaticVehicle(492,2474.2324,-1678.5564,13.1203,35.3471,86,86); // GreenWood 2
	grovecar[3] = AddStaticVehicle(492,2491.4141,-1682.8937,13.1188,90.9747,86,86); // GreenWood 3
	grovecar[4] = AddStaticVehicle(600,2473.2271,-1695.5953,13.2671,359.1376,86,86); // Picador 0
	grovecar[5] = AddStaticVehicle(600,2506.8989,-1677.1493,13.2046,325.0007,86,86); // Picador 1
	grovecar[6] = AddStaticVehicle(600,2509.5581,-1671.4985,13.1433,347.3028,86,86); // Picador 2
	grovecar[7] = AddStaticVehicle(471,2482.9866,-1652.7710,12.9475,178.1340,86,86); // GreenWood 0
	grovecar[8] = AddStaticVehicle(471,2480.1377,-1652.7576,12.9500,178.1272,86,86); // GreenWood 1
	grovecar[9] = AddStaticVehicle(471,2477.2942,-1652.6434,12.9506,177.7342,86,86); // GreenWood 2
	matsfuragrove[0] = AddStaticVehicle(482,2505.2219,-1694.3187,13.7068,358.9556,86,86); // MatsVan 0
	//================================= Rifa ===================================
	rifacar[0] = AddStaticVehicleEx(529,2190.4885,-1807.8793,13.0879,57.6594,130,130,900); // Willard 0
	rifacar[1] = AddStaticVehicleEx(529,2190.7566,-1803.2738,13.0776,60.1990,130,130,900); // Willard 1
	rifacar[2] = AddStaticVehicleEx(529,2191.2688,-1798.7716,13.1349,61.4048,130,130,900); // Willard 2
	rifacar[3] = AddStaticVehicleEx(600,2169.2505,-1810.9896,13.2308,331.1815,130,130,900); // Picador 0
	rifacar[4] = AddStaticVehicleEx(600,2165.5552,-1809.8772,13.2229,330.2449,130,130,900); // Picador 1
	rifacar[5] = AddStaticVehicleEx(518,2161.5291,-1792.8157,13.0625,206.9070,130,130,900); // Buccaner 2
	rifacar[6] = AddStaticVehicleEx(518,2165.6248,-1792.7678,13.0754,204.6104,130,130,900); // Buccaner 3
	rifacar[7] = AddStaticVehicleEx(518,2170.2642,-1792.8630,13.0524,201.1296,130,130,900); // Buccaner 4
	rifacar[8] = AddStaticVehicleEx(471,2191.5068,-1791.7119,13.0340,90.7659,130,130,900); // Willard 0
	rifacar[9] = AddStaticVehicleEx(471,2191.4409,-1785.7241,13.0350,88.6786,130,130,900); // Willard 1
	rifacar[10] = AddStaticVehicleEx(567,2172.6052,-1811.5626,13.3440,334.6966,130,130,900); // Willard 2
	rifacar[11] = AddStaticVehicleEx(567,2176.6187,-1811.9419,13.3439,334.7459,130,130,900); // Picador 0
	matsfurarifa[0] = AddStaticVehicleEx(482,2176.7485,-1792.1622,13.4749,267.9156,130,130,900); // MatsVan 0
	//================================== Ballas ================================
	ballascar[0] = AddStaticVehicleEx(412,2653.9341,-2009.0320,13.3056,323.4019,242,242,900); // Ballas Voodoo 0
	ballascar[1] = AddStaticVehicleEx(412,2658.0420,-2009.0884,13.3053,323.2690,242,242,900); // Ballas Voodoo 1
	ballascar[2] = AddStaticVehicleEx(412,2665.7573,-1997.6373,13.3918,269.8071,242,242,900); // Ballas Voodoo 2
	ballascar[3] = AddStaticVehicleEx(516,2658.5288,-2042.0422,13.2840,1.0220,242,242,900); // Ballas Nebula 0
	ballascar[4] = AddStaticVehicleEx(516,2654.6658,-2041.6796,13.2850,0.4804,242,242,900); // Ballas Nebula 1
	ballascar[5] = AddStaticVehicleEx(566,2661.5547,-2009.6567,13.2471,326.0598,242,242,900); // Ballas Tahoma 0
	ballascar[6] = AddStaticVehicleEx(566,2665.0559,-2009.7874,13.2323,327.4051,242,242,900); // Ballas Tahoma 1
	ballascar[7] = AddStaticVehicleEx(471,2651.1047,-1997.6895,13.0368,179.1256,242,242,900); // Ballas Voodoo 0
	ballascar[8] = AddStaticVehicleEx(471,2645.9836,-1997.7690,13.0357,180.1376,242,242,900); // Ballas Voodoo 1
	ballascar[9] = AddStaticVehicleEx(471,2641.6045,-2001.9694,13.0372,270.2845,242,242,900); // Ballas Voodoo 2
	ballascar[10] = AddStaticVehicleEx(471,2641.6633,-2006.9805,13.0361,269.2787,242,242,900); // Ballas Nebula 0
	matsfura[0] = AddStaticVehicleEx(482,2644.6274,-2034.3457,13.6755,357.7817,242,242,900); // MatsVan 0
	//============================== Zone 51 ===================================
	armcar[0] = AddStaticVehicleEx(425,288.3243,1928.8093,18.2336,275.8014,37,37,300); // Hunter0
	armcar[1] = AddStaticVehicleEx(432,277.2724,2030.6893,17.6550,268.4021,0,0,300); // Rhino0
	armcar[2] = AddStaticVehicleEx(432,276.9091,2017.6702,18.0319,268.4021,0,0,300); // Rhino1
	armcar[3] = AddStaticVehicleEx(520,314.8157,2052.8928,18.6702,181.2181,0,0,300); // Hydra0
	armcar[4] = AddStaticVehicleEx(520,302.6985,2052.6353,18.6702,181.2181,0,0,300); // Hydra1
	armcar[5] = AddStaticVehicleEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,300); // Mesa0
	armcar[6] = AddStaticVehicleEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,300); // Mesa1
	armcar[7] = AddStaticVehicleEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,300); // Mesa2
	armcar[8] = AddStaticVehicleEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,300); // Mesa3
	armcar[9] = AddStaticVehicleEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,300); // Mesa4
	armcar[10] = AddStaticVehicleEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,300); // Mesa5
	armcar[11] = AddStaticVehicleEx(497,144.9689,1950.7150,29.1754,359.9992,44,44,300); // Helicopter1
	armcar[12] = AddStaticVehicleEx(497,135.1045,1950.7152,29.1515,359.9985,44,44,300); // Helicopter2
	armcar[13] = AddStaticVehicleEx(470,317.5983,1796.7000,17.6335,359.8372,0,0,300); // Hydra0
	armcar[14] = AddStaticVehicleEx(470,312.3935,1796.7180,17.6630,359.8343,0,0,300);  // Hydra1
	armcar[15] = AddStaticVehicleEx(470,307.3818,1796.7289,17.6332,359.8372,0,0,300); // Hydra2
	armcar[16] = AddStaticVehicleEx(470,301.5827,1796.7452,17.6331,359.8372,0,0,300); // Hydra3
	armcar[17] = AddStaticVehicleEx(500,152.90450000,1970.09780000, 19.92540000,269.68860000,77,77,300); //Mesa0
	armcar[18] = AddStaticVehicleEx(500,153.69040000,1964.66420000, 20.11020000,267.78740000,77,77,300); //Mesa1
	armcar[19] = AddStaticVehicleEx(500,156.62200000,1958.41270000, 20.02840000,270.06060000,77,77,300); //Mesa2
	armcar[20] = AddStaticVehicleEx(468,172.75340000,1953.63980000, 20.06320000,270.24240000,77,77,300); //Mesa3
	armcar[21] = AddStaticVehicleEx(468,172.99880000,1958.34790000, 20.00980000,268.88950000,77,77,300); //Mesa4
	armcar[22] = AddStaticVehicleEx(468,173.07350000,1963.36410000, 19.93220000,270.17900000,77,77,300); //Mesa5
	armcar[23] = AddStaticVehicleEx(468,173.13080000,1968.48190000, 20.04760000,270.81270000,77,77,300); //Mesa6
	armcar[24] = AddStaticVehicleEx(468,172.93550000,1973.29700000, 20.05970000,269.62710000,77,77,300); //Mesa7
	armcar[25] = AddStaticVehicleEx(468,173.09060000,1978.29140000, 20.10240000,269.76820000,77,77,300); //Mesa8
	armcar[26] = AddStaticVehicleEx(468,172.92090000,1983.38120000, 20.00140000,268.40320000,77,77,300); //Mesa9
	armcar[27] = AddStaticVehicleEx(470,184.40990000,1945.04360000, 19.65430000,91.06440000,77,77,300); //Patriot0
	armcar[28] = AddStaticVehicleEx(470,183.96970000,1950.09970000, 19.78680000,88.88780000,77,77,300); //Patriot1
	armcar[29] = AddStaticVehicleEx(470,183.67430000,1954.93640000, 19.77820000,90.21300000,77,77,300); //Patriot2
	armcar[30] = AddStaticVehicleEx(470,184.13430000,1960.09620000, 19.57300000,88.98510000,77,77,300); //Patriot3
	armcar[31] = AddStaticVehicleEx(470,183.87360000,1965.14810000, 19.73130000,91.99030000,77,77,300); //Patriot4
	armcar[32] = AddStaticVehicleEx(470,184.05790000,1970.22350000, 19.77450000,89.54330000,77,77,300); //Patriot5
	armcar[33] = AddStaticVehicleEx(470,183.93110000,1975.23380000, 19.79280000,90.13170000,77,77,300); //Patriot6
	armcar[34] = AddStaticVehicleEx(470,183.60440000,1980.46470000, 19.71780000,90.51290000,77,77,300); //Patriot7
	armcar[35] = AddStaticVehicleEx(470,183.64470000,1985.51730000, 19.79170000,88.25440000,77,77,300); //Patriot8
	armcar[36] = AddStaticVehicleEx(470,183.76640000,1990.41660000, 19.74800000,88.68630000,77,77,300); //Patriot9
	armcar[37] = AddStaticVehicleEx(470,183.59310000,1995.62610000, 19.76930000,87.44930000,77,77,300); //Patriot10
	armcar[38] = AddStaticVehicleEx(470,274.89999390,1945.69995117,17.79999924,269.25000000,77,77,300); //Patriot11
	armcar[39] = AddStaticVehicleEx(470,274.89999390,1951.19995117,17.79999924,269.24743652,77,77,300); //Patriot12
	armcar[40] = AddStaticVehicleEx(470,274.60000610,1955.80004883,17.79999924,269.24743652,77,77,300); //Patriot13
	armcar[41] = AddStaticVehicleEx(470,274.70001221,1966.09997559,17.79999924,269.24743652,77,77,300); //Patriot14
	armcar[42] = AddStaticVehicleEx(470,274.79998779,1960.59997559,17.79999924,269.24743652,77,77,300); //Patriot15
	armcar[43] = AddStaticVehicleEx(437,276.2184,2024.3053,17.7740,269.7056,77,77,300); //Patriot15
	gunscar[0] = AddStaticVehicle(433,275.2985,1982.4747,18.0773,269.3129,34,34); // ArmyTruck0
	gunscar[1] = AddStaticVehicle(433,275.3807,1989.3337,18.0773,269.3129,34,34); // ArmyTruck1
	gunscar[2] = AddStaticVehicle(433,275.4670,1996.5306,18.0773,269.3129,34,34); // ArmyTruck2
	//================================== FireFighters =========================
	ffcar[0] = AddStaticVehicle(471,-2051.9531,72.6472,27.8714,90.3808,1,3); // Quad 0
	ffcar[1] = AddStaticVehicle(471,-2052.0425,77.8185,27.8720,87.1727,1,3); // Quad 1
	ffcar[2] = AddStaticVehicle(544,-2055.5979,83.7070,28.6470,89.8758,3,3); // FFLestnica 0
	ffcar[3] = AddStaticVehicle(544,-2055.6040,92.5152,28.6429,90.3034,3,3); // FFLestnica 1
	ffcar[4] = AddStaticVehicle(487,-2060.0740,54.8269,28.5916,269.8283,3,1); // ffMaverick 0
	ffcar[5] = AddStaticVehicle(407,-2021.8029,75.5239,28.3206,272.9343,3,1); // FireTruck 1
	ffcar[6] = AddStaticVehicle(407,-2021.6274,84.1137,28.2530,270.8567,3,1); // FireTruck 2
	ffcar[7] = AddStaticVehicle(407,-2021.7260,92.7437,28.2895,270.2079,3,1); // FireTruck 3
 	//============================== Велосипеды на АШ ==============================
 	faggio[0] = AddStaticVehicle(510,-2093.8613,-84.1000,34.7636,180.6009,0,0); // Faggio 0
	faggio[1] = AddStaticVehicle(510,-2089.5027,-84.1000,34.7625,178.7993,0,0); // Faggio 1
	faggio[2] = AddStaticVehicle(510,-2085.3135,-84.1000,34.7633,181.0435,0,0); // Faggio 2
	faggio[3] = AddStaticVehicle(510,-2081.0344,-84.1000,34.7631,182.5249,0,0); // Faggio 3
	faggio[4] = AddStaticVehicle(510,-2076.7173,-84.1000,34.7628,181.1029,0,0); // Faggio 4
	faggio[5] = AddStaticVehicle(510,-2072.7854,-84.1000,34.7628,178.7355,0,0); // Faggio 5
	faggio[6] = AddStaticVehicle(510,-2068.4204,-84.1000,34.7596,180.5629,0,0); // Faggio 0
	faggio[7] = AddStaticVehicle(510,-2064.2917,-84.1000,34.7636,181.0023,0,0); // Faggio 1
	//============================ Велосипеды на вокзале ===========================
	faggio[8] = AddStaticVehicle(510,1098.9492,-1755.3110,12.9535,89.3767,0,0); // Faggio 0
	faggio[9] = AddStaticVehicle(510,1098.9226,-1757.7455,12.9517,89.3767,0,0); // Faggio 1
	faggio[10] = AddStaticVehicle(510,1098.8885,-1760.8929,12.9492,89.3767,0,0); // Faggio 2
	faggio[11] = AddStaticVehicle(510,1098.8560,-1763.8884,12.9472,89.3766,0,0); // Faggio 3
	faggio[12] = AddStaticVehicle(510,1098.8208,-1767.1068,12.9448,89.3767,0,0); // Faggio 4
	faggio[13] = AddStaticVehicle(510,1098.7943,-1769.5317,12.9433,89.3767,0,0); // Faggio 5
	faggio[14] = AddStaticVehicle(510,1098.7581,-1772.8737,12.9408,89.3764,0,0); // Faggio 6
	faggio[15] = AddStaticVehicle(510,1098.7303,-1775.4333,12.9389,89.3766,0,0); // Faggio 7
	faggio[16] = AddStaticVehicle(510,-2654.2397,635.3750,14.0266,179.8683,0,0); // Faggio 8
	faggio[17] = AddStaticVehicle(510,-2652.3457,635.3691,14.0262,179.7824,0,0); // Faggio 9
	faggio[18] = AddStaticVehicle(510,-2650.2974,635.3283,14.0219,178.6889,0,0); // Faggio 10
	faggio[19] = AddStaticVehicle(510,-2648.3916,635.3897,14.0260,180.7075,0,0); // Faggio 11
	faggio[20] = AddStaticVehicle(510,-2646.3442,635.4827,14.0251,179.3505,0,0); // Faggio 12
	faggio[21] = AddStaticVehicle(510,-2644.3342,635.3140,14.0255,179.7412,0,0); // Faggio 13
	faggio[22] = AddStaticVehicle(510,-2642.3828,635.3913,14.0257,179.3731,0,0); // Faggio 14
	faggio[23] = AddStaticVehicle(510,-2640.4250,635.3669,14.0227,179.7756,0,0); // Faggio 15
	faggio[24] = AddStaticVehicle(510,1212.5620,-1330.9592,13.1638,87.1649,0,0); // Faggio 16
	faggio[25] = AddStaticVehicle(510,1212.5863,-1327.8320,13.1635,91.0400,0,0); // Faggio 17
	faggio[26] = AddStaticVehicle(510,1212.7820,-1324.4269,13.1588,87.7425,0,0); // Faggio 18
	faggio[27] = AddStaticVehicle(510,1212.3390,-1321.8904,13.1520,95.2103,0,0); // Faggio 19
	faggio[28] = AddStaticVehicle(510,1212.4801,-1318.5789,13.1576,89.7406,0,0); // Faggio 20
	faggio[29] = AddStaticVehicle(510,2193.3118,-2238.2310,13.1252,315.6493,0,0); // Faggio 21
	faggio[30] = AddStaticVehicle(510,2194.3855,-2239.3054,13.1456,320.2479,0,0); // Faggio 22
	faggio[31] = AddStaticVehicle(510,2195.3972,-2240.2512,13.1453,314.4850,0,0); // Faggio 23
	faggio[32] = AddStaticVehicle(510,2196.4270,-2241.2905,13.1465,318.3734,0,0); // Faggio 24
	faggio[33] = AddStaticVehicle(510,2197.4604,-2242.2737,13.1456,321.9902,0,0); // Faggio 25
	faggio[34] = AddStaticVehicle(510,2198.6948,-2243.3750,13.1455,318.8247,0,0); // Faggio 26
	faggio[35] = AddStaticVehicle(510,-1029.9198,-622.9628,31.6064,268.0589,0,0); // Faggio 0
	faggio[36] = AddStaticVehicle(510,-1029.9709,-625.6809,31.6077,271.2636,0,0); // Faggio 1
	faggio[37] = AddStaticVehicle(510,-1030.0813,-628.0529,31.6066,269.5544,0,0); // Faggio 2
	//============================= Лодки ========================================
 	return true;
}
stock CreatePickups()
{
    AdmVillagePick[0] = CreatePickup(371,2,2435.1047,-812.8722,1422.3551,-1);
    AdmVillagePick[1] = CreatePickup(19130,23,2434.8130,-742.2032,1422.3630,-1);
    AdmVillagePick[2] = CreatePickup(370,2,2424.2502,-802.6107,1422.5908,-1);
	zerorc[0] = CreatePickup(1318,23,-2241.8164,128.5020,35.3203);
	zerorc[1] = CreatePickup(1318,23,-2240.9644,128.3315,1035.4141,-1);
    ApsPick[0] = CreatePickup(1318,23,1498.3049,-1581.5642,13.5498);
    ApsPick[1] = CreatePickup(1318,23,1327.9994,-1556.1399,13.5469);
    ApsPick[2] = CreatePickup(1318,23,1310.1710,-1366.8878,13.5104);
    ApsExitPick = CreatePickup(1318,23,-1923.3076,-2947.2700,26.5688,-1);
    ApsPickst[0] = CreatePickup(1318,23,-1909.0913,-2944.9817,26.5688, -1);
    ApsPickst[1] = CreatePickup(1318,23,-1860.4288,-3064.8464,21.6083, -1);
    hatpickup = CreatePickup(2704,23,209.9116,-8.2428,1001.2109,-1);
	ssmcvhod = CreatePickup(1318,23,1244.7485,205.3214,19.6454);
	ssmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,2);
	hamcvhod = CreatePickup(1318,23,681.5627,-473.9190,16.5363);
	hamcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,3);
	omcvhod = CreatePickup(1318,23,-311.1547,1303.4301,53.6643);
	omcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,4);
	wmcvhod = CreatePickup(1318,23,662.8604,1716.4194,7.1875);
	wmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,5);
	hwmcvhod = CreatePickup(1318,23,24.4948,-2646.5129,40.4637);
	hwmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,6);
	fsmcvhod = CreatePickup(1318,23,-255.0120,2603.3000,62.8582);
	fsmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,7);
	pmcvhod = CreatePickup(1318,23,-2105.8921,-2480.8372,30.6250);
	pmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,8);
	mmcvhod = CreatePickup(1318,23,-1266.7014,2715.9397,50.2663);
	mmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,9);
	vmcvhod = CreatePickup(1318,23,-313.9936,1774.6589,43.6406);
	vmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,10);
	bmcvhod = CreatePickup(1318,23,-1942.1289,2379.4338,49.7031);
	bmcvqhod = CreatePickup(1318,23,501.7259,-67.6832,998.7578,11);
	dice = CreatePickup(1239,23,1139.7209,-6.9123,1000.6797);
	hitman = CreatePickup(1274,23,-2818.9758,-1528.6226,140.8438);
	sellpickup = CreatePickup(1599,23,-86.2874,-299.3643,2.7646);
	caligula[0] = CreatePickup(19132,23,2233.9912,1714.6836,1012.3828);
	caligula[1] = CreatePickup(19132,23,2196.9666,1677.1083,12.3672);
	carjackpic[0] = CreatePickup(1239,23,2494.0967,-1464.7074,24.0255);
	carjackpic[1] = CreatePickup(19134,23,2515.4497,-1465.3451,23.9989);
	carjackpic[2] = CreatePickup(19134,23,2120.0693,2718.2942,10.8203);
	carjackpic[3] = CreatePickup(19134,23,-1931.6606,271.5569,41.0469);
	carjackpic[4] = CreatePickup(19134,23,2507.9807,-2113.6448,13.5469);
	Carshop[0] = CreatePickup(19133, 23, 2200.8657,1394.8059,11.0625,-1); //A
    Carshop[1] = CreatePickup(19133, 23, -1952.3577,300.3648,35.4688,-1); //B
    Carshop[2] = CreatePickup(19133, 23, 1671.5214,1814.4053,10.8203,-1); //C
    Carshop[3] = CreatePickup(19133, 23, 559.5280,-1293.9313,17.2482,-1); //NOPE
    Carshop[4] = CreatePickup(19133, 23, -1663.7235,1208.0890,7.2546,-1); //BIKES
	mushroom[0] = CreatePickup(1603, 2, -332.3008,-1987.6200,26.1051);
    mushroom[1] = CreatePickup(1603, 2, -375.2895,-2004.4412,28.4262);
    mushroom[2] = CreatePickup(1603, 2, -420.7345,-1962.1367,20.7989);
    mushroom[3] = CreatePickup(1603, 2, -370.9467,-2049.1355,28.5462);
    mushroom[4] = CreatePickup(1603, 2, -448.5980,-2072.9041,80.6654);
    mushroom[5] = CreatePickup(1603, 2, -490.3048,-2121.0930,89.5054);
    mushroom[6] = CreatePickup(1603, 2, -515.2039,-2223.6245,42.7538);
    mushroom[7] = CreatePickup(1603, 2, -556.2787,-2223.5444,34.8664);
    mushroom[8] = CreatePickup(1603, 2, -653.4810,-2185.8540,14.6571);
    mushroom[9] = CreatePickup(1603, 2, -697.4235,-2144.5728,24.7645);
    mushroom[10] = CreatePickup(1603, 2, -913.5545,-2281.5803,45.6804);
	mushroom[11] = CreatePickup(1603, 2, -924.2963,-2392.5601,63.9710);
	mushroom[12] = CreatePickup(1603, 2, -921.2469,-2419.2676,73.1529);
	mushroom[13] = CreatePickup(1603, 2, -928.6000,-2452.7974,90.8816);
	mushroom[14] = CreatePickup(1603, 2, -1092.1782,-2576.2622,77.2730);
	mushroom[15] = CreatePickup(1603, 2, -1114.4218,-2326.8787,44.7146);
	mushroom[16] = CreatePickup(1603, 2, -1095.8896,-2317.7642,51.1427);
	mushroom[17] = CreatePickup(1603, 2, -1036.0745,-2331.6079,60.0633);
	mushroom[18] = CreatePickup(1603, 2, -1823.0471,-2169.1082,77.6051);
	mushroom[19] = CreatePickup(1603, 2, -1745.4077,-2018.1677,74.5071);
	mushroom[20] = CreatePickup(1603, 2, -1943.8130,-2144.5457,76.9309);
	mushroom[21] = CreatePickup(1603, 2, -1955.9766,-2162.8020,75.9688);
	mushroom[22] = CreatePickup(1603, 2, -1685.1254,-2385.9275,99.3290);
	mushroom[23] = CreatePickup(1603, 2, -1643.7135,-2411.9897,95.7691);
	mushroom[24] = CreatePickup(1603, 2, -1551.1573,-2505.1743,90.8708);
	mushroom[25] = CreatePickup(1603, 2, -1465.4910,-2556.2893,63.7663);
	mushroom[26] = CreatePickup(1603, 2, -1435.4855,-2544.3879,60.4281);
	mushroom[27] = CreatePickup(1603, 2, -1401.0656,-2548.1582,55.9067);
	mushroom[28] = CreatePickup(1603, 2, -1347.5752,-2507.9780,37.0068);
	mushroom[29] = CreatePickup(1603, 2, -1328.0197,-2467.7183,27.8259);
	mushroom[30] = CreatePickup(1603, 2, -1290.3135,-2479.8984,16.9108);
	mushroom[31] = CreatePickup(1603, 2, -1277.4055,-2498.1367,11.4951);
	mushroom[32] = CreatePickup(1603, 2, -568.3260,-2276.3220,27.5938);
	mushroom[33] = CreatePickup(1603, 2, -653.1019,-2255.4465,23.3936);
	mushroom[34] = CreatePickup(1603, 2, -614.5738,-2398.0959,28.0911);
	mushroom[35] = CreatePickup(1603, 2, -620.2932,-2477.4644,52.8450);
	mushroom[36] = CreatePickup(1603, 2, -673.6429,-2562.6052,58.4840);
	mushroom[37] = CreatePickup(1603, 2, -797.0350,-2611.4380,85.9543);
	mushroom[38] = CreatePickup(1603, 2, -814.8298,-2713.2485,90.4954);
	mushroom[39] = CreatePickup(1603, 2, -900.3575,-2635.6716,96.5351);
	mushroom[40] = CreatePickup(1603, 2, -908.8201,-2450.1675,86.1361);
	mushroom[41] = CreatePickup(1603, 2, -564.7324,-2000.7518,48.2172);
	mushroom[42] = CreatePickup(1603, 2, -514.0831,-1990.8127,46.7821);
	mushroom[43] = CreatePickup(1603, 2, -386.3437,-1968.6517,25.7109);
	mushroom[44] = CreatePickup(1603, 2, -285.8642,-2063.6074,34.5075);
	mushroom[45] = CreatePickup(1603, 2, -1735.6969,-2501.1594,10.1409);
	mushroom[46] = CreatePickup(1603, 2, -1840.7139,-2382.2207,29.1400);
	mushroom[47] = CreatePickup(1603, 2, -1906.1353,-2212.6089,77.4492);
	mushroom[48] = CreatePickup(1603, 2, -1874.5731,-1969.2981,87.2874);
	mushroom[49] = CreatePickup(1603, 2, -1739.6145,-1950.4650,98.8599);
	mushroom[50] = CreatePickup(1603, 2, -1613.4684,-1867.4391,86.1701);
	mushroom[51] = CreatePickup(1603, 2, -1868.5590,-1894.4634,88.9713);
	mushroom[52] = CreatePickup(1603, 2, -2005.6901,-1937.4910,77.0140);
	church[0] = CreatePickup(1318,23,-1989.8971,1117.8901,54.4688);
	church[1] = CreatePickup(1318,23,-2016.2253,1119.2943,26.0630,1);
    medicss[0] = CreatePickup(1318,23,-2664.7141,639.9803,14.4531);
    medicss[1] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,3);
    medicss[2] = CreatePickup(1318,23,1172.0767,-1323.3440,15.4030);
    medicss[3] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,4);
    medicss[4] = CreatePickup(1318,23,1607.2877,1815.2422,10.8203);
    medicss[5] = CreatePickup(1318,23,387.8577,-59.8890,1076.4708,5);
	sportroom[0] = CreatePickup(1318,23,2229.7566,-1721.5988,13.5646);
   	sportroom[1] = CreatePickup(1318,23,772.4290,-5.0806,1000.7289);
    lspic[0] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,1);
	lspic[1] = CreatePickup(1318,23,1649.3877,-1641.1318,83.7813);
	lspic[2] = CreatePickup(1318,23,1658.4169,-1691.3796,15.6094);
	lvpic[0] = CreatePickup(1318,23,2648.9949,1185.3920,10.8203);
    lvpic[1] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,3);
    porterinfo = CreatePickup(1239,23,2230.4875,-2211.9368,13.5469);
    monitor = CreatePickup(1239,23,359.8004,166.1101,1008.3828);
	chekmaterialssf[0] = CreatePickup(1239,2,-1297.3777,505.1444,11.1953);
	chekmaterialssf[1] = CreatePickup(1239,2,-1405.5594,502.5779,11.1953);
	chekmaterialssf[2] = CreatePickup(1239,2,-1336.0455,500.4789,11.3047);
	healheart[0] = CreatePickup(1240,23,301.5411,-195.9650,1004.0625);
	healheart[1] = CreatePickup(1240,23,1753.4606,-1916.4948,13.5698);
	healheart[2] = CreatePickup(1240,23,-2022.4574,-118.4710,1035.1719,1);
	healheart[3] = CreatePickup(1240,23,359.3875,187.5938,1008.3828);
	CloakroomFarm = CreatePickup(1275,23,-382.7190,-1426.3296,26.2543);
	FormaFracPic[0] = CreatePickup(1275, 23, 255.1582,78.4345,1003.6406);
	FormaFracPic[1] = CreatePickup(1275, 23, 326.8179,307.7177,999.1484);
	FormaFracPic[2] = CreatePickup(1275, 23, -1344.0225,490.3044,11.2027);
	FormaFracPic[3] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,3);
	FormaFracPic[4] = CreatePickup(1275, 23, 364.2415,197.5021,1014.1875);
	FormaFracPic[5] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,2);
	FormaFracPic[6] = CreatePickup(1275, 23, 220.2224,111.7548,1010.2118);
	FormaFracPic[7] = CreatePickup(1275, 23, -2022.1334,-114.7256,1035.1719,1);
	FormaFracPic[8] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,1);
	FormaFracPic[9] = CreatePickup(1275, 23, 240.4291,1860.7698,8.7578);
	FormaFracPic[10] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,3);
	FormaFracPic[11] = CreatePickup(1275, 23, 210.0915,187.6858,1003.0313,122);
	FormaFracPic[12] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,4);
	FormaFracPic[13] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,5);
	FormaFracPic[14] = CreatePickup(1275, 23, 2152.5144,1600.2333,1006.1733);
	FormaFracPic[15] = CreatePickup(1275, 23, 686.5361,-453.5134,-25.6172,1);
    detectivag[0] = CreatePickup(1318, 23,626.9644,-571.7888,17.9207);
    detectivag[1] = CreatePickup(353,23,1489.5197,1308.6454,1093.2891);
    detectivag[2] = CreatePickup(1318,23,1494.4027,1303.5785,1093.2891);
	clothes = CreatePickup(1275, 23, 2137.9661,-2282.2017,20.6719,-1);
	Farm = CreatePickup(1239,23,-382.99908447,-1438.91796875,26.19865036);
	cashs = CreatePickup(1274, 23, 2127.5701,-2275.1938,20.6719, -1);
    gunarm[0] = CreatePickup(353,23,245.6338,1859.2839,14.0840);
	gunarm[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,3);
	lsamaterials = CreatePickup(1239,23,2729.3267,-2451.5051,17.5937);
    lsaammo = CreatePickup(353,23,2744.2744,-2453.7742,13.8623);
	skinshop[0] = CreatePickup(1275,23,206.0302,-3.5463,1001.2109);
	skinshop[1] = CreatePickup(1275,23,205.9253,-12.9991,1001.2178);
	skinshop[2] = CreatePickup(1275,23,181.3787,-86.4860,1002.0234);
	skinshop[3] = CreatePickup(1275,23,181.5291,-89.3950,1002.0307);
   	workshoppicc[0] = CreatePickup(1318,23,613.4505,3.7427,1000.9219);
   	workshoppicc[1] = CreatePickup(1318,23,613.4505,3.7427,1000.9219,1);
   	workshoppicc[2] = CreatePickup(1318,23,613.4505,3.7427,1000.9219,2);
	chekmaterialslv[0] = CreatePickup(1239,2,223.8502,1931.5122,17.6406);
	chekmaterialslv[1] = CreatePickup(1239,2,190.7502,1931.7085,17.6406);
	chekmaterialslv[2] = CreatePickup(1239,2,155.8935,1903.3306,18.6603);
	chekmaterialslv[3] = CreatePickup(1239,2,137.4635,1880.8014,17.8359);
	chekmaterialslv[4] = CreatePickup(1239,2,117.9774,1869.8710,17.8359);
	chekmaterialslv[5] = CreatePickup(1239,2,112.7323,1875.2440,17.8359);
	chekmaterialslv[6] = CreatePickup(1239,2,153.5131,1845.9530,17.6406);
	chekmaterialslv[7] = CreatePickup(1239,2,171.9801,1834.7606,17.6406);
	chekmaterialslv[8] = CreatePickup(1239,2,176.9783,1841.3126,17.6406);
	chekmaterialslv[9]= CreatePickup(1239,2,233.3041,1842.0875,17.6406);
	derbyrace[0] = CreatePickup(19134, 23, -2159.0461,640.3610,1052.3817);
    derbyrace[1] = CreatePickup(1318, 23, -2109.9355,-443.3014,38.7344);
    derbyrace[2] = CreatePickup(1318, 23, -2170.3154,635.4061,1052.3750);
    arace = CreatePickup(19134, 23, 822.3992,2.7049,1004.1797);
    paint = CreatePickup(353, 23, 523.5396,-1813.0000,6.5713);
	paintguns[0] = CreatePickup(349, 2, 2606.8569,2810.7854,10.8203,1);
	paintguns[1] = CreatePickup(348, 2, 2564.7261,2821.4429,10.8203,1);
	paintguns[2] = CreatePickup(356, 2, 2543.7952,2807.4951,10.8203,1);
	paintguns[3] = CreatePickup(355, 2, 2615.3286,2848.9446,10.8203,1);
    racepic[0] = CreatePickup(1318,23,1956.7323,-2183.6260,13.5469);
	racepic[1] = CreatePickup(1318,23,834.6671,7.2752,1004.1870);
    victim[0] = CreatePickup(1318,23,461.7025,-1500.7941,31.0454);
    victim[1] = CreatePickup(1318,23,227.5632,-8.0904,1002.2109);
    zip[0] = CreatePickup(1318,23,-1882.5100,866.3918,35.1719);
    zip[1] = CreatePickup(1318,23,161.3232,-97.1035,1001.8047);
    SDA = CreatePickup(1239,23,-2031.5730,-114.8732,1035.1719,1);
    fracgunpic[0] = CreatePickup(353,23,326.0734,306.7083,999.1484);
    fracgunpic[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,5);
    fracgunpic[2] = CreatePickup(353,23,311.9774,-165.2273,999.6010,1);
    fracgunpic[3] = CreatePickup(353,23,302.5668,-127.6718,1004.0625,15);
    fracgunpic[4] = CreatePickup(366,23,681.4753,-459.2422,-25.6172,1);
    lspd[0] = CreatePickup(1318,23,1555.1332,-1675.7180,16.1953);
	lspd[1] = CreatePickup(1318,23,246.7096,62.8786,1003.6406);
	lspd[2] = CreatePickup(1318,23,1524.486938,-1677.990844,6.218750);
	lspd[3] = CreatePickup(1318,23,246.4416,87.6784,1003.6406);
	lspd[4] = CreatePickup(1318,23,316.6778,-170.0422,999.5938,5);
	lspd[5] = CreatePickup(1318,23,1568.6144,-1689.9901,6.2188);
	sfpd[0] = CreatePickup(1318,23,316.3047,-170.2971,999.5938,1);
	sfpd[1] = CreatePickup(1318,23,213.9762,120.8990,999.0156);
	sfpd[2] = CreatePickup(1318,23,-1594.2096,716.1803,-4.9063);
	sfpd[3] = CreatePickup(1318,23,246.4636,107.2969,1003.2188);
	sfpd[4] = CreatePickup(1318,23,-1606.4298,672.0637,-4.9063);
	sfpd[5] = CreatePickup(1318,23,-1605.5253,710.2730,13.8672);
	lvpd[0] = CreatePickup(1318,23,2297.1138,2451.4346,10.8203);
	lvpd[1] = CreatePickup(1318,23,238.7510,138.6254,1003.0234,122);
	lvpd[2] = CreatePickup(1318,23,2337.1335,2459.3105,14.9742);
	lvpd[3] = CreatePickup(1318,23,288.8456,166.9235,1007.1719,122);
	lvpd[4] = CreatePickup(1318,23,2297.1165,2468.6892,10.8203);
	lvpd[5] = CreatePickup(1318,23,299.9460,-141.8767,1004.0625,15);
	lvpd[6] = CreatePickup(1318,23,2278.3835,2458.0950,38.6837);
	sfnewspic[0] = CreatePickup(1318,23,-2046.4412,453.8438,139.7422);
	sfnewspic[1] = CreatePickup(1318,23,-2056.5552,454.0199,35.1719);
	sfnewspic[2] = CreatePickup(1318,23,998.2888,999.8617,1999.7999,2);
	rmpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,1);
	yakuzapic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078);
    yakuzapic[1] = CreatePickup(1318,23,1456.1324,2773.4790,10.8203);
    fbi[1] = CreatePickup(1318,23,322.1946,302.3625,999.1484);
    fbi[0] = CreatePickup(1318,23,-2456.1270,503.7910,30.0781);
   	lcnpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,2);
    lcnpic[1] = CreatePickup(1318,23,1455.8972,751.4310,11.0234);
   	rmpic[1] = CreatePickup(1318,23,937.0892,1733.2124,8.8516);
   	ammonac[0] = CreatePickup(1318,23,1368.9360,-1279.7216,13.5469);
   	ammonac[1] = CreatePickup(1318,23,285.4752,-41.7966,1001.5156);
   	ammonac[2] = CreatePickup(1318,23,-2625.8296,208.2379,4.8125);
   	ammonac[3] = CreatePickup(1318,23,285.9187,-86.7644,1001.5229);
	ammonac[4] = CreatePickup(1318,23,2159.5449,943.2165,10.8203);
   	ammonac[5] = CreatePickup(1318,23,315.8831,-143.6591,999.6016);
    addictionexit = CreatePickup(1318,23,318.6952,1114.5037,1083.8828);
    addictionenter = CreatePickup(1318,23,2166.0068,-1671.3362,15.0734);
	armijavhod = CreatePickup(1318,23,140.0735,1939.5984,19.2991);
	armijavihod = CreatePickup(1318,23,153.8659,1944.3601,20.0000);
    avtosh[0] = CreatePickup(1318,23,-2067.6719,-196.1585,53.8391);
    avtosh[1] = CreatePickup(1318,23,-2029.6525,-119.6210,1035.1719,1);
	avtosh[2] = CreatePickup(1318,23,-2026.8085,-103.6107,1035.1798,1);
	avtosh[3] = CreatePickup(1318,23,-2062.4438,-195.3167,35.3203);
    hallenter[0] = CreatePickup(1318,23,1481.1272,-1771.6830,18.7958);
    hallenter[1] = CreatePickup(1318,23,1413.2067,-1790.5966,15.4356);
	hallexit = CreatePickup(1318,23,390.1618,173.8988,1008.3828);
	hallbackexit = CreatePickup(1318,23,368.4229,194.0837,1008.3828);
    bankpic[0] = CreatePickup(1318,23,1411.5004,-1699.6112,13.5395);
	bankpic[1] = CreatePickup(1318,23,2304.6968,-16.1388,26.7422,1);
	banksf[0] = CreatePickup(1318,23,-2172.0627,252.1688,35.3385);
	banksf[1] = CreatePickup(1318,23,2304.6968,-16.1388,26.7422,2);
    ballasenter[0] = CreatePickup(1318,23,-68.8021,1351.1979,1080.2109,34);
	ballasenter[1] = CreatePickup(1318,23,2650.6992,-2021.8175,14.1766);
	rifaenter[0] = CreatePickup(1318,23,-229.29,1401.13,27.77,63);
	rifaenter[1] = CreatePickup(1318,23,2185.8225,-1815.2219,13.5469);
	vagospic[0] = CreatePickup(1318,23,2770.7471,-1628.7227,12.1775);
	vagospic[1] = CreatePickup(1318,23,300.4915,305.8677,1003.5391,75);
	aztecpic[0] = CreatePickup(1318,23,1667.52,-2106.94,14.07);
	aztecpic[1] = CreatePickup(1318,23,-42.5856,1405.4747,1084.4297,36);
	grove[0] = CreatePickup(1318,23,2495.7993,-1692.4044,1014.7422,1);
    grove[1] = CreatePickup(1318,23,2495.3271,-1690.9893,14.7656);
    zone[0] = CreatePickup(1318,23,279.2340,1833.1393,18.0874);
    zone[1] = CreatePickup(1318,23,291.8918,1833.7253,18.1027);
    warehousearmy[0] = CreatePickup(1318,23,340.5722,1949.2020,22.0172);
    warehousearmy[1] = CreatePickup(1318,23,316.3806,-170.2857,999.5938);
    warehousearmy[2] = CreatePickup(1318,23,316.3806,-170.2857,999.5938,3);
    warehousearmy[3] = CreatePickup(1318,23,-1373.0463,498.9842,11.1953);
    robber = CreatePickup(1559, 23, 2505.7832,-2640.2434,13.8623, -1);
	truckerspic[0] = CreatePickup(1239,23,-1731.4509,118.9413,3.5547);
	truckerspic[1] = CreatePickup(1239,23,2601.7222,-2226.5867,13.3732);
	truckerspic[2] = CreatePickup(1239,23,256.4736,1414.5182,10.7075);
	truckerspic[3] = CreatePickup(1239,23,-1046.7723,-670.7208,32.3516);
	truckerspic[4] = CreatePickup(1239,23,608.7718,847.8765,-43.1532);
	truckerspic[5] = CreatePickup(1239,23,-1978.6846,-2434.8274,30.6250);
	truckerspic[6] = CreatePickup(1239,23,-1873.0896,-1720.2430,21.7500);
	truckerspic[7] = CreatePickup(1239,23,323.0342,1118.5804,1083.8828);
	sporthelp = CreatePickup(1239,23,773.8960,5.2577,1000.7802);
	boxfight[0] = CreatePickup(1314,23,756.4088,6.0036,1000.6992);
	libertycity = CreatePickup(1318,23,1672.9724,1500.0892,10.7743,-1);
	bistro = CreatePickup(1318,23,-777.8869,488.9286,1376.5842,15);
	ebistro = CreatePickup(1318,23,-795.1378,489.2925,1376.1953,15);
	fromlctolv = CreatePickup(1318,23,-740.0579,527.0897,1372.1250,15);
	getgun[0] = CreatePickup(2035, 23, 1254.1158,-794.3672,1084.2344, 2);
	getgun[1] = CreatePickup(2035, 23, 1254.1158,-794.3672,1084.2344, 0);
	getgun[2] = CreatePickup(2035, 23, 1254.1158,-794.3672,1084.2344, 1);
	buygun[0] = CreatePickup(2061, 23, 316.7157,-133.0959,999.6016, 0);
	buygun[1] = CreatePickup(2061, 23, 295.8108,-84.3657,1001.5156, 0);
	buygun[2] = CreatePickup(2061, 23, 297.7750,-40.8087,1001.5156, 0);
	ffpic[0] = CreatePickup(1318,23,681.4592, -450.6159, -25.6368, -1);
	ffpic[1] = CreatePickup(1318,23,-2026.9403,67.0650,28.6916, -1);
	bonus = CreatePickup(19056,23,301.2509,-191.1143,999.6016);
	motorace = CreatePickup(219, 23, 2695.5076,-1704.6638,11.8438);
	autostation[0] = CreatePickup(1318,23,1153.9926,-1772.2114,16.5992);
	autostation[1] = CreatePickup(1318,23,303.9847,-202.1491,999.6016);
	metro[0] = CreatePickup(19197, 23,356.9594,183.4941,1040.3378,-1);
    metro[1] = CreatePickup(19197, 23,1139.3999,-1761.6560,13.5953);
    metro[2] = CreatePickup(19197, 23,418.9889,-1505.7224,31.2809);
    metro[3] = CreatePickup(19197, 23,1419.9320,-1640.2612,13.5469);
    metro[4] = CreatePickup(19197, 23,2237.7644,-1663.4373,15.4766);
    metro[5] = CreatePickup(19197, 23,2865.6304,-1465.8890,10.9527);
    metro[6] = CreatePickup(19197, 23,2081.5220,-1205.0953,23.9329);
    metro[7] = CreatePickup(19197, 23,1952.8174,-2179.7617,13.5469);
    metro[8] = CreatePickup(19197, 23,848.6933,-1817.9336,12.1936);
    metro[9] = CreatePickup(19197, 23,475.5369,-1279.4954,16.4807);
    metro[10] = CreatePickup(19197, 23,2613.6865,-2413.7488,13.6256);
	metro[11] = CreatePickup(19197, 23,-82.2516,-1179.0155,1.9463);
	metro[12] = CreatePickup(19197, 23,1286.7998,-1329.3213,13.5549);
	metro[13] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,1);
	metro[14] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,2);
	metro[15] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,3);
	metro[16] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,4);
	metro[17] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,5);
	metro[18] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,6);
	metro[19] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,7);
	metro[20] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,8);
	metro[21] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,9);
	metro[22] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,10);
	metro[23] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,11);
	metro[24] = CreatePickup(19197, 23,364.8473,185.4646,1040.3378,12);
 	return true;
}
stock CreateLabels()
{
	Create3DTextLabel("", 0xFFFFFFAA, 0.0000, 0.0000, 0.0000, 0.0,0,1);
	DLabels[0] = Create3DTextLabel("CITY BANK", 0x6495EDBB, 1411.5004, -1699.6112, 14.0000,10.0,0,1);
	DLabels[1] = Create3DTextLabel("МЭРИЯ", 0x6495EDBB, 1481.1272, -1771.6830, 18.7958,10.0,0,1);
	DLabels[2] = Create3DTextLabel("_________________\nАвто Сдача на\nВодительские права\n_________________",TEAM_GROVE_COLOR,-2026.6854,-114.3436,1035.5000,10.0,1,1);
	DLabels[3] = Create3DTextLabel("< Приём на работу >",COLOR_YELLOW,359.8466,184.7337,1009.0000,10.0,0,1);
	DLabels[4] = Create3DTextLabel("{33AA33}~~~~~~~~~~~~~~~~~\nКупить наркотики:\n{FFFFFF}\"/get drugs\"\n{33AA33}~~~~~~~~~~~~~~~~~",COLOR_WHITE,323.0342,1118.5804,1083.8828,10.0,0,1);
	DLabels[5] = Create3DTextLabel("~~~~~~~~~~~~~~~\nРегистрация на гонку\n~~~~~~~~~~~~~~~",TEAM_GROVE_COLOR,822.3992,2.7049,1004.1797,10.0,0,1);
	DLabels[6] = Create3DTextLabel("_________________\nВыдача\nигральных костей\n_________________",COLOR_INDIGO,1139.7209,-6.9123,1000.6797,10.0,0,1);
	DLabels[7] = Create3DTextLabel("{DDB201}Ферма: {FFFFFF}0\n{DDB201}Цена: {FFFFFF}500000\n{DDB201}Информация: {FFFFFF}/finfo", 0xDDB201AA,-382.99908447,-1438.91796875,26.19865036,10.0,0,1);
	DLabels[8] = Create3DTextLabel("{D8E63E}==== [ {188037}Помощь{D8E63E} ] ====",COLOR_GREEN,304.1474,-194.0843,999.6016,10.0,0,1);
    DLabels[9] = Create3DTextLabel("Точка наблюдения\n/camera",COLOR_WHITE,212.2816,1812.2374,21.8672,10.0,0,0);
    DLabels[10] = Create3DTextLabel("===============\n= Регистрация =\n=  мотогонки  =\n===============", COLOR_BLUE,2695.7092,-1704.7167,11.8438, 8.0, 0);
    DLabels[11] = Create3DTextLabel("Чтобы выйди из админ деревни нажмите Пробел",COLOR_GREEN,2434.8130,-742.2032,1422.3630, 8.0, 1);
    DLabels[13] = Create3DTextLabel("Банковские услуги\nнажмите 'Enter'",COLOR_LIGHTGREEN,2308.8201,-13.2660,26.7422,5.0,1,0);
    DLabels[14] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1142.8103,-1764.0710,15.5082,7.0,0,1);
	DLabels[15] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-1676.34570312,434.01806641,8.08183193,7.0,0,1);
	DLabels[16] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-2033.32604980,159.50723267,29.94120598,7.0,0,1);
	DLabels[17] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,2236.16186523,-1665.79772949,26.27980804,7.0,0,1);
	DLabels[18] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1367.56359863,-1290.13696289,14.44901943,7.0,0,1);
	DLabels[19] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1142.44287109,-1763.92932129,14.59816360,7.0,0,1);
	DLabels[20] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,847.58093262,-1799.19348145,14.71945286,7.0,0,1);
	DLabels[21] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-78.74282837,-1171.64892578,2.95329499,7.0,0,1);
	DLabels[22] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-1551.53637695,-2737.33691406,49.64560318,7.0,0,1);
	DLabels[23] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,661.71307373,-576.21777344,17.25428581,7.0,0,1);
	DLabels[24] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,557.32824707,-1294.28137207,18.24994087,7.0,0,1);
	DLabels[25] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-2035.70605469,-102.35491180,36.07402039,7.0,0,1);
	DLabels[26] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1919.78381348,-1766.21813965,14.44901943,7.0,0,1);
	DLabels[27] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,2843.30444336,1286.17187500,12.29276943,7.0,0,1);
	DLabels[28] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,2187.36035156,2478.89160156,12.14433193,7.0,0,1);
	DLabels[29] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1587.30920410,2218.34838867,11.96464443,7.0,0,1);
	DLabels[30] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,2174.20336914,1402.93469238,11.96464443,7.0,0,1);
	DLabels[31] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-818.55200195,1567.63708496,28.01933098,7.0,0,1);
	DLabels[32] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,91.92106628,1180.56555176,19.56620598,7.0,0,1);
	DLabels[33] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-1282.38098145,2715.18652344,51.16842651,7.0,0,1);
	DLabels[34] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-2452.32275391,2252.62988281,5.87058449,7.0,0,1);
	DLabels[35] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-2621.31445312,1415.23510742,7.88521862,7.0,0,1);
	DLabels[36] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,-2421.45410156,958.35540771,46.18632126,7.0,0,1);
	DLabels[37] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,2843.3179,1286.2759,11.3000,7.0,0,1);
 	DLabels[38] = Create3DTextLabel("Предложите бой противнику", COLOR_BLUE,756.4088,6.0036,1000.6992,25.0,0,1);
	DLabels[39] = Create3DTextLabel("LSPD", 0x6495EDBB, 1555.1332,-1675.7180,16.1953,10.0,0,1);
	DLabels[40] = Create3DTextLabel("{D8E63E}==== [ {188037}Помощь{D8E63E} ] ====",COLOR_GREEN,1765.7438,-1909.7069,13.5695,10.0,0,1);
	DLabels[41] = Create3DTextLabel("~Бонус для новичков~", COLOR_BLUE,301.2509,-191.1143,999.6016, 8.0, 0);
	DLabels[42] = Create3DTextLabel("Банковские услуги\nнажмите 'Enter'",COLOR_LIGHTGREEN,2308.8201,-13.2660,26.7422,5.0,2,0);
	DLabels[43] = Create3DTextLabel("{00D900}Нажмите: \"ENTER\"",COLOR_WHITE,1496.03780000,-1750.00000000,15.37560000,7.0,0,1);
	DLabels[44] = Create3DTextLabel("CAR SHOP\nclass: A",COLOR_REDD,2200.8657,1394.8059,11.0625,7.0,0,1);
    DLabels[45] = Create3DTextLabel("CAR SHOP\nclass: B",COLOR_REDD,-1952.3577,300.3648,35.4688,7.0,0,1);
    DLabels[46] = Create3DTextLabel("CAR SHOP\nclass: C",COLOR_REDD,1671.5214,1814.4053,10.8203,7.0,0,1);
    DLabels[47] = Create3DTextLabel("CAR SHOP\nclass: NOPE",COLOR_REDD,559.5280,-1293.9313,17.2482,7.0,0,1);
    DLabels[48] = Create3DTextLabel("CAR SHOP\nclass: BIKES",COLOR_REDD,-1663.7235,1208.0890,7.2546,7.0,0,1);
    foods[0] = Create3DTextLabel("Не работает", 0xFF8C37FF, 1157.0768, -1732.6000,14.1000, 8.0, 0);
    foods[1] = Create3DTextLabel("Не работает", 0xFF8C37FF, 1154.2336, -1732.6000,14.1000, 8.0, 0);
    foods[2] = Create3DTextLabel("Не работает", 0xFF8C37FF, 1414.2671,-1717.9924,14.0500, 8.0, 0);
    foods[3] = Create3DTextLabel("Не работает", 0xFF8C37FF, 1470.9401,-1675.2782,14.0500, 8.0, 0);
    foods[4] = Create3DTextLabel("Не работает", 0xFF8C37FF, 1476.6941,-1675.3403,14.0500, 8.0, 0);
    foods[5] = Create3DTextLabel("Не работает", 0xFF8C37FF, 2182.4678,-2269.3660,14.8999, 8.0, 0);
    Create3DTextLabel("/propose - пожениться,\"/divorce - развестись\"",COLOR_GREEN,-2032.0339,1119.2062,26.0531, 8.0, 1);
    cassa[0] = Create3DTextLabel("Закрыто из-за обрыва маршрута", 0xFF8C37FF, 294.1953,-193.7466,1004.0547, 8.0, 0);
    cassa[1] = Create3DTextLabel("Закрыто из-за обрыва маршрута", 0xFF8C37FF, 294.0658,-195.2591,1004.0547, 8.0, 0);
    cassa[2] = Create3DTextLabel("Закрыто из-за обрыва маршрута", 0xFF8C37FF, 294.1043,-192.3341,1004.0547, 8.0, 0);
    Parking[0] = Create3DTextLabel("==================\nПосигнальте, чтобы\nвыйти с парковки\n==================", COLOR_GREY, -1880.6989,-3115.2722,20.8914, 8.0, -1);
    Parking[1] = Create3DTextLabel("==================\nПосигнальте, чтобы\nвойти на парковку\n==================", COLOR_GREY, 1284.6919,-1349.9467,13.5643, 8.0, 0);
    Parking[2] = Create3DTextLabel("==================\nПосигнальте, чтобы\nвойти на парковку\n==================", COLOR_GREY, 1352.6146,-1567.0211,13.5469, 8.0, 0);
    Parking[3] = Create3DTextLabel("==================\nПосигнальте, чтобы\nвойти на парковку\n==================", COLOR_GREY, 1460.4713,-1507.3512,13.5498, 8.0, 0);
    return true;
}
stock CreateSpecialZone()
{
	Army[0] = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);// LVA
	Army[1] = GangZoneCreate(2634.4395, -2562.5022, 2861.7734, -2320.1594);// SFA
	Army[2] = GangZoneCreate(-1220.6725, 542.0154, -1571.1744, 257.9100);// LSA
	return true;
}
stock CreateMapIcons()
{
	CreateDynamicMapIcon(2503.0608,-1460.4967,24.0115,42,0); // Автоугонщики
 	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); // Развозчики
   	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
 	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim SF
   	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); // AutoSalone LS
   	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
   	CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	CreateDynamicMapIcon(2196.9663,1677.1544,12.3672,25,0); // Сasino Caligula
	CreateDynamicMapIcon(2019.3177,1007.7430,10.8203,43,0); // Сasino 4 Dragons
	CreateDynamicMapIcon(1657.0205,2254.5571,10.8203,25,0); // Сasino Bellaio
   	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
   	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
   	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
   	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
   	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
   	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
   	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV
	CreateDynamicMapIcon(-2243.8826,-87.9706,35.3203,49,0); // Misty
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); // Bar Grove Steet
    CreateDynamicMapIcon(1414.0972,-1701.0652,13.5395,52,0); // Bank LS
    CreateDynamicMapIcon(-2172.0627,252.1688,35.3385,52,0); // Bank SF
    CreateDynamicMapIcon(2421.2842,-1221.6509,25.4070,49,0); // Pig Pen
    CreateDynamicMapIcon(1834.7672,-1682.3358,13.4178,49,0); // Alhambra
    CreateDynamicMapIcon(-89.610397,1378.243530,10.469799,49,0); // Lil'Probe'in Bar
    CreateDynamicMapIcon(-2623.7166,1410.6890,7.0938,49,0); // Jizzy
    CreateDynamicMapIcon(-2077.5000, -188.3000, 46.3000,36,0); // Autoschool
    CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
    CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
    CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
    CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0); // Спортзал LS
    CreateDynamicMapIcon(-2270.6406,-155.9734,35.3203,54,0); // Спортзал SF
	CreateDynamicMapIcon(1961.8124,-2189.2671,13.5469,53,0); // Race
    CreateDynamicMapIcon(-382.99908447,-1438.91796875,26.19865036,56,0); // Farm 0
    CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); // Точка наблюдения
    CreateDynamicMapIcon(-1816.5311,618.6709,35.1719,50,0); // Pizza
   	CreateDynamicMapIcon(-1911.7004,828.8093,35.1719,50,0); // Burger
   	CreateDynamicMapIcon(-2336.1675,-168.1730,35.3203,50,0); // Burger
   	CreateDynamicMapIcon(-2671.7808,257.9283,4.6328,50,0); // Pizza
   	CreateDynamicMapIcon(2102.0913,-1808.8442,38.0027,50,0); // Pizza
   	CreateDynamicMapIcon(2397.4641,-1903.6409,38.0027,50,0); // Pizza
   	CreateDynamicMapIcon(800.9893,-1619.9106,38.0027,10,0); // Burger
   	CreateDynamicMapIcon(932.5351,-1381.1470,32.0997,50,0); // Pizza
   	CreateDynamicMapIcon(183.6340,1175.7919,22.6676,50,0); // Pizza
   	CreateDynamicMapIcon(2420.4573,-1508.2711,24.0000,50,0); // Pizza
   	CreateDynamicMapIcon(1204.3881,-915.2735,66.4264,50,0); // Burger
   	CreateDynamicMapIcon(2391.6345,2041.7228,40.0850,50,0); // Pizza
   	CreateDynamicMapIcon(1163.3766,2079.7026,40.0850,50,0); // Burger
   	CreateDynamicMapIcon(1498.3049,-1580.5642,13.5498,31,0); //Aps1
   	CreateDynamicMapIcon(1327.9994,-1556.1399,13.5469,31,0); //Aps2
   	CreateDynamicMapIcon(1310.1710,-1366.8878,13.5104,31,0); //Aps3
   	//-------------------------[ Респы банд ] -------------------------
	CreateDynamicMapIcon(2648.8896,-2021.3033,13.5469,59,0);  // баллас
	CreateDynamicMapIcon(2774.1741,-1627.7917,12.1775,60,0);  // вагос
	CreateDynamicMapIcon(2495.3684,-1688.0365,13.5553,62,0);  // грув
	CreateDynamicMapIcon(1804.1624,-2124.8953,13.9424,58,0);  // ацтек
	CreateDynamicMapIcon(2185.9600,-1811.9399,13.5469,61,0);  // рифа
   	return true;
}
stock CreateTimers()
{
	AdvertiseTimerEx = SetTimer("AdvertiseTimer", 1200000, true);// Таймер обьявлений в чат(реклама сервера)
	SaietyTimer = SetTimer("SatietyCheck", 60000, true);// Таймер сытости
	UnJailTimer = SetTimer("SetPlayerUnjail", 1000, true);// Обновление для тюрьмы таймер
	FreshTimer = SetTimer("Fresh", 1000, true);// Обновить
	OtherTimerEx = SetTimer("OtherTimer", 15000, true);// Остальные таймеры
	ServerNameTimer = SetTimer("ServerName", 1000, true);// Имя сервера
	SpeedoTimer = SetTimer("UpdateSpeedometr", 120, true);// Обновление спидометра
	CountExTimer = SetTimer("CountEx", 1000, true);// AFK таймер
	PickupTimer = SetTimer("CustomPickups", 1, true);// Пикапы бизнесов и домов
	GzCheckTimer = SetTimer("GzCheck", 1000, true);// Таймер на проверку зоны
	MzCheckTimer = SetTimer("MzCheck", 1000, true);// Таймер на проверку бизнеса мафии
	return true;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
        	return true;
	    }
	}
	return false;
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
		case 12: zx = COLOR_INDIGO;
		case 13: zx = 0xB9B900AA;
		case 15: zx = 0x009F00AA;
		case 17: zx = 0x02B9AFAA;
		case 18: zx = 0x0076AEAA;
		default: zx = 0xFEFEFEAA;
	}
	return zx;
}
stock GetNearestVehicle(playerid)
{
    for(new i = 0; i < MAX_VEHICLES; i++)
	{
        if(GetVehicleModel(i))
        {
            new Float:X,Float:Y,Float:Z;
            GetVehiclePos(i, X, Y, Z);
            if(PlayerToPoint(6.0, playerid, X, Y, Z)) return i;
        }
    }
    return -1;
}
stock IsInAllowedF(fnumbers)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(fnumbers == allowedfactions[i]) return true;
	}
	return false;
}
stock IsPlayerInBandOnline(bandid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || gPlayerLogged[i] == 0) continue;
		if(PlayerInfo[i][pMember] == bandid || PlayerInfo[i][pLeader] == bandid) return true;
	}
	return false;
}
stock GetGangName(fnumbwer)
{
	new string[24];
	switch(fnumbwer)
	{
		case 12: format(string,sizeof(string), "The Ballas Gang");
		case 13: format(string,sizeof(string), "Los Santos Vagos Gang");
		case 15: format(string,sizeof(string), "Grove Street Gang");
		case 17: format(string,sizeof(string), "Varios Los Aztekas Gang");
		case 18: format(string,sizeof(string), "The Rifa Gang");
	}
	return string;
}
stock GetMafiaName(fnumbwer)
{
	new string[14];
	switch(fnumbwer)
	{
		case 5: format(string,sizeof(string), "LCN");
		case 6: format(string,sizeof(string), "Yakuza");
		case 14: format(string,sizeof(string), "Russian Mafia");
	}
	return string;
}
stock CompVehDel(playerid)
{
	PlayerInfo[playerid][pWheels] = 0;
	PlayerInfo[playerid][pSpoiler] = 0;
	PlayerInfo[playerid][pBumper1] = 0;
	PlayerInfo[playerid][pBumper2] = 0;
	PlayerInfo[playerid][pPaintJob] = 255;
	PlayerInfo[playerid][pNitro] = 0;
	PlayerInfo[playerid][pHydrawlic] = 0;
	return true;
}
public OnVehicleSpawn(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(vehicleid == caridhouse[i])
		{
			Fuell[caridhouse[i]] = PlayerInfo[i][pFuelCar];
			LockCar(caridhouse[i]);
			IsLocked[caridhouse[i]] = 1;
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pWheels]);
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pNitro]);
			AddVehicleComponent(caridhouse[i], PlayerInfo[i][pHydrawlic]);
		    VehicleHealth[vehicleid] = 1000;
			if(PJ(caridhouse[i]))
			{
				ChangeVehiclePaintjob(caridhouse[i], PlayerInfo[i][pPaintJob]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pSpoiler]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pBumper1]);
				AddVehicleComponent(caridhouse[i], PlayerInfo[i][pBumper2]);
			}
 		}
 	}
 	return true;
}
stock Random(min, max)
{
    new a = random(max - min) + min;
    return a;
}
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
stock GiveWeapon(playerid, weaponid, ammo)
{
    SetTimer("AntiCheatTimer", 5000, 0);
	new wslot;
	switch(weaponid)
	{
	    case 0,1: wslot = 0;
	    case 2..9: wslot = 1;
	    case 22..24: wslot = 2;
	    case 25..27: wslot = 3;
	    case 28,29,32: wslot = 4;
	    case 30,31: wslot = 5;
	    case 33,34: wslot = 6;
	    case 35..38: wslot = 7;
	    case 16..18,39: wslot = 8;
	    case 41..43: wslot = 9;
	    case 10..15: wslot = 10;
	    case 44..46: wslot = 11;
	    case 40: wslot = 12;
	}
    PlayerInfo[playerid][pSlot][wslot] = weaponid;
    PlayerInfo[playerid][pSlotammo][wslot] += ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
    return true;
}
stock AntiCheatCheck(playerid)
{
	new agun = GetPlayerWeapon(playerid),wslot,string[164];
	switch(agun)
	{
	    case 0,1: wslot = 0;
	    case 2..9: wslot = 1;
	    case 22..24: wslot = 2;
	    case 25..27: wslot = 3;
	    case 28,29,32: wslot = 4;
	    case 30,31: wslot = 5;
	    case 33,34: wslot = 6;
	    case 35..38: wslot = 7;
	    case 16..18,39: wslot = 8;
	    case 41..43: wslot = 9;
	    case 10..15: wslot = 10;
	    case 44..46: wslot = 11;
	    case 40: wslot = 12;
	}
	if(PlayerInfo[playerid][pSlot][wslot] != agun && PlayerInfo[playerid][pSlot][wslot] != 0 && PlayerInfo[playerid][pSlot][wslot] != 255)
	{
		format(string, sizeof(string), "[Античит]: %s был кикнут за подозрение в читерстве. Причина: cпавн оружия", PlayerInfo[playerid][pName]);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		//GKick(playerid);
		return true;
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
   			PlayerInfo[playerid][pWarns] += 1;
	    	if(PlayerInfo[playerid][pWarns] >= 3)
	    	{
	    		format(string, sizeof(string), "[Античит]: %s был забанен за использование читов [3 предупреждения]", PlayerInfo[playerid][pName]);
		    	SendClientMessageToAll(COLOR_LIGHTRED, string);
		    	PlayerInfo[playerid][pMember] = 0;
		    	PlayerInfo[playerid][pLeader] = 0;
		    	PlayerInfo[playerid][pLocked] = 1;
		    	GKick(playerid);
 	    		return true;
    		}
  			format(string,sizeof(string), "[Античит]: %s получил Warn за использование читов",PlayerInfo[playerid][pName]);
    		SendClientMessageToAll(COLOR_LIGHTRED, string);
		    PlayerInfo[playerid][pMember] = 0;
		    PlayerInfo[playerid][pLeader] = 0;
		    GKick(playerid);
		    return true;
     	}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
			new Float:posx, Float:posy, Float:posz;
			GetPlayerPos(playerid, posx, posy, posz);
			if(posz >= 9)
			{
			    new animlib[30], animname[30];
				if(strcmp(animlib, "SWIM", true) == 0 && strcmp(animname, "SWIM_crawl", true) == 0)
				{
					new sendername[24];
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[playerid][pAntiCheat] += 1;
					return true;
				}
			}
		}
	}
	//AntiRemovePlayerFromVehicle(playerid);
	/*if(PlayerInfo[playerid][pAntiCheat] > 25)
	{
		if(PlayerInfo[playerid][pAdmin] == 0)
		PlayerInfo[playerid][pAntiCheat] = 0;
        SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (#01122)");
        SendClientMessage(playerid, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
		GKick(playerid);
		return true;
	}*/
	/*
	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if(WatchingTV[playerid] != 1)
	{
		if(!GetPVarInt(playerid, "NoAB"))
	    {
			if(!IsPlayerInAnyVehicle(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] == 0)
				{
					if(strcmp(animlib, "PED", true) == 0 && strcmp(animname, "RUN_PLAYER", true) == 0 && PlayerInfo[playerid][pAdmin] != 0)
					{
			            SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (#01122)");
			            SendClientMessage(playerid, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
						GKick(playerid);
						return true;
					}
				}
			}
		}
	}*/
	return true;
}
stock DelGun(playerid)
{
	ResetPlayerWeapons(playerid);
	PlayerInfo[playerid][pSlot][0] = 0;
	PlayerInfo[playerid][pSlot][1] = 0;
	PlayerInfo[playerid][pSlot][2] = 0;
	PlayerInfo[playerid][pSlot][3] = 0;
	PlayerInfo[playerid][pSlot][4] = 0;
	PlayerInfo[playerid][pSlot][5] = 0;
	PlayerInfo[playerid][pSlot][6] = 0;
	PlayerInfo[playerid][pSlot][7] = 0;
	PlayerInfo[playerid][pSlot][8] = 0;
	PlayerInfo[playerid][pSlot][9] = 0;
	PlayerInfo[playerid][pSlot][10] = 0;
	PlayerInfo[playerid][pSlot][11] = 0;
	PlayerInfo[playerid][pSlot][12] = 0;
	PlayerInfo[playerid][pSlotammo][0] = 0;
	PlayerInfo[playerid][pSlotammo][1] = 0;
	PlayerInfo[playerid][pSlotammo][2] = 0;
	PlayerInfo[playerid][pSlotammo][3] = 0;
	PlayerInfo[playerid][pSlotammo][4] = 0;
	PlayerInfo[playerid][pSlotammo][5] = 0;
	PlayerInfo[playerid][pSlotammo][6] = 0;
	PlayerInfo[playerid][pSlotammo][7] = 0;
	PlayerInfo[playerid][pSlotammo][8] = 0;
	PlayerInfo[playerid][pSlotammo][9] = 0;
	PlayerInfo[playerid][pSlotammo][10] = 0;
	PlayerInfo[playerid][pSlotammo][11] = 0;
	PlayerInfo[playerid][pSlotammo][12] = 0;
	return true;
}
stock SaveWeapon(playerid)
{
	GetPlayerWeaponData(playerid,0,PlayerInfo[playerid][pSlot][0],PlayerInfo[playerid][pSlotammo][0]);
	GetPlayerWeaponData(playerid,1,PlayerInfo[playerid][pSlot][1],PlayerInfo[playerid][pSlotammo][1]);
	GetPlayerWeaponData(playerid,2,PlayerInfo[playerid][pSlot][2],PlayerInfo[playerid][pSlotammo][2]);
	GetPlayerWeaponData(playerid,3,PlayerInfo[playerid][pSlot][3],PlayerInfo[playerid][pSlotammo][3]);
	GetPlayerWeaponData(playerid,4,PlayerInfo[playerid][pSlot][4],PlayerInfo[playerid][pSlotammo][4]);
	GetPlayerWeaponData(playerid,5,PlayerInfo[playerid][pSlot][5],PlayerInfo[playerid][pSlotammo][5]);
	GetPlayerWeaponData(playerid,6,PlayerInfo[playerid][pSlot][6],PlayerInfo[playerid][pSlotammo][6]);
	GetPlayerWeaponData(playerid,7,PlayerInfo[playerid][pSlot][7],PlayerInfo[playerid][pSlotammo][7]);
	GetPlayerWeaponData(playerid,8,PlayerInfo[playerid][pSlot][8],PlayerInfo[playerid][pSlotammo][8]);
	GetPlayerWeaponData(playerid,9,PlayerInfo[playerid][pSlot][9],PlayerInfo[playerid][pSlotammo][9]);
	GetPlayerWeaponData(playerid,10,PlayerInfo[playerid][pSlot][10],PlayerInfo[playerid][pSlotammo][10]);
	GetPlayerWeaponData(playerid,11,PlayerInfo[playerid][pSlot][11],PlayerInfo[playerid][pSlotammo][11]);
	GetPlayerWeaponData(playerid,12,PlayerInfo[playerid][pSlot][12],PlayerInfo[playerid][pSlotammo][12]);
}
stock RemovePlayerFromVehicleAc(playerid)
{
    RemovePlayerFromVehicle(playerid);
	timer[playerid] = SetTimer("AntiRemovePlayerFromVehicle", 5000, false);
}
public AntiRemovePlayerFromVehicle(playerid)
{
    if(PlayerInfo[playerid][pAdmin] == 0)
	{
		if(GetPlayerState(playerid) == 2)
        {
            //SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (#4444)");
            //SendClientMessage(playerid, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
            new name[MAX_PLAYER_NAME];
		    new string[71];
    		GetPlayerName(playerid, name, sizeof(name));
    		format(string, sizeof(string), "На %s среагировал античит. (Выкид из тс)",name);
            ABroadCast(COLOR_YELLOW,string,1);
            RemovePlayerFromVehicleAc(playerid);
            //GKick(playerid);
        }
	}
}
stock UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		gCarLock[carid] = 0;
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
		SetVehicleParamsForPlayer(carid,i, 0, 0);
	}
}
stock Menu()
{
	ChoseSkin = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(ChoseSkin, 0, "Choose Skin");
	AddMenuItem(ChoseSkin, 0, ">> Next");
	AddMenuItem(ChoseSkin, 0, "Done");
	bomj[0] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(bomj[0], 0, "Choose Skin");
	AddMenuItem(bomj[0], 0, ">> Next");
	AddMenuItem(bomj[0], 0, "Save");
	bomj[1] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(bomj[1], 0, "Choose Skin");
	AddMenuItem(bomj[1], 0, ">> Next>");
	AddMenuItem(bomj[1], 0, "Save");
	skinshopmagaz[0] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(skinshopmagaz[0], 0, "Choose Skin");
	AddMenuItem(skinshopmagaz[0], 0, ">> Next");
	AddMenuItem(skinshopmagaz[0], 0, "<< Previous");
	AddMenuItem(skinshopmagaz[0], 0, "Buy");
	AddMenuItem(skinshopmagaz[0], 0, "Exit");
	skinshopmagaz[1] = CreateMenu("Victim", 1, 50.0, 160.0, 100.0);
	SetMenuColumnHeader(skinshopmagaz[1], 0, "Choose Skin");
	AddMenuItem(skinshopmagaz[1], 0, ">> Next");
	AddMenuItem(skinshopmagaz[1], 0, "<< Previous");
	AddMenuItem(skinshopmagaz[1], 0, "Buy");
	AddMenuItem(skinshopmagaz[1], 0, "Exit");
	hatmenu = CreateMenu("ACCESSORIES SHOP", 1, 0.0, 230.0, 150.0, 150.0);
	AddMenuItem(hatmenu, 0, "Hats");
	AddMenuItem(hatmenu, 0, "Glasses");
	AddMenuItem(hatmenu, 0, "Masks");
	AddMenuItem(hatmenu, 0, "Watches");
	AddMenuItem(hatmenu, 0, "Torso");
	AddMenuItem(hatmenu, 0, "Other");
	AddMenuItem(hatmenu, 0, "Exit");
	hatmenu2 = CreateMenu("ACCESSORIES SHOP", 1, 0.0, 230.0, 150.0, 150.0);
	AddMenuItem(hatmenu2, 0, ">> Next");
	AddMenuItem(hatmenu2, 0, "<< Previous");
	AddMenuItem(hatmenu2, 0, "Buy");
	AddMenuItem(hatmenu2, 0, "Exit");
}
stock SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance)
{
    new Float:x,Float:y,Float:z,Float:a;
    GetPlayerPos(playerid, x, y,z);GetPlayerFacingAngle(playerid, a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
    SetPlayerPos(giveplayerid,x,y,z);SetPlayerFacingAngle(giveplayerid,a);
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return true;
}
stock SpeedVehicle(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
    return floatround(ST[3]);
}
stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return false;
	GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
    return floatround(ST[3]);
}
public UpdateSpeedometr()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerInAnyVehicle(i))
	    {
			new pln[MAX_PLAYER_NAME];
			GetPlayerName(i, pln, sizeof(pln));
	        new State = GetPlayerState(i);
	        new vehicleid = GetPlayerVehicleID(i);
	        new locked[32];
	        new Float: carhp;
	        new arrestered[16];
	        new enginee[32];
	        new lightss[32];
	        if(Lightsp[i] == 1) lightss = "~g~~h~Lights";
	        else lightss = "Lights";
	        if(EngineState[i] == true) enginee = "~g~~h~Engine";
	        else enginee = "Engine";
	        if(IsLocked[GetPlayerVehicleID(i)] == 1) locked = "~r~~h~Locked";
	        else locked = "~h~Unlocked";
	        if(Arrester[i] == true) arrestered = "~r~Max";
	        else arrestered = "Max";
	        GetVehicleHealth(vehicleid, carhp);
	        format(str1, sizeof(str1), "~h~%d", SpeedVehicle(i));
	        if(Fuell[vehicleid] <= 10) format(str2, sizeof(str2), "~r~%.1f", Fuell[vehicleid]);
	        else if(Fuell[vehicleid] <= 50) format(str2, sizeof(str2), "~y~%.1f", Fuell[vehicleid]);
	        else if(Fuell[vehicleid] <= 200) format(str2, sizeof(str2), "~g~%.1f", Fuell[vehicleid]);
	        if(carhp < 300) format(str9, sizeof(str9), "HP: ~r~%.0f%", carhp);
	        else if(carhp < 500) format(str9, sizeof(str9), "HP: ~y~%.0f%", carhp);
	        else if(carhp < 1009) format(str9, sizeof(str9), "HP: ~g~~h~%.0f%", carhp);
            if(carhp <= 249)
			{
			    if(PlayerOnDerby[i] != 0)
			    {
			        DestroyVehicle(GetPlayerVehicleID(i));
  					SetPlayerPos(i,-2115.8662,-443.6145,37.1052);
  					SetPlayerFacingAngle(i, 76.4112);
  					SetPlayerInterior(i, 0);
  					SetPlayerVirtualWorld(i, 0);
					PlayerOnDerby[i] = 0;
					if(DerbyAttend == 2)
					{
						new derbywinner2[MAX_PLAYER_NAME];
						GetPlayerName(i, derbywinner2, sizeof(derbywinner2));
						new iniFile = ini_openFile("gamefiles/derbylist.ini");
 						ini_removeKey(iniFile, "2.");
						ini_setString(iniFile, "2. ", derbywinner2);
						ini_closeFile(iniFile);
						SendClientMessage(i, TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 2-е место");
						SendClientMessage(i, TEAM_AZTECAS_COLOR, "Ваш приз: 10 000 вирт.");
						PlayerInfo[i][pCash] += 10000;
					}
				 	else if(DerbyAttend == 3)
					{
						new derbywinner3[MAX_PLAYER_NAME];
						GetPlayerName(i, derbywinner3, sizeof(derbywinner3));
						new iniFile = ini_openFile("gamefiles/derbylist.ini");
 						ini_removeKey(iniFile, "3.");
						ini_setString(iniFile, "3. ", derbywinner3);
						ini_closeFile(iniFile);
						SendClientMessage(i, TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 3-е место");
						SendClientMessage(i, TEAM_AZTECAS_COLOR, "Ваш приз: 5 000 вирт.");
						PlayerInfo[i][pCash] += 5000;
					}
					else
					{
					    new string[30];
         				new derbywinner[MAX_PLAYER_NAME];
         				GetPlayerName(i, derbywinner, sizeof(derbywinner));
         				format(string, sizeof(string), "%d.",DerbyAttend);
         				new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    			ini_removeKey(iniFile, string);
						ini_setString(iniFile, string, derbywinner);
						ini_closeFile(iniFile);
						SendClientMessage(i,TEAM_AZTECAS_COLOR,"Ваш транспорт загорелся и вы выбыли из мероприятия");
						format(string, sizeof(string), "Вы заняли %d-е место",DerbyAttend);
						SendClientMessage(i,TEAM_AZTECAS_COLOR,string);
						SendClientMessage(i,TEAM_AZTECAS_COLOR,"Спасибо за участие!");
					}
					DerbyAttend -= 1;
					if(DerbyAttend == 1)
					{
					    for(new k = 0; k < MAX_PLAYERS; k++)
					    {
					        if(PlayerOnDerby[k] != 0)
					        {
					            DestroyVehicle(GetPlayerVehicleID(k));
  								SetPlayerPos(k,-2115.8662,-443.6145,37.1052);
  								SetPlayerFacingAngle(k, 76.4112);
  								SetPlayerInterior(k, 0);
  								SetPlayerVirtualWorld(i, 0);
								PlayerOnDerby[k] = 0;
    							new derbywinner1[MAX_PLAYER_NAME];
    							GetPlayerName(k, derbywinner1, sizeof(derbywinner1));
								new iniFile = ini_openFile("gamefiles/derbylist.ini");
		    					ini_removeKey(iniFile, "1.");
								ini_setString(iniFile, "1. ", derbywinner1);
								ini_closeFile(iniFile);
								SendClientMessage(k, TEAM_AZTECAS_COLOR, "Поздравляем вы заняли 1-е место");
								SendClientMessage(k, TEAM_AZTECAS_COLOR, "Ваш приз: 15 000 вирт.");
								PlayerInfo[k][pCash] += 15000;
								DerbyAttend = 0;
							}
						}
					}
				}
			}
	        format(str3, sizeof(str3), "KM/H");
	        format(str4, sizeof(str4), "FUEL:");
	        format(str5, sizeof(str5), "%s", locked);
	        format(str6, sizeof(str6), "%s", arrestered);
	        format(str7, sizeof(str7), "%s", enginee);
	        format(str8, sizeof(str8), "Veh: ~g~~h~%s", VehicleNames[GetVehicleModel(GetPlayerVehicleID(i))-400]);
	        format(str10, sizeof(str10), "%s", lightss);
	        if(PlayerInfo[i][pAdmin] == 0)
	        if(State != PLAYER_STATE_PASSENGER)
	        if(SpeedVehicle(i) >= 320)
	        {
	            SendClientMessage(i, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (Превышение скоросного лимита)");
	            SendClientMessage(i, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
	            GKick(i);
	        }
	        if(Fuell[vehicleid] <= 0)
	        {
				if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsANoSpeed(vehicleid))
				{
			        Fuell[vehicleid] = 0;
					GameTextForPlayer(i, "~r~FUEL HAS ENDED", 5000, 3);
			        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			        SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			        EngineState[i] = false;
				}
	        }
			if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsANoSpeed(vehicleid))
			{
				if(SpeedVehicle(i) != 0) Fuell[vehicleid] -= 0.0050;
			}
	        TextDrawSetString(SpeedShow[i],str1);
	        TextDrawSetString(FuelShow[i],str2);
	        TextDrawSetString(KMShow[i],str3);
	        TextDrawSetString(FillShow[i],str4);
	        TextDrawSetString(StatusShow[i],str5);
	        TextDrawSetString(MaxShow[i],str6);
	        TextDrawSetString(EngineShow[i],str7);
	        TextDrawSetString(CarnameShow[i],str8);
	        TextDrawSetString(CarShow[i],str9);
	        TextDrawSetString(LightsShow[i],str10);
	    }
	}
}
new WebSites[][] = {".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(string[])
{
	for(new i = 0; i < sizeof(WebSites); i++)
	{
		if(strfind(string,WebSites[i],true) != -1)
		{
			return true;
		}
  	}
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[])
{
    for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++)
    {
        switch(str[cIP[0]])
        {
            case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
            case '0' .. '9': cIP[1]++;
		}
		if(cIP[1] ==1){ cIP[2] = cIP[0];}
		if(cIP[1] >= 8)
		{
			new strx[16];
			new l[4][4];
			cIP[3] = cIP[0]+8;
			strmid(strx,str,cIP[2],cIP[3],16);
			for(new i = strlen(strx); i > 8; i--)
			{
				switch(strx[i])
				{
					case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
					default: strx[i] =0;
				}
			}
			for(new i = 0 ; i < sizeof(delimiters); i++)
			{
				split(strx,l,delimiters[i]);
				if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1)
				{
					continue;
				}
				if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3)
				{
					continue;
				}
				else
				{
					return true;
				}
			}
		}
	}
    return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
   	new Float: carhp;
   	if(PlayerInfo[playerid][pProcents] <= 0)
	{
	  	if(GetPlayerVehicleID(playerid) == caridhouse[playerid])
	    {
			GameTextForPlayer(playerid,"~r~ENGINE HAS BROKEN", 5000, 3);
			PlayerInfo[playerid][pProcents] = 0;
		}
 	}
	GetVehicleHealth(vehicleid, carhp);
	if(RCController[playerid] == 1 && carhp < 250)
	{
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		CreateExplosion(X, Y, Z, 12, 10.0);
		ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",0,0,0,0,1,1);
	  	SendClientMessage(playerid,COLOR_GREY,"Сигнал пропал");
	  	RCController[playerid] = 0;
 	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[i])
		{
			if(carhp > 100 && carhp < 700)
			{
			    switch(random(3))
			    {
			        case 1: return true;
			        case 2: return true;
			        case 3: PlayerInfo[i][pProcents] -= 1;
				}
			}
		}
	}
    return true;
}
stock StartSpectate(playerid, specid)
{
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && gSpectateID[x] == playerid)
		{
			AdvanceSpectate(x);
		}
	}
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
	}
	new ping = GetPlayerPing(specid);
	new Float:health;
	GetPlayerHealth(specid, health);
	new string[128], name[MAX_PLAYER_NAME];
	GetPlayerName(specid,name,sizeof(name));
	new lvl = PlayerInfo[specid][pLevel];
	new warns = PlayerInfo[specid][pWarns];
	format(string,sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~w~Name: %s~n~ID: %d~n~LVL: %d Warns: %d~n~HP: %.0f~r~PING: %d", name,specid,lvl,warns,health,ping);
	GameTextForPlayer(playerid,string,60000,3);
	return true;
}
stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	gSpectateID[playerid] = INVALID_PLAYER_ID;
	gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Recon Stop",1000,3);
	return true;
}
stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid);
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && gSpectateID[playerid] != INVALID_PLAYER_ID)
	{
		for(new x = gSpectateID[playerid]+1; x <= GetMaxPlayers(); x++)
		{
			if(x == MAX_PLAYERS)
			{
				x = 0;
			}
			if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && gSpectateID[x] != INVALID_PLAYER_ID ||
				(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return true;
}
stock ConnectedPlayers()
{
	new count;
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
	    if(IsPlayerConnected(x)) count ++;
	}
	return count;
}
stock ChangeName(playerid)
{
	new plnamep[MAX_PLAYER_NAME];
	new string[80];
	new key = PlayerInfo[playerid][pPHousekey];
	if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(plnamep, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
	{
		strmid(HouseInfo[key][hOwner], changenam, 0, strlen(changenam), 255);
	}
	key = PlayerInfo[playerid][pPBiskey];
	if(key != 255)
	{
		if(key > 100)
		{
			key -= 100;
			strmid(SBizzInfo[key][sbOwner], changenam, 0, strlen(changenam), 255);
		}
		else strmid(BizzInfo[key][bOwner], changenam, 0, strlen(changenam), 255);
		OnPropUpdate();
	}
	GetPlayerName(playerid,plnamep,sizeof(plnamep));
	SetPlayerName(playerid, changenam);
	format(string,sizeof(string), "%s.ini",plnamep);
	dini_Remove(string);
	format(string,sizeof(string), "%s сменил имя на %s",plnamep,changenam);
	SendClientMessage(playerid, COLOR_WHITE, "Пропишите новый ник в окне Samp");
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	PlayerInfo[playerid][pCheckip] = 0;
	return true;
}
public CountEx()
{
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		if(IsPlayerConnected(x))
		{
			if(PlayerEx[x][ChekEx] == PlayerEx[x][TickEx])
			{
				if(PlayerEx[x][pSpawnEx] == true)
				{
					PlayerEx[x][AFKEx] = true;
				}
			}
			PlayerEx[x][ChekEx] = PlayerEx[x][TickEx];
		}
	}
	return true;
}
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 100, "%d:%02dm:%02ds", hours, mins, secs);
	}
	else
	{
		format(string, 100, "%d:%02d", mins, secs);
	}
	return string;
}
stock AFKProcessor()
{
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		if(IsPlayerConnected(x))
		{
			if(PlayerEx[x][ChekEx] < PlayerEx[x][TickEx])
			{
				if(PlayerEx[x][AFKEx] == true)
				{
					PlayerEx[x][VarEx] = 0;
					PlayerEx[x][AFKEx] = false;
				}
			}
			if(PlayerEx[x][AFKEx] == true)
			{
				PlayerEx[x][VarEx] ++;
			}
			if(PlayerInfo[x][pAdmin] <= 3)
			{
				if(PlayerEx[x][VarEx] > 1200)
				{
					OnPlayerUpdateAc(x);
					PlayerEx[x][VarEx] = 0;
					SendClientMessage(x, COLOR_LIGHTRED, "Вы были отсоеденены от сервера! (AFK)");
					GKick(x);
				}
			}
			if(PlayerEx[x][VarEx] > 1)
			{
				new string[32];
				format(string,sizeof(string), "[AFK] [%d секунд]", PlayerEx[x][VarEx]);
				SetPlayerChatBubble(x, string, COLOR_GREEN, 30.0, 1200);
			}
		}
	}
}
stock CheckHealth()
{
    for(new i = 0; i < MaxPlayers; i++)
    {
    	new Float: Health;
     	GetPlayerHealth(PlayerIDs[i], Health);
      	if(PlayerHealth[PlayerIDs[i]] < Health) SetPlayerHealth(PlayerIDs[i], PlayerHealth[PlayerIDs[i]]);
		else PlayerHealth[PlayerIDs[i]] = Health;
	}
	return true;
}
stock SetPlayerHealthAC(playerid, Float: Health)
{
    if(IsPlayerConnected(playerid))
    {
        PlayerHealth[playerid] = Health;
        SetPlayerHealth(playerid, Health);
    }
    return true;
}
stock CheckArmour()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            new Float:armour;
			GetPlayerArmour(i, armour);
            if(Armour[i] < armour)
        	{
            	SetPlayerArmour(i, Armour[i]);
        	}
        	else
        	{
            	Armour[i] = armour;
        	}
        }
    }
    return true;
}
stock SetPlayerArmourAC(playerid, Float: Arm)
{
    if(IsPlayerConnected(playerid))
    {
        Armour[playerid] = Arm;
        SetPlayerArmour(playerid, Arm);
    }
    return true;
}
public CheckForCheater(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,20,610.9915,-11.1024,1000.9219))
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(!player_NoCheckTimeVeh[playerid])
			{
				GetVehicleHealth(GetPlayerVehicleID(playerid),player_VehHealth[playerid]);
				if(PlayerInfo[playerid][pAdmin] == 0)
				if(player_VehHealth[playerid] > HealthVeh[playerid])
				{
					if(IsPlayerInRangeOfPoint(playerid,7.5,2064.2842,-1831.4736,13.5469)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,487.6401,-1739.9479,11.1385)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,1024.8651,-1024.0870,32.1016)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,617.5467,-2.0437,1000.5823)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,615.2847,-124.2390,997.6888)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-1904.7019,284.5968,41.0469)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-2425.7822,1022.1392,50.3977)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-1420.5195,2584.2305,55.8433)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,-99.9417,1117.9048,19.7417)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,1975.2384,2162.5088,11.0703)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,720.0854,-457.8807,16.3359)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					if(IsPlayerInRangeOfPoint(playerid,7.5,615.9690,-75.0127,997.9922)) { player_NoCheckTimeVeh[playerid] = 3; return true; }
					//SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве! (#0404)");
            		//SendClientMessage(playerid, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
                    new name[MAX_PLAYER_NAME];
					new string[70];
            		GetPlayerName(playerid, name, sizeof(name));
            		format(string, sizeof(string), "На %s среагировал античит. (Починка тс)",name);
                    ABroadCast(COLOR_YELLOW,string,1);
					//GKick(playerid);
				}
			}
			else player_NoCheckTimeVeh[playerid] -= 1;
			GetVehicleHealth(GetPlayerVehicleID(playerid),HealthVeh[playerid]);
		}
	}
	return true;
}
stock AnRepairVehicle(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
	        {
	            player_NoCheckTimeVeh[i] = 3;
			}
		}
	}
	RepairVehicle(vehicleid);
 	return true;
}
public LicClose()
{
	MoveObject(LicGate,-2070.0000, -129.7411, 35.0000, 3.0, 0.00, 90.00, 90.00);
}
public LspdsClose()
{
	MoveObject(LspdsGate,1544.6929, -1630.8207, 13.1704, 3.0, 0.00, 90.00, 90.00);
}
stock GetPlayerID(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i) == 1)
        {
            new testname[MAX_PLAYER_NAME];
            GetPlayerName(i, testname, sizeof(testname));
            if(strcmp(testname, string, true, strlen(string)) == 0)
            {
                return i;
            }
        }
    }
    return INVALID_PLAYER_ID;
}
stock UpdateCost(playerid)
{
    new rand = 100 + random(1000);
    Sellbenz[0] += rand;
    Sellbenz[1] += rand;
    Sellugol[0] += rand;
    Sellugol[1] += rand;
    Sellderevo[0] += rand;
    Sellderevo[1] += rand;
    Benzbuy[0] += rand;
    Benzbuy[1] += rand;
    ugolbuy[0] += rand;
    ugolbuy[1] += rand;
    Buyderevo[0] += rand;
    Buyderevo[1] += rand;
    new string[60];
    format(string, sizeof(string), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
    Update3DTextLabelText(Doki[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
    Update3DTextLabelText(Doki[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
    Update3DTextLabelText(GasZavod[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
    Update3DTextLabelText(GasZavod[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
    Update3DTextLabelText(Sklad[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Cклад угля №2\nЦена за тонну: %d",ugolbuy[1]);
    Update3DTextLabelText(Sklad[1][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
    Update3DTextLabelText(Derevobuy[0][playerid],0xFFFF00FF,string);
    format(string, sizeof(string), "Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
    Update3DTextLabelText(Derevobuy[1][playerid],0xFFFF00FF,string);
    return true;
}
stock Expirence(playerid)
{
    new exp = PlayerInfo[playerid][pDExp];
    new nxtlevel = PlayerInfo[playerid][pDLevel]+1;
    new expamount = nxtlevel*levelDexp;
    if(exp == expamount)
    {
        PlayerInfo[playerid][pDLevel] += 1;
        PlayerInfo[playerid][pDMgruz] *= 2;
        PlayerInfo[playerid][pDExp] = 0;
        return true;
    }
    return true;
}
stock PrintFermInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
    {
        for(new f = 0; f < sizeof(FermInfo); f++)
        {
            new mafiatext[7];
            switch(FermInfo[targetid][fMafia])
            {
	            case 0: { mafiatext = "Нет"; }
	            case 5: { mafiatext = "LCN"; }
	            case 6: { mafiatext = "Yakuza"; }
	            case 14: { mafiatext = "RM"; }
            }
            new prod[10];
            switch(FermInfo[targetid][fProdukt])
            {
	            case 0: { prod = "Нет"; }
	            case 1: { prod = "хлеб"; }
	            case 2: { prod = "марихуана"; }
	            case 3: { prod = "картошка"; }
            }
            new string[550];
            format(string,sizeof(string), "Владелец: %s\nПартнёры: %s\nБаланс банка Фермы: %d\nЦена за работу: %d\n\nЦена зерна: %d\nЗерна закуплено: %d / 10000\nЗерна засеяно: %d / 5000\nПродоваемый Продукт: %s \nКоличество на складе: %d / 10000\nЦена продукта: %d\n\nЗаместитель: %s\nЗаместитель: %s\nЗаместитель: %s\n\nФермер: %s\nФермер: %s\nФермер: %s\nФермер: %s\nФермер: %s\n",
            FermInfo[targetid][fOwner],mafiatext,FermInfo[targetid][fTill],FermInfo[targetid][fEntranceCost],FermInfo[targetid][fCenazerno],FermInfo[targetid][fzernozakup],FermInfo[targetid][fzernoseiano],prod,FermInfo[targetid][fcolichestvozerna],FermInfo[targetid][fcenaprod],FermInfo[f][f1zams],FermInfo[f][f2zams],FermInfo[f][f3zams],FermInfo[f][f1fermers],FermInfo[f][f2fermers],FermInfo[f][f3fermers],FermInfo[f][f4fermers],FermInfo[f][f5fermers]);
            ShowPlayerDialog(playerid,10111,DIALOG_STYLE_MSGBOX, "Информация о Ферме",string, "Готово", "");
        }
    }
}
public Collection(playerid,objectid)
{
    TogglePlayerControllable(playerid, 1);
    ClearAnim(playerid);
    SetPlayerAttachedObject(playerid, 3,2247, 6, 0.003288, 0.105444, 0.187527, 1.000000,1.000000,1.000000,1.000000,1.000000);
    DisablePlayerCheckpoint(playerid);
    CollectionStarted[playerid] = 2;
    WithBush[playerid] = true;
    KillTimer(Collectionit[playerid]);
    return true;
}
stock ToDevelopSkills(Slashes,Points)
{
    new SlashesAndPoints[400];
    new Slash[2] = "|";
    new Point[2] = "'";
    for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
    for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
    return SlashesAndPoints;
}
stock ToDevelopRating(Slashes,Points)
{
    new SlashesAndPoints[400];
    new Slash[2] = "|";
    new Point[2] = "'";
    for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
    for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
    return SlashesAndPoints;
}
stock SetPlayerSkills(playerid)
{
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, PlayerInfo[playerid][pGunSkill][6]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, PlayerInfo[playerid][pGunSkill][7]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, PlayerInfo[playerid][pGunSkill][8]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, PlayerInfo[playerid][pGunSkill][9]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pGunSkill][10]*10);
    return true;
}
stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
    if(newammo < oldammo)
    {
        switch(GetPlayerWeapon(playerid))
        {
            case 24:
            {
                SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
                if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PlayerInfo[playerid][pGunSkill][1] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][1]++;
                    SetPVarInt(playerid, "SkillD",0);
                }
            }
            case 23:
            {
                SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
                if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL && PlayerInfo[playerid][pGunSkill][0] < 100)
                {
                     PlayerInfo[playerid][pGunSkill][0]++;
                     SetPVarInt(playerid, "SkillSD",0);
                }
            }
            case 22:
            {
                SetPVarInt(playerid, "SkillP",GetPVarInt(playerid, "SkillP") +1);
                if(GetPVarInt(playerid, "SkillP")>= Ammo_PISTOL && PlayerInfo[playerid][pGunSkill][7] < 100)
                {
                     PlayerInfo[playerid][pGunSkill][7]++;
                     SetPVarInt(playerid, "SkillP",0);
                }
            }
            case 25:
            {
                SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
                if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PlayerInfo[playerid][pGunSkill][2] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][2]++;
                    SetPVarInt(playerid, "SkillShot",0);
                }
            }
            case 26:
            {
                SetPVarInt(playerid, "SkillSawnoff",GetPVarInt(playerid, "SkillSawnoff") +1);
                if(GetPVarInt(playerid, "SkillSawnoff") >= Ammo_SAWNOFF && PlayerInfo[playerid][pGunSkill][6] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][6]++;
                    SetPVarInt(playerid, "SkillSawnoff",0);
                }
            }
            case 27:
            {
                SetPVarInt(playerid, "SkillSPAS",GetPVarInt(playerid, "SkillSPAS") +1);
                if(GetPVarInt(playerid, "SkillSPAS") >= Ammo_SPAS12 && PlayerInfo[playerid][pGunSkill][8] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][8]++;
                    SetPVarInt(playerid, "SkillSPAS",0);
                }
            }
            case 28:
            {
                SetPVarInt(playerid, "SkillUZI",GetPVarInt(playerid, "SkillUZI") +1);
                if(GetPVarInt(playerid, "SkillUZI") >= Ammo_UZI && PlayerInfo[playerid][pGunSkill][9] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][9]++;
                    SetPVarInt(playerid, "SkillUZI",0);
                }
            }
            case 29:
            {
                SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
                if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PlayerInfo[playerid][pGunSkill][3] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][3]++;
                    SetPVarInt(playerid, "SkillMP5",0);
                }
            }
            case 30:
            {
                SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
                if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PlayerInfo[playerid][pGunSkill][4] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][4]++;
                    SetPVarInt(playerid, "SkillAk47",0);
                }
            }
            case 31:
            {
                SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
                if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PlayerInfo[playerid][pGunSkill][5] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][5]++;
                    SetPVarInt(playerid, "SkillM4",0);
                }
            }
            case 32:
            {
                SetPVarInt(playerid, "SkillUZI",GetPVarInt(playerid, "SkillUZI") +1);
                if(GetPVarInt(playerid, "SkillUZI") >= Ammo_UZI && PlayerInfo[playerid][pGunSkill][9] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][9]++;
                    SetPVarInt(playerid, "SkillUZI",0);
                }
            }
            case 33..34:
            {
                SetPVarInt(playerid, "SkillRifle",GetPVarInt(playerid, "SkillRifle") +1);
                if(GetPVarInt(playerid, "SkillRifle") >= Ammo_RIFLE && PlayerInfo[playerid][pGunSkill][10] < 100)
                {
                    PlayerInfo[playerid][pGunSkill][10]++;
                    SetPVarInt(playerid, "SkillRifle",0);
                }
            }
        }
        OnPlayerUpdateAc(playerid);
    }
    return true;
}
stock ClearTotalGz()
{
    TotalGz[0] = 0;
    TotalGz[1] = 0;
    TotalGz[2] = 0;
    TotalGz[3] = 0;
    TotalGz[4] = 0;
    printr("ClearTotalGz");
}
stock SaveBoxer()
{
    new coordsstring[57];
    format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
    new File: file2 = fopen("gamefiles/boxer.ini", io_write);
    fwrite(file2, coordsstring);
    fclose(file2);
    return true;
}
stock IsWheelModel(modelid)
{
    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
    for(new i = 0; i < 17; i++)
	{
        if(modelid == wheelmodels[i])
        return true;
    }
    return false;
}
stock IsLegalCarNitroIde(carmodel)
{
    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
    for(new i = 0; i < 29; i++)
	{
        if(carmodel == illegalvehs[i])
        return true;
    }
    return false;
}
stock IsLegal_Nos_Vehicle(PlayerID)
{
    new carid = GetPlayerVehicleID(PlayerID);
    new playercarmodel = GetVehicleModel(carid);
    return IsLegalCarNitroIde(playercarmodel);
}
stock IsLegalCarMod(vehicleide, componentid)
{
    new modok = false;
    if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
	    new nosblocker = IsLegalCarNitroIde(vehicleide);
		if(!nosblocker)
		modok = true;
	}
	else
	{
        for(new I = 0; I < 48; I++)
		{
            if(legalmods[I][0] == vehicleide)
			{
                for(new J = 1; J < 22; J++)
				{
                    if(legalmods[I][J] == componentid)
                    modok = true;
                }
            }
        }
    }
    return modok;
}
stock OnVehicleMod(playerid, vehicleid, componentid)
{
    new vehicleide = GetVehicleModel(vehicleid);
    new modok = IsLegalCarMod(vehicleide, componentid);
	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pCar] == 462)
	{
	    if(!modok)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (#04223)");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Удалите чит программу, чтобы продолжить игру на сервере");
			RemoveVehicleComponent(vehicleid,componentid);
			GKick(playerid);
			return true;
	    }
	}
    return true;
}
stock AdvertList(playerid)
{
	new full, str[128], strrr[2048];
	switch(PlayerInfo[playerid][pMember])
	{
		case 16: full = 0;
		case 9: full = 1;
		case 20: full = 2;
	}
	for(new i = 1; i <= TOTALADVERT[full]; i++)
	{
		format(str, sizeof(str), "[%i] Текст: %s. Прислал: %s\n",i, AdvertInfo[i][full][adText], AdvertInfo[i][full][adName]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, 69, 0, "Объявления", "    Новых объявлений нет", "Назад", "");
	ShowPlayerDialog(playerid, 11518, 2, "Объявления", strrr, "Принять", "Отмена");
	return true;
}
public ServerName()
{
    SendRconCommand("mapname SA 2013");
    SendRconCommand("hostname [RU] NextAgeRP [0.3z]");
    SendRconCommand("gamemodetext NextAgeRP");
	/*new var = random(5);
	switch (var)
	{
		case 0: SendRconCommand("mapname SA 2013");
	}
	new rand = random(2);
	switch (rand)
	{
		case 0: SendRconCommand("hostname [RU] NextAgeRP|0.3z|5lvl + 10kk и не только");
	}
	new rand1 = random(2);
	switch (rand1)
	{
		case 0: SendRconCommand("gamemodetext NextAgeRP");
	}*/
}
public AntiBunny(playerid)
{
    ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
    //ApplyAnimation(playerid, "BIKED", "BIKEd_getoffBACK",4.1,0,0,0,0,0);
    times[playerid] = false;
    SetTimerEx("AntiBunnyHop",1000,false, "i",playerid);
    return true;
}
public AntiBunnyHop(playerid)
{
    times[playerid] = true;
}
stock Stavkarul1right(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 1..36:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=3;
		}
		case 37..39:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 0:
		{
			fishechkax[playerid]+=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] =2;
		}
		case 40,41:
		{
			fishechkax[playerid]+=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 42:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 43..47:
		{
			fishechkax[playerid]+=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 48:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
	}
	return true;
}
stock Stavkarul1left(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 4..39:
		{
			fishechkax[playerid]-=0.152;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=3;
		}
		case 41,42:
		{
			fishechkax[playerid]-=0.608;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
	case 44..48:
		{
			fishechkax[playerid]-=0.3;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
		case 43:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
		case 1..3:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 40:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
stock Stavkarul1up(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 1,2,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38:
		{
			fishechkay[playerid]+=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] +=1;
		}
		case 40..42:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =0;
			}
		}
		case 3,6:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
		case 9,12:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.4469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.8387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =44;
			}
		}
		case 15,18:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
		case 21,24:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.0469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.4386;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =46;
			}
		}
		case 27,30:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =47;
			}
		}
		case 33,36:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.6469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2232.0387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =48;
			}
		}
		case 43,44:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 45,46:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =41;
			}
		}
		case 47,48:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =42;
			}
		}
	}
	return true;
}
stock Stavkarul1down(playerid)
{
	switch(NumberFishka[playerid])
	{
		case 2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24,26,27,29,30,32,33,35,36,38,39:
		{
			fishechkay[playerid]-=0.25;
			SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
			NumberFishka[playerid] -=1;
		}
		case 1,4,7,10:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.2783;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.6701;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =40;
			}
		}
		case 40:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.1469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.5387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =43;
			}
		}
		case 41:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2242.7469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.1387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] =45;
			}
		}
		case 42:
		{
			fishechkay[playerid]=1618.8292;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid]=2243.3469;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 47;
			}
			else if (RuletkaStol[playerid] ==1)
			{
				fishechkax[playerid]=2231.7387;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 47;
			}

		}
		case 43..48:
		{
			fishechkay[playerid]=1619.5603;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid]=2241.9082;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 0;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2230.2999;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 0;
			}
		}
		case 13,16,19,22:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid] == 2)
			{
				fishechkax[playerid] = 2242.8863;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 41;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.2781;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 41;
			}
		}
		case 25,28,31,34:
		{
			fishechkay[playerid]=1619.0749;
			if (RuletkaStol[playerid]==2)
			{
				fishechkax[playerid]=2243.4943;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 42;
			}
			else if (RuletkaStol[playerid]==1)
			{
				fishechkax[playerid]=2231.886;
				SetObjectPos(Fishka[playerid],fishechkax[playerid],fishechkay[playerid], 1006.0690);
				NumberFishka[playerid] = 42;
			}
		}
	}
	return true;
}
forward RuletCheck2();
public RuletCheck2()
{
	new string[50];
	new ruletikF;
	new Slotrulet1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RuletStart[i] == true)
		{
			if(RuletkaStol[i] == 2)
			{
				if(IsPlayerConnected(i))
				{
					if(KrupieStart[1] == true)
					{
						if(KrupieTime[1] <= 50)
						{
							ruletikF = 0 +random(36);
							KrupieTime[1] += 1;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==11 || ruletikF ==13 || ruletikF ==15 || ruletikF ==17 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==29 || ruletikF ==31 || ruletikF ==33 || ruletikF ==35)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
						}
						else
						{
							ruletikF = 0 +random(36);
							KrupieStart[1] = false;
							RuletStart[i] = false;
							if (ruletikF ==0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							if (ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 1;
							}
							else if (ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 2;
							}
							else
							{
								Slotrulet1 = 3;
							}
							KrupieStart[1] = false;
							KrupieTime[1] = 0;
							Vidrulvigr[1] = true;
						}
					}
				}
			}
		}
	}
	new RuletVidachaDen[MAX_PLAYERS];
	new RuletikProv[MAX_PLAYERS];
	for(new h = 0; h < MAX_PLAYERS; h++)
	{
		if(RuletkaStol[h] == 2)
		{
			if(Vidrulvigr[1] == true)
			{
				if(RuletTip[h] <= 37 && RuletTip[h] >= 1)
				{
					RuletikProv[h] = RuletTip[h] -1;
					if(RuletikProv[h] == ruletikF)
					{
						RuletVidachaDen[h] = RuletSum[h] *20;
						PlayerInfo[h][pCash] += RuletVidachaDen[h];
						GivePlayerMoney(h,RuletVidachaDen[h]);
						format(string, sizeof(string), "Выпало число %d. Вы выиграли %d вирт!",ruletikF,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new k = 0; k < MAX_PLAYERS; k++)
	{
		if(Vidrulvigr[1] == true)
		{
  			if(krupiedi[1] == k && RuletStart[k] == false)
			{
				format(string, sizeof(string), "Выпало число %d!",ruletikF);
				SendClientMessage(k, COLOR_YELLOW, string);
			}
			if(RuletkaStol[k] == 2)
			{
				if (RuletTip[k] == 38 || RuletTip[k] == 39)
				{
					if (Slotrulet1 == 1 && RuletTip[k]==38)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;

						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выиграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else if (Slotrulet1 == 2 && RuletTip[k]==39)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;

						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выиграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new m = 0; m < MAX_PLAYERS; m++)
	{
		if(Vidrulvigr[1] == true)
		{
			if(RuletkaStol[m] == 2)
			{
				if(RuletTip[m] == 40)
				{
					if(ruletikF >= 1 && ruletikF <= 12)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 41)
				{
					if(ruletikF >= 13 && ruletikF <= 24)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 42)
				{
					if(ruletikF >= 25 && ruletikF <= 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 43)
				{
					if(ruletikF >= 1 && ruletikF <= 18)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 44)
				{
					if(ruletikF >= 19 && ruletikF <= 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 45)
				{
					if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 30 || ruletikF == 32 || ruletikF == 34 || ruletikF == 36)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 46)
				{
					if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF == 27 || ruletikF == 29 || ruletikF == 31 || ruletikF == 33 || ruletikF == 35)
					{
						RuletVidachaDen[m] = RuletSum[m] *2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 47)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 3,6,9,12,15,18,21,24,27,30,33,36:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] ==48)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 2,5,8,11,14,17,20,23,26,29,32,35:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if (resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 49)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 1,4,7,10,13,16,19,22,25,28,31,34:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if (resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	if(Vidrulvigr[1] == true)
	{
		Vidrulvigr[1] = false;
		ruletikF = 0;
		KillTimer(RuletTimer2);
		for(new l = 0; l < MAX_PLAYERS; l++)
		{
			if(RuletkaStol[l] ==2)
			{
				new kollidn = krupiedi[1];
				PlayerInfo[kollidn][pKazpay]+=RuletSum[l]/50;
				switch(kaligmaf1)
				{
					case 5:
					{
						MafiaBank[0][nLcn]+=RuletSum[l]/70;
					}
					case 6:
					{
						MafiaBank[0][nYakuza]+=RuletSum[l]/70;
					}
					case 14:
					{
						MafiaBank[0][nRm]+=RuletSum[l]/70;
					}
				}
				DestroyObject(Fishka[l]);
				Fishka[l] = CreateObject(1913,fishechkax[l],fishechkay[l],1006.0690,0.00,0.00,0.00);
				Upravakazino[l] = true;
				RuletTip[l] = 0;
				RuletSum[l] = 0;
				RuletStart[l] = false;
			}
		}
		krupiedi[1]=5000;
	}
	return true;
}
forward Kazvihod(playerid);
public Kazvihod(playerid)
{
	if (RuletStart[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_BLUE, "Вы отменили ставку");
		RuletTip[playerid] = 0;
		PlayerInfo[playerid][pCash] += RuletSum[playerid];
		RuletSum[playerid] = 0;
		RuletStart[playerid] = false;
	}
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	Kazkamera[playerid] =0;
	if(RuletkaStol[playerid] == 1) Maxis[0]-=1;
	else if (RuletkaStol[playerid] == 2) Maxis[1]-=1;
	RuletkaStol[playerid] = 0;
	Upravakazino[playerid] = false;
	DestroyObject(Fishka[playerid]);
	return true;
}
forward BarabanMovie();
public BarabanMovie()
{
	if (Barabanchik <= 500.00)
	{
		Barabanchik+=1.0;
		MoveObject(Braban[0],2229.5522,1619.2888,1006.1536,0.1,0.00,0.00,Barabanchik);
	}
	else
	{
		KillTimer(BarabanTimer[0]);
		Barabanchik =0.00;
	}
}
forward BarabanMovie2();
public BarabanMovie2()
{
	if (Barabanchik2 <= 500.00)
	{
		Barabanchik2 += 1.0;
		MoveObject(Braban[1],2241.1545,1619.2888,1006.1536,0.1,0.00,0.00,Barabanchik2);
	}
	else
	{
		KillTimer(BarabanTimer[1]);
		Barabanchik2 =0.00;
	}
}
stock SaveKazino()
{
	new string[64];
	new iniFile = ini_openFile("gamefiles/mafia.ini");
	format(string, sizeof(string), "Mafia");
	ini_setString(iniFile, string, kaligmaf);
	format(string, sizeof(string), "Mafianumber");
	ini_setInteger(iniFile, string, kaligmaf1);
	ini_closeFile(iniFile);
}
forward RuletCheck();
public RuletCheck()
{
	new string[50];
	new ruletikF;
	new Slotrulet1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(RuletStart[i] == true)
		{
			if(RuletkaStol[i] == 1)
			{
				if(IsPlayerConnected(i))
				{
					if(KrupieStart[0] == true)
					{
						if(KrupieTime[0] <= 50)
						{
							ruletikF = 0 +random(36);
							KrupieTime[0] += 1;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF ==27 || ruletikF == 30 || ruletikF == 32 || ruletikF == 34 || ruletikF == 36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
							else if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 29 || ruletikF == 31 || ruletikF == 33 || ruletikF == 35)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 50, 6);
							}
						}
						else
						{
							ruletikF = 0 + random(36);
							KrupieStart[0] = false;
							RuletStart[i] = false;
							if(ruletikF == 0)
							{
								format(string, sizeof(string), "~g~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if(ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~r~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							else if(ruletikF ==2 || ruletikF ==4 || ruletikF ==6 || ruletikF ==8 || ruletikF ==10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								format(string, sizeof(string), "~w~%d",ruletikF);
								GameTextForPlayer(i, string, 7000, 6);
							}
							if(ruletikF ==1 || ruletikF ==3 || ruletikF ==5 || ruletikF ==7 || ruletikF ==9 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==19 || ruletikF ==21 || ruletikF ==23 || ruletikF ==25 || ruletikF ==27 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 1;
							}
							else if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF ==12 || ruletikF ==14 || ruletikF ==16 || ruletikF ==18 || ruletikF ==20 || ruletikF ==22 || ruletikF ==24 || ruletikF ==26 || ruletikF ==28 || ruletikF ==30 || ruletikF ==32 || ruletikF ==34 || ruletikF ==36)
							{
								Slotrulet1 = 2;
							}
							else
							{
								Slotrulet1 = 3;
							}
							KrupieStart[0] = false;
							KrupieTime[0] = 0;
							Vidrulvigr[0] = true;
						}
					}
				}
			}
		}
	}
	new RuletVidachaDen[MAX_PLAYERS];
	new RuletikProv[MAX_PLAYERS];
	for(new h = 0; h < MAX_PLAYERS; h++)
	{
		if(RuletkaStol[h] == 1)
		{
			if(Vidrulvigr[0] == true)
			{
				if(RuletTip[h] <= 37 && RuletTip[h] >= 1)
				{
					RuletikProv[h] =RuletTip[h] - 1;
					if(RuletikProv[h] == ruletikF)
					{
						RuletVidachaDen[h] = RuletSum[h] *20;
						PlayerInfo[h][pCash] += RuletVidachaDen[h];
						GivePlayerMoney(h,RuletVidachaDen[h]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[h]);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(h, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new k = 0; k < MAX_PLAYERS; k++)
	{
		if(Vidrulvigr[0] == true)
		{
  			if(krupiedi[0] == k && RuletStart[k] == false)
			{
 				format(string, sizeof(string), "Выпало число %d!",ruletikF);
				SendClientMessage(k, COLOR_YELLOW, string);
			}
			if(RuletkaStol[k] == 1)
			{
				if(RuletTip[k] == 38 || RuletTip[k] == 39)
				{
					if(Slotrulet1 == 1 && RuletTip[k]== 38)
					{
						RuletVidachaDen[k] = RuletSum[k] * 2;
						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else if(Slotrulet1 == 2 && RuletTip[k] == 39)
					{
						RuletVidachaDen[k] = RuletSum[k] *2;
						PlayerInfo[k][pCash] += RuletVidachaDen[k];
						GivePlayerMoney(k,RuletVidachaDen[k]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[k]);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(k, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	for(new m = 0; m < MAX_PLAYERS; m++)
	{
		if(Vidrulvigr[0] == true)
		{
			if(RuletkaStol[m] == 1)
			{
				if(RuletTip[m] == 40)
				{
					if(ruletikF >= 1 && ruletikF <= 12)
					{
						RuletVidachaDen[m] = RuletSum[m] *4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 41)
				{
					if(ruletikF >=13 && ruletikF<=24)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if (RuletTip[m] == 42)
				{
					if(ruletikF >=25 && ruletikF<=36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 4;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 43)
				{
					if(ruletikF >=1 && ruletikF<=18)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 44)
				{
					if(ruletikF >=19 && ruletikF<=36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 45)
				{
					if(ruletikF == 2 || ruletikF == 4 || ruletikF == 6 || ruletikF == 8 || ruletikF == 10 || ruletikF == 12 || ruletikF == 14 || ruletikF == 16 || ruletikF == 18 || ruletikF == 20 || ruletikF == 22 || ruletikF == 24 || ruletikF == 26 || ruletikF == 28 || ruletikF == 30 || ruletikF == 32 || ruletikF == 34 || ruletikF == 36)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 46)
				{
					if(ruletikF == 1 || ruletikF == 3 || ruletikF == 5 || ruletikF == 7 || ruletikF == 9 || ruletikF == 11 || ruletikF == 13 || ruletikF == 15 || ruletikF == 17 || ruletikF == 19 || ruletikF == 21 || ruletikF == 23 || ruletikF == 25 || ruletikF == 27 || ruletikF == 29 || ruletikF == 31 || ruletikF == 33 || ruletikF == 35)
					{
						RuletVidachaDen[m] = RuletSum[m] * 2;
						PlayerInfo[m][pCash] += RuletVidachaDen[m];
						GivePlayerMoney(m,RuletVidachaDen[m]);
						format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 47)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 3,6,9,12,15,18,21,24,27,30,33,36:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 48)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 2,5,8,11,14,17,20,23,26,29,32,35:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
				else if(RuletTip[m] == 49)
				{
					new bool:resullit;
					switch(ruletikF)
					{
						case 1,4,7,10,13,16,19,22,25,28,31,34:
						{
							RuletVidachaDen[m] = RuletSum[m] * 3;
							PlayerInfo[m][pCash] += RuletVidachaDen[m];
							GivePlayerMoney(m,RuletVidachaDen[m]);
							format(string, sizeof(string), "Выпало число %d. Вы выйграли %d вирт!",ruletikF,RuletVidachaDen[m]);
							SendClientMessage(m, COLOR_YELLOW, string);
							resullit = true;
						}
					}
					if(resullit == false)
					{
						format(string, sizeof(string), "Выпало число %d. Ваша ставка проиграла",ruletikF);
						SendClientMessage(m, COLOR_YELLOW, string);
					}
				}
			}
		}
	}
	if(Vidrulvigr[0] == true)
	{
		Vidrulvigr[0] = false;
		ruletikF = 0;
		KillTimer(RuletTimer);
		for(new l = 0; l < MAX_PLAYERS; l++)
		{
			if (RuletkaStol[l] ==1)
			{
				new kollidn = krupiedi[0];
				PlayerInfo[kollidn][pKazpay] += RuletSum[l]/50;
				switch(kaligmaf1)
				{
					case 6:
					{
						MafiaBank[0][nYakuza]+=RuletSum[l]/70;
					}
					case 14:
					{
						MafiaBank[0][nRm]+=RuletSum[l]/70;
					}
					case 5:
					{
						MafiaBank[0][nLcn]+=RuletSum[l]/70;
					}
				}
				DestroyObject(Fishka[l]);
				Fishka[l] = CreateObject(1913,fishechkax[l],fishechkay[l],1006.0690,0.00,0.00,0.00);
				Upravakazino[l] = true;
				RuletTip[l] = 0;
				RuletSum[l] = 0;
				RuletStart[l] = false;
			}
		}
		krupiedi[1] = 5000;
	}
	return true;
}
stock delsalut()
{
    DestroyObject(salut[1]); DestroyObject(salut[2]); DestroyObject(salut[3]);
    DestroyObject(salut[4]); DestroyObject(salut[5]); DestroyObject(salut[6]);
    DestroyObject(salut[7]); DestroyObject(salut[8]); DestroyObject(salut[9]);
    DestroyObject(salut[10]);DestroyObject(salut[11]);DestroyObject(salut[12]);
    DestroyObject(salut[13]);DestroyObject(salut[14]);DestroyObject(salut[15]);
    DestroyObject(salut[16]);DestroyObject(salut[17]);DestroyObject(salut[18]);
    DestroyObject(salut[19]);DestroyObject(salut[20]);DestroyObject(salut[21]);
    DestroyObject(salut[22]);DestroyObject(salut[23]);DestroyObject(salut[24]);
    return true;
}
stock salutik()
{
	delsalut();
 	salut[0] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
  	salut[1] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
   	salut[2] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[3] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[4] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[5] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[6] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[7] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[8] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[9] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[10] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[11] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[12] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[13] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[14] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[15] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[16] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[17] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[18] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[19] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[20] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[21] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[22] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[23] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    salut[24] = CreateObject(Randomm(19121,19127),xsalut,ysalut,zsalut,0.0,0.0,0.0);
    MoveObject(salut[0],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[1],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[2],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[3],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[4],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[5],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[6],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[7],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[8],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[9],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[10],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[11],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[12],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[13],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[14],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[15],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[16],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[17],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[18],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[19],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[20],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[21],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
    MoveObject(salut[22],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
	MoveObject(salut[23],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
	MoveObject(salut[24],xsalut+Randomm(-30,30),ysalut+Randomm(-30,30),zsalut+Randomm(40,60),Randomm(35,50));
	salut[25] ++;
	return true;
}
stock Randomm(min, max)
{
    new a = random(max - min) + min;
    return a;
}
stock SendVipMessage(color, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pDonateRank] >= 1 || PlayerInfo[i][pAdmin] >= 3)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
stock LoadKazino()
{
    new time = GetTickCount();
	new string[64];
	new iniFile = ini_openFile("gamefiles/mafia.ini");
	format(string, sizeof(string), "Mafia");
	ini_getString(iniFile, string, kaligmaf);
	format(string, sizeof(string), "Mafianumber");
	ini_getInteger(iniFile, string, kaligmaf1);
	ini_closeFile(iniFile);
	printf("[Загрузка казино]: Было загружено 1 - потрачено %d (ms)", GetTickCount() - time);
}
public UnFreeze(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		TogglePlayerControllable(playerid, 1);
	}
}
public GzCheck()
{
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(ZoneOnBattle[i] == 1 && GZSafeTime[i] == 0)
		{
			ZoneTimer[i] -= 5;
			if(ZoneTimer[i] <= 0)
			{
                SendGangMessage(i,COLOR_RED,"Время на захват территории вышло");
				ZoneOnBattle[i] = 0;
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				SaveGZ();
			}
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(PlayerToKvadrat(x, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]) && IsInAllowed(x) && PlayerInfo[x][pMember] == GZInfo[i][gNapad] || PlayerToKvadrat(x, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]) && IsInAllowed(x) && GZInfo[i][gFrakVlad])
                {
                    new faction;
                    if(PlayerInfo[x][pLeader] != 0) { faction = PlayerInfo[x][pLeader]; }
                    else { faction = PlayerInfo[x][pMember]; }
                    OnZONE[i][faction] ++;
                }
            }
            new asd;
            for(new x = 0; x < sizeof(FrakCD); x++)
            {
				if(OnZONE[i][x] > 0 && IsInAllowedF(x)) asd ++;
            }
			if(asd == 1)
			{
				for(new x = 0; x < sizeof(FrakCD); x++)
				{
					if(OnZONE[i][x] > 0)
					{
						new zx,zl;
						zx = x;
						zl = i;
						new string[70];
						if(GZInfo[i][gFrakVlad] == x)
						{
						    format(string,sizeof(string),"Банда %s отстояла свою территорию",GetGangName(zx));
							SendGangMessage(i,COLOR_GREEN,string);
						}
						else
						{
						    format(string,sizeof(string),"Банда %s выиграла войну за территорию",GetGangName(zx));
					        SendGangMessage(i,COLOR_GREEN,string);
						}
						ZoneOnBattle[zl] = 0;
						GZInfo[zl][gNapad] = 0;
						GZInfo[zl][gFrakVlad] = zx;
						GangZoneStopFlashForAll(GZInfo[zl][gID]);
						GangZoneHideForAll(GZInfo[zl][gID]);
						GangZoneShowForAll(GZInfo[zl][gID], GetGangZoneColor(zl));
						SaveGZ();
						break;
					}
				}
			}
		}
	}
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		for(new z = 0; z < sizeof(FrakCD); z++)
		{
			OnZONE[i][z] = 0;
		}
	}
}
public lspdog()
{
	MoveObject (oglspd,246.2700, 72.5900, 1003.9000,3.0,0.0000, 0.0000, 0.0000);
	return true;
}
public MzCheck()
{
	for(new i = 0; i < sizeof(MZInfo); i++)
	{
		if(ZoneOnBattlem[i] == 1 && MZSafeTime[i] == 0)
		{
			ZoneTimerm[i] -= 5;
			if(ZoneTimerm[i] <= 0)
			{
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(BizzInfo[h][bCapture] == 1)
					{
						BizzInfo[h][bMafia] = BizzInfo[h][bMafia];
						SendFamilyMessage(BizzInfo[h][bMafia],0x114D71AA, "Вам удалось отстоять свой бизнес");
						BizzInfo[h][bCapture] = 0;
					}
				}
				SendFamilyMessage(MZInfo[i][mNapad],COLOR_RED, "Вам не удалось взять под контроль новый бизнес");
                startwar = 0;
				ZoneOnBattlem[i] = 0;
				ZoneTimerm[i] = 0;
				GangZoneStopFlashForAll(zons);
			}
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(PlayerToKvadrat(x,328.755706, 2412.644531, 448.755706, 2564.644531))
				{
					new factionm;
					if(PlayerInfo[x][pLeader] != 0) { factionm = PlayerInfo[x][pLeader]; }
					else { factionm = PlayerInfo[x][pMember]; }
					OnmZONE[i][factionm] ++;
				}
			}
			new asd;
			for(new x = 0; x < sizeof(FrakCDm); x++)
			{
				if(OnmZONE[i][x] > 0 && IsInAllowedM(x)) asd++;
			}
			if(asd == 1)
			{
				for(new x = 0; x < sizeof(FrakCDm); x++)
				{
					if(OnmZONE[i][x] > 0)
					{
						new zx,zl;
						zx = x;
						zl = i;
						if(MZInfo[i][mFrakVlad] == x)
						{
	     					for(new h = 0; h < sizeof(BizzInfo); h++)
							{
								if(BizzInfo[h][bCapture] == 1)
								{
									BizzInfo[h][bMafia] = BizzInfo[h][bMafia];
									SendFamilyMessage(BizzInfo[h][bMafia],0x114D71AA, "Вы отстояли свой бизнес");
									BizzInfo[h][bCapture] = 0;
								}
							}
							startwar = 0;
							SendFamilyMessage(MZInfo[i][mNapad],COLOR_RED, "Вам не удалось завоевать ещё один бизнес");
						}
						else
						{
							startwar = 0;
							for(new h = 0; h < sizeof(BizzInfo); h++)
							{
								if(BizzInfo[h][bCapture] == 1)
								{
									SendFamilyMessage(MZInfo[i][mNapad],0x114D71AA, "Вы взяли под контроль новый бизнес");
								}
							}
							for(new h = 0; h < sizeof(BizzInfo); h++)
							{
								if(BizzInfo[h][bCapture] == 1)
								{
			      					SendFamilyMessage(BizzInfo[h][bMafia],COLOR_RED, "Вы потеряли контроль над одним из своих бизнесов");
									BizzInfo[h][bMafia] = MZInfo[i][mNapad];
									BizzInfo[h][bCapture] = 0;
								}
							}
						}
						ZoneOnBattlem[zl] =0;
						MZInfo[zl][mFrakVlad] = 0;
						MZInfo[zl][mFrakVlad] = zx;
						GangZoneStopFlashForAll(zons);
						GangZoneHideForAll(zons);
						GangZoneShowForAll(zons, 0xB2B2B2AA);
						break;
					}
				}
			}
		}
	}
	for(new i = 0; i < 3; i++)
	{
		for(new z = 0; z < sizeof(FrakCDm); z++)
		{
			OnmZONE[i][z] = 0;
		}
	}
}
stock SaveServer()
{
	SaveMaterials();
	SaveGZ();
	OnPropUpdate();
	SaveBankMafia();
	SaveHomeSbizz();
	SaveBankFrac();
	SaveKazino();
    SaveAccounts();
}
stock adtext(string[], adid)
{
    switch(adid)
    {
        case 0: for (new i = 0; i < 12; i++) SetObjectMaterialText(adplakat[i], string, 0, 90, "Impact", 24, 0, -32256, -16777216, 1);
        case 1: for (new i = 12; i < 25; i++) SetObjectMaterialText(adplakat[i], string, 0, 90, "Impact", 24, 0, -32256, COLOR_WHITE, 1);
        case 2: for (new i = 25; i < 37; i++) SetObjectMaterialText(adplakat[i], string, 0, 90, "Impact", 24, 0, -32256, COLOR_LIGHTBLUE, 1);
    }
}
public ActivateFire()
{
    if(FireInProgress == true)
    {
        KillFire();
        return true;
    }
 	new fic[2] = {0,1}; // кол-во мест пожаров 2
 	if(fic[random(sizeof(fic))] == 0) {cf[0] = 1328.3392; cf[1] = 374.2310; cf[2] = 22.2083; CreateFire(cf[0],cf[1],cf[2],17.0832, 1330.2943,373.6726,22.2083,342.6162, 1331.2371,373.4001,22.3450,342.6162, 1327.7349,374.5031,23.3252,357.3430, 1333.7506,373.8772,21.8448,35.8833);} // пожар в 1 месте
 	else if(fic[random(sizeof(fic))] == 1) {cf[0] = 850.0212; cf[1] = -598.5781; cf[2] = 18.4219; CreateFire(cf[0],cf[1],cf[2],49.5991, 859.7880,-597.9085,18.4219,229.5991, 864.7535,-597.1085,18.3860,245.5447, 868.1580,-597.1082,18.3860,220.5228, 867.7120,-590.1864,17.9536,14.6138);}  // пожар во 2 месте
	SendFamilyMessage(34, TEAM_AZTECAS_COLOR,"Диспетчер: Случился пожар!Требуем помощь! (Введите /nofire чтобы принять вызов)");
    return true;
}
public KickTimer(playerid) return GKick(playerid);

stock GKick(playerid, time = 5000)
{
    if(GetPVarInt(playerid, "Kick") == -1) Kick(playerid);
    else if(!GetPVarInt(playerid, "Kick")) SetPVarInt(playerid, "Kick", SetTimerEx("KickTimer", time, 0, "d", playerid));
    else
    {
        KillTimer(GetPVarInt(playerid, "Kick"));
        SetPVarInt(playerid, "Kick", -1);
        GKick(playerid);
    }
    return true;
}
public UpdateJailZone()
{
    for(new i; i < GetMaxPlayers(); i++)
    {
        if(IsPlayerConnected(i))
        {
			switch(PlayerInfo[i][pJailed])
			{
			    case 1:
			    {
          			if(!IsPlayerInRangeOfPoint(i, 6.0, 264.6288,77.5742,1001.0391))
            		{
             			new string[69];
               			new name[MAX_PLAYER_NAME];
                 		GetPlayerName(i, name, sizeof(name));
                  		SetPlayerInterior(i, 6);
                   		SetPlayerPos(i,264.6288,77.5742,1001.0391);
                    	SendClientMessage(i,COLOR_RED,"Вы совершили побег, но вас заметили и отправили обратно в камеру");
                    	format(string, sizeof(string), "[Античит]: %s попытался сбежать из КПЗ",name);
                    	ABroadCast(COLOR_YELLOW,string,1);
                    	PlayerInfo[i][pJailTime] += 100;
                	}
				}
				case 2:
                {
                    if(!IsPlayerInRangeOfPoint(i, 6.0, 219.5400,109.9767,999.0156))
                    {
                        new string[69];
                        new name[MAX_PLAYER_NAME];
                        GetPlayerName(i, name, sizeof(name));
                        SetPlayerInterior(i, 10);
                        SetPlayerPos(i,219.5400,109.9767,999.0156);
                        SendClientMessage(i,COLOR_RED,"Вы совершили побег, но вас заметили и отправили обратно в камеру");
                        format(string, sizeof(string), "[Античит]: %s попытался сбежать из КПЗ",name);
                        ABroadCast(COLOR_YELLOW,string,1);
                        PlayerInfo[i][pJailTime] += 100;
                    }
                }
                case 3:
                {
                    if(!IsPlayerInRangeOfPoint(i, 6.0, 198.3642,161.8103,1003.0300))
                    {
                        new string[69];
                        new name[MAX_PLAYER_NAME];
                        GetPlayerName(i, name, sizeof(name));
                        SetPlayerInterior(i, 3);
                        SetPlayerPos(i,198.3642,161.8103,1003.0300);
                        SendClientMessage(i,COLOR_RED,"Вы совершили побег, но вас заметили и отправили обратно в камеру");
                        format(string, sizeof(string), "[Античит]: %s попытался сбежать из КПЗ",name);
                        ABroadCast(COLOR_YELLOW,string,1);
                        PlayerInfo[i][pJailTime] += 100;
                    }
                }
                case 4:
                {
                    if(!IsPlayerInRangeOfPoint(i, 20.0, 5508.3706,1244.7594,23.1886))
                    {
                        new string[75];
                        new name[MAX_PLAYER_NAME];
                        GetPlayerName(i, name, sizeof(name));
                        SetPlayerInterior(i, 0);
                        SetPlayerPos(i,5508.3706,1244.7594,23.1886);
                        SendClientMessage(i,COLOR_RED,"Вы совершили побег, но вас заметили и отправили обратно в дэморган");
                        format(string, sizeof(string), "[Античит]: %s попытался сбежать из Дэморгана",name);
                        ABroadCast(COLOR_YELLOW,string,1);
                        PlayerInfo[i][pJailTime] += 100;
                    }
                }
			}
        }
    }
    return true;
}
stock IsPlayerAtPnSpray( playerid )
{
    if( !GetPlayerInterior( playerid ) ) return false;
    for(new i = 0; i < PNSCS; i++)
    {
       if(IsPlayerInRangeOfPoint( playerid , 15.0, PnSC[i][0], PnSC[i][1], PnSC[i][2])) return true;
    }
    return false;
}
forward CheckCar();
public Checkhpcar()
{
	new Float:vehhl;
    new vehid, str[128], playername[MAX_PLAYER_NAME];
    for(new i;i<GetMaxPlayers();i++)
    {
        vehid = GetPlayerVehicleID(i);
        if( !vehid ) { continue; }
        GetVehicleHealth(vehid,vehhl);
        if( VehicleHealth[vehid] >= vehhl)
        {
            SetVehicleHealth(vehid, vehhl);
            continue;
        }
        if( !IsPlayerAtPnSpray(i) && PlayerInfo[i][pAdmin] == 0 )
        {
            GetPlayerName(i, playername,sizeof playername);
 			format(str, sizeof(str), "[Античит]: %s был кикнут за подозрение в читерстве. Причина:починка транспортного средства", playername);
			SendClientMessageToAll(COLOR_LIGHTRED, str);
            SetVehicleHealth(vehid, VehicleHealth[vehid] );
            GKick(i);
        }
        SetVehicleHealth(vehid, vehhl);
    }
}
stock AntiCheatWarn(playerid)
{
	if(PlayerInfo[playerid][pAdmin] <= 0)
	{
		new cheater[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, cheater, sizeof(cheater));
		PlayerInfo[playerid][pWarns] += 1;
		new string[97];
		if(PlayerInfo[playerid][pWarns] >= 3)
		{
	    	new ip[30];
	    	new year, month,day;
	    	getdate(year, month, day);
	    	format(string, sizeof(string), "[Античит] %s был забанен за использование читов [3 предупреждения]",cheater);
	    	SendClientMessageToAll(COLOR_LIGHTRED, string);
	    	GetPlayerIp(playerid,ip,sizeof(ip));
        	format(string,sizeof(string), "banip %s",ip);
  	      	SendRconCommand(string);
        	SendRconCommand("reloadbans");
	    	new iniFilez = ini_openFile("gamefiles/log/banip.cfg");
   		 	ini_setString(iniFilez, "IP: %s\n",ip);
		    ini_closeFile(iniFilez);
		    PlayerInfo[playerid][pLocked] = 1;
	 	    PlayerInfo[playerid][pMember] = 0;
        	if(PlayerInfo[playerid][pLeader] != 0)
	    	{
	        	new level;
	        	level = PlayerInfo[playerid][pLeader];
				new iniFile = ini_openFile("gamefiles/log/leaders.ini");
				if(level == 1) { ini_removeKey  (iniFile, "LSPD" ); }
				else if(level == 2) { ini_removeKey  (iniFile, "FBI" ); }
				else if(level == 3) { ini_removeKey  (iniFile, "ARMY SF" ); }
				else if(level == 4) { ini_removeKey  (iniFile, "MEDICS SF" ); }
				else if(level == 5) { ini_removeKey  (iniFile, "LCN" ); }
				else if(level == 6) { ini_removeKey  (iniFile, "YAKUZA" ); }
            	else if(level == 7) { ini_removeKey  (iniFile, "MARYA" ); }
				else if(level == 8) { ini_removeKey  (iniFile, "KAZINO" ); }
            	else if(level == 9) { ini_removeKey  (iniFile, "SFN" ); }
            	else if(level == 10) { ini_removeKey  (iniFile, "SFPD" ); }
            	else if(level == 11) { ini_removeKey  (iniFile, "LICENSERS" ); }
            	else if(level == 12) { ini_removeKey  (iniFile, "BALLAS" ); }
            	else if(level == 13) { ini_removeKey  (iniFile, "VAGOS" ); }
            	else if(level == 14) { ini_removeKey  (iniFile, "RM" ); }
            	else if(level == 15) { ini_removeKey  (iniFile, "GROVE" ); }
            	else if(level == 16) { ini_removeKey  (iniFile, "LSNEWS" ); }
            	else if(level == 17) { ini_removeKey  (iniFile, "AZTEC" ); }
            	else if(level == 18) { ini_removeKey  (iniFile, "RIFA" ); }
            	else if(level == 19) { ini_removeKey  (iniFile, "ARMY LV" ); }
				else if(level == 20) { ini_removeKey  (iniFile, "LVNEWS" ); }
				else if(level == 21) { ini_removeKey  (iniFile, "LVPD" ); }
				else if(level == 22) { ini_removeKey  (iniFile, "LOS SANTOS MCHS" ); }
				else if(level == 23) { ini_removeKey  (iniFile, "SSMCBAYKER" ); }
				else if(level == 24) { ini_removeKey  (iniFile, "HAMCBAYKER" ); }
				else if(level == 25) { ini_removeKey  (iniFile, "OMCBAYKER" ); }
				else if(level == 26) { ini_removeKey  (iniFile, "WMCBAYKER" ); }
				else if(level == 27) { ini_removeKey  (iniFile, "HWMCBAYKER" ); }
				else if(level == 28) { ini_removeKey  (iniFile, "FSMCBAYKER" ); }
				else if(level == 29) { ini_removeKey  (iniFile, "PMCBAYKER" ); }
				else if(level == 30) { ini_removeKey  (iniFile, "MMCBAYKER" ); }
				else if(level == 31) { ini_removeKey  (iniFile, "VMCBAYKER" ); }
				else if(level == 32) { ini_removeKey  (iniFile, "BMCBAYKER" ); }
				else if(level == 33) { ini_removeKey  (iniFile, "MEDICS LV" ); }
				else if(level == 34) { ini_removeKey  (iniFile, "FFIGHTERS" ); }
				else if(level == 35) { ini_removeKey  (iniFile, "HITMANS" ); }
				ini_closeFile(iniFile);
				level = 0;
	    	}
        	PlayerInfo[playerid][pJob] = 0;
	    	SendClientMessage(playerid,COLOR_LIGHTRED, "Ваш аккаунт заблокирован. Подайте заявку на разблокировку на сайте: www.nextagerp.5nx.ru.");
        	SendClientMessage(playerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
        	DelGun(playerid);
	    	GKick(playerid);
	    	return true;
		}
		format(string, sizeof(string), "[Античит] %s получил(а) warn за использование читов", cheater);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
		SendClientMessage(playerid,COLOR_LIGHTRED,"Вам выдали warn. В течении определенного времени он будет онулирован");
		SendClientMessage(playerid,COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
		PlayerInfo[playerid][pMember] = 0;
		if(PlayerInfo[playerid][pLeader] != 0)
		{
        	new level;
			level = PlayerInfo[playerid][pLeader];
	    	new iniFile = ini_openFile("gamefiles/log/leaders.ini");
        	if(level == 1) { ini_removeKey  (iniFile, "LSPD" ); }
        	else if(level == 2) { ini_removeKey  (iniFile, "FBI" ); }
        	else if(level == 3) { ini_removeKey  (iniFile, "ARMY SF" ); }
        	else if(level == 4) { ini_removeKey  (iniFile, "MEDICS SF" ); }
        	else if(level == 5) { ini_removeKey  (iniFile, "LCN" ); }
        	else if(level == 6) { ini_removeKey  (iniFile, "YAKUZA" ); }
        	else if(level == 7) { ini_removeKey  (iniFile, "MARYA" ); }
        	else if(level == 8) { ini_removeKey  (iniFile, "KAZINO" ); }
        	else if(level == 9) { ini_removeKey  (iniFile, "SFN" ); }
        	else if(level == 10) { ini_removeKey  (iniFile, "SFPD" ); }
        	else if(level == 11) { ini_removeKey  (iniFile, "LICENSERS" ); }
        	else if(level == 12) { ini_removeKey  (iniFile, "BALLAS" ); }
        	else if(level == 13) { ini_removeKey  (iniFile, "VAGOS" ); }
        	else if(level == 14) { ini_removeKey  (iniFile, "RM" ); }
        	else if(level == 15) { ini_removeKey  (iniFile, "GROVE" ); }
        	else if(level == 16) { ini_removeKey  (iniFile, "LSNEWS" ); }
        	else if(level == 17) { ini_removeKey  (iniFile, "AZTEC" ); }
        	else if(level == 18) { ini_removeKey  (iniFile, "RIFA" ); }
        	else if(level == 19) { ini_removeKey  (iniFile, "ARMY LV" ); }
        	else if(level == 20) { ini_removeKey  (iniFile, "LVNEWS" ); }
        	else if(level == 21) { ini_removeKey  (iniFile, "LVPD" ); }
        	else if(level == 22) { ini_removeKey  (iniFile, "LOS SANTOS MCHS" ); }
        	else if(level == 23) { ini_removeKey  (iniFile, "SSMCBAYKER" ); }
        	else if(level == 24) { ini_removeKey  (iniFile, "HAMCBAYKER" ); }
        	else if(level == 25) { ini_removeKey  (iniFile, "OMCBAYKER" ); }
        	else if(level == 26) { ini_removeKey  (iniFile, "WMCBAYKER" ); }
        	else if(level == 27) { ini_removeKey  (iniFile, "HWMCBAYKER" ); }
        	else if(level == 28) { ini_removeKey  (iniFile, "FSMCBAYKER" ); }
        	else if(level == 29) { ini_removeKey  (iniFile, "PMCBAYKER" ); }
        	else if(level == 30) { ini_removeKey  (iniFile, "MMCBAYKER" ); }
        	else if(level == 31) { ini_removeKey  (iniFile, "VMCBAYKER" ); }
        	else if(level == 32) { ini_removeKey  (iniFile, "BMCBAYKER" ); }
        	else if(level == 33) { ini_removeKey  (iniFile, "MEDICS LV" ); }
        	else if(level == 34) { ini_removeKey  (iniFile, "FFIGHTERS" ); }
        	else if(level == 35) { ini_removeKey  (iniFile, "HITMANS" ); }
	    	ini_closeFile(iniFile);
	    	level = 0;
		}
		PlayerInfo[playerid][pJob] = 0;
		OnPlayerUpdateAc(playerid);
		DelGun(playerid);
		GKick(playerid);
		return true;
	}
	return true;
}
public CheckCar()
{
    for(new i; i<GetMaxPlayers(); i++)
    {
        if(IDVEH[i] != -1 && IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && !UseEnter[i] && IDVEH[i] != GetPlayerVehicleID(i)) Punish(i);
    }
    return true;
}
stock ResetCarInfo(playerid)
{
    IDVEH[playerid]=-1;
    UseEnter[playerid] = false;
}

stock Punish(playerid)
{
    if( PlayerInfo[playerid][pAdmin] == 0 )
    {
        new string[MAX_PLAYER_NAME+40];
        format(string,sizeof(string),"%s кикнут за использование читов",PlayerInfo[playerid][pName]);
        SendClientMessageToAll(COLOR_LIGHTRED, string);
        GKick(playerid);
	}
}
stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
    UseEnter[playerid] = false;
    IDVEH[playerid] = vehicleid;
    PutPlayerInVehicle(playerid, vehicleid, seatid);
    return true;
}
public WeatherChange()
{
    switch(nextweather)
    {
  		case 1: Sun();
  		case 2:
		{
			SetWeather(7);
			SetTimer("Rain",600000,0);
		}
   		case 3: Fog();
   		case 4:
		{
			SetWeather(24);
			SetTimer("Sandstorm",600000,0);
		}
   		case 5: Cloud();
    }
	nextweather = random(100);
	switch(nextweather)
    {
  		case 0..35: nextweather = 1;
  		case 36..45: nextweather = 2;
   		case 46..55: nextweather = 3;
   		case 56..60: nextweather = 4;
   		case 61..99: nextweather = 5;
    }
    return true;
}
public Sandstorm()
{
    SetWeather(19);
    return true;
}
public Cloud()
{
    new rand = random(3);
    switch(rand)
	{
	    case 0: SetWeather(7);
  		case 1: SetWeather(15);
  		case 2: SetWeather(35);
	}
	return true;
}
public Fog()
{
    new rand = random(4);
    switch(rand)
	{
	    case 0: SetWeather(9);
  		case 1: SetWeather(27);
  		case 2: SetWeather(28);
  		case 3: SetWeather(30);
	}
	return true;
}
public Sun()
{
    new rand = random(14);
    switch(rand)
	{
	    case 0: SetWeather(0);
  		case 1: SetWeather(1);
  		case 2: SetWeather(2);
  		case 3: SetWeather(3);
  		case 4: SetWeather(4);
  		case 5: SetWeather(5);
        case 6: SetWeather(6);
        case 7: SetWeather(10);
        case 8: SetWeather(11);
        case 9: SetWeather(13);
        case 10: SetWeather(14);
        case 11: SetWeather(17);
        case 12: SetWeather(18);
        case 13: SetWeather(33);
	}
	return true;
}
public Rain()
{
    new rand = random(2);
    switch(rand)
	{
	    case 0: SetWeather(8);
  		case 1: SetWeather(16);
	}
	return true;
}
stock PreloadAnimLib(playerid, animlib[])
{
   ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
   return true;
}
stock PreloadAllAnimLibs(playerid)
{
	PreloadAnimLib(playerid,"AIRPORT");
	PreloadAnimLib(playerid,"Attractors");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BF_injection");
	PreloadAnimLib(playerid,"BIKED");
	PreloadAnimLib(playerid,"BIKEH");
	PreloadAnimLib(playerid,"BIKELEAP");
	PreloadAnimLib(playerid,"BIKES");
	PreloadAnimLib(playerid,"BIKEV");
	PreloadAnimLib(playerid,"BIKE_DBZ");
	PreloadAnimLib(playerid,"BLOWJOBZ");
	PreloadAnimLib(playerid,"BMX");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BOX");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"BUDDY");
	PreloadAnimLib(playerid,"BUS");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"CHOPPA");
	PreloadAnimLib(playerid,"CLOTHES");
	PreloadAnimLib(playerid,"COACH");
	PreloadAnimLib(playerid,"COLT45");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"COP_DVBYZ");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DILDO");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"DOZER");
	PreloadAnimLib(playerid,"DRIVEBYS");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"FIGHT_B");
	PreloadAnimLib(playerid,"FIGHT_C");
	PreloadAnimLib(playerid,"FIGHT_D");
	PreloadAnimLib(playerid,"FIGHT_E");
	PreloadAnimLib(playerid,"FINALE");
	PreloadAnimLib(playerid,"FINALE2");
	PreloadAnimLib(playerid,"FLAME");
	PreloadAnimLib(playerid,"Flowers");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"Freeweights");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GHETTO_DB");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"GRENADE");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"HAIRCUTS");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"KART");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"LAPDAN1");
	PreloadAnimLib(playerid,"LAPDAN2");
	PreloadAnimLib(playerid,"LAPDAN3");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MTB");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"NEVADA");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PARACHUTE");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"ped");
	PreloadAnimLib(playerid,"PLAYER_DVBYS");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"POOL");
	PreloadAnimLib(playerid,"POOR");
	PreloadAnimLib(playerid,"PYTHON");
	PreloadAnimLib(playerid,"QUAD");
	PreloadAnimLib(playerid,"QUAD_DBZ");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"RIFLE");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"ROCKET");
	PreloadAnimLib(playerid,"RUSTLER");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"SHAMAL");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SHOTGUN");
	PreloadAnimLib(playerid,"SILENCED");
    PreloadAnimLib(playerid,"SKATE");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"SNIPER");
    PreloadAnimLib(playerid,"SPRAYCAN");
    PreloadAnimLib(playerid,"STRIP");
    PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"SWAT");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"SWIM");
    PreloadAnimLib(playerid,"SWORD");
    PreloadAnimLib(playerid,"TANK");
    PreloadAnimLib(playerid,"TATTOOS");
    PreloadAnimLib(playerid,"TEC");
    PreloadAnimLib(playerid,"TRAIN");
    PreloadAnimLib(playerid,"TRUCK");
    PreloadAnimLib(playerid,"UZI");
    PreloadAnimLib(playerid,"VAN");
    PreloadAnimLib(playerid,"VENDING");
    PreloadAnimLib(playerid,"VORTEX");
    PreloadAnimLib(playerid,"WAYFARER");
    PreloadAnimLib(playerid,"WEAPONS");
    PreloadAnimLib(playerid,"WUZI");
	return true;
}
public RCControl(playerid)
{
	new Float:carhp;
	GetVehicleHealth(GetPlayerVehicleID(playerid),carhp);
    if(RCController[playerid] == 1 && carhp < 250)
	{
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		DestroyVehicle(GetPlayerVehicleID(playerid));
		CreateExplosion(X, Y, Z, 12, 10.0);
		ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",0,0,0,0,1,1);
	  	SendClientMessage(playerid,COLOR_GREY,"Сигнал пропал");
	  	KillTimer(RCControlTimer);
	  	RCController[playerid] = 0;
	}
	if(RCController[playerid] == 0 && PlayerInfo[playerid][pRCVeh] != 0)
	{
		new Float:X,Float:Y,Float:Z,Float:FA,randc1 = random(256),randc2 = random(256);
    	GetPlayerPos(playerid, X,Y,Z);
		GetPlayerFacingAngle(playerid,FA);
 		Fuell[createdvehicles[createdvehs]] = 100;
		createdvehicles[createdvehs] = CreateVehicle(PlayerInfo[playerid][pRCVeh],X,Y,Z,FA,randc1,randc2,300);
		CreatedCars[CreatedCar] = createdvehicles[createdvehs];
		IsLocked[createdvehicles[createdvehs]] = 1;
		LinkVehicleToInterior(createdvehicles[createdvehs], GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(createdvehicles[createdvehs], GetPlayerVirtualWorld(playerid));
		SendClientMessage(playerid, COLOR_WHITE, "Вы управляете RC ТС,чтобы взорвать машину нажмите Enter.");
		PutPlayerInVeh(playerid, createdvehicles[createdvehs], 0);
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		EngineState[playerid] = true;
		RCController[playerid] = 1;
		PlayerInfo[playerid][pRCVeh] = 0;
		RCControlTimer = SetTimerEx("RCControl", 100, false,"i",playerid);
	}
	else RCControlTimer = SetTimerEx("RCControl", 100, false,"i",playerid);
	return true;
}
public Inform()
{
    //time
    new hour,minute,second;
    gettime(hour,minute,second);
    new string[30];
    //new string2[30];
    if(minute < 10 && hour > 9) format(string, sizeof(string), "%d:0%d", hour, minute);
	else if(hour < 10 && minute > 9) format(string, sizeof(string), "0%d:%d", hour, minute);
	else if(hour < 10 && minute < 10) format(string, sizeof(string), "0%d:0%d", hour, minute);
	else format(string, sizeof(string), "%d:%d", hour, minute);
	TextDrawSetString(Clock,string);
    //date
    new day,month,year;
    getdate(year,month,day);
    if(month < 10 && day > 9) format(string, sizeof(string), "%d.0%d.%d",day,month,year);
	else if(day < 10 && month > 9) format(string, sizeof(string), "0%d.%d.%d",day,month,year);
	else if(day < 10 && month < 10) format(string, sizeof(string), "0%d.0%d.%d",day,month,year);
    else format(string, sizeof(string), "%d.%d.%d",day,month,year);
    //SetWorldTime(hour);
    //TextDrawSetString(Clock,string);
    TextDrawSetString(Date,string);
    for(new i=0;i<MaxPlayers;i++)
    {
        TextDrawShowForPlayer(PlayerIDs[i],Clock);
        TextDrawShowForPlayer(PlayerIDs[i],Date);
    }
    return true;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    if(issuerid != INVALID_PLAYER_ID && weaponid == 34 && bodypart == 9) SetPlayerHealth(playerid, 0.0);
    return true;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
 	if(weaponid == 24 || weaponid == 25)
  	{
		if(GetPlayerState(playerid) == 1)
		{
		    if(AntiC[playerid] > 0)
		    {
		        new Float:HealthP;
        		SetPlayerAmmo(playerid,24,0);
        		SetPlayerAmmo(playerid,25,0);
		        ApplyAnimation(playerid,"PED","GAS_CWR", 4.1, 0, 0, 0, 0, 0 ,1);
				PlayerPlaySound(playerid,32402,0,0,0);
				GetPlayerHealth(playerid,HealthP);
				SetPlayerHealthAC(playerid, HealthP-20);
				SendClientMessage(playerid,COLOR_RED,"Оружие сломалось и пуля отлетела вам в лицо!");
		    }
		    else
		    {
				AntiC[playerid]++;
				SetTimerEx("AntiBug",500,false,"i",playerid);
			}
		}
	}
	return true;
}
public AntiBug(playerid)
{
	AntiC[playerid] = 0;
	return true;
}
/*public ListenSounds(playerid)//для звуков
{
	new string[64];
	PlayerPlaySound(playerid,lastsound,0,0,0);
	format(string,sizeof(string),"%d",lastsound);
	SendClientMessage(playerid,COLOR_WHITE,string);
	lastsound++;
	return true;
}*/
/*public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    new string[48], Float:vehhealth, Float:newvehhealth;
    GetVehicleHealth(vehicleid, vehhealth);
    if(vehhealth < 1000)
    {
        newvehhealth = 1000 - vehhealth;
    	format(string, sizeof(string), "Ваша машина была починена за %d вирт.Удачной езды!", newvehhealth * 4);
    	SendClientMessage(playerid, COLOR_GREEN, string);
    	vehhealth = 0;
   		PlayerInfo[playerid][pCash] -= newvehhealth * 4;
    }
    if(vehhealth == 1000)
    {
        SendClientMessage(playerid, COLOR_GREY, "Ваша машина цела,нет смысла её чинить!");
    }
    return true;
}-Не работает верно*/
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
